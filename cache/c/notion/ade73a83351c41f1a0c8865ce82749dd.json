{
  "ID": "ade73a83-351c-41f1-a0c8-865ce82749dd",
  "Root": {
    "alive": true,
    "content": [
      "265cfcae-615e-4e79-87dc-55eca6b1a6b5",
      "9eed736a-1366-4173-b314-67524e6e2f66",
      "6a98418d-9efd-46f1-81c1-0dca3234b40e",
      "2ee4daea-ed47-4963-aeb3-fb23be062481",
      "ec4462cd-656c-4595-9d82-b7636c234d82",
      "e462615e-74aa-4745-b946-0f3595c630fe",
      "9df6fc4d-8795-496d-a225-1ec4c3f51f4d",
      "65dd1395-a8b2-473e-808e-baa05f187928",
      "1593f470-f3a3-467a-a308-a8a713d1d88d",
      "d996043d-8ebf-4edb-b9d2-c1cc3f78df73",
      "251f75f8-734f-4164-8b0f-a37951bd1acf",
      "70ce50c6-1ce2-462b-99c6-3e11fe3152c0",
      "29ddf531-bc32-46ba-9d3b-8a08f266ebf8",
      "5b57913d-16f6-4b26-8a37-27f182ffe0c8",
      "4119ad3b-914c-442e-97d6-4b0800ddcfaf",
      "bcf8c983-4541-4b0c-91ce-7ce369d85e40",
      "ea28f60a-8945-445a-b243-f556d0e41ca4",
      "a9cc6ca2-1e30-4205-ac09-500a789d34a3",
      "683db01f-4cba-4963-822a-31d04e5f0351",
      "1f1de5ea-b2d6-44d7-b00a-2ba4cfa02e81",
      "ad9c42fb-5f7e-4534-a39c-c69c61dcfbd9",
      "4daec647-2bce-4cd4-9d1b-0bbfc173ede7",
      "c99591dc-5c51-4996-ae0c-ba4560f13ff3",
      "30c88c0c-f225-4997-9f86-80087998c133",
      "fe59cf18-5ab7-411e-bd7c-04a339f1d419",
      "3172b1f0-30bd-4363-a564-d714eb6e12bd",
      "565b076e-638d-405c-8e70-1326e63de37e",
      "da51747a-b9b7-454d-a339-8379008e72d9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936766943,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936766943,
    "parent_id": "b0240e66-8da1-4190-bbe5-f47d5b561ed2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Initialization of Variables in C"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766933,
        "id": "265cfcae-615e-4e79-87dc-55eca6b1a6b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766933,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the absence of explicit initialization, external and "
            ],
            [
              "static",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables are guaranteed to be initialized to zero; automatic variables (including "
            ],
            [
              "register",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables) have "
            ],
            [
              "indeterminate",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "1 (i.e., garbage) initial values."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the absence of explicit initialization, external and "
          },
          {
            "Text": "static",
            "AttrFlags": 2
          },
          {
            "Text": " variables are guaranteed to be initialized to zero; automatic variables (including "
          },
          {
            "Text": "register",
            "AttrFlags": 2
          },
          {
            "Text": " variables) have "
          },
          {
            "Text": "indeterminate",
            "AttrFlags": 4
          },
          {
            "Text": "1 (i.e., garbage) initial values."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766936,
        "id": "9eed736a-1366-4173-b314-67524e6e2f66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766936,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Scalar variables may be initialized when they are defined by following the name with an equals sign and an expression:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Scalar variables may be initialized when they are defined by following the name with an equals sign and an expression:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766936,
        "id": "6a98418d-9efd-46f1-81c1-0dca3234b40e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766936,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int x = 1;\nchar squota = '\\'';\nlong day = 1000L * 60L * 60L * 24L; /* milliseconds/day */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int x = 1;\nchar squota = '\\'';\nlong day = 1000L * 60L * 60L * 24L; /* milliseconds/day */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766936,
        "id": "2ee4daea-ed47-4963-aeb3-fb23be062481",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766936,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For external and "
            ],
            [
              "static",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables, the initializer must be a "
            ],
            [
              "constant expression",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "2; the initialization is done once, conceptually before the program begins execution."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For external and "
          },
          {
            "Text": "static",
            "AttrFlags": 2
          },
          {
            "Text": " variables, the initializer must be a "
          },
          {
            "Text": "constant expression",
            "AttrFlags": 4
          },
          {
            "Text": "2; the initialization is done once, conceptually before the program begins execution."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766937,
        "id": "ec4462cd-656c-4595-9d82-b7636c234d82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766937,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For automatic and "
            ],
            [
              "register",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variables, the initializer is not restricted to being a constant: it may be any expression involving previously defined values, even function calls."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For automatic and "
          },
          {
            "Text": "register",
            "AttrFlags": 2
          },
          {
            "Text": " variables, the initializer is not restricted to being a constant: it may be any expression involving previously defined values, even function calls."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766937,
        "id": "e462615e-74aa-4745-b946-0f3595c630fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766937,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, see the code snippet below"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, see the code snippet below"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766937,
        "id": "9df6fc4d-8795-496d-a225-1ec4c3f51f4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766937,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int binsearch(int x, int v[], int n)\n{\n   int low = 0;\n   int high = n - 1;\n   int mid;\n   ...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int binsearch(int x, int v[], int n)\n{\n   int low = 0;\n   int high = n - 1;\n   int mid;\n   ...\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766937,
        "id": "65dd1395-a8b2-473e-808e-baa05f187928",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766937,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "instead of"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "instead of"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766937,
        "id": "1593f470-f3a3-467a-a308-a8a713d1d88d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766937,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int low, high, mid;\n\nlow = 0;\nhigh = n - 1;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int low, high, mid;\n\nlow = 0;\nhigh = n - 1;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766937,
        "id": "d996043d-8ebf-4edb-b9d2-c1cc3f78df73",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766937,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In effect, initialization of automatic variables are just shorthand for assignment statements. Which form to prefer is largely a matter of taste. We generally use explicit assignments, because initializers in declarations are harder to see and further away from the point of use. On the other hand, variables should only be declared when they’re about to be used whenever possible."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In effect, initialization of automatic variables are just shorthand for assignment statements. Which form to prefer is largely a matter of taste. We generally use explicit assignments, because initializers in declarations are harder to see and further away from the point of use. On the other hand, variables should only be declared when they’re about to be used whenever possible."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766937,
        "id": "251f75f8-734f-4164-8b0f-a37951bd1acf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766937,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Initializing an array:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Initializing an array:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766937,
        "id": "70ce50c6-1ce2-462b-99c6-3e11fe3152c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766937,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An array may be initialized by following its declaration with a list of initializers enclosed in braces and separated by commas."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An array may be initialized by following its declaration with a list of initializers enclosed in braces and separated by commas."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766938,
        "id": "29ddf531-bc32-46ba-9d3b-8a08f266ebf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766938,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, to initialize an array days with the number of days in each month:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, to initialize an array days with the number of days in each month:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766938,
        "id": "5b57913d-16f6-4b26-8a37-27f182ffe0c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766938,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int days_of_month[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int days_of_month[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766938,
        "id": "4119ad3b-914c-442e-97d6-4b0800ddcfaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766938,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(Note that January is encoded as month zero in this structure.)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(Note that January is encoded as month zero in this structure.)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766939,
        "id": "bcf8c983-4541-4b0c-91ce-7ce369d85e40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766939,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the size of the array is omitted, the compiler will compute the length by counting the initializers, of which there are 12 in this case."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the size of the array is omitted, the compiler will compute the length by counting the initializers, of which there are 12 in this case."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766939,
        "id": "ea28f60a-8945-445a-b243-f556d0e41ca4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766939,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If there are fewer initializers for an array than the specified size, the others will be zero for all types of variables."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If there are fewer initializers for an array than the specified size, the others will be zero for all types of variables."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766941,
        "id": "a9cc6ca2-1e30-4205-ac09-500a789d34a3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766941,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is an error to have too many initializers. There is no standard way to specify repetition of an initializer — but GCC has an "
            ],
            [
              "extension",
              [
                [
                  "a",
                  "https://gcc.gnu.org/onlinedocs/gcc/Designated-Inits.html#Designated-Inits"
                ]
              ]
            ],
            [
              " to do so."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is an error to have too many initializers. There is no standard way to specify repetition of an initializer — but GCC has an "
          },
          {
            "Text": "extension",
            "Link": "https://gcc.gnu.org/onlinedocs/gcc/Designated-Inits.html#Designated-Inits"
          },
          {
            "Text": " to do so."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766941,
        "id": "683db01f-4cba-4963-822a-31d04e5f0351",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766941,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In C89/C90 or earlier versions of C, there was no way to initialize an element in the middle of an array without supplying all the preceding values as well."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In C89/C90 or earlier versions of C, there was no way to initialize an element in the middle of an array without supplying all the preceding values as well."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766941,
        "id": "1f1de5ea-b2d6-44d7-b00a-2ba4cfa02e81",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766941,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With C99 and above, "
            ],
            [
              "designated initializers",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/4547/initialization/18609/using-designated-initializers#t=201608082105205280272"
                ]
              ]
            ],
            [
              " allow you to initialize arbitrary elements of an array, leaving any uninitialized values as zeros."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With C99 and above, "
          },
          {
            "Text": "designated initializers",
            "Link": "http://stackoverflow.com/documentation/c/4547/initialization/18609/using-designated-initializers#t=201608082105205280272"
          },
          {
            "Text": " allow you to initialize arbitrary elements of an array, leaving any uninitialized values as zeros."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766941,
        "id": "ad9c42fb-5f7e-4534-a39c-c69c61dcfbd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766941,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Initializing Character arrays:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Initializing Character arrays:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766942,
        "id": "4daec647-2bce-4cd4-9d1b-0bbfc173ede7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766942,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Character arrays are a special case of initialization; a string may be used instead of the braces and commas notation:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Character arrays are a special case of initialization; a string may be used instead of the braces and commas notation:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766942,
        "id": "c99591dc-5c51-4996-ae0c-ba4560f13ff3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766942,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "char chr_array[] = \"hello\";"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "char chr_array[] = \"hello\";",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766942,
        "id": "30c88c0c-f225-4997-9f86-80087998c133",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766942,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "is a shorthand for the longer but equivalent:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "is a shorthand for the longer but equivalent:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766942,
        "id": "fe59cf18-5ab7-411e-bd7c-04a339f1d419",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766942,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "char chr_array[] = { 'h', 'e', 'l', 'l', 'o', '\\0' };"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "char chr_array[] = { 'h', 'e', 'l', 'l', 'o', '\\0' };",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766942,
        "id": "3172b1f0-30bd-4363-a564-d714eb6e12bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766942,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case, the array size is six (five characters plus the terminating "
            ],
            [
              "'\\0'",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case, the array size is six (five characters plus the terminating "
          },
          {
            "Text": "'\\0'",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766942,
        "id": "565b076e-638d-405c-8e70-1326e63de37e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766942,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "1 http://stackoverflow.com/questions/1597405/what-happens-to-a-declared-uninitialized-variable-in-c-does-it-have-a-value"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "1 http://stackoverflow.com/questions/1597405/what-happens-to-a-declared-uninitialized-variable-in-c-does-it-have-a-value"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936766943,
        "id": "da51747a-b9b7-454d-a339-8379008e72d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936766943,
        "parent_id": "ade73a83-351c-41f1-a0c8-865ce82749dd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "2 Note that a "
            ],
            [
              "constant expression",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " is defined as something that can be evaluated at compile-time. So, "
            ],
            [
              "int global_var = f();",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is invalid. Another common misconception is thinking of a "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " qualified variable as a "
            ],
            [
              "constant expression",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". In C, "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means “read-only”, not “compile time constant”. So, global definitions like "
            ],
            [
              "const int SIZE = 10; int global_arr[SIZE];",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "const int SIZE = 10; int global_var = SIZE;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are not legal in C."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "2 Note that a "
          },
          {
            "Text": "constant expression",
            "AttrFlags": 4
          },
          {
            "Text": " is defined as something that can be evaluated at compile-time. So, "
          },
          {
            "Text": "int global_var = f();",
            "AttrFlags": 2
          },
          {
            "Text": " is invalid. Another common misconception is thinking of a "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " qualified variable as a "
          },
          {
            "Text": "constant expression",
            "AttrFlags": 4
          },
          {
            "Text": ". In C, "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " means “read-only”, not “compile time constant”. So, global definitions like "
          },
          {
            "Text": "const int SIZE = 10; int global_arr[SIZE];",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "const int SIZE = 10; int global_var = SIZE;",
            "AttrFlags": 2
          },
          {
            "Text": " are not legal in C."
          }
        ]
      }
    ],
    "title": "Initialization of Variables in C",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}