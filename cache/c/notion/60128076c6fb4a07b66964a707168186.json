{
  "ID": "60128076-c6fb-4a07-b669-64a707168186",
  "Root": {
    "alive": true,
    "content": [
      "9c000275-4dce-4c16-a683-531a9dbf94c3",
      "95efcab6-0139-4235-bae5-a17d26682003",
      "d20e69d2-5b9a-46e9-b93a-ce06e3f84888",
      "3d131469-f648-4293-8057-ee43c8b4feb6",
      "fe6d3a65-1a47-4d30-80cd-acc0653f7d7f",
      "19463043-7171-4810-9666-0bce745e97b9",
      "44e4727a-5f3b-481a-be81-b99c622f97fc",
      "3f353685-85ef-4434-89fa-63bbe1c6661a",
      "85de404c-ccbf-4760-aed5-5473bdab2e4e",
      "80f329d8-a694-4165-bb91-2a048df5936a",
      "0f30aae1-a82e-421d-ac12-4871eb1ec6fd",
      "71062580-1826-40e4-b20e-73ae22325cde",
      "77a39ed2-8ce9-461f-ad71-b65f70e0f4e0",
      "9ff08fd9-01ff-4335-9815-acdb8d66d295",
      "75495096-48c8-4a25-9fde-fb0546c4e858",
      "673869bf-2ed4-467f-bdd0-b99fa5d648e6",
      "2158760a-f6f8-4de7-9eb2-df58577ceb6f",
      "627068db-962d-4786-a0fd-0a9978aae4b2",
      "0f3dc4c6-8f5f-4cf9-b7cf-331d41f803f6",
      "91002b92-0385-44c1-902a-f5e306250620",
      "feac1591-10c0-4fb2-984d-ca0f2d3f4799",
      "4666e8e6-b482-496a-9f65-269f1f1a371d",
      "ca5b90dd-dccb-483e-bb60-da3620301e47",
      "ca8f0397-dc57-4036-a9c3-d267f8e3700b",
      "1dc7db0e-73cb-4adb-86e6-05549566e2a1",
      "a037003f-0982-49dc-b3c9-4ca83e42d4ce",
      "32d5d4f4-9d9a-4cd8-9431-319606e21da0",
      "3d0ac168-88f8-4d5c-8d77-9903db5c433e",
      "7d76e64c-4197-402b-9e3a-f71ed68d1065",
      "61520190-87fc-45e1-9b5d-0db26b4caf58",
      "d184c92d-2625-48de-9965-2fcfc8248c3b",
      "36e3081d-dabf-4f02-afaf-b860eaedf910",
      "f72024a5-8dcd-4068-891a-40e90109a0e9",
      "472157e9-5fdc-482d-a760-bad1fe642478",
      "68f6d7c8-997c-4797-84f6-521515b266d5",
      "96d1f021-a37d-4578-a9a9-859c69dae48e",
      "f7490e38-b7f1-4aae-b5d3-85c1a6fdfb75",
      "0cf9c4cf-ce18-47f9-a69d-8302d12b7817"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935662899,
    "id": "60128076-c6fb-4a07-b669-64a707168186",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935662899,
    "parent_id": "af9762cd-d032-4a74-a2b8-b8413c2edefb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Interpreting Declarations"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662888,
        "id": "9c000275-4dce-4c16-a683-531a9dbf94c3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662888,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A distinctive syntactic peculiarity of C is that declarations mirror the use of the declared object as it would be in a normal expression."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A distinctive syntactic peculiarity of C is that declarations mirror the use of the declared object as it would be in a normal expression."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662891,
        "id": "95efcab6-0139-4235-bae5-a17d26682003",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662891,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following set of operators with identical precedence and associativity are reused in declarators, namely:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following set of operators with identical precedence and associativity are reused in declarators, namely:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662892,
        "id": "d20e69d2-5b9a-46e9-b93a-ce06e3f84888",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662892,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the unary "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " “dereference” operator which denotes a pointer;"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the unary "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " “dereference” operator which denotes a pointer;"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662892,
        "id": "3d131469-f648-4293-8057-ee43c8b4feb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662892,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the binary "
            ],
            [
              "[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " “array subscription” operator which denotes an array;"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the binary "
          },
          {
            "Text": "[]",
            "AttrFlags": 2
          },
          {
            "Text": " “array subscription” operator which denotes an array;"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662892,
        "id": "fe6d3a65-1a47-4d30-80cd-acc0653f7d7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662892,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the (1+n)-ary "
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " “function call” operator which denotes a function;"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the (1+n)-ary "
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": " “function call” operator which denotes a function;"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662893,
        "id": "19463043-7171-4810-9666-0bce745e97b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662893,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the "
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " grouping parentheses which override the precedence and associativity of the rest of the listed operators."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "the "
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": " grouping parentheses which override the precedence and associativity of the rest of the listed operators."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662893,
        "id": "44e4727a-5f3b-481a-be81-b99c622f97fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662893,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above three operators have the following precedence and associativity:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above three operators have the following precedence and associativity:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662893,
        "id": "3f353685-85ef-4434-89fa-63bbe1c6661a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662893,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Operator | Relative Precedence | Associativity |\n———————–– | —————–– | ————— |"
            ],
            [
              "[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (array subscription) | 1 | Left-to-right |"
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (function call) | 1 | Left-to-right |"
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (dereference) | 2 | Right-to-left |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Operator | Relative Precedence | Associativity |\n———————–– | —————–– | ————— |"
          },
          {
            "Text": "[]",
            "AttrFlags": 2
          },
          {
            "Text": " (array subscription) | 1 | Left-to-right |"
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": " (function call) | 1 | Left-to-right |"
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " (dereference) | 2 | Right-to-left |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662893,
        "id": "85de404c-ccbf-4760-aed5-5473bdab2e4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662893,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When interpreting declarations, one has to start from the identifier outwards and apply the adjacent operators in the correct order as per the above table. Each application of an operator can be substituted with the following English words:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When interpreting declarations, one has to start from the identifier outwards and apply the adjacent operators in the correct order as per the above table. Each application of an operator can be substituted with the following English words:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662894,
        "id": "80f329d8-a694-4165-bb91-2a048df5936a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662894,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Expression | Interpretation |\n———————–– | ————————————————— |"
            ],
            [
              "thing[X]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | an array of size "
            ],
            [
              "X",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of… |"
            ],
            [
              "thing(t1, t2, t3)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a function taking "
            ],
            [
              "t1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "t2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "t3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and returning… |"
            ],
            [
              "*thing",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | a pointer to… |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Expression | Interpretation |\n———————–– | ————————————————— |"
          },
          {
            "Text": "thing[X]",
            "AttrFlags": 2
          },
          {
            "Text": " | an array of size "
          },
          {
            "Text": "X",
            "AttrFlags": 2
          },
          {
            "Text": " of… |"
          },
          {
            "Text": "thing(t1, t2, t3)",
            "AttrFlags": 2
          },
          {
            "Text": " | a function taking "
          },
          {
            "Text": "t1",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "t2",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "t3",
            "AttrFlags": 2
          },
          {
            "Text": " and returning… |"
          },
          {
            "Text": "*thing",
            "AttrFlags": 2
          },
          {
            "Text": " | a pointer to… |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662894,
        "id": "0f30aae1-a82e-421d-ac12-4871eb1ec6fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662894,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It follows that the beginning of the English interpretation will always start with the identifier and will end with the type that stands on the left-hand side of the declaration."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It follows that the beginning of the English interpretation will always start with the identifier and will end with the type that stands on the left-hand side of the declaration."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662894,
        "id": "71062580-1826-40e4-b20e-73ae22325cde",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662894,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662894,
        "id": "77a39ed2-8ce9-461f-ad71-b65f70e0f4e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662894,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "char *names[20];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "char *names[20];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662894,
        "id": "9ff08fd9-01ff-4335-9815-acdb8d66d295",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662894,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " takes precedence over "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", so the interpretation is: "
            ],
            [
              "names",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an array of size 20 of a pointer to "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "[]",
            "AttrFlags": 2
          },
          {
            "Text": " takes precedence over "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": ", so the interpretation is: "
          },
          {
            "Text": "names",
            "AttrFlags": 2
          },
          {
            "Text": " is an array of size 20 of a pointer to "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662894,
        "id": "75495096-48c8-4a25-9fde-fb0546c4e858",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662894,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "char (*place)[10];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "char (*place)[10];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662895,
        "id": "673869bf-2ed4-467f-bdd0-b99fa5d648e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662895,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In case of using parentheses to override the precedence, the "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is applied first: "
            ],
            [
              "place",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a pointer to an array of size 10 of "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In case of using parentheses to override the precedence, the "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " is applied first: "
          },
          {
            "Text": "place",
            "AttrFlags": 2
          },
          {
            "Text": " is a pointer to an array of size 10 of "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662895,
        "id": "2158760a-f6f8-4de7-9eb2-df58577ceb6f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662895,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int fn(long, short);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int fn(long, short);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662895,
        "id": "627068db-962d-4786-a0fd-0a9978aae4b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662895,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is no precedence to worry about here: "
            ],
            [
              "fn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a function taking "
            ],
            [
              "long",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "short",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and returning "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is no precedence to worry about here: "
          },
          {
            "Text": "fn",
            "AttrFlags": 2
          },
          {
            "Text": " is a function taking "
          },
          {
            "Text": "long",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "short",
            "AttrFlags": 2
          },
          {
            "Text": " and returning "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662895,
        "id": "0f3dc4c6-8f5f-4cf9-b7cf-331d41f803f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662895,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int *fn(void);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int *fn(void);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662895,
        "id": "91002b92-0385-44c1-902a-f5e306250620",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662895,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is applied first: "
            ],
            [
              "fn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a function taking "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and returning a pointer to "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": " is applied first: "
          },
          {
            "Text": "fn",
            "AttrFlags": 2
          },
          {
            "Text": " is a function taking "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": " and returning a pointer to "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662896,
        "id": "feac1591-10c0-4fb2-984d-ca0f2d3f4799",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662896,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int (*fp)(void);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int (*fp)(void);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662896,
        "id": "4666e8e6-b482-496a-9f65-269f1f1a371d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662896,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Overriding the precedence of "
            ],
            [
              "()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": "
            ],
            [
              "fp",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a pointer to a function taking "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and returning "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Overriding the precedence of "
          },
          {
            "Text": "()",
            "AttrFlags": 2
          },
          {
            "Text": ": "
          },
          {
            "Text": "fp",
            "AttrFlags": 2
          },
          {
            "Text": " is a pointer to a function taking "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": " and returning "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662896,
        "id": "ca5b90dd-dccb-483e-bb60-da3620301e47",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662896,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int arr[5][8];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int arr[5][8];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662896,
        "id": "ca8f0397-dc57-4036-a9c3-d267f8e3700b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662896,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Multidimensional arrays are not an exception to the rule; the "
            ],
            [
              "[]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operators are applied in left-to-right order according to the associativity in the table: "
            ],
            [
              "arr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an array of size 5 of an array of size 8 of "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Multidimensional arrays are not an exception to the rule; the "
          },
          {
            "Text": "[]",
            "AttrFlags": 2
          },
          {
            "Text": " operators are applied in left-to-right order according to the associativity in the table: "
          },
          {
            "Text": "arr",
            "AttrFlags": 2
          },
          {
            "Text": " is an array of size 5 of an array of size 8 of "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662896,
        "id": "1dc7db0e-73cb-4adb-86e6-05549566e2a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662896,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int **ptr;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int **ptr;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662897,
        "id": "a037003f-0982-49dc-b3c9-4ca83e42d4ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662897,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The two dereference operators have equal precedence, so the associativity takes effect. The operators are applied in right-to-left order: "
            ],
            [
              "ptr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a pointer to a pointer to an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The two dereference operators have equal precedence, so the associativity takes effect. The operators are applied in right-to-left order: "
          },
          {
            "Text": "ptr",
            "AttrFlags": 2
          },
          {
            "Text": " is a pointer to a pointer to an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662897,
        "id": "32d5d4f4-9d9a-4cd8-9431-319606e21da0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662897,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Multiple Declarations"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Multiple Declarations"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662897,
        "id": "3d0ac168-88f8-4d5c-8d77-9903db5c433e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662897,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The comma can be used as a separator ("
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " acting like the comma operator) in order to delimit multiple declarations within a single statement. The following statement contains five declarations:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The comma can be used as a separator ("
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " acting like the comma operator) in order to delimit multiple declarations within a single statement. The following statement contains five declarations:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662897,
        "id": "7d76e64c-4197-402b-9e3a-f71ed68d1065",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662897,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int fn(void), *ptr, (*fp)(int), arr[10][20], num;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int fn(void), *ptr, (*fp)(int), arr[10][20], num;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662897,
        "id": "61520190-87fc-45e1-9b5d-0db26b4caf58",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662897,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The declared objects in the above example are:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The declared objects in the above example are:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662897,
        "id": "d184c92d-2625-48de-9965-2fcfc8248c3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662897,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": a function taking "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and returning "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ";"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "fn",
            "AttrFlags": 2
          },
          {
            "Text": ": a function taking "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": " and returning "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ";"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662898,
        "id": "36e3081d-dabf-4f02-afaf-b860eaedf910",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662898,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ptr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": a pointer to an "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ";"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "ptr",
            "AttrFlags": 2
          },
          {
            "Text": ": a pointer to an "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ";"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662898,
        "id": "f72024a5-8dcd-4068-891a-40e90109a0e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662898,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fp",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": a pointer to a function taking "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and returning "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ";"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "fp",
            "AttrFlags": 2
          },
          {
            "Text": ": a pointer to a function taking "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " and returning "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ";"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662898,
        "id": "472157e9-5fdc-482d-a760-bad1fe642478",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662898,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "arr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": an array of size 10 of an array of size 20 of "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ";"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "arr",
            "AttrFlags": 2
          },
          {
            "Text": ": an array of size 10 of an array of size 20 of "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ";"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662899,
        "id": "68f6d7c8-997c-4797-84f6-521515b266d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662899,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "num",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "num",
            "AttrFlags": 2
          },
          {
            "Text": ": "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662899,
        "id": "96d1f021-a37d-4578-a9a9-859c69dae48e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662899,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Alternative Interpretation"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Alternative Interpretation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662899,
        "id": "f7490e38-b7f1-4aae-b5d3-85c1a6fdfb75",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662899,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Because declarations mirror use, a declaration can also be interpreted in terms of the operators that could be applied over the object and the final resulting type of that expression. The type that stands on the left-hand side is the final result that is yielded after applying all operators."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Because declarations mirror use, a declaration can also be interpreted in terms of the operators that could be applied over the object and the final resulting type of that expression. The type that stands on the left-hand side is the final result that is yielded after applying all operators."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935662899,
        "id": "0cf9c4cf-ce18-47f9-a69d-8302d12b7817",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935662899,
        "parent_id": "60128076-c6fb-4a07-b669-64a707168186",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/*\n * Subscripting \"arr\" and dereferencing it yields a \"char\" result.\n * Particularly: *arr[5] is of type \"char\".\n */\nchar *arr[20];\n\n/*\n * Calling \"fn\" yields an \"int\" result.\n * Particularly: fn('b') is of type \"int\".\n */\nint fn(char);\n\n/*\n * Dereferencing \"fp\" and then calling it yields an \"int\" result.\n * Particularly: (*fp)() is of type \"int\".\n */\nint (*fp)(void);\n\n/*\n * Subscripting \"strings\" twice and dereferencing it yields a \"char\" result.\n * Particularly: *strings[5][15] is of type \"char\"\n */\nchar *strings[10][20];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/*\n * Subscripting \"arr\" and dereferencing it yields a \"char\" result.\n * Particularly: *arr[5] is of type \"char\".\n */\nchar *arr[20];\n\n/*\n * Calling \"fn\" yields an \"int\" result.\n * Particularly: fn('b') is of type \"int\".\n */\nint fn(char);\n\n/*\n * Dereferencing \"fp\" and then calling it yields an \"int\" result.\n * Particularly: (*fp)() is of type \"int\".\n */\nint (*fp)(void);\n\n/*\n * Subscripting \"strings\" twice and dereferencing it yields a \"char\" result.\n * Particularly: *strings[5][15] is of type \"char\"\n */\nchar *strings[10][20];",
        "code_language": "Plain Text"
      }
    ],
    "title": "020 Interpreting Declarations"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}