{
  "ID": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
  "Root": {
    "alive": true,
    "content": [
      "3b8acae3-c8ef-403a-a8fe-02d161af466b",
      "9dfcaccc-033d-4197-bd18-9feb867bbc8a",
      "2a733308-2413-4006-8b6c-76f8310131e3",
      "6be2bfff-1e4e-4831-b4d9-ef2197803b9b",
      "bc13f53a-d87e-4f36-930f-27f5bfbcecbb",
      "9c448501-cedd-4595-ac6d-48252a500885",
      "3616052f-d627-4380-89c0-b790469aaaaf",
      "8c33206d-42bb-4c7e-9bbd-7bf51676b533",
      "e6e77b24-d92a-4cc2-adbc-c39d56a59022",
      "e677b5bc-21ef-43ac-818d-8fccb9e64d2b",
      "12617b6c-22cb-413b-9a66-5654cfedf313",
      "74b23efe-4616-4232-8b57-461f52414c0b",
      "f4fbad59-58ac-42a8-ac1e-2c0ee096d016",
      "75878094-07b7-482e-a594-6c203c8add54",
      "1fa6c80b-0135-4bc4-b99c-86f7ccf58e28",
      "347f3514-62c1-4e54-815e-5dfa1cf627f2",
      "e7121683-1bd5-44d6-89e7-8376fb95356d",
      "53a36791-cfd6-43d0-9c8b-b518c105e979",
      "477487c2-9a70-4f83-9731-b0db6be2bbc6",
      "2af3de8b-462f-4628-941b-93cfa06afd55",
      "a277b4ef-ec7e-4bd6-bc24-7390d16a09bc",
      "24471f09-4a1f-4db1-9ac9-091d4c7aa15c",
      "5b5f9431-91ca-42de-a8a4-dbdf4de407b2",
      "908c7cfd-67f1-4641-a2a7-eb33e6c7e0be",
      "295a5205-abc8-408a-a4e8-7ef71d195a1c",
      "a80c0ce7-54cd-443d-812c-e9776661ad8e",
      "a030f338-0fd1-46d2-b159-e6d8eeb2ca58",
      "02c1111d-4cf6-44ab-b652-064eba8e275d",
      "dbd7c5a6-3e27-485b-8f64-fe5fd98f352a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551937534418,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551937534418,
    "parent_id": "cb11a718-ba93-4278-a486-b649224f5923",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Do not leave the parameter list of a function blank use void"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534408,
        "id": "3b8acae3-c8ef-403a-a8fe-02d161af466b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534408,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Suppose you are creating a function that requires no arguments when it is called and you are faced with the dilemma of how you should define the parameter list in the function prototype and the function definition."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Suppose you are creating a function that requires no arguments when it is called and you are faced with the dilemma of how you should define the parameter list in the function prototype and the function definition."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534414,
        "id": "9dfcaccc-033d-4197-bd18-9feb867bbc8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534414,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You have the choice of keeping the parameter list empty for both prototype and definition. Thereby, they look just like the function call statement you will need."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You have the choice of keeping the parameter list empty for both prototype and definition. Thereby, they look just like the function call statement you will need."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534414,
        "id": "2a733308-2413-4006-8b6c-76f8310131e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534414,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You read somewhere that one of the uses of keyword "
            ],
            [
              "void",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " (there are only a few of them), is to define the parameter list of functions that do not accept any arguments in their call. So, this is also a choice."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You read somewhere that one of the uses of keyword "
          },
          {
            "Text": "void",
            "AttrFlags": 5
          },
          {
            "Text": " (there are only a few of them), is to define the parameter list of functions that do not accept any arguments in their call. So, this is also a choice."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534414,
        "id": "6be2bfff-1e4e-4831-b4d9-ef2197803b9b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534414,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So, which is the correct choice?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So, which is the correct choice?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534414,
        "id": "bc13f53a-d87e-4f36-930f-27f5bfbcecbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534414,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ANSWER:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " using the keyword "
            ],
            [
              "void",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "ANSWER:",
            "AttrFlags": 1
          },
          {
            "Text": " using the keyword "
          },
          {
            "Text": "void",
            "AttrFlags": 5
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534415,
        "id": "9c448501-cedd-4595-ac6d-48252a500885",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534415,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "GENERAL ADVICE:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " If a language provides certain feature to use for a special purpose, you are better off using that in your code. For example, using "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s instead of "
            ],
            [
              "#define",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " macros (that’s for another example)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "GENERAL ADVICE:",
            "AttrFlags": 1
          },
          {
            "Text": " If a language provides certain feature to use for a special purpose, you are better off using that in your code. For example, using "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": "s instead of "
          },
          {
            "Text": "#define",
            "AttrFlags": 2
          },
          {
            "Text": " macros (that’s for another example)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534415,
        "id": "3616052f-d627-4380-89c0-b790469aaaaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534415,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C11 section 6.7.6.3 “Function declarators”, paragraph 10, states:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C11 section 6.7.6.3 “Function declarators”, paragraph 10, states:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534415,
        "id": "8c33206d-42bb-4c7e-9bbd-7bf51676b533",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534415,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The special case of an unnamed parameter of type void as the only item in the list specifies that the function has no parameters."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The special case of an unnamed parameter of type void as the only item in the list specifies that the function has no parameters."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534415,
        "id": "e6e77b24-d92a-4cc2-adbc-c39d56a59022",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534415,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Paragraph 14 of that same section shows the only difference:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Paragraph 14 of that same section shows the only difference:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534415,
        "id": "e677b5bc-21ef-43ac-818d-8fccb9e64d2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534415,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "… An empty list in a function declarator that is part of a definition of that function specifies that the function has no parameters. The empty list in a function declarator that is not part of a definition of that function specifies that no information about the number or types of the parameters is supplied."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "… An empty list in a function declarator that is part of a definition of that function specifies that the function has no parameters. The empty list in a function declarator that is not part of a definition of that function specifies that no information about the number or types of the parameters is supplied."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534415,
        "id": "12617b6c-22cb-413b-9a66-5654cfedf313",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534415,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A simplified explanation provided by K\u0026R (pgs- 72-73) for the above stuff:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A simplified explanation provided by K\u0026R (pgs- 72-73) for the above stuff:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534415,
        "id": "74b23efe-4616-4232-8b57-461f52414c0b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534415,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, if a function declaration does not include arguments, as in"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, if a function declaration does not include arguments, as in"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534416,
        "id": "f4fbad59-58ac-42a8-ac1e-2c0ee096d016",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534416,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "double atof();",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", \u003e that too is taken to mean that nothing is to be assumed about the arguments of "
            ],
            [
              "atof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "; all parameter checking is turned off. This special meaning of the empty argument list is intended to permit older C programs to compile with new compilers. But it’s a bad idea to use it with new programs. If the function takes arguments, declare them; if it takes no arguments, use "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "double atof();",
            "AttrFlags": 2
          },
          {
            "Text": ", \u003e that too is taken to mean that nothing is to be assumed about the arguments of "
          },
          {
            "Text": "atof",
            "AttrFlags": 2
          },
          {
            "Text": "; all parameter checking is turned off. This special meaning of the empty argument list is intended to permit older C programs to compile with new compilers. But it’s a bad idea to use it with new programs. If the function takes arguments, declare them; if it takes no arguments, use "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534416,
        "id": "75878094-07b7-482e-a594-6c203c8add54",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534416,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So this is how your function prototype should look:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So this is how your function prototype should look:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534416,
        "id": "1fa6c80b-0135-4bc4-b99c-86f7ccf58e28",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534416,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int foo(void);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int foo(void);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534416,
        "id": "347f3514-62c1-4e54-815e-5dfa1cf627f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534416,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And this is how the function definition should be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And this is how the function definition should be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534416,
        "id": "e7121683-1bd5-44d6-89e7-8376fb95356d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534416,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int foo(void)\n{\n    ...\n    \u003cstatements\u003e\n    ...\n    return 1;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int foo(void)\n{\n    ...\n    \u003cstatements\u003e\n    ...\n    return 1;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534416,
        "id": "53a36791-cfd6-43d0-9c8b-b518c105e979",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534416,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One advantage of using the above, over "
            ],
            [
              "int foo()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type of declaration (ie. without using the keyword "
            ],
            [
              "void",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              "), is that the compiler can detect the error if you call your function using an erroneous statement like "
            ],
            [
              "foo(42)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This kind of a function call statement would not cause any errors if you leave the parameter list blank. The error would pass silently, undetected and the code would still execute."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One advantage of using the above, over "
          },
          {
            "Text": "int foo()",
            "AttrFlags": 2
          },
          {
            "Text": " type of declaration (ie. without using the keyword "
          },
          {
            "Text": "void",
            "AttrFlags": 5
          },
          {
            "Text": "), is that the compiler can detect the error if you call your function using an erroneous statement like "
          },
          {
            "Text": "foo(42)",
            "AttrFlags": 2
          },
          {
            "Text": ". This kind of a function call statement would not cause any errors if you leave the parameter list blank. The error would pass silently, undetected and the code would still execute."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534416,
        "id": "477487c2-9a70-4f83-9731-b0db6be2bbc6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534416,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This also means that you should define the "
            ],
            [
              "main()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This also means that you should define the "
          },
          {
            "Text": "main()",
            "AttrFlags": 2
          },
          {
            "Text": " function like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534417,
        "id": "2af3de8b-462f-4628-941b-93cfa06afd55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534417,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int main(void)\n{\n    ...\n    \u003cstatements\u003e\n    ...\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int main(void)\n{\n    ...\n    \u003cstatements\u003e\n    ...\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534417,
        "id": "a277b4ef-ec7e-4bd6-bc24-7390d16a09bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534417,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that even though a function defined with an empty parameter list takes no arguments, it does not provide a prototype for the function, so the compiler will not complain if the function is subsequently called with arguments. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that even though a function defined with an empty parameter list takes no arguments, it does not provide a prototype for the function, so the compiler will not complain if the function is subsequently called with arguments. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534417,
        "id": "24471f09-4a1f-4db1-9ac9-091d4c7aa15c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534417,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n\nstatic void parameterless()\n{\n    printf(\"%s called\\n\", __func__);\n}\n\nint main(void)\n{\n    parameterless(3, \"arguments\", \"provided\");\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n\nstatic void parameterless()\n{\n    printf(\"%s called\\n\", __func__);\n}\n\nint main(void)\n{\n    parameterless(3, \"arguments\", \"provided\");\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534417,
        "id": "5b5f9431-91ca-42de-a8a4-dbdf4de407b2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534417,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If that code is saved in the file "
            ],
            [
              "proto79.c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it can be compiled on Unix with GCC (version 7.1.0 on macOS Sierra 10.12.5 used for demonstration) like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If that code is saved in the file "
          },
          {
            "Text": "proto79.c",
            "AttrFlags": 2
          },
          {
            "Text": ", it can be compiled on Unix with GCC (version 7.1.0 on macOS Sierra 10.12.5 used for demonstration) like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534417,
        "id": "908c7cfd-67f1-4641-a2a7-eb33e6c7e0be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534417,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ gcc -O3 -g -std=c11 -Wall -Wextra -Werror -Wmissing-prototypes -pedantic proto79.c -o proto79\n$"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ gcc -O3 -g -std=c11 -Wall -Wextra -Werror -Wmissing-prototypes -pedantic proto79.c -o proto79\n$",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534417,
        "id": "295a5205-abc8-408a-a4e8-7ef71d195a1c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534417,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you compile with more stringent options, you get errors:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you compile with more stringent options, you get errors:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534417,
        "id": "a80c0ce7-54cd-443d-812c-e9776661ad8e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534417,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ gcc -O3 -g -std=c11 -Wall -Wextra -Werror -Wmissing-prototypes -Wstrict-prototypes -Wold-style-definition -pedantic proto79.c -o proto79 \nproto79.c:3:13: error: function declaration isn’t a prototype [-Werror=strict-prototypes]\n static void parameterless()\n             ^~~~~~~~~~~~~\nproto79.c: In function ‘parameterless’:\nproto79.c:3:13: error: old-style function definition [-Werror=old-style-definition]\ncc1: all warnings being treated as errors\n$"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ gcc -O3 -g -std=c11 -Wall -Wextra -Werror -Wmissing-prototypes -Wstrict-prototypes -Wold-style-definition -pedantic proto79.c -o proto79 \nproto79.c:3:13: error: function declaration isn’t a prototype [-Werror=strict-prototypes]\n static void parameterless()\n             ^~~~~~~~~~~~~\nproto79.c: In function ‘parameterless’:\nproto79.c:3:13: error: old-style function definition [-Werror=old-style-definition]\ncc1: all warnings being treated as errors\n$",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534417,
        "id": "a030f338-0fd1-46d2-b159-e6d8eeb2ca58",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534417,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you give the function the formal prototype "
            ],
            [
              "static void parameterless(void)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then the compilation gives errors:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you give the function the formal prototype "
          },
          {
            "Text": "static void parameterless(void)",
            "AttrFlags": 2
          },
          {
            "Text": ", then the compilation gives errors:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534418,
        "id": "02c1111d-4cf6-44ab-b652-064eba8e275d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534418,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ gcc -O3 -g -std=c11 -Wall -Wextra -Werror -Wmissing-prototypes -Wstrict-prototypes -Wold-style-definition -pedantic proto79.c -o proto79 \nproto79.c: In function ‘main’:\nproto79.c:10:5: error: too many arguments to function ‘parameterless’\n     parameterless(3, \"arguments\", \"provided\");\n     ^~~~~~~~~~~~~\nproto79.c:3:13: note: declared here\n static void parameterless(void)\n             ^~~~~~~~~~~~~\n$"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ gcc -O3 -g -std=c11 -Wall -Wextra -Werror -Wmissing-prototypes -Wstrict-prototypes -Wold-style-definition -pedantic proto79.c -o proto79 \nproto79.c: In function ‘main’:\nproto79.c:10:5: error: too many arguments to function ‘parameterless’\n     parameterless(3, \"arguments\", \"provided\");\n     ^~~~~~~~~~~~~\nproto79.c:3:13: note: declared here\n static void parameterless(void)\n             ^~~~~~~~~~~~~\n$",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937534418,
        "id": "dbd7c5a6-3e27-485b-8f64-fe5fd98f352a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937534418,
        "parent_id": "880d2ad4-f91d-493c-9cb4-c0caa9b60593",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Moral — always make sure you have prototypes, and make sure your compiler tells you when you are not obeying the rules."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Moral — always make sure you have prototypes, and make sure your compiler tells you when you are not obeying the rules."
          }
        ]
      }
    ],
    "title": "Do not leave the parameter list of a function blank use void",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}