{
  "ID": "17961402-0de5-435a-a219-13a5470de6a2",
  "Root": {
    "alive": true,
    "content": [
      "5be7baad-fb0d-4c81-97b0-98df6c1bd575"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935687095,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "17961402-0de5-435a-a219-13a5470de6a2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935687095,
    "parent_id": "c613c743-331e-4cb0-8344-4963dbf825f3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Define array and access array element"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935687092,
        "id": "5be7baad-fb0d-4c81-97b0-98df6c1bd575",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935687092,
        "parent_id": "17961402-0de5-435a-a219-13a5470de6a2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n \n#define ARRLEN (10)\n\nint main (void) \n{\n\n   int n[ ARRLEN ]; /* n is an array of 10 integers */\n   size_t i, j; /* Use size_t to address memory, that is to index arrays, as its guaranteed to \n                   be wide enough to address all of the possible available memory. \n                   Using signed integers to do so should be considered a special use case, \n                   and should be restricted to the uncommon case of being in the need of \n                   negative indexes. */\n \n   /* Initialize elements of array n. */         \n   for ( i = 0; i \u003c ARRLEN ; i++ ) \n   {\n      n[ i ] = i + 100; /* Set element at location i to i + 100. */\n   }\n   \n   /* Output each array element's value. */\n   for (j = 0; j \u003c ARRLEN ; j++ ) \n   {\n      printf(\"Element[%zu] = %d\\n\", j, n[j] );\n   }\n \n   return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n \n#define ARRLEN (10)\n\nint main (void) \n{\n\n   int n[ ARRLEN ]; /* n is an array of 10 integers */\n   size_t i, j; /* Use size_t to address memory, that is to index arrays, as its guaranteed to \n                   be wide enough to address all of the possible available memory. \n                   Using signed integers to do so should be considered a special use case, \n                   and should be restricted to the uncommon case of being in the need of \n                   negative indexes. */\n \n   /* Initialize elements of array n. */         \n   for ( i = 0; i \u003c ARRLEN ; i++ ) \n   {\n      n[ i ] = i + 100; /* Set element at location i to i + 100. */\n   }\n   \n   /* Output each array element's value. */\n   for (j = 0; j \u003c ARRLEN ; j++ ) \n   {\n      printf(\"Element[%zu] = %d\\n\", j, n[j] );\n   }\n \n   return 0;\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Define array and access array element",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}