{
  "ID": "6e627422-84bb-45a7-8188-bf8a26001a41",
  "Root": {
    "alive": true,
    "content": [
      "2919580a-a6fa-4788-a287-28edc2498e0a",
      "e534eb66-ce07-42b1-aba6-faff84dba7a2",
      "79dc52c0-68e4-419a-bceb-c43703720075",
      "ad71cf9b-3948-46ae-a0ef-26cb1579ea20",
      "feb92b02-5d18-4a00-b493-6f0f5ddfabee",
      "e9fa41b9-471f-4f7a-a9cb-e0480e97f2c7",
      "ba1056fd-3cc7-4250-b485-4533d21d33ca",
      "8f41343e-8830-4db8-84f5-8563bff5453a",
      "fb365324-54e7-4ade-a830-683999a0a83c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936363143,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "6e627422-84bb-45a7-8188-bf8a26001a41",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936363143,
    "parent_id": "ce0d7992-bb1e-4e62-ab26-2f99a9a2f78d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Overstepping array boundaries"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363139,
        "id": "2919580a-a6fa-4788-a287-28edc2498e0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363139,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Arrays are zero-based, that is the index always starts at 0 and ends with index array length minus 1. Thus the following code will not output the first element of the array and will output garbage for the final value that it prints."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Arrays are zero-based, that is the index always starts at 0 and ends with index array length minus 1. Thus the following code will not output the first element of the array and will output garbage for the final value that it prints."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363142,
        "id": "e534eb66-ce07-42b1-aba6-faff84dba7a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363142,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n\nint main(void)\n{\n    int x = 0;\n    int myArray[5] = {1, 2, 3, 4, 5}; //Declaring 5 elements"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n\nint main(void)\n{\n    int x = 0;\n    int myArray[5] = {1, 2, 3, 4, 5}; //Declaring 5 elements",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363142,
        "id": "79dc52c0-68e4-419a-bceb-c43703720075",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363142,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for(x = 1; x \u003c= 5; x++) //Looping from 1 till 5.\n   printf(\"%d\\t\", myArray[x]);\n\nprintf(\"\\n\");\nreturn 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for(x = 1; x \u003c= 5; x++) //Looping from 1 till 5.\n   printf(\"%d\\t\", myArray[x]);\n\nprintf(\"\\n\");\nreturn 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363142,
        "id": "ad71cf9b-3948-46ae-a0ef-26cb1579ea20",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363142,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output: "
            ],
            [
              "2 3 4 5 GarbageValue",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output: "
          },
          {
            "Text": "2 3 4 5 GarbageValue",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363143,
        "id": "feb92b02-5d18-4a00-b493-6f0f5ddfabee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363143,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following demonstrates the correct way to achieve the desired output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following demonstrates the correct way to achieve the desired output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363143,
        "id": "e9fa41b9-471f-4f7a-a9cb-e0480e97f2c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363143,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n\nint main(void)\n{\n    int x = 0;\n    int myArray[5] = {1, 2, 3, 4, 5}; //Declaring 5 elements"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n\nint main(void)\n{\n    int x = 0;\n    int myArray[5] = {1, 2, 3, 4, 5}; //Declaring 5 elements",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363143,
        "id": "ba1056fd-3cc7-4250-b485-4533d21d33ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363143,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for(x = 0; x \u003c 5; x++) //Looping from 0 till 4.\n   printf(\"%d\\t\", myArray[x]);\n\nprintf(\"\\n\");\nreturn 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for(x = 0; x \u003c 5; x++) //Looping from 0 till 4.\n   printf(\"%d\\t\", myArray[x]);\n\nprintf(\"\\n\");\nreturn 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363143,
        "id": "8f41343e-8830-4db8-84f5-8563bff5453a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363143,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output: "
            ],
            [
              "1 2 3 4 5",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output: "
          },
          {
            "Text": "1 2 3 4 5",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936363143,
        "id": "fb365324-54e7-4ade-a830-683999a0a83c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936363143,
        "parent_id": "6e627422-84bb-45a7-8188-bf8a26001a41",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is important to know the length of an array before working with it as otherwise you may corrupt the buffer or cause a segmentation fault by accessing memory locations that are out of bounds."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is important to know the length of an array before working with it as otherwise you may corrupt the buffer or cause a segmentation fault by accessing memory locations that are out of bounds."
          }
        ]
      }
    ],
    "title": "Overstepping array boundaries",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}