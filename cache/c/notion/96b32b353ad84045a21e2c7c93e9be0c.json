{
  "ID": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
  "Root": {
    "alive": true,
    "content": [
      "bffeea8b-44c5-463f-9a1b-d5b0f6facd95",
      "d4698462-7d0b-4a39-8d88-0816b87da9d9",
      "80dd6d48-0451-4eff-bb64-6f037ec08f7d",
      "209330fe-6a5b-4ebf-bace-c5bf4bdfc329",
      "fc4b34b7-9151-4e8c-9240-233123fe3bad",
      "ad2f6a08-06da-4e91-a7ec-c46858a187a5",
      "bc28cf12-153d-4c77-9489-f9efd6235cdb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936653773,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936653773,
    "parent_id": "70e63802-c8af-4573-9d30-82507679f19d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using the Intrinsic built-in Type Bool"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936653766,
        "id": "bffeea8b-44c5-463f-9a1b-d5b0f6facd95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936653766,
        "parent_id": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Added in the C standard version C99, "
            ],
            [
              "_Bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is also a native C data type. It is capable of holding the values "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (for "
            ],
            [
              "false",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") and "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (for "
            ],
            [
              "true",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Added in the C standard version C99, "
          },
          {
            "Text": "_Bool",
            "AttrFlags": 2
          },
          {
            "Text": " is also a native C data type. It is capable of holding the values "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " (for "
          },
          {
            "Text": "false",
            "AttrFlags": 4
          },
          {
            "Text": ") and "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " (for "
          },
          {
            "Text": "true",
            "AttrFlags": 4
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936653769,
        "id": "d4698462-7d0b-4a39-8d88-0816b87da9d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936653769,
        "parent_id": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n\nint main(void) {\n    _Bool x = 1; \n    _Bool y = 0;\n    if(x) /* Equivalent to if (x == 1) */\n    {\n        puts(\"This will print!\");\n    }\n    if (!y) /* Equivalent to if (y == 0) */\n    {\n        puts(\"This will also print!\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n\nint main(void) {\n    _Bool x = 1; \n    _Bool y = 0;\n    if(x) /* Equivalent to if (x == 1) */\n    {\n        puts(\"This will print!\");\n    }\n    if (!y) /* Equivalent to if (y == 0) */\n    {\n        puts(\"This will also print!\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936653771,
        "id": "80dd6d48-0451-4eff-bb64-6f037ec08f7d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936653771,
        "parent_id": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "_Bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is an integer type but has special rules for conversions from other types. The result is analogous to the usage of other types in "
            ],
            [
              "if",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://stackoverflow.com/documentation/c/3336/boolean/14358/integers-and-pointers-in-boolean-expressions"
                ]
              ]
            ],
            [
              " expressions",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/c/3336/boolean/14358/integers-and-pointers-in-boolean-expressions"
                ]
              ]
            ],
            [
              ". In the following"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "_Bool",
            "AttrFlags": 2
          },
          {
            "Text": " is an integer type but has special rules for conversions from other types. The result is analogous to the usage of other types in "
          },
          {
            "Text": "if",
            "AttrFlags": 2,
            "Link": "https://stackoverflow.com/documentation/c/3336/boolean/14358/integers-and-pointers-in-boolean-expressions"
          },
          {
            "Text": " expressions",
            "Link": "https://stackoverflow.com/documentation/c/3336/boolean/14358/integers-and-pointers-in-boolean-expressions"
          },
          {
            "Text": ". In the following"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936653771,
        "id": "209330fe-6a5b-4ebf-bace-c5bf4bdfc329",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936653771,
        "parent_id": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "_Bool z = X;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "_Bool z = X;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936653772,
        "id": "fc4b34b7-9151-4e8c-9240-233123fe3bad",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936653772,
        "parent_id": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "X",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has an arithmetic type (is any kind of number), "
            ],
            [
              "z",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " becomes "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if "
            ],
            [
              "X == 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Otherwise "
            ],
            [
              "z",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " becomes "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "X",
            "AttrFlags": 2
          },
          {
            "Text": " has an arithmetic type (is any kind of number), "
          },
          {
            "Text": "z",
            "AttrFlags": 2
          },
          {
            "Text": " becomes "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " if "
          },
          {
            "Text": "X == 0",
            "AttrFlags": 2
          },
          {
            "Text": ". Otherwise "
          },
          {
            "Text": "z",
            "AttrFlags": 2
          },
          {
            "Text": " becomes "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936653773,
        "id": "ad2f6a08-06da-4e91-a7ec-c46858a187a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936653773,
        "parent_id": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "X",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has a pointer type, "
            ],
            [
              "z",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " becomes "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if "
            ],
            [
              "X",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a null pointer and "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " otherwise."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "X",
            "AttrFlags": 2
          },
          {
            "Text": " has a pointer type, "
          },
          {
            "Text": "z",
            "AttrFlags": 2
          },
          {
            "Text": " becomes "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " if "
          },
          {
            "Text": "X",
            "AttrFlags": 2
          },
          {
            "Text": " is a null pointer and "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": " otherwise."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936653773,
        "id": "bc28cf12-153d-4c77-9489-f9efd6235cdb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936653773,
        "parent_id": "96b32b35-3ad8-4045-a21e-2c7c93e9be0c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To use nicer spellings "
            ],
            [
              "bool",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you need to use "
            ],
            [
              "\u003cstdbool.h\u003e",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://stackoverflow.com/documentation/c/3336/boolean/11458/using-stdbool-h"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To use nicer spellings "
          },
          {
            "Text": "bool",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": " you need to use "
          },
          {
            "Text": "\u003cstdbool.h\u003e",
            "AttrFlags": 2,
            "Link": "https://stackoverflow.com/documentation/c/3336/boolean/11458/using-stdbool-h"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Using the Intrinsic built-in Type Bool",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}