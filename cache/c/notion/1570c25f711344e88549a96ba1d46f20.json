{
  "ID": "1570c25f-7113-44e8-8549-a96ba1d46f20",
  "Root": {
    "alive": true,
    "content": [
      "d28db18c-bda5-4af0-8b20-0c52c4676cf8",
      "d1325e37-dfc2-441f-b542-a0797e7cfcd7",
      "ae326021-bd1f-4b5a-b4ed-2063db5072a4",
      "6abbdfaa-e218-43bf-812e-5087b0eac623",
      "e3d79c03-82ac-475a-ac72-7df4a2783330",
      "ddbef2fb-e26e-41f6-8f9b-904820432125",
      "a489e15c-dbae-4c91-90f7-0e9b14380c90",
      "b5579b62-eae6-48c1-97e7-b71f5d15af59",
      "6ef6d2c9-b7ee-4e8a-9774-83ce5f24c94e",
      "8d59af00-21e2-43e4-b8b3-b4e97984b831",
      "2a81e475-a889-4647-adab-d67a40d01874",
      "54090c3a-528c-4be8-9820-efb3cde08282",
      "f916ad18-99de-42ef-945f-24229894d61b",
      "824027d8-a0bc-4bd1-bccf-446917b31033",
      "5dfe072b-a742-4129-bf83-f2e451c7d3de",
      "7bbeced9-2a97-4085-a6ed-e630794a30b7",
      "f0470f7f-c040-4457-8403-1bc4ad74e996",
      "ff10caf6-5d4c-4e6a-a8b2-690c91860c80",
      "7a4f5d78-4e77-4003-97c0-b0a4ad91b7f8",
      "3f0c997f-ea98-4b17-89ff-fcd527529e2b",
      "50d7d8f6-46d7-42a4-a27d-031473dd77d7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936726179,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936726179,
    "parent_id": "56054c40-d551-420f-9fd8-a44a9550fd1d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "DefinitionInitialisation of Compound Literals"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726174,
        "id": "d28db18c-bda5-4af0-8b20-0c52c4676cf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726174,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A compound literal is an unnamed object which is created in the scope where is defined. The concept was first introduced in C99 standard. An example for compound literal is"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A compound literal is an unnamed object which is created in the scope where is defined. The concept was first introduced in C99 standard. An example for compound literal is"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726176,
        "id": "d1325e37-dfc2-441f-b542-a0797e7cfcd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726176,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Examples from C standard, C11-§6.5.2.5/9:"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Examples from C standard, C11-§6.5.2.5/9:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726176,
        "id": "ae326021-bd1f-4b5a-b4ed-2063db5072a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726176,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "``` int *p = (int [2]){ 2, 4 };"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "``` int *p = (int [2]){ 2, 4 };"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726176,
        "id": "6abbdfaa-e218-43bf-812e-5087b0eac623",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726176,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "`p` is initialized to the address of the first element of an unnamed array of two ints.\n\nThe compound literal is an lvalue. The storage duration of the unnamed object is either static (if the literal appears at file scope) or automatic (if the literal appears at block scope), and in the latter case the object’s lifetime ends when control leaves the enclosing block.\n\n\u003e ```\nvoid f(void)\n{\n    int *p;\n    /*...*/\n    p = (int [2]){ *p };\n    /*...*/\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "`p` is initialized to the address of the first element of an unnamed array of two ints.\n\nThe compound literal is an lvalue. The storage duration of the unnamed object is either static (if the literal appears at file scope) or automatic (if the literal appears at block scope), and in the latter case the object’s lifetime ends when control leaves the enclosing block.\n\n\u003e ```\nvoid f(void)\n{\n    int *p;\n    /*...*/\n    p = (int [2]){ *p };\n    /*...*/\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726176,
        "id": "e3d79c03-82ac-475a-ac72-7df4a2783330",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726176,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is assigned the address of the first element of an array of two ints, the first having the value previously pointed to by "
            ],
            [
              "p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the second, zero.[…]"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "p",
            "AttrFlags": 2
          },
          {
            "Text": " is assigned the address of the first element of an array of two ints, the first having the value previously pointed to by "
          },
          {
            "Text": "p",
            "AttrFlags": 2
          },
          {
            "Text": " and the second, zero.[…]"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726177,
        "id": "ddbef2fb-e26e-41f6-8f9b-904820432125",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726177,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here "
            ],
            [
              "p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " remains valid until the end of the block."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here "
          },
          {
            "Text": "p",
            "AttrFlags": 2
          },
          {
            "Text": " remains valid until the end of the block."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726177,
        "id": "a489e15c-dbae-4c91-90f7-0e9b14380c90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726177,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compound literal with designators"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compound literal with designators"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726177,
        "id": "b5579b62-eae6-48c1-97e7-b71f5d15af59",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726177,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "(also from C11)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "(also from C11)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726177,
        "id": "6ef6d2c9-b7ee-4e8a-9774-83ce5f24c94e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726177,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct point {\n  unsigned x;\n  unsigned y;\n};\n\nextern void drawline(struct point, struct point);\n\n// used somewhere like this\ndrawline((struct point){.x=1, .y=1}, (struct point){.x=3, .y=4});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct point {\n  unsigned x;\n  unsigned y;\n};\n\nextern void drawline(struct point, struct point);\n\n// used somewhere like this\ndrawline((struct point){.x=1, .y=1}, (struct point){.x=3, .y=4});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726177,
        "id": "8d59af00-21e2-43e4-b8b3-b4e97984b831",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726177,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A fictive function "
            ],
            [
              "drawline",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " receives two arguments of type "
            ],
            [
              "struct point",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The first has coordinate values "
            ],
            [
              "x == 1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "y == 1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", whereas the second has "
            ],
            [
              "x == 3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "y == 4",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A fictive function "
          },
          {
            "Text": "drawline",
            "AttrFlags": 2
          },
          {
            "Text": " receives two arguments of type "
          },
          {
            "Text": "struct point",
            "AttrFlags": 2
          },
          {
            "Text": ". The first has coordinate values "
          },
          {
            "Text": "x == 1",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "y == 1",
            "AttrFlags": 2
          },
          {
            "Text": ", whereas the second has "
          },
          {
            "Text": "x == 3",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "y == 4",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726177,
        "id": "2a81e475-a889-4647-adab-d67a40d01874",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726177,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compound literal without specifying array length"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compound literal without specifying array length"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726178,
        "id": "54090c3a-528c-4be8-9820-efb3cde08282",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726178,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int *p = (int []){ 1, 2, 3};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int *p = (int []){ 1, 2, 3};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726178,
        "id": "f916ad18-99de-42ef-945f-24229894d61b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726178,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case the size of the array is no specified then it will be determined by the length of the initializer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case the size of the array is no specified then it will be determined by the length of the initializer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726178,
        "id": "824027d8-a0bc-4bd1-bccf-446917b31033",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726178,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compound literal having length of initializer less than array size specified"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compound literal having length of initializer less than array size specified"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726178,
        "id": "5dfe072b-a742-4129-bf83-f2e451c7d3de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726178,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int *p = (int [10]){1, 2, 3};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int *p = (int [10]){1, 2, 3};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726178,
        "id": "7bbeced9-2a97-4085-a6ed-e630794a30b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726178,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "rest of the elements of compound literal will be initialized to "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " implicitly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "rest of the elements of compound literal will be initialized to "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " implicitly."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726178,
        "id": "f0470f7f-c040-4457-8403-1bc4ad74e996",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726178,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Read-only compound literal"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Read-only compound literal"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726178,
        "id": "ff10caf6-5d4c-4e6a-a8b2-690c91860c80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726178,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that a compound literal is an lvalue and therefore it’s elements can be modifiable. A "
            ],
            [
              "read-only",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " compound literal can be specified using "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " qualifier as "
            ],
            [
              "(const int[]){1,2}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that a compound literal is an lvalue and therefore it’s elements can be modifiable. A "
          },
          {
            "Text": "read-only",
            "AttrFlags": 4
          },
          {
            "Text": " compound literal can be specified using "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " qualifier as "
          },
          {
            "Text": "(const int[]){1,2}",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726178,
        "id": "7a4f5d78-4e77-4003-97c0-b0a4ad91b7f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726178,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compound literal containing arbitrary expressions"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compound literal containing arbitrary expressions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726179,
        "id": "3f0c997f-ea98-4b17-89ff-fcd527529e2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726179,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inside a function, a compound literal, as for any initialization since C99, can have arbitrary expressions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inside a function, a compound literal, as for any initialization since C99, can have arbitrary expressions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936726179,
        "id": "50d7d8f6-46d7-42a4-a27d-031473dd77d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936726179,
        "parent_id": "1570c25f-7113-44e8-8549-a96ba1d46f20",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void foo()\n{\n    int *p;\n    int i = 2; j = 5;\n    /*...*/\n    p = (int [2]){ i+j, i*j };\n    /*...*/\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void foo()\n{\n    int *p;\n    int i = 2; j = 5;\n    /*...*/\n    p = (int [2]){ i+j, i*j };\n    /*...*/\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "DefinitionInitialisation of Compound Literals",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}