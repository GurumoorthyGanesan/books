{
  "ID": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
  "Root": {
    "alive": true,
    "content": [
      "c996ae36-e3ee-4c8e-8967-cd800fe3f78f",
      "37144c81-4b91-42e1-9ec4-7037a3724558",
      "5ed96580-1cfb-42cc-b5fb-f3b191805740",
      "3a62c9e1-e018-4dfe-a5b2-df93dc031ab1",
      "6412dca2-f7f4-4f21-a875-a049e3249612",
      "60279f7a-b759-4d9f-9a78-53cf973afef0",
      "415de706-ab0b-48ee-b0a4-237e08853e8b",
      "a2605935-5842-4285-b572-9fcbad315938",
      "8acdc15a-e7b7-41d4-869c-abaadb0b66e4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936794350,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936794350,
    "parent_id": "5e44bd54-3362-4b1a-934b-acecce2afc7f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "reallocptr 0 is not equivalent to freeptr"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794347,
        "id": "c996ae36-e3ee-4c8e-8967-cd800fe3f78f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794347,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "realloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is "
            ],
            [
              "conceptually equivalent",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "malloc + memcpy + free",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on the other pointer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "realloc",
            "AttrFlags": 2
          },
          {
            "Text": " is "
          },
          {
            "Text": "conceptually equivalent",
            "AttrFlags": 4
          },
          {
            "Text": " to "
          },
          {
            "Text": "malloc + memcpy + free",
            "AttrFlags": 2
          },
          {
            "Text": " on the other pointer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794348,
        "id": "37144c81-4b91-42e1-9ec4-7037a3724558",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794348,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the size of the space requested is zero, the behavior of "
            ],
            [
              "realloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is implementation-defined. This is similar for all memory allocation functions that receive a "
            ],
            [
              "size",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter of value "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Such functions may in fact return a non-null pointer, but that must never be dereferenced."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the size of the space requested is zero, the behavior of "
          },
          {
            "Text": "realloc",
            "AttrFlags": 2
          },
          {
            "Text": " is implementation-defined. This is similar for all memory allocation functions that receive a "
          },
          {
            "Text": "size",
            "AttrFlags": 2
          },
          {
            "Text": " parameter of value "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": ". Such functions may in fact return a non-null pointer, but that must never be dereferenced."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794348,
        "id": "5ed96580-1cfb-42cc-b5fb-f3b191805740",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794348,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Thus, "
            ],
            [
              "realloc(ptr,0)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not equivalent to "
            ],
            [
              "free(ptr)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It may"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Thus, "
          },
          {
            "Text": "realloc(ptr,0)",
            "AttrFlags": 2
          },
          {
            "Text": " is not equivalent to "
          },
          {
            "Text": "free(ptr)",
            "AttrFlags": 2
          },
          {
            "Text": ". It may"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794349,
        "id": "3a62c9e1-e018-4dfe-a5b2-df93dc031ab1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794349,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "be a “lazy” implementation and just return "
            ],
            [
              "ptr",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "be a “lazy” implementation and just return "
          },
          {
            "Text": "ptr",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794349,
        "id": "6412dca2-f7f4-4f21-a875-a049e3249612",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794349,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "free(ptr)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", allocate a dummy element and return that"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "free(ptr)",
            "AttrFlags": 2
          },
          {
            "Text": ", allocate a dummy element and return that"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794349,
        "id": "60279f7a-b759-4d9f-9a78-53cf973afef0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794349,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "free(ptr)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and return "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "free(ptr)",
            "AttrFlags": 2
          },
          {
            "Text": " and return "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794350,
        "id": "415de706-ab0b-48ee-b0a4-237e08853e8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794350,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "just return "
            ],
            [
              "0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for failure and do nothing else."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "just return "
          },
          {
            "Text": "0",
            "AttrFlags": 2
          },
          {
            "Text": " for failure and do nothing else."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794350,
        "id": "a2605935-5842-4285-b572-9fcbad315938",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794350,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "So in particular the latter two cases are indistinguishable by application code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "So in particular the latter two cases are indistinguishable by application code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936794350,
        "id": "8acdc15a-e7b7-41d4-869c-abaadb0b66e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936794350,
        "parent_id": "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This means "
            ],
            [
              "realloc(ptr,0)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " may not really free/deallocate the memory, and thus it should never be used as a replacement for "
            ],
            [
              "free",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This means "
          },
          {
            "Text": "realloc(ptr,0)",
            "AttrFlags": 2
          },
          {
            "Text": " may not really free/deallocate the memory, and thus it should never be used as a replacement for "
          },
          {
            "Text": "free",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "reallocptr 0 is not equivalent to freeptr",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}