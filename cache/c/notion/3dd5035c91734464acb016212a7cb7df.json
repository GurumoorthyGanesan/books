{
  "ID": "3dd5035c-9173-4464-acb0-16212a7cb7df",
  "Root": {
    "alive": true,
    "content": [
      "c5d78034-09dc-47e3-a8b3-2fd690e8bb79",
      "95be40d0-cbd1-4fc2-94f0-eeb9a5953305",
      "893003c7-8987-40f8-ae1a-888907f8ea48",
      "cdd04c80-3bed-4290-93c4-2f2a51422dd5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935744198,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3dd5035c-9173-4464-acb0-16212a7cb7df",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935744198,
    "parent_id": "eff989d8-e4d4-4f97-952e-6c58e46dfb73",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Freeing memory twice"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935744193,
        "id": "c5d78034-09dc-47e3-a8b3-2fd690e8bb79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935744193,
        "parent_id": "3dd5035c-9173-4464-acb0-16212a7cb7df",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Freeing memory twice is undefined behavior, e.g."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Freeing memory twice is undefined behavior, e.g."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935744195,
        "id": "95be40d0-cbd1-4fc2-94f0-eeb9a5953305",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935744195,
        "parent_id": "3dd5035c-9173-4464-acb0-16212a7cb7df",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int * x = malloc(sizeof(int));\n*x = 9;\nfree(x);\nfree(x);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int * x = malloc(sizeof(int));\n*x = 9;\nfree(x);\nfree(x);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935744196,
        "id": "893003c7-8987-40f8-ae1a-888907f8ea48",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935744196,
        "parent_id": "3dd5035c-9173-4464-acb0-16212a7cb7df",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Quote from standard(7.20.3.2. The free function of C99 ):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Quote from standard(7.20.3.2. The free function of C99 ):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935744198,
        "id": "cdd04c80-3bed-4290-93c4-2f2a51422dd5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935744198,
        "parent_id": "3dd5035c-9173-4464-acb0-16212a7cb7df",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Otherwise, if the argument does not match a pointer earlier returned by the calloc, malloc, or realloc function, or if the space has been deallocated by a call to free or realloc, the behavior is undefined."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Otherwise, if the argument does not match a pointer earlier returned by the calloc, malloc, or realloc function, or if the space has been deallocated by a call to free or realloc, the behavior is undefined."
          }
        ]
      }
    ],
    "title": "Freeing memory twice",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}