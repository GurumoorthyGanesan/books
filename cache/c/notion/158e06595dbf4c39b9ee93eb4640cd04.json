{
  "ID": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
  "Root": {
    "alive": true,
    "content": [
      "f6168895-d64e-4641-ad26-5edd848fbc97",
      "3bb29893-5fa0-4e2a-b71f-60476579f354",
      "fe6fd9fa-a529-468b-a925-7947dc4ddf44",
      "32fab4fe-8b96-4422-ab7d-c656c2570324",
      "999b083b-499b-4796-93cd-907c62a2af37",
      "ebdfca42-77ad-4ed3-94f7-c801e1a3759c",
      "1657aad0-99d8-4ce1-ab3d-8837a4d96fd7",
      "8aa08f31-f289-4ce9-b2c7-6768446aee06",
      "a8239343-9f6f-4e1b-acd5-9d6dd12005dc",
      "2af0ff15-4782-4eb9-adba-ada00ee6e434"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936322629,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936322629,
    "parent_id": "f3ac34eb-110d-486b-9e30-6bd30082bba0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "String literals"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322626,
        "id": "f6168895-d64e-4641-ad26-5edd848fbc97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322626,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "String literals represent null-terminated, "
            ],
            [
              "static-duration",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/3597/storage-classes/12393/static"
                ]
              ]
            ],
            [
              " arrays of "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Because they have static storage duration, a string literal or a pointer to the same underlying array can safely be used in several ways that a pointer to an automatic array cannot. For example, returning a string literal from a function has well-defined behavior:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "String literals represent null-terminated, "
          },
          {
            "Text": "static-duration",
            "Link": "http://stackoverflow.com/documentation/c/3597/storage-classes/12393/static"
          },
          {
            "Text": " arrays of "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": ". Because they have static storage duration, a string literal or a pointer to the same underlying array can safely be used in several ways that a pointer to an automatic array cannot. For example, returning a string literal from a function has well-defined behavior:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322627,
        "id": "3bb29893-5fa0-4e2a-b71f-60476579f354",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322627,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const char *get_hello() {\n    return \"Hello, World!\";  /* safe */\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const char *get_hello() {\n    return \"Hello, World!\";  /* safe */\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322628,
        "id": "fe6fd9fa-a529-468b-a925-7947dc4ddf44",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322628,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For historical reasons, the elements of the array corresponding to a string literal are not formally "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Nevertheless, any attempt to modify them has "
            ],
            [
              "undefined behavior",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/364/undefined-behavior"
                ]
              ]
            ],
            [
              ". Typically, a program that attempts to modify the array corresponding to a string literal will crash or otherwise malfunction."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For historical reasons, the elements of the array corresponding to a string literal are not formally "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": ". Nevertheless, any attempt to modify them has "
          },
          {
            "Text": "undefined behavior",
            "Link": "http://stackoverflow.com/documentation/c/364/undefined-behavior"
          },
          {
            "Text": ". Typically, a program that attempts to modify the array corresponding to a string literal will crash or otherwise malfunction."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322628,
        "id": "32fab4fe-8b96-4422-ab7d-c656c2570324",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322628,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "char *foo = \"hello\";\nfoo[0] = 'y';  /* Undefined behavior - BAD! */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "char *foo = \"hello\";\nfoo[0] = 'y';  /* Undefined behavior - BAD! */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322628,
        "id": "999b083b-499b-4796-93cd-907c62a2af37",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322628,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Where a pointer points to a string literal – or where it sometimes may do – it is advisable to declare that pointer’s referent "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to avoid engaging such undefined behavior accidentally."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Where a pointer points to a string literal – or where it sometimes may do – it is advisable to declare that pointer’s referent "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " to avoid engaging such undefined behavior accidentally."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322628,
        "id": "ebdfca42-77ad-4ed3-94f7-c801e1a3759c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322628,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const char *foo = \"hello\";\n/* GOOD: can't modify the string pointed to by foo */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const char *foo = \"hello\";\n/* GOOD: can't modify the string pointed to by foo */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322628,
        "id": "1657aad0-99d8-4ce1-ab3d-8837a4d96fd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322628,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "On the other hand, a pointer to or into the underlying array of a string literal is not itself inherently special; its value can freely be modified to point to something else:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "On the other hand, a pointer to or into the underlying array of a string literal is not itself inherently special; its value can freely be modified to point to something else:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322629,
        "id": "8aa08f31-f289-4ce9-b2c7-6768446aee06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322629,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "char *foo = \"hello\";\nfoo = \"World!\"; /* OK - we're just changing what foo points to */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "char *foo = \"hello\";\nfoo = \"World!\"; /* OK - we're just changing what foo points to */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322629,
        "id": "a8239343-9f6f-4e1b-acd5-9d6dd12005dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322629,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Furthermore, although initializers for "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " arrays can have the same form as string literals, use of such an initializer does not confer the characteristics of a string literal on the initialized array. The initializer simply designates the length and initial contents of the array. In particular, the elements are modifiable if not explicitly declared "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Furthermore, although initializers for "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " arrays can have the same form as string literals, use of such an initializer does not confer the characteristics of a string literal on the initialized array. The initializer simply designates the length and initial contents of the array. In particular, the elements are modifiable if not explicitly declared "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936322629,
        "id": "2af0ff15-4782-4eb9-adba-ada00ee6e434",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936322629,
        "parent_id": "158e0659-5dbf-4c39-b9ee-93eb4640cd04",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "char foo[] = \"hello\";\nfoo[0] = 'y';  /* OK! */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "char foo[] = \"hello\";\nfoo[0] = 'y';  /* OK! */",
        "code_language": "Plain Text"
      }
    ],
    "title": "String literals",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}