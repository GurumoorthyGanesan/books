{
  "ID": "f280547a-e82f-4e90-80ff-d7fdb6ce4535",
  "Root": {
    "alive": true,
    "content": [
      "2fff6675-1f6d-4c7f-8622-4f9fc224d9a1",
      "2fb85e4b-df0c-4c12-9e10-9af5dea4ab38"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551937272590,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f280547a-e82f-4e90-80ff-d7fdb6ce4535",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551937272590,
    "parent_id": "d4a53a79-3ec2-426e-ac50-24d51d19d403",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Using flat arrays as 2D arrays"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937272587,
        "id": "2fff6675-1f6d-4c7f-8622-4f9fc224d9a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937272587,
        "parent_id": "f280547a-e82f-4e90-80ff-d7fdb6ce4535",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Often the easiest solution is simply to pass 2D and higher arrays around as flat memory."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Often the easiest solution is simply to pass 2D and higher arrays around as flat memory."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937272590,
        "id": "2fb85e4b-df0c-4c12-9e10-9af5dea4ab38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937272590,
        "parent_id": "f280547a-e82f-4e90-80ff-d7fdb6ce4535",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* create 2D array with dimensions determined at runtime */\ndouble *matrix = malloc(width * height * sizeof(double));\n\n/* initialise it (for the sake of illustration we want 1.0 on the diagonal) */\nint x, y;\nfor (y = 0; y \u003c height; y++)\n{\n    for (x = 0; x \u003c width; x++)\n    {\n        if (x == y)\n            matrix[y * width + x] = 1.0;\n        else\n            matrix[y * width + x] = 0.0;\n    }\n}\n\n/* pass it to a subroutine */\n manipulate_matrix(matrix, width, height);\n\n\n/* do something with the matrix, e.g. scale by 2 */\nvoid manipulate_matrix(double *matrix, int width, int height)\n{\n    int x, y;\n\n    for (y = 0; y \u003c height; y++)\n    {\n        for (x = 0; x \u003c width; x++) \n        {\n            matrix[y * width + x] *= 2.0;\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* create 2D array with dimensions determined at runtime */\ndouble *matrix = malloc(width * height * sizeof(double));\n\n/* initialise it (for the sake of illustration we want 1.0 on the diagonal) */\nint x, y;\nfor (y = 0; y \u003c height; y++)\n{\n    for (x = 0; x \u003c width; x++)\n    {\n        if (x == y)\n            matrix[y * width + x] = 1.0;\n        else\n            matrix[y * width + x] = 0.0;\n    }\n}\n\n/* pass it to a subroutine */\n manipulate_matrix(matrix, width, height);\n\n\n/* do something with the matrix, e.g. scale by 2 */\nvoid manipulate_matrix(double *matrix, int width, int height)\n{\n    int x, y;\n\n    for (y = 0; y \u003c height; y++)\n    {\n        for (x = 0; x \u003c width; x++) \n        {\n            matrix[y * width + x] *= 2.0;\n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Using flat arrays as 2D arrays",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}