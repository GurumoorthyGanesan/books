{
  "ID": "08692f43-efac-420e-bc43-a8919185341c",
  "Root": {
    "alive": true,
    "content": [
      "68febb31-f7db-4f40-95d7-b0f1cebd922e",
      "54179d74-cddc-470b-b526-187af1c0f346",
      "782e0799-005d-4ea2-b0bd-0cccb109071a",
      "4dbfe7e6-ba1a-4480-87af-d4d2590a6990",
      "dce31df3-459f-4a7f-8605-b9dfdd4a7548",
      "d9cc0d94-3435-49e5-b55b-2577cb4b27b6",
      "24c4192b-d0a5-4f61-86b8-f73bada6e68b",
      "68caee5a-f0d0-46a4-9bf3-36526213774e",
      "7c0e739b-48df-4c44-8d4a-9f31bc6e8393",
      "84e0db4d-46c1-44c0-817a-173994d7a8f4",
      "248cb2ad-9a45-419d-a371-448199b71374",
      "b83ac0f2-3b69-4ecf-b9c0-3fe17147a554",
      "3be02364-c967-4f80-921a-9b2f3d6eae7e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551937195674,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "08692f43-efac-420e-bc43-a8919185341c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551937195674,
    "parent_id": "c45bb8ec-af6d-4f58-b094-cc6980d363e1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Structure and flow of control in a for loop"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195665,
        "id": "68febb31-f7db-4f40-95d7-b0f1cebd922e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195665,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for ([declaration-or-expression]; [expression2]; [expression3])\n{\n    /* body of the loop */\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for ([declaration-or-expression]; [expression2]; [expression3])\n{\n    /* body of the loop */\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195668,
        "id": "54179d74-cddc-470b-b526-187af1c0f346",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195668,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In a "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop, the loop condition has three expressions, all optional."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In a "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loop, the loop condition has three expressions, all optional."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195670,
        "id": "782e0799-005d-4ea2-b0bd-0cccb109071a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195670,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The first expression, "
            ],
            [
              "declaration-or-expression",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "initializes",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the loop. It is executed exactly once at the beginning of the loop."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The first expression, "
          },
          {
            "Text": "declaration-or-expression",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "initializes",
            "AttrFlags": 4
          },
          {
            "Text": " the loop. It is executed exactly once at the beginning of the loop."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195670,
        "id": "4dbfe7e6-ba1a-4480-87af-d4d2590a6990",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195670,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It can be either a declaration and initialization of a loop variable, or a general expression. If it is a declaration, the scope of the declared variable is restricted by the "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It can be either a declaration and initialization of a loop variable, or a general expression. If it is a declaration, the scope of the declared variable is restricted by the "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " statement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195670,
        "id": "dce31df3-459f-4a7f-8605-b9dfdd4a7548",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195670,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Historical versions of C only allowed an expression, here, and the declaration of a loop variable had to be placed before the "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Historical versions of C only allowed an expression, here, and the declaration of a loop variable had to be placed before the "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195672,
        "id": "d9cc0d94-3435-49e5-b55b-2577cb4b27b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195672,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The second expression, "
            ],
            [
              "expression2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", is the "
            ],
            [
              "test condition",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". It is first executed after the initialization. If the condition is "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", then the control enters the body of the loop. If not, it shifts to outside the body of the loop at the end of the loop. Subsequently, this conditon is checked after each execution of the body as well as the update statement. When "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the control moves back to the beginning of the body of the loop. The condition is usually intended to be a check on the number of times the body of the loop executes. This is the primary way of exiting a loop, the other way being using "
            ],
            [
              "jump statements",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/5568/jump-statements"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The second expression, "
          },
          {
            "Text": "expression2",
            "AttrFlags": 2
          },
          {
            "Text": ", is the "
          },
          {
            "Text": "test condition",
            "AttrFlags": 4
          },
          {
            "Text": ". It is first executed after the initialization. If the condition is "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ", then the control enters the body of the loop. If not, it shifts to outside the body of the loop at the end of the loop. Subsequently, this conditon is checked after each execution of the body as well as the update statement. When "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ", the control moves back to the beginning of the body of the loop. The condition is usually intended to be a check on the number of times the body of the loop executes. This is the primary way of exiting a loop, the other way being using "
          },
          {
            "Text": "jump statements",
            "Link": "http://stackoverflow.com/documentation/c/5568/jump-statements"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195673,
        "id": "24c4192b-d0a5-4f61-86b8-f73bada6e68b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195673,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The third expression, "
            ],
            [
              "expression3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", is the "
            ],
            [
              "update statement",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". It is executed after each execution of the body of the loop. It is often used to increment a variable keeping count of the number of times the loop body has executed, and this variable is called an "
            ],
            [
              "iterator",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The third expression, "
          },
          {
            "Text": "expression3",
            "AttrFlags": 2
          },
          {
            "Text": ", is the "
          },
          {
            "Text": "update statement",
            "AttrFlags": 4
          },
          {
            "Text": ". It is executed after each execution of the body of the loop. It is often used to increment a variable keeping count of the number of times the loop body has executed, and this variable is called an "
          },
          {
            "Text": "iterator",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195673,
        "id": "68caee5a-f0d0-46a4-9bf3-36526213774e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195673,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each instance of execution of the loop body is called an "
            ],
            [
              "iteration",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Each instance of execution of the loop body is called an "
          },
          {
            "Text": "iteration",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195673,
        "id": "7c0e739b-48df-4c44-8d4a-9f31bc6e8393",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195673,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195673,
        "id": "84e0db4d-46c1-44c0-817a-173994d7a8f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195673,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "for(int i = 0; i \u003c 10 ; i++)\n{\n    printf(\"%d\", i);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "for(int i = 0; i \u003c 10 ; i++)\n{\n    printf(\"%d\", i);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195673,
        "id": "248cb2ad-9a45-419d-a371-448199b71374",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195673,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The output is:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The output is:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195673,
        "id": "b83ac0f2-3b69-4ecf-b9c0-3fe17147a554",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195673,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "0123456789"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "0123456789",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937195674,
        "id": "3be02364-c967-4f80-921a-9b2f3d6eae7e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937195674,
        "parent_id": "08692f43-efac-420e-bc43-a8919185341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the above example, first "
            ],
            [
              "i = 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is executed, initializing "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Then, the condition "
            ],
            [
              "i \u003c 10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is checked, which evaluates to be "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The control enters the body of the loop and the value of "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is printed. Then, the control shifts to "
            ],
            [
              "i++",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", updating the value of "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from 0 to 1. Then, the condition is again checked, and the process continues. This goes on till the value of "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " becomes 10. Then, the condition "
            ],
            [
              "i \u003c 10",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " evaluates "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", after which the control moves out of the loop."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the above example, first "
          },
          {
            "Text": "i = 0",
            "AttrFlags": 2
          },
          {
            "Text": " is executed, initializing "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": ". Then, the condition "
          },
          {
            "Text": "i \u003c 10",
            "AttrFlags": 2
          },
          {
            "Text": " is checked, which evaluates to be "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": ". The control enters the body of the loop and the value of "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": " is printed. Then, the control shifts to "
          },
          {
            "Text": "i++",
            "AttrFlags": 2
          },
          {
            "Text": ", updating the value of "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": " from 0 to 1. Then, the condition is again checked, and the process continues. This goes on till the value of "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": " becomes 10. Then, the condition "
          },
          {
            "Text": "i \u003c 10",
            "AttrFlags": 2
          },
          {
            "Text": " evaluates "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": ", after which the control moves out of the loop."
          }
        ]
      }
    ],
    "title": "Structure and flow of control in a for loop",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}