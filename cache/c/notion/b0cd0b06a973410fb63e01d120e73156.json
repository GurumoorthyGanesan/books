{
  "ID": "b0cd0b06-a973-410f-b63e-01d120e73156",
  "Root": {
    "alive": true,
    "content": [
      "a7e9e8db-a064-42f0-afaf-b49add8474ef",
      "39896587-5a21-478c-8b0a-949d3f27c4fa",
      "2a9e3c69-7a89-4cf3-b37e-1606c36070dc",
      "39d8e82e-9e04-43b7-ad4c-522dd19b6334",
      "0d48d6df-adb5-4de2-898e-42038ac11045",
      "a84d4b0b-bafe-47ab-a697-7e158579c227",
      "6db8207e-a9ed-4e09-a929-9b21662ccbb0",
      "0690e9e2-c61b-47a9-aaef-76f886ad69c5",
      "06fcf168-169d-4700-9cdd-d1e10abe1cea",
      "1278934e-532a-4c1c-89e3-ff16de34d64d",
      "b4b68978-f66c-454c-91b2-dc778f4d58da",
      "8dbe01a2-7cd8-498f-8c72-cdfaa0ba02c0",
      "4d33ce59-fc5c-4ddc-9ab5-be6aa4dc3710",
      "44417ebe-1348-4a7a-b2e7-b39634fd835c",
      "b4ead9a3-22a8-4578-af4a-ddd6292d7772",
      "a7567111-a30d-4d3d-8db3-0cb15bbab938",
      "7c2fcd17-1d49-4d31-933f-d3981dae91f4",
      "5b4863ef-ec3f-4e16-b2ed-e7bbc16b6bff"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935626279,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b0cd0b06-a973-410f-b63e-01d120e73156",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935626279,
    "parent_id": "033ae011-39fb-4a86-9a89-54971c729ce8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basics"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626271,
        "id": "a7e9e8db-a064-42f0-afaf-b49add8474ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626271,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just like you can have a pointer to an "
            ],
            [
              "int",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "char",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "float",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "array/string",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "struct",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", etc. - you can have a pointer to a function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just like you can have a pointer to an "
          },
          {
            "Text": "int",
            "AttrFlags": 1
          },
          {
            "Text": ", "
          },
          {
            "Text": "char",
            "AttrFlags": 1
          },
          {
            "Text": ", "
          },
          {
            "Text": "float",
            "AttrFlags": 1
          },
          {
            "Text": ", "
          },
          {
            "Text": "array/string",
            "AttrFlags": 1
          },
          {
            "Text": ", "
          },
          {
            "Text": "struct",
            "AttrFlags": 1
          },
          {
            "Text": ", etc. - you can have a pointer to a function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626274,
        "id": "39896587-5a21-478c-8b0a-949d3f27c4fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626274,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Declaring the pointer",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " takes the "
            ],
            [
              "return value of the function",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", the "
            ],
            [
              "name of the function",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and the "
            ],
            [
              "type of arguments/parameters it receives",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Declaring the pointer",
            "AttrFlags": 1
          },
          {
            "Text": " takes the "
          },
          {
            "Text": "return value of the function",
            "AttrFlags": 4
          },
          {
            "Text": ", the "
          },
          {
            "Text": "name of the function",
            "AttrFlags": 4
          },
          {
            "Text": ", and the "
          },
          {
            "Text": "type of arguments/parameters it receives",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626274,
        "id": "2a9e3c69-7a89-4cf3-b37e-1606c36070dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626274,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Say you have the following function declared and initialized:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Say you have the following function declared and initialized:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626274,
        "id": "39d8e82e-9e04-43b7-ad4c-522dd19b6334",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626274,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int addInt(int n, int m){\n    return n+m;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int addInt(int n, int m){\n    return n+m;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626275,
        "id": "0d48d6df-adb5-4de2-898e-42038ac11045",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626275,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can declare and initialize a pointer to this function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can declare and initialize a pointer to this function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626275,
        "id": "a84d4b0b-bafe-47ab-a697-7e158579c227",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626275,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int (*functionPtrAdd)(int, int) = addInt; // or \u0026addInt - the \u0026 is optional"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int (*functionPtrAdd)(int, int) = addInt; // or \u0026addInt - the \u0026 is optional",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626275,
        "id": "6db8207e-a9ed-4e09-a929-9b21662ccbb0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626275,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you have a void function it could look like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you have a void function it could look like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626275,
        "id": "0690e9e2-c61b-47a9-aaef-76f886ad69c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626275,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void Print(void){\n    printf(\"look ma' - no hands, only pointers!\\n\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void Print(void){\n    printf(\"look ma' - no hands, only pointers!\\n\");\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626275,
        "id": "06fcf168-169d-4700-9cdd-d1e10abe1cea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626275,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then declaring the pointer to it would be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then declaring the pointer to it would be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626275,
        "id": "1278934e-532a-4c1c-89e3-ff16de34d64d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626275,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void (*functionPtrPrint)(void) = Print;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void (*functionPtrPrint)(void) = Print;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626275,
        "id": "b4b68978-f66c-454c-91b2-dc778f4d58da",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626275,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Accessing",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the function itself would require dereferencing the pointer:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Accessing",
            "AttrFlags": 1
          },
          {
            "Text": " the function itself would require dereferencing the pointer:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626275,
        "id": "8dbe01a2-7cd8-498f-8c72-cdfaa0ba02c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626275,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "sum = (*functionPtrAdd)(2, 3); //will assign 5 to sum\n(*functionPtrPrint)(); //will print the text in Print function"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "sum = (*functionPtrAdd)(2, 3); //will assign 5 to sum\n(*functionPtrPrint)(); //will print the text in Print function",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626276,
        "id": "4d33ce59-fc5c-4ddc-9ab5-be6aa4dc3710",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626276,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As seen in more advanced examples in this document, declaring a pointer to a function could get messy if the function is passed more than a few parameters. If you have a few pointers to functions that have identical “structure” (same type of return value, and same type of parameters) it’s best to use the "
            ],
            [
              "typedef",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " command to save you some typing, and to make the code more clear:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As seen in more advanced examples in this document, declaring a pointer to a function could get messy if the function is passed more than a few parameters. If you have a few pointers to functions that have identical “structure” (same type of return value, and same type of parameters) it’s best to use the "
          },
          {
            "Text": "typedef",
            "AttrFlags": 1
          },
          {
            "Text": " command to save you some typing, and to make the code more clear:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626276,
        "id": "44417ebe-1348-4a7a-b2e7-b39634fd835c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626276,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef int (*ptrInt)(int, int);\n\nint Add(int i, int j){\n    return i+j;\n}\n\nint Multiply(int i, int j){\n    return i*j;\n}\n\nint main()\n{\n    ptrInt ptr1 = Add;\n    ptrInt ptr2 = Multiply;\n\n    printf(\"%d\\n\", (*ptr1)(2,3)); //will print 5\n    printf(\"%d\\n\", (*ptr2)(2,3)); //will print 6\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef int (*ptrInt)(int, int);\n\nint Add(int i, int j){\n    return i+j;\n}\n\nint Multiply(int i, int j){\n    return i*j;\n}\n\nint main()\n{\n    ptrInt ptr1 = Add;\n    ptrInt ptr2 = Multiply;\n\n    printf(\"%d\\n\", (*ptr1)(2,3)); //will print 5\n    printf(\"%d\\n\", (*ptr2)(2,3)); //will print 6\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626276,
        "id": "b4ead9a3-22a8-4578-af4a-ddd6292d7772",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626276,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also create an "
            ],
            [
              "Array of function-pointers",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ". If all the pointers are of the same “structure”:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can also create an "
          },
          {
            "Text": "Array of function-pointers",
            "AttrFlags": 1
          },
          {
            "Text": ". If all the pointers are of the same “structure”:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626276,
        "id": "a7567111-a30d-4d3d-8db3-0cb15bbab938",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626276,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int (*array[2]) (int x, int y); // can hold 2 function pointers\narray[0] = Add;\narray[1] = Multiply;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int (*array[2]) (int x, int y); // can hold 2 function pointers\narray[0] = Add;\narray[1] = Multiply;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626278,
        "id": "7c2fcd17-1d49-4d31-933f-d3981dae91f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626278,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can learn more "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/252750/6296435"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/5488718/6296435"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can learn more "
          },
          {
            "Text": "here",
            "Link": "http://stackoverflow.com/a/252750/6296435"
          },
          {
            "Text": " and "
          },
          {
            "Text": "here",
            "Link": "http://stackoverflow.com/a/5488718/6296435"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935626278,
        "id": "5b4863ef-ec3f-4e16-b2ed-e7bbc16b6bff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935626278,
        "parent_id": "b0cd0b06-a973-410f-b63e-01d120e73156",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is also possible to define an array of function-pointers of different types, though that would require casting when-ever you want to access the specific function. You can learn more "
            ],
            [
              "here",
              [
                [
                  "a",
                  "http://stackoverflow.com/q/39435158/6296435"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is also possible to define an array of function-pointers of different types, though that would require casting when-ever you want to access the specific function. You can learn more "
          },
          {
            "Text": "here",
            "Link": "http://stackoverflow.com/q/39435158/6296435"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Basics",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}