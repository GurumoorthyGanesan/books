{
  "ID": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
  "Root": {
    "alive": true,
    "content": [
      "2aea0cd1-f54b-4c71-a48e-dde5f6d77e2b",
      "521ff9db-d218-4e2f-9886-40ddb5deb5aa",
      "6cc22fd5-cef7-42a0-b202-a8ef72f2779e",
      "bc051f18-d088-43c4-bd31-0c6b89fb5d55",
      "f96506c3-56ab-4a48-9a29-67b0ef221c90",
      "7952aa40-e3b5-4459-9dd5-1c11bba47f77",
      "af45355d-e5d3-403c-b08c-36ee28b3e6e1",
      "b08bbbd5-e06b-4eb5-bbbd-a328a97b7366",
      "536ec412-38b0-4a66-863e-ea3c3c92de97",
      "566f5095-5fa9-4287-a816-80416c89abb6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936304530,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936304530,
    "parent_id": "9104b65f-88ef-4b77-89d3-248fa4934ff0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Bit-fields"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304528,
        "id": "2aea0cd1-f54b-4c71-a48e-dde5f6d77e2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304528,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A simple bit-field can be used to describe things that may have a specific number of bits involved."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A simple bit-field can be used to describe things that may have a specific number of bits involved."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304529,
        "id": "521ff9db-d218-4e2f-9886-40ddb5deb5aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304529,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct encoderPosition {\n   unsigned int encoderCounts : 23;\n   unsigned int encoderTurns  : 4;\n   unsigned int _reserved     : 5;\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct encoderPosition {\n   unsigned int encoderCounts : 23;\n   unsigned int encoderTurns  : 4;\n   unsigned int _reserved     : 5;\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304529,
        "id": "6cc22fd5-cef7-42a0-b202-a8ef72f2779e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304529,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example we consider an encoder with 23 bits of single precision and 4 bits to describe multi-turn. Bit-fields are often used when interfacing with hardware that outputs data associated with specific number of bits. Another example could be communication with an FPGA, where the FPGA writes data into your memory in 32 bit sections allowing for hardware reads:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example we consider an encoder with 23 bits of single precision and 4 bits to describe multi-turn. Bit-fields are often used when interfacing with hardware that outputs data associated with specific number of bits. Another example could be communication with an FPGA, where the FPGA writes data into your memory in 32 bit sections allowing for hardware reads:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304529,
        "id": "bc051f18-d088-43c4-bd31-0c6b89fb5d55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304529,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct FPGAInfo {\n    union {\n        struct bits {\n            unsigned int bulb1On  : 1;\n            unsigned int bulb2On  : 1;\n            unsigned int bulb1Off : 1;\n            unsigned int bulb2Off : 1;\n            unsigned int jetOn    : 1;\n        };\n        unsigned int data;\n   };\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct FPGAInfo {\n    union {\n        struct bits {\n            unsigned int bulb1On  : 1;\n            unsigned int bulb2On  : 1;\n            unsigned int bulb1Off : 1;\n            unsigned int bulb2Off : 1;\n            unsigned int jetOn    : 1;\n        };\n        unsigned int data;\n   };\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304529,
        "id": "f96506c3-56ab-4a48-9a29-67b0ef221c90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304529,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For this example we have shown a commonly used construct to be able to access the data in its individual bits, or to write the data packet as a whole (emulating what the FPGA might do). We could then access the bits like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For this example we have shown a commonly used construct to be able to access the data in its individual bits, or to write the data packet as a whole (emulating what the FPGA might do). We could then access the bits like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304529,
        "id": "7952aa40-e3b5-4459-9dd5-1c11bba47f77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304529,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "FPGAInfo fInfo;\nfInfo.data = 0xFF34F;\nif (fInfo.bits.bulb1On) {\n    printf(\"Bulb 1 is on\\n\");\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "FPGAInfo fInfo;\nfInfo.data = 0xFF34F;\nif (fInfo.bits.bulb1On) {\n    printf(\"Bulb 1 is on\\n\");\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304529,
        "id": "af45355d-e5d3-403c-b08c-36ee28b3e6e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304529,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is valid, but as per the C99 standard 6.7.2.1, item 10:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is valid, but as per the C99 standard 6.7.2.1, item 10:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304529,
        "id": "b08bbbd5-e06b-4eb5-bbbd-a328a97b7366",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304529,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The order of allocation of bit-fields within a unit (high-order to low-order or low-order to high-order) is implementation-defined."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The order of allocation of bit-fields within a unit (high-order to low-order or low-order to high-order) is implementation-defined."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304530,
        "id": "536ec412-38b0-4a66-863e-ea3c3c92de97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304530,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You need to be aware of endianness when defining bit-fields in this way. As such it may be necessary to use a preprocessor directive to check for the endianness of the machine. An example of this follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You need to be aware of endianness when defining bit-fields in this way. As such it may be necessary to use a preprocessor directive to check for the endianness of the machine. An example of this follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936304530,
        "id": "566f5095-5fa9-4287-a816-80416c89abb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936304530,
        "parent_id": "84576221-1faa-459d-8ffb-c1d013e2a6b8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef union {\n    struct bits {\n#if defined(WIN32) || defined(LITTLE_ENDIAN)\n    uint8_t commFailure :1;\n    uint8_t hardwareFailure :1;\n    uint8_t _reserved :6;\n#else\n    uint8_t _reserved :6;\n    uint8_t hardwareFailure :1;\n    uint8_t commFailure :1;\n#endif\n    };\n    uint8_t data;\n} hardwareStatus;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef union {\n    struct bits {\n#if defined(WIN32) || defined(LITTLE_ENDIAN)\n    uint8_t commFailure :1;\n    uint8_t hardwareFailure :1;\n    uint8_t _reserved :6;\n#else\n    uint8_t _reserved :6;\n    uint8_t hardwareFailure :1;\n    uint8_t commFailure :1;\n#endif\n    };\n    uint8_t data;\n} hardwareStatus;",
        "code_language": "Plain Text"
      }
    ],
    "title": "Bit-fields",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}