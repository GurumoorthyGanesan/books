{
  "ID": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
  "Root": {
    "alive": true,
    "content": [
      "6a95d6c8-3e17-4a1f-90db-172d61f74928",
      "a3f7d6e3-2941-4f8e-a21a-c69c6aa8a029",
      "904a3667-b0a4-42b4-9112-085ef3e46113",
      "ce60082b-dea1-4228-985b-96422c98b41b",
      "f57c85e4-1756-4c2a-9ad0-3b74767756cb",
      "dfb68cb4-a09f-4517-9dc5-5f82f1ad54d5",
      "0978e93b-ca31-4bf1-b225-a8abe72a12db",
      "750c5e48-fec9-4077-875c-26ade697fe4c",
      "c693d42c-bf93-4685-aa91-ddad7d3e33b9",
      "cbabed59-de63-4f57-babc-3bcd256aa946"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936714611,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936714611,
    "parent_id": "ae1ce0ef-9ced-4caa-9c8d-f14041e087b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Conversion Specifiers for printing"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714602,
        "id": "6a95d6c8-3e17-4a1f-90db-172d61f74928",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714602,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Conversion Specifier| Type of Argument | Description |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Conversion Specifier| Type of Argument | Description |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714606,
        "id": "a3f7d6e3-2941-4f8e-a21a-c69c6aa8a029",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714606,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|—|—|—| | "
            ],
            [
              "i",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "d",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | int | prints decimal | "
            ],
            [
              "u",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | unsigned int | prints decimal | "
            ],
            [
              "o",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | unsigned int | prints octal | | "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | unsigned int | prints hexadecimal, lower-case | | "
            ],
            [
              "X",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | unsigned int | prints hexadecimal, upper-case | | "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double | prints float with a default precision of 6, if no precision is given (lower-case used for special numbers "
            ],
            [
              "nan",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "inf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "infinity",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") | | "
            ],
            [
              "F",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double | prints float with a default precision of 6, if no precision is given (upper-case used for special numbers "
            ],
            [
              "NAN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "INF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "INFINITY",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") | | "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double | prints float with a default precision of 6, if no precision is given, using scientific notation using mantissa/exponent; lower-case exponent and special numbers | | "
            ],
            [
              "E",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double | prints float with a default precision of 6, if no precision is given, using scientific notation using mantissa/exponent; upper-case exponent and special numbers | | "
            ],
            [
              "g",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double | uses either "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "[see below]",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "| | "
            ],
            [
              "G",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double | uses either "
            ],
            [
              "F",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "E",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "[see below]",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "| | "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double | prints hexadecimal, lower-case | | "
            ],
            [
              "A",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | double | prints hexadecimal, upper-case | | "
            ],
            [
              "c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | char | prints single character | | "
            ],
            [
              "s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | char* | prints string of characters up to a "
            ],
            [
              "NUL",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " terminator, or truncated to length given by precision, if specified | | "
            ],
            [
              "p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | void* | prints "
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-pointer value; a non"
            ],
            [
              "void",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "-pointer should be explicitly converted (“cast”) to "
            ],
            [
              "void*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "; pointer to object only, "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " a function-pointer | | "
            ],
            [
              "%",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | n/a | prints the "
            ],
            [
              "%",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character | | "
            ],
            [
              "n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | int * | "
            ],
            [
              "write",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " the number of bytes printed so far into the "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " pointed at. |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|—|—|—| | "
          },
          {
            "Text": "i",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "d",
            "AttrFlags": 2
          },
          {
            "Text": " | int | prints decimal | "
          },
          {
            "Text": "u",
            "AttrFlags": 2
          },
          {
            "Text": " | unsigned int | prints decimal | "
          },
          {
            "Text": "o",
            "AttrFlags": 2
          },
          {
            "Text": " | unsigned int | prints octal | | "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " | unsigned int | prints hexadecimal, lower-case | | "
          },
          {
            "Text": "X",
            "AttrFlags": 2
          },
          {
            "Text": " | unsigned int | prints hexadecimal, upper-case | | "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " | double | prints float with a default precision of 6, if no precision is given (lower-case used for special numbers "
          },
          {
            "Text": "nan",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "inf",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "infinity",
            "AttrFlags": 2
          },
          {
            "Text": ") | | "
          },
          {
            "Text": "F",
            "AttrFlags": 2
          },
          {
            "Text": " | double | prints float with a default precision of 6, if no precision is given (upper-case used for special numbers "
          },
          {
            "Text": "NAN",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "INF",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "INFINITY",
            "AttrFlags": 2
          },
          {
            "Text": ") | | "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " | double | prints float with a default precision of 6, if no precision is given, using scientific notation using mantissa/exponent; lower-case exponent and special numbers | | "
          },
          {
            "Text": "E",
            "AttrFlags": 2
          },
          {
            "Text": " | double | prints float with a default precision of 6, if no precision is given, using scientific notation using mantissa/exponent; upper-case exponent and special numbers | | "
          },
          {
            "Text": "g",
            "AttrFlags": 2
          },
          {
            "Text": " | double | uses either "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "[see below]",
            "AttrFlags": 4
          },
          {
            "Text": "| | "
          },
          {
            "Text": "G",
            "AttrFlags": 2
          },
          {
            "Text": " | double | uses either "
          },
          {
            "Text": "F",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "E",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "[see below]",
            "AttrFlags": 4
          },
          {
            "Text": "| | "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " | double | prints hexadecimal, lower-case | | "
          },
          {
            "Text": "A",
            "AttrFlags": 2
          },
          {
            "Text": " | double | prints hexadecimal, upper-case | | "
          },
          {
            "Text": "c",
            "AttrFlags": 2
          },
          {
            "Text": " | char | prints single character | | "
          },
          {
            "Text": "s",
            "AttrFlags": 2
          },
          {
            "Text": " | char* | prints string of characters up to a "
          },
          {
            "Text": "NUL",
            "AttrFlags": 2
          },
          {
            "Text": " terminator, or truncated to length given by precision, if specified | | "
          },
          {
            "Text": "p",
            "AttrFlags": 2
          },
          {
            "Text": " | void* | prints "
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": "-pointer value; a non"
          },
          {
            "Text": "void",
            "AttrFlags": 2
          },
          {
            "Text": "-pointer should be explicitly converted (“cast”) to "
          },
          {
            "Text": "void*",
            "AttrFlags": 2
          },
          {
            "Text": "; pointer to object only, "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " a function-pointer | | "
          },
          {
            "Text": "%",
            "AttrFlags": 2
          },
          {
            "Text": " | n/a | prints the "
          },
          {
            "Text": "%",
            "AttrFlags": 2
          },
          {
            "Text": " character | | "
          },
          {
            "Text": "n",
            "AttrFlags": 2
          },
          {
            "Text": " | int * | "
          },
          {
            "Text": "write",
            "AttrFlags": 5
          },
          {
            "Text": " the number of bytes printed so far into the "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " pointed at. |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714607,
        "id": "904a3667-b0a4-42b4-9112-085ef3e46113",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714607,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that length modifiers can be applied to "
            ],
            [
              "%n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (e.g. "
            ],
            [
              "%hhn",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " indicates that "
            ],
            [
              "a following ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "n",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " conversion specifier applies to a pointer to a ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "signed char",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " argument",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", according to the ISO/IEC 9899:2011 §7.21.6.1 ¶7)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that length modifiers can be applied to "
          },
          {
            "Text": "%n",
            "AttrFlags": 2
          },
          {
            "Text": " (e.g. "
          },
          {
            "Text": "%hhn",
            "AttrFlags": 2
          },
          {
            "Text": " indicates that "
          },
          {
            "Text": "a following ",
            "AttrFlags": 4
          },
          {
            "Text": "n",
            "AttrFlags": 6
          },
          {
            "Text": " conversion specifier applies to a pointer to a ",
            "AttrFlags": 4
          },
          {
            "Text": "signed char",
            "AttrFlags": 6
          },
          {
            "Text": " argument",
            "AttrFlags": 4
          },
          {
            "Text": ", according to the ISO/IEC 9899:2011 §7.21.6.1 ¶7)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714607,
        "id": "ce60082b-dea1-4228-985b-96422c98b41b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714607,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the floating point conversions apply to types "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " because of default promotion rules — §6.5.2.2 Function calls, ¶7 "
            ],
            [
              "The ellipsis notation in a function prototype declarator causes argument type conversion to stop after the last declared parameter. The default argument promotions are performed on trailing arguments.",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ") Thus, functions such as "
            ],
            [
              "printf()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are only ever passed "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " values, even if the variable referenced is of type "
            ],
            [
              "float",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the floating point conversions apply to types "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " because of default promotion rules — §6.5.2.2 Function calls, ¶7 "
          },
          {
            "Text": "The ellipsis notation in a function prototype declarator causes argument type conversion to stop after the last declared parameter. The default argument promotions are performed on trailing arguments.",
            "AttrFlags": 4
          },
          {
            "Text": ") Thus, functions such as "
          },
          {
            "Text": "printf()",
            "AttrFlags": 2
          },
          {
            "Text": " are only ever passed "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " values, even if the variable referenced is of type "
          },
          {
            "Text": "float",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714609,
        "id": "f57c85e4-1756-4c2a-9ad0-3b74767756cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714609,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With the "
            ],
            [
              "g",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "G",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " formats, the choice between "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or "
            ],
            [
              "E",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "F",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") notation is documented in the C standard and in the POSIX specification for "
            ],
            [
              "printf()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With the "
          },
          {
            "Text": "g",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "G",
            "AttrFlags": 2
          },
          {
            "Text": " formats, the choice between "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " (or "
          },
          {
            "Text": "E",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "F",
            "AttrFlags": 2
          },
          {
            "Text": ") notation is documented in the C standard and in the POSIX specification for "
          },
          {
            "Text": "printf()",
            "AttrFlags": 2,
            "Link": "http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html"
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714609,
        "id": "dfb68cb4-a09f-4517-9dc5-5f82f1ad54d5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714609,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The double argument representing a floating-point number shall be converted in the style f or e (or in the style F or E in the case of a G conversion specifier), depending on the value converted and the precision. Let P equal the precision if non-zero, 6 if the precision is omitted, or 1 if the precision is zero. Then, if a conversion with style E would have an exponent of X:"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The double argument representing a floating-point number shall be converted in the style f or e (or in the style F or E in the case of a G conversion specifier), depending on the value converted and the precision. Let P equal the precision if non-zero, 6 if the precision is omitted, or 1 if the precision is zero. Then, if a conversion with style E would have an exponent of X:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714610,
        "id": "0978e93b-ca31-4bf1-b225-a8abe72a12db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714610,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "type": "quote",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714610,
        "id": "750c5e48-fec9-4077-875c-26ade697fe4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714610,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If P \u003e X \u003e= -4, the conversion shall be with style "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or "
            ],
            [
              "F",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and precision "
            ],
            [
              "P - (X+1)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If P \u003e X \u003e= -4, the conversion shall be with style "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " (or "
          },
          {
            "Text": "F",
            "AttrFlags": 2
          },
          {
            "Text": ") and precision "
          },
          {
            "Text": "P - (X+1)",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714610,
        "id": "c693d42c-bf93-4685-aa91-ddad7d3e33b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714610,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Otherwise, the conversion shall be with style "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (or "
            ],
            [
              "E",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and precision "
            ],
            [
              "P - 1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Otherwise, the conversion shall be with style "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " (or "
          },
          {
            "Text": "E",
            "AttrFlags": 2
          },
          {
            "Text": ") and precision "
          },
          {
            "Text": "P - 1",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936714610,
        "id": "cbabed59-de63-4f57-babc-3bcd256aa946",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936714610,
        "parent_id": "a9990e67-cd93-4e5e-a853-0b1d120a6f8c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, unless the ‘#’ flag is used, any trailing zeros shall be removed from the fractional portion of the result and the decimal-point character shall be removed if there is no fractional portion remaining."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, unless the ‘#’ flag is used, any trailing zeros shall be removed from the fractional portion of the result and the decimal-point character shall be removed if there is no fractional portion remaining."
          }
        ]
      }
    ],
    "title": "Conversion Specifiers for printing",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}