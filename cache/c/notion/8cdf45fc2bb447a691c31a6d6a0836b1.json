{
  "ID": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
  "Root": {
    "alive": true,
    "content": [
      "ee55d715-62eb-4a45-939c-cdb535ba0754",
      "8374021d-0715-4575-835d-48134891f7c2",
      "61a66736-192d-4347-b1ef-1a734886ba03",
      "a3aefc9a-f3a9-43b3-ab97-1a25bc82b61a",
      "27dba4a2-b27a-490b-98aa-661da0dc40eb",
      "0fbab1e3-bd7b-4047-8c34-53fa558c991c",
      "6d256fc7-81dc-46fa-a72a-82cd46ba8b32",
      "3f527f19-04f3-41b9-af92-c813ce80a7d4",
      "b75847b6-a948-42a2-8d60-3e6b46a023cb",
      "7bf548ef-33ee-44a5-99f2-72b199787ebc",
      "8785a84a-7fb4-4f61-be74-2af793f70c03"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936307633,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936307633,
    "parent_id": "9104b65f-88ef-4b77-89d3-248fa4934ff0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "When are bit-fields useful"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307629,
        "id": "ee55d715-62eb-4a45-939c-cdb535ba0754",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307629,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A bit-field is used to club together many variables into one object, similar to a structure. This allows for reduced memory usage and is especially useful in an embedded environment."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A bit-field is used to club together many variables into one object, similar to a structure. This allows for reduced memory usage and is especially useful in an embedded environment."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307632,
        "id": "8374021d-0715-4575-835d-48134891f7c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307632,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "e.g. consider the following variables having the ranges as given below.\na --\u003e range 0 - 3\nb --\u003e range 0 - 1\nc --\u003e range 0 - 7\nd --\u003e range 0 - 1\ne --\u003e range 0 - 1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "e.g. consider the following variables having the ranges as given below.\na --\u003e range 0 - 3\nb --\u003e range 0 - 1\nc --\u003e range 0 - 7\nd --\u003e range 0 - 1\ne --\u003e range 0 - 1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307632,
        "id": "61a66736-192d-4347-b1ef-1a734886ba03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307632,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we declare these variables separately, then each has to be at least an 8-bit integer and the total space required will be 5 bytes. Moreover the variables will not use the entire range of an 8 bit unsigned integer (0-255). Here we can use bit-fields."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we declare these variables separately, then each has to be at least an 8-bit integer and the total space required will be 5 bytes. Moreover the variables will not use the entire range of an 8 bit unsigned integer (0-255). Here we can use bit-fields."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307632,
        "id": "a3aefc9a-f3a9-43b3-ab97-1a25bc82b61a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307632,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef struct {\n   unsigned int a:2;\n   unsigned int b:1;\n   unsigned int c:3;\n   unsigned int d:1;\n   unsigned int e:1;\n} bit_a;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef struct {\n   unsigned int a:2;\n   unsigned int b:1;\n   unsigned int c:3;\n   unsigned int d:1;\n   unsigned int e:1;\n} bit_a;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307632,
        "id": "27dba4a2-b27a-490b-98aa-661da0dc40eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307632,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The bit-fields in the structure are accessed the same as any other structure. The programmer needs to take care that the variables are written in range. If out of range the behaviour is undefined."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The bit-fields in the structure are accessed the same as any other structure. The programmer needs to take care that the variables are written in range. If out of range the behaviour is undefined."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307632,
        "id": "0fbab1e3-bd7b-4047-8c34-53fa558c991c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307632,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int main(void)\n{\n   bit_a bita_var;\n   bita_var.a = 2;              // to write into element a\n   printf (\"%d\",bita_var.a);    // to read from element a.\n   return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int main(void)\n{\n   bit_a bita_var;\n   bita_var.a = 2;              // to write into element a\n   printf (\"%d\",bita_var.a);    // to read from element a.\n   return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307632,
        "id": "6d256fc7-81dc-46fa-a72a-82cd46ba8b32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307632,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Often the programmer wants to zero the set of bit-fields. This can be done element by element, but there is second method. Simply create a union of the structure above with an unsigned type that is greater than, or equal to, the size of the structure. Then the entire set of bit-fields may be zeroed by zeroing this unsigned integer."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Often the programmer wants to zero the set of bit-fields. This can be done element by element, but there is second method. Simply create a union of the structure above with an unsigned type that is greater than, or equal to, the size of the structure. Then the entire set of bit-fields may be zeroed by zeroing this unsigned integer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307633,
        "id": "3f527f19-04f3-41b9-af92-c813ce80a7d4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307633,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef union {\n    struct {\n       unsigned int a:2;\n       unsigned int b:1;\n       unsigned int c:3;\n       unsigned int d:1;\n       unsigned int e:1;\n    };\n    uint8_t data;\n} union_bit;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef union {\n    struct {\n       unsigned int a:2;\n       unsigned int b:1;\n       unsigned int c:3;\n       unsigned int d:1;\n       unsigned int e:1;\n    };\n    uint8_t data;\n} union_bit;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307633,
        "id": "b75847b6-a948-42a2-8d60-3e6b46a023cb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307633,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage is as follows"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage is as follows"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307633,
        "id": "7bf548ef-33ee-44a5-99f2-72b199787ebc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307633,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int main(void)\n{\n   union_bit un_bit;\n   un_bit.data = 0x00;        // clear the whole bit-field\n   un_bit.a = 2;              // write into element a\n   printf (\"%d\",un_bit.a);    // read from element a.\n   return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int main(void)\n{\n   union_bit un_bit;\n   un_bit.data = 0x00;        // clear the whole bit-field\n   un_bit.a = 2;              // write into element a\n   printf (\"%d\",un_bit.a);    // read from element a.\n   return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936307633,
        "id": "8785a84a-7fb4-4f61-be74-2af793f70c03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936307633,
        "parent_id": "8cdf45fc-2bb4-47a6-91c3-1a6d6a0836b1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In conclusion, bit-fields are commonly used in memory constrained situations where you have a lot of variables which can take on limited ranges."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In conclusion, bit-fields are commonly used in memory constrained situations where you have a lot of variables which can take on limited ranges."
          }
        ]
      }
    ],
    "title": "When are bit-fields useful",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}