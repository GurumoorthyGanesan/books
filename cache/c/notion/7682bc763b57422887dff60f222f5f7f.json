{
  "ID": "7682bc76-3b57-4228-87df-f60f222f5f7f",
  "Root": {
    "alive": true,
    "content": [
      "7f3f3abc-647f-45de-8411-7e13b43bbf26",
      "8dd217f8-7f5c-4f3d-b060-e5b44cb98479",
      "2831378c-43e3-4d9b-9caf-efe76a3a5c0d",
      "0db03ed9-c59f-4acd-bc6b-f94ace52cb5d",
      "5fb6527e-1f62-48c1-b786-7963a36f6f5b",
      "07f80854-e519-481a-a865-174a64646122",
      "59aeab6b-d434-485a-857a-89dd076f4ba5",
      "747af16b-18f5-420e-9d91-6491f17f7f2f",
      "fa753c9b-40d3-4e2d-9141-d79116dc39b8",
      "f1afe79f-3915-4fe6-8c14-a88d9e6876f2",
      "bbdb4092-c1a4-4e08-acdb-f5dec5462fc4",
      "77c66a5d-c7c9-42aa-bcbc-3e3479f13b12",
      "08568a40-d5df-4339-83df-24ddbea882a8",
      "c8b251f3-8a14-4c89-9e47-cafc4d85ce3f",
      "ced0ad79-6a42-46d2-afc1-19cde11a795b",
      "6bc4b315-9b40-4f4a-82df-be727b58e9bc",
      "510dfa2f-3e2d-48c2-9108-008842fdc0ce",
      "5f045bfc-cd93-459a-9bef-77754cf45467",
      "4812c5f9-c81a-4511-ad99-1ce61a4de226",
      "577f5f0c-b52f-4ad2-821a-855b3fefcde3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936796364,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936796364,
    "parent_id": "5e44bd54-3362-4b1a-934b-acecce2afc7f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "alloca allocate memory on stack"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796352,
        "id": "7f3f3abc-647f-45de-8411-7e13b43bbf26",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796352,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Caveat: "
            ],
            [
              "alloca",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is only mentioned here for the sake of completeness. It is entirely non-portable (not covered by any of the common standards) and has a number of potentially dangerous features that make it un-safe for the unaware. Modern C code should replace it with "
            ],
            [
              "Variable Length Arrays",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " (VLA)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Caveat: "
          },
          {
            "Text": "alloca",
            "AttrFlags": 2
          },
          {
            "Text": " is only mentioned here for the sake of completeness. It is entirely non-portable (not covered by any of the common standards) and has a number of potentially dangerous features that make it un-safe for the unaware. Modern C code should replace it with "
          },
          {
            "Text": "Variable Length Arrays",
            "AttrFlags": 4
          },
          {
            "Text": " (VLA)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796357,
        "id": "8dd217f8-7f5c-4f3d-b060-e5b44cb98479",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796357,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Manual page",
              [
                [
                  "a",
                  "https://linux.die.net/man/3/alloca"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Manual page",
            "Link": "https://linux.die.net/man/3/alloca"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796357,
        "id": "2831378c-43e3-4d9b-9caf-efe76a3a5c0d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796357,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003calloca.h\u003e\n// glibc version of stdlib.h include alloca.h by default\n\nvoid foo(int size) {\n    char *data = alloca(size);\n    /*\n      function body;\n    */\n    // data is automatically freed\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003calloca.h\u003e\n// glibc version of stdlib.h include alloca.h by default\n\nvoid foo(int size) {\n    char *data = alloca(size);\n    /*\n      function body;\n    */\n    // data is automatically freed\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796357,
        "id": "0db03ed9-c59f-4acd-bc6b-f94ace52cb5d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796357,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Allocate memory on the stack frame of the caller, the space referenced by the returned pointer is automatically "
            ],
            [
              "free",
              [
                [
                  "a",
                  "https://linux.die.net/man/3/free"
                ]
              ]
            ],
            [
              "’d when the caller function finishes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Allocate memory on the stack frame of the caller, the space referenced by the returned pointer is automatically "
          },
          {
            "Text": "free",
            "Link": "https://linux.die.net/man/3/free"
          },
          {
            "Text": "’d when the caller function finishes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796358,
        "id": "5fb6527e-1f62-48c1-b786-7963a36f6f5b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796358,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While this function is convenient for automatic memory management, be aware that requesting large allocation could cause a stack overflow, and that you cannot use "
            ],
            [
              "free",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://linux.die.net/man/3/free"
                ]
              ]
            ],
            [
              " with memory allocated with "
            ],
            [
              "alloca",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://linux.die.net/man/3/alloca"
                ]
              ]
            ],
            [
              " (which could cause more issue with stack overflow)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While this function is convenient for automatic memory management, be aware that requesting large allocation could cause a stack overflow, and that you cannot use "
          },
          {
            "Text": "free",
            "AttrFlags": 2,
            "Link": "https://linux.die.net/man/3/free"
          },
          {
            "Text": " with memory allocated with "
          },
          {
            "Text": "alloca",
            "AttrFlags": 2,
            "Link": "https://linux.die.net/man/3/alloca"
          },
          {
            "Text": " (which could cause more issue with stack overflow)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796358,
        "id": "07f80854-e519-481a-a865-174a64646122",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796358,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For these reason it is not recommended to use "
            ],
            [
              "alloca",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://linux.die.net/man/3/alloca"
                ]
              ]
            ],
            [
              " inside a loop nor a recursive function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For these reason it is not recommended to use "
          },
          {
            "Text": "alloca",
            "AttrFlags": 2,
            "Link": "https://linux.die.net/man/3/alloca"
          },
          {
            "Text": " inside a loop nor a recursive function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796359,
        "id": "59aeab6b-d434-485a-857a-89dd076f4ba5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796359,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And because the memory is "
            ],
            [
              "free",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://linux.die.net/man/3/free"
                ]
              ]
            ],
            [
              "’d upon function return you cannot return the pointer as a function result ("
            ],
            [
              "the behavior would be undefined",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/364/undefined-behavior"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And because the memory is "
          },
          {
            "Text": "free",
            "AttrFlags": 2,
            "Link": "https://linux.die.net/man/3/free"
          },
          {
            "Text": "’d upon function return you cannot return the pointer as a function result ("
          },
          {
            "Text": "the behavior would be undefined",
            "Link": "http://stackoverflow.com/documentation/c/364/undefined-behavior"
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796359,
        "id": "747af16b-18f5-420e-9d91-6491f17f7f2f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796359,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Summary"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Summary"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796360,
        "id": "fa753c9b-40d3-4e2d-9141-d79116dc39b8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796360,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "call identical to "
            ],
            [
              "malloc",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://linux.die.net/man/3/malloc"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "call identical to "
          },
          {
            "Text": "malloc",
            "AttrFlags": 2,
            "Link": "https://linux.die.net/man/3/malloc"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796360,
        "id": "f1afe79f-3915-4fe6-8c14-a88d9e6876f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796360,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "automatically free’d upon function return"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "automatically free’d upon function return"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796361,
        "id": "bbdb4092-c1a4-4e08-acdb-f5dec5462fc4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796361,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "incompatible with "
            ],
            [
              "free",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://linux.die.net/man/3/free"
                ]
              ]
            ],
            [
              ","
            ],
            [
              "realloc",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://linux.die.net/man/3/realloc"
                ]
              ]
            ],
            [
              " functions ("
            ],
            [
              "undefined behavior",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/364/undefined-behavior"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "incompatible with "
          },
          {
            "Text": "free",
            "AttrFlags": 2,
            "Link": "https://linux.die.net/man/3/free"
          },
          {
            "Text": ","
          },
          {
            "Text": "realloc",
            "AttrFlags": 2,
            "Link": "https://linux.die.net/man/3/realloc"
          },
          {
            "Text": " functions ("
          },
          {
            "Text": "undefined behavior",
            "Link": "http://stackoverflow.com/documentation/c/364/undefined-behavior"
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796362,
        "id": "77c66a5d-c7c9-42aa-bcbc-3e3479f13b12",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796362,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "pointer cannot be returned as a function result ("
            ],
            [
              "undefined behavior",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/c/364/undefined-behavior"
                ]
              ]
            ],
            [
              ")"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "pointer cannot be returned as a function result ("
          },
          {
            "Text": "undefined behavior",
            "Link": "http://stackoverflow.com/documentation/c/364/undefined-behavior"
          },
          {
            "Text": ")"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796362,
        "id": "08568a40-d5df-4339-83df-24ddbea882a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796362,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "allocation size limited by stack space, which (on most machines) is a lot smaller than the heap space available for use by "
            ],
            [
              "malloc()",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "allocation size limited by stack space, which (on most machines) is a lot smaller than the heap space available for use by "
          },
          {
            "Text": "malloc()",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796362,
        "id": "c8b251f3-8a14-4c89-9e47-cafc4d85ce3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796362,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "avoid using "
            ],
            [
              "alloca()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and VLAs (variable length arrays) in a single function"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "avoid using "
          },
          {
            "Text": "alloca()",
            "AttrFlags": 2
          },
          {
            "Text": " and VLAs (variable length arrays) in a single function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796363,
        "id": "ced0ad79-6a42-46d2-afc1-19cde11a795b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796363,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "alloca()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not as portable as "
            ],
            [
              "malloc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " et al"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "alloca()",
            "AttrFlags": 2
          },
          {
            "Text": " is not as portable as "
          },
          {
            "Text": "malloc()",
            "AttrFlags": 2
          },
          {
            "Text": " et al"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796363,
        "id": "6bc4b315-9b40-4f4a-82df-be727b58e9bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796363,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Recommendation"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Recommendation"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796363,
        "id": "510dfa2f-3e2d-48c2-9108-008842fdc0ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796363,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Do not use "
            ],
            [
              "alloca()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in new code"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Do not use "
          },
          {
            "Text": "alloca()",
            "AttrFlags": 2
          },
          {
            "Text": " in new code"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796363,
        "id": "5f045bfc-cd93-459a-9bef-77754cf45467",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796363,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Modern alternative."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Modern alternative."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796363,
        "id": "4812c5f9-c81a-4511-ad99-1ce61a4de226",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796363,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void foo(int size) {\n    char data[size];\n    /*\n      function body;\n    */\n    // data is automatically freed\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void foo(int size) {\n    char data[size];\n    /*\n      function body;\n    */\n    // data is automatically freed\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936796364,
        "id": "577f5f0c-b52f-4ad2-821a-855b3fefcde3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936796364,
        "parent_id": "7682bc76-3b57-4228-87df-f60f222f5f7f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This works where "
            ],
            [
              "alloca()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does, and works in places where "
            ],
            [
              "alloca()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " doesn’t (inside loops, for example). It does assume either a C99 implementation or a C11 implementation that does not define "
            ],
            [
              "__STDC_NO_VLA__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This works where "
          },
          {
            "Text": "alloca()",
            "AttrFlags": 2
          },
          {
            "Text": " does, and works in places where "
          },
          {
            "Text": "alloca()",
            "AttrFlags": 2
          },
          {
            "Text": " doesn’t (inside loops, for example). It does assume either a C99 implementation or a C11 implementation that does not define "
          },
          {
            "Text": "__STDC_NO_VLA__",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "alloca allocate memory on stack",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}