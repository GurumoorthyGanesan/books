{
  "ID": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
  "Root": {
    "alive": true,
    "content": [
      "14fb6307-7560-4f3c-9b59-f52bf9b98f7a",
      "7358a219-051f-42d3-a577-6d7dccb4189d",
      "5f1ab6ff-7a8c-4731-a02d-3382a0fcc96f",
      "6ec82a4a-2fc9-4453-ab3b-9c8f31bb98e2",
      "f7eadf3c-d358-419a-85c1-0086c5f9b0dd",
      "3bda5d39-9f2e-4d77-b169-33dd729bb422",
      "8940f152-da1b-4027-9d17-c6f13bafbeab",
      "7c1f303b-aff5-4538-9e7d-dd732bf0c154",
      "c70d7084-3d1e-4402-82df-31947d77ca79",
      "b1a17787-8248-4fd8-b7fc-31b16cde35cd",
      "89210d70-8e71-4bd2-80c6-f87c9deaa225"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551937205651,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551937205651,
    "parent_id": "f0f16c22-34d6-4125-8a87-63fdd135ef20",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Typedef enum"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205646,
        "id": "14fb6307-7560-4f3c-9b59-f52bf9b98f7a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205646,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are several possibilities and conventions to name an enumeration. The first is to use a "
            ],
            [
              "tag name",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " just after the "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are several possibilities and conventions to name an enumeration. The first is to use a "
          },
          {
            "Text": "tag name",
            "AttrFlags": 4
          },
          {
            "Text": " just after the "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " keyword."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205648,
        "id": "7358a219-051f-42d3-a577-6d7dccb4189d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205648,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum color\n{ \n    RED, \n    GREEN, \n    BLUE \n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum color\n{ \n    RED, \n    GREEN, \n    BLUE \n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205648,
        "id": "5f1ab6ff-7a8c-4731-a02d-3382a0fcc96f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205648,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This enumeration must then always be used with the keyword "
            ],
            [
              "and",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the tag like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This enumeration must then always be used with the keyword "
          },
          {
            "Text": "and",
            "AttrFlags": 4
          },
          {
            "Text": " the tag like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205648,
        "id": "6ec82a4a-2fc9-4453-ab3b-9c8f31bb98e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205648,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum color chosenColor = RED;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum color chosenColor = RED;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205649,
        "id": "f7eadf3c-d358-419a-85c1-0086c5f9b0dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205649,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we use "
            ],
            [
              "typedef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " directly when declaring the "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we can omit the tag name and then use the type without the "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we use "
          },
          {
            "Text": "typedef",
            "AttrFlags": 2
          },
          {
            "Text": " directly when declaring the "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": ", we can omit the tag name and then use the type without the "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " keyword:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205649,
        "id": "3bda5d39-9f2e-4d77-b169-33dd729bb422",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205649,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef enum \n{ \n    RED, \n    GREEN, \n    BLUE \n} color;\n\ncolor chosenColor = RED;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef enum \n{ \n    RED, \n    GREEN, \n    BLUE \n} color;\n\ncolor chosenColor = RED;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205650,
        "id": "8940f152-da1b-4027-9d17-c6f13bafbeab",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205650,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But in this latter case we cannot use it as "
            ],
            [
              "enum color",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", because we didnâ€™t use the tag name in the definition. One common convention is to use both, such that the same name can be used with or without "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword. This has the particular advantage of being compatible with "
            ],
            [
              "C++",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%2B%2B/topics"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But in this latter case we cannot use it as "
          },
          {
            "Text": "enum color",
            "AttrFlags": 2
          },
          {
            "Text": ", because we didnâ€™t use the tag name in the definition. One common convention is to use both, such that the same name can be used with or without "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " keyword. This has the particular advantage of being compatible with "
          },
          {
            "Text": "C++",
            "Link": "https://stackoverflow.com/documentation/c%2B%2B/topics"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205651,
        "id": "7c1f303b-aff5-4538-9e7d-dd732bf0c154",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205651,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum color                /* as in the first example */\n{ \n    RED, \n    GREEN, \n    BLUE \n};\ntypedef enum color color; /* also a typedef of same identifier */\n\ncolor chosenColor  = RED;\nenum color defaultColor = BLUE;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum color                /* as in the first example */\n{ \n    RED, \n    GREEN, \n    BLUE \n};\ntypedef enum color color; /* also a typedef of same identifier */\n\ncolor chosenColor  = RED;\nenum color defaultColor = BLUE;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205651,
        "id": "c70d7084-3d1e-4402-82df-31947d77ca79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205651,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205651,
        "id": "b1a17787-8248-4fd8-b7fc-31b16cde35cd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205651,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void printColor()\n{\n    if (chosenColor == RED)\n    {\n        printf(\"RED\\n\");\n    }\n    else if (chosenColor == GREEN)\n    {\n        printf(\"GREEN\\n\");    \n    }\n    else if (chosenColor == BLUE)\n    {\n        printf(\"BLUE\\n\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void printColor()\n{\n    if (chosenColor == RED)\n    {\n        printf(\"RED\\n\");\n    }\n    else if (chosenColor == GREEN)\n    {\n        printf(\"GREEN\\n\");    \n    }\n    else if (chosenColor == BLUE)\n    {\n        printf(\"BLUE\\n\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937205651,
        "id": "89210d70-8e71-4bd2-80c6-f87c9deaa225",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937205651,
        "parent_id": "72ab6950-6b71-43de-9fbc-cfbb397bc224",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more on "
            ],
            [
              "typedef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " see https://stackoverflow.com/documentation/c/2681/typedef"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more on "
          },
          {
            "Text": "typedef",
            "AttrFlags": 2
          },
          {
            "Text": " see https://stackoverflow.com/documentation/c/2681/typedef"
          }
        ]
      }
    ],
    "title": "Typedef enum",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}