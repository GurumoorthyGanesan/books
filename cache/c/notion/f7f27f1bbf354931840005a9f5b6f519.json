{
  "ID": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
  "Root": {
    "alive": true,
    "content": [
      "fe7e6833-6c91-452b-82fa-40fca294eb84",
      "bfbda7b5-1535-4cb5-a920-db724af6ec10",
      "e330bb07-777b-408f-ad54-1ae53e4ecb0e",
      "70f4ed6a-4cdc-4633-b832-d32f3db33e0b",
      "f993d1b5-159a-40d2-b806-26ca58bb40a2",
      "86bc05ac-62db-4dbd-b679-8403cf33581d",
      "80ee9280-77f6-4f6c-b26f-91c7d57e14bb",
      "d114f0bb-7c87-4940-8b3f-7ac7bbfb1205",
      "11e3e507-ef1b-48a7-a9dc-123e28e2ea14",
      "929db994-98a4-4970-b319-678f632ddae5",
      "b6737738-94b8-48d7-83cc-a11bba4ffa3e",
      "a1cb7132-bd57-414c-853c-dd0ac9cfab90",
      "8d1d48ac-2028-4f9f-94ee-0e50c33e06c8",
      "c7097058-1080-48d5-b09d-2815e464b4f9",
      "47e173d4-0d38-4729-97a8-c02cf9de4a7f",
      "c8feeca4-65ec-4ada-a4f5-be3aa874615d",
      "dc2be2e6-8bc7-4ae2-b4b8-0f41ca8b6e3c",
      "c516a260-deee-46b1-abe9-fa64bf88f721",
      "ebf9b85a-7a24-40bf-bedb-c22a3e0c3d0a",
      "b0793d07-9a89-45f1-904b-2c1db53540e8",
      "c2615b37-659c-4aa7-9d28-6751456a5690",
      "6d856c3f-6f47-4abe-a18f-587c7bb739e4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936321295,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936321295,
    "parent_id": "f3ac34eb-110d-486b-9e30-6bd30082bba0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Tokenisation strtok strtok r and strtok s"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321286,
        "id": "fe7e6833-6c91-452b-82fa-40fca294eb84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321286,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The function "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " breaks a string into a smaller strings, or tokens, using a set of delimiters."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The function "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " breaks a string into a smaller strings, or tokens, using a set of delimiters."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321288,
        "id": "bfbda7b5-1535-4cb5-a920-db724af6ec10",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321288,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n\nint main(void)\n{\n    int toknum = 0;\n    char src[] = \"Hello,, world!\";\n    const char delimiters[] = \", !\";\n    char *token = strtok(src, delimiters);\n    while (token != NULL)\n    {\n        printf(\"%d: [%s]\\n\", ++toknum, token);\n        token = strtok(NULL, delimiters);\n    }\n    /* source is now \"Hello\\0, world\\0\\0\" */\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n\nint main(void)\n{\n    int toknum = 0;\n    char src[] = \"Hello,, world!\";\n    const char delimiters[] = \", !\";\n    char *token = strtok(src, delimiters);\n    while (token != NULL)\n    {\n        printf(\"%d: [%s]\\n\", ++toknum, token);\n        token = strtok(NULL, delimiters);\n    }\n    /* source is now \"Hello\\0, world\\0\\0\" */\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321289,
        "id": "e330bb07-777b-408f-ad54-1ae53e4ecb0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321289,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321289,
        "id": "70f4ed6a-4cdc-4633-b832-d32f3db33e0b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321289,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "1: [Hello]\n2: [world]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "1: [Hello]\n2: [world]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321289,
        "id": "f993d1b5-159a-40d2-b806-26ca58bb40a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321289,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The string of delimiters may contain one or more delimiters and different delimiter strings may be used with each call to "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The string of delimiters may contain one or more delimiters and different delimiter strings may be used with each call to "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321289,
        "id": "86bc05ac-62db-4dbd-b679-8403cf33581d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321289,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Calls to "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to continue tokenizing the same source string should not pass the source string again, but instead pass "
            ],
            [
              "NULL",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as the first argument. If the same source string "
            ],
            [
              "is",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " passed then the first token will instead be re-tokenized. That is, given the same delimiters, "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would simply return the first token again."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Calls to "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " to continue tokenizing the same source string should not pass the source string again, but instead pass "
          },
          {
            "Text": "NULL",
            "AttrFlags": 2
          },
          {
            "Text": " as the first argument. If the same source string "
          },
          {
            "Text": "is",
            "AttrFlags": 4
          },
          {
            "Text": " passed then the first token will instead be re-tokenized. That is, given the same delimiters, "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " would simply return the first token again."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321290,
        "id": "80ee9280-77f6-4f6c-b26f-91c7d57e14bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321290,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that as "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does not allocate new memory for the tokens, "
            ],
            [
              "it modifies the source string",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". That is, in the above example, the string "
            ],
            [
              "src",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be manipulated to produce the tokens that are referenced by the pointer returned by the calls to "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This means that the source string cannot be "
            ],
            [
              "const",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (so it can’t be a string literal). It also means that the identity of the delimiting byte is lost (i.e. in the example the “,” and “!” are effectively deleted from the source string and you cannot tell which delimiter character matched)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that as "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " does not allocate new memory for the tokens, "
          },
          {
            "Text": "it modifies the source string",
            "AttrFlags": 4
          },
          {
            "Text": ". That is, in the above example, the string "
          },
          {
            "Text": "src",
            "AttrFlags": 2
          },
          {
            "Text": " will be manipulated to produce the tokens that are referenced by the pointer returned by the calls to "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": ". This means that the source string cannot be "
          },
          {
            "Text": "const",
            "AttrFlags": 2
          },
          {
            "Text": " (so it can’t be a string literal). It also means that the identity of the delimiting byte is lost (i.e. in the example the “,” and “!” are effectively deleted from the source string and you cannot tell which delimiter character matched)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321290,
        "id": "d114f0bb-7c87-4940-8b3f-7ac7bbfb1205",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321290,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note also that multiple consecutive delimiters in the source string are treated as one; in the example, the second comma is ignored."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note also that multiple consecutive delimiters in the source string are treated as one; in the example, the second comma is ignored."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321290,
        "id": "11e3e507-ef1b-48a7-a9dc-123e28e2ea14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321290,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is neither thread safe nor re-entrant because it uses a static buffer while parsing. This means that if a function calls "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", no function that it calls while it is using "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can also use "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and it cannot be called by any function that is itself using "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " is neither thread safe nor re-entrant because it uses a static buffer while parsing. This means that if a function calls "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": ", no function that it calls while it is using "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " can also use "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": ", and it cannot be called by any function that is itself using "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321290,
        "id": "929db994-98a4-4970-b319-678f632ddae5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321290,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example that demonstrates the problems caused by the fact that "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "is not re-entrant is as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example that demonstrates the problems caused by the fact that "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": "is not re-entrant is as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321291,
        "id": "b6737738-94b8-48d7-83cc-a11bba4ffa3e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321291,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "char src[] = \"1.2,3.5,4.2\";\nchar *first = strtok(src, \",\"); \n\ndo \n{\n    char *part;\n    /* Nested calls to strtok do not work as desired */\n    printf(\"[%s]\\n\", first);\n    part = strtok(first, \".\");\n    while (part != NULL)\n    {\n        printf(\" [%s]\\n\", part);\n        part = strtok(NULL, \".\");\n    }\n} while ((first = strtok(NULL, \",\")) != NULL);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "char src[] = \"1.2,3.5,4.2\";\nchar *first = strtok(src, \",\"); \n\ndo \n{\n    char *part;\n    /* Nested calls to strtok do not work as desired */\n    printf(\"[%s]\\n\", first);\n    part = strtok(first, \".\");\n    while (part != NULL)\n    {\n        printf(\" [%s]\\n\", part);\n        part = strtok(NULL, \".\");\n    }\n} while ((first = strtok(NULL, \",\")) != NULL);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321291,
        "id": "a1cb7132-bd57-414c-853c-dd0ac9cfab90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321291,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321291,
        "id": "8d1d48ac-2028-4f9f-94ee-0e50c33e06c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321291,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[1.2]\n [1]\n [2]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[1.2]\n [1]\n [2]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321291,
        "id": "c7097058-1080-48d5-b09d-2815e464b4f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321291,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The expected operation is that the outer "
            ],
            [
              "do while",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop should create three tokens consisting of each decimal number string ("
            ],
            [
              "\"1.2\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\"3.5\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\"4.2\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), for each of which the "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " calls for the inner loop should split it into separate digit strings ("
            ],
            [
              "\"1\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\"2\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\"3\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\"5\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\"4\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "\"2\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The expected operation is that the outer "
          },
          {
            "Text": "do while",
            "AttrFlags": 2
          },
          {
            "Text": " loop should create three tokens consisting of each decimal number string ("
          },
          {
            "Text": "\"1.2\"",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\"3.5\"",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\"4.2\"",
            "AttrFlags": 2
          },
          {
            "Text": "), for each of which the "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " calls for the inner loop should split it into separate digit strings ("
          },
          {
            "Text": "\"1\"",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\"2\"",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\"3\"",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\"5\"",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\"4\"",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "\"2\"",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321292,
        "id": "47e173d4-0d38-4729-97a8-c02cf9de4a7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321292,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, because "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not re-entrant, this does not occur. Instead the first "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " correctly creates the “1.2\\0” token, and the inner loop correctly creates the tokens "
            ],
            [
              "\"1\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "\"2\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". But then the "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the outer loop is at the end of the string used by the inner loop, and returns NULL immediately. The second and third substrings of the "
            ],
            [
              "src",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " array are not analyzed at all."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, because "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " is not re-entrant, this does not occur. Instead the first "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " correctly creates the “1.2\\0” token, and the inner loop correctly creates the tokens "
          },
          {
            "Text": "\"1\"",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "\"2\"",
            "AttrFlags": 2
          },
          {
            "Text": ". But then the "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " in the outer loop is at the end of the string used by the inner loop, and returns NULL immediately. The second and third substrings of the "
          },
          {
            "Text": "src",
            "AttrFlags": 2
          },
          {
            "Text": " array are not analyzed at all."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321294,
        "id": "c8feeca4-65ec-4ada-a4f5-be3aa874615d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321294,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The standard C libraries do not contain a thread-safe or re-entrant version but some others do, such as POSIX’ "
            ],
            [
              "strtok_r",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://pubs.opengroup.org/onlinepubs/9699919799/functions/strtok_r.html"
                ]
              ]
            ],
            [
              ". Note that on MSVC the "
            ],
            [
              "strtok",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " equivalent, "
            ],
            [
              "strtok_s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is thread-safe."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The standard C libraries do not contain a thread-safe or re-entrant version but some others do, such as POSIX’ "
          },
          {
            "Text": "strtok_r",
            "AttrFlags": 2,
            "Link": "http://pubs.opengroup.org/onlinepubs/9699919799/functions/strtok_r.html"
          },
          {
            "Text": ". Note that on MSVC the "
          },
          {
            "Text": "strtok",
            "AttrFlags": 2
          },
          {
            "Text": " equivalent, "
          },
          {
            "Text": "strtok_s",
            "AttrFlags": 2
          },
          {
            "Text": " is thread-safe."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321294,
        "id": "dc2be2e6-8bc7-4ae2-b4b8-0f41ca8b6e3c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321294,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C11 has an optional part, Annex K, that offers a thread-safe and re-entrant version named "
            ],
            [
              "strtok_s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You can test for the feature with "
            ],
            [
              "__STDC_LIB_EXT1__",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This optional part is not widely supported."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C11 has an optional part, Annex K, that offers a thread-safe and re-entrant version named "
          },
          {
            "Text": "strtok_s",
            "AttrFlags": 2
          },
          {
            "Text": ". You can test for the feature with "
          },
          {
            "Text": "__STDC_LIB_EXT1__",
            "AttrFlags": 2
          },
          {
            "Text": ". This optional part is not widely supported."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321294,
        "id": "c516a260-deee-46b1-abe9-fa64bf88f721",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321294,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "strtok_s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function differs from the POSIX "
            ],
            [
              "strtok_r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function by guarding against storing outside of the string being tokenized, and by checking runtime constraints. On correctly written programs, though, the "
            ],
            [
              "strtok_s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "strtok_r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " behave the same."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "strtok_s",
            "AttrFlags": 2
          },
          {
            "Text": " function differs from the POSIX "
          },
          {
            "Text": "strtok_r",
            "AttrFlags": 2
          },
          {
            "Text": " function by guarding against storing outside of the string being tokenized, and by checking runtime constraints. On correctly written programs, though, the "
          },
          {
            "Text": "strtok_s",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "strtok_r",
            "AttrFlags": 2
          },
          {
            "Text": " behave the same."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321294,
        "id": "ebf9b85a-7a24-40bf-bedb-c22a3e0c3d0a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321294,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "strtok_s",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with the example now yields the correct response, like so:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "strtok_s",
            "AttrFlags": 2
          },
          {
            "Text": " with the example now yields the correct response, like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321295,
        "id": "b0793d07-9a89-45f1-904b-2c1db53540e8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321295,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* you have to announce that you want to use Annex K */ \n#define __STDC_WANT_LIB_EXT1__ 1\n#include \u003cstring.h\u003e\n\n#ifndef __STDC_LIB_EXT1__\n# error \"we need strtok_s from Annex K\"\n#endif\n\nchar src[] = \"1.2,3.5,4.2\";  \nchar *next = NULL;\nchar *first = strtok_s(src, \",\", \u0026next);\n\ndo \n{\n    char *part;\n    char *posn;\n\n    printf(\"[%s]\\n\", first);\n    part = strtok_s(first, \".\", \u0026posn);\n    while (part != NULL)\n    {\n        printf(\" [%s]\\n\", part);\n        part = strtok_s(NULL, \".\", \u0026posn);\n    }\n} \nwhile ((first = strtok_s(NULL, \",\", \u0026next)) != NULL);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* you have to announce that you want to use Annex K */ \n#define __STDC_WANT_LIB_EXT1__ 1\n#include \u003cstring.h\u003e\n\n#ifndef __STDC_LIB_EXT1__\n# error \"we need strtok_s from Annex K\"\n#endif\n\nchar src[] = \"1.2,3.5,4.2\";  \nchar *next = NULL;\nchar *first = strtok_s(src, \",\", \u0026next);\n\ndo \n{\n    char *part;\n    char *posn;\n\n    printf(\"[%s]\\n\", first);\n    part = strtok_s(first, \".\", \u0026posn);\n    while (part != NULL)\n    {\n        printf(\" [%s]\\n\", part);\n        part = strtok_s(NULL, \".\", \u0026posn);\n    }\n} \nwhile ((first = strtok_s(NULL, \",\", \u0026next)) != NULL);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321295,
        "id": "c2615b37-659c-4aa7-9d28-6751456a5690",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321295,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And the output will be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And the output will be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936321295,
        "id": "6d856c3f-6f47-4abe-a18f-587c7bb739e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936321295,
        "parent_id": "f7f27f1b-bf35-4931-8400-05a9f5b6f519",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[1.2]\n [1]\n [2]\n[3.5]\n [3]\n [5]\n[4.2]\n [4]\n [2]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[1.2]\n [1]\n [2]\n[3.5]\n [3]\n [5]\n[4.2]\n [4]\n [2]",
        "code_language": "Plain Text"
      }
    ],
    "title": "Tokenisation strtok strtok r and strtok s",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}