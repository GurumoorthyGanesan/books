{
  "ID": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
  "Root": {
    "alive": true,
    "content": [
      "7838eb0b-6eda-475c-b324-750ecceb4f42",
      "5e9a74e1-ef5e-4b5b-b0dd-258600e135e1",
      "9d11e6e7-4d7c-4a7e-9868-fb6a2346f225",
      "3faf59ad-88a5-49a4-8ef0-97c1f09139f3",
      "e87cab47-1178-4c3c-830f-423602cf4f7b",
      "2aff649d-1ed1-4d31-ba76-f47d02693b94",
      "74dca55a-635d-467e-b002-1c7774c178e3",
      "94d328a1-1663-41bc-959d-4b948fa935f5",
      "bd7735dd-18f8-4e64-b971-d0232260a32e",
      "2e34e8ed-2c4a-4aef-921a-c5aac10b64c4",
      "880d444e-8e88-4bea-8062-ffffaa54b1f6",
      "445ff844-17ea-41c1-811e-e4b66c2f2642",
      "e1aec92f-c36c-405b-be20-3055eccea034",
      "c110c05c-fbd1-4533-a0a3-bcae5b9afdef",
      "183e3fb9-9abf-410d-98b3-c508eb0ea21b",
      "2cc6989f-4130-4500-be78-24d4b862bad4",
      "f65be964-7a5b-4fdc-92d1-cff9fc7e5dc1",
      "615725c1-27bd-4092-906d-31698e9c2c43",
      "2c459814-ff14-4195-92a8-3f41ea6b37fb",
      "ef896128-ce5d-4404-aea5-68a866061fb8",
      "6ec68ac7-3704-416e-a369-690aa3e3c13f",
      "c1d48af9-cd7a-4b96-af50-68d1fbc326f2",
      "03d40e44-14b3-4652-b256-6af7e95ae97a",
      "5e338468-8c31-421a-8838-06d701d80bf1",
      "968257cd-5c20-47fe-aa53-e9de4542359a",
      "9bfb9a68-75bc-4a1d-947c-d131253ab435",
      "748a0ea2-81a3-4945-ad72-33c0a15c4447",
      "f84c16fe-7aaa-49b3-8e44-af22c860a453",
      "1bd6ec66-43ef-43ca-835e-4af0947f045a",
      "9342853b-7b36-4a2b-b16e-3e4a61216ce7",
      "e9eb4e4a-ffe9-4117-b5ea-b640835b994a",
      "1b33cc73-279c-4fb8-8133-66eafe918aea",
      "184e77f5-bd03-45cf-aed0-279e3c98b091",
      "fb7a54cd-4c36-49e5-98a7-2426e8fb88e1",
      "9e4e59d7-b136-460b-89a0-50a3ca58af9a",
      "03fca141-be7c-416f-8094-20df010e033f",
      "78daf1c2-5207-4d2a-a71b-b9214e3a365c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935774356,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935774356,
    "parent_id": "68e74303-cec6-4c9d-a46e-83274bc84bf4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Header Include Guards"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774350,
        "id": "7838eb0b-6eda-475c-b324-750ecceb4f42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774350,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pretty much every header file should follow the "
            ],
            [
              "include guard",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Include_guard"
                ]
              ]
            ],
            [
              " idiom:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pretty much every header file should follow the "
          },
          {
            "Text": "include guard",
            "Link": "https://en.wikipedia.org/wiki/Include_guard"
          },
          {
            "Text": " idiom:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774351,
        "id": "5e9a74e1-ef5e-4b5b-b0dd-258600e135e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774351,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "my-header-file.h",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "my-header-file.h",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774351,
        "id": "9d11e6e7-4d7c-4a7e-9868-fb6a2346f225",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774351,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#ifndef MY_HEADER_FILE_H\n#define MY_HEADER_FILE_H\n\n// Code body for header file\n\n#endif"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#ifndef MY_HEADER_FILE_H\n#define MY_HEADER_FILE_H\n\n// Code body for header file\n\n#endif",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774351,
        "id": "3faf59ad-88a5-49a4-8ef0-97c1f09139f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774351,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This ensures that when you "
            ],
            [
              "#include \"my-header-file.h\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in multiple places, you don’t get duplicate declarations of functions, variables, etc. Imagine the following hierarchy of files:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This ensures that when you "
          },
          {
            "Text": "#include \"my-header-file.h\"",
            "AttrFlags": 2
          },
          {
            "Text": " in multiple places, you don’t get duplicate declarations of functions, variables, etc. Imagine the following hierarchy of files:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774351,
        "id": "e87cab47-1178-4c3c-830f-423602cf4f7b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774351,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "header-1.h",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "header-1.h",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774351,
        "id": "2aff649d-1ed1-4d31-ba76-f47d02693b94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774351,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774351,
        "id": "74dca55a-635d-467e-b002-1c7774c178e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774351,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "header-2.h",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "header-2.h",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774351,
        "id": "94d328a1-1663-41bc-959d-4b948fa935f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774351,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \"header-1.h\"\n\nint myFunction2(MyStruct *value);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \"header-1.h\"\n\nint myFunction2(MyStruct *value);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "bd7735dd-18f8-4e64-b971-d0232260a32e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "main.c",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "main.c",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "2e34e8ed-2c4a-4aef-921a-c5aac10b64c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \"header-1.h\"\n#include \"header-2.h\"\n\nint main() {\n    // do something\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \"header-1.h\"\n#include \"header-2.h\"\n\nint main() {\n    // do something\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "880d444e-8e88-4bea-8062-ffffaa54b1f6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This code has a serious problem: the detailed contents of "
            ],
            [
              "MyStruct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is defined twice, which is not allowed. This would result in a compilation error that can be difficult to track down, since one header file includes another. If you instead did it with header guards:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This code has a serious problem: the detailed contents of "
          },
          {
            "Text": "MyStruct",
            "AttrFlags": 2
          },
          {
            "Text": " is defined twice, which is not allowed. This would result in a compilation error that can be difficult to track down, since one header file includes another. If you instead did it with header guards:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "445ff844-17ea-41c1-811e-e4b66c2f2642",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "header-1.h",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "header-1.h",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "e1aec92f-c36c-405b-be20-3055eccea034",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#ifndef HEADER_1_H\n#define HEADER_1_H\n\ntypedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);\n\n#endif"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#ifndef HEADER_1_H\n#define HEADER_1_H\n\ntypedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);\n\n#endif",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "c110c05c-fbd1-4533-a0a3-bcae5b9afdef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "header-2.h",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "header-2.h",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "183e3fb9-9abf-410d-98b3-c508eb0ea21b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#ifndef HEADER_2_H\n#define HEADER_2_H\n\n#include \"header-1.h\"\n\nint myFunction2(MyStruct *value);\n\n#endif"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#ifndef HEADER_2_H\n#define HEADER_2_H\n\n#include \"header-1.h\"\n\nint myFunction2(MyStruct *value);\n\n#endif",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "2cc6989f-4130-4500-be78-24d4b862bad4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "main.c",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "main.c",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774352,
        "id": "f65be964-7a5b-4fdc-92d1-cff9fc7e5dc1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774352,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \"header-1.h\"\n#include \"header-2.h\"\n\nint main() {\n    // do something\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \"header-1.h\"\n#include \"header-2.h\"\n\nint main() {\n    // do something\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774353,
        "id": "615725c1-27bd-4092-906d-31698e9c2c43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774353,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This would then expand to:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This would then expand to:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774353,
        "id": "2c459814-ff14-4195-92a8-3f41ea6b37fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774353,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#ifndef HEADER_1_H\n#define HEADER_1_H\n\ntypedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);\n\n#endif\n\n#ifndef HEADER_2_H\n#define HEADER_2_H\n\n#ifndef HEADER_1_H // Safe, since HEADER_1_H was #define'd before.\n#define HEADER_1_H\n\ntypedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);\n\n#endif\n\nint myFunction2(MyStruct *value);\n\n#endif\n\nint main() {\n    // do something\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#ifndef HEADER_1_H\n#define HEADER_1_H\n\ntypedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);\n\n#endif\n\n#ifndef HEADER_2_H\n#define HEADER_2_H\n\n#ifndef HEADER_1_H // Safe, since HEADER_1_H was #define'd before.\n#define HEADER_1_H\n\ntypedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);\n\n#endif\n\nint myFunction2(MyStruct *value);\n\n#endif\n\nint main() {\n    // do something\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774353,
        "id": "ef896128-ce5d-4404-aea5-68a866061fb8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774353,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the compiler reaches the second inclusion of "
            ],
            [
              "header-1.h",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "HEADER_1_H",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was already defined by the previous inclusion. Ergo, it boils down to the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the compiler reaches the second inclusion of "
          },
          {
            "Text": "header-1.h",
            "AttrFlags": 1
          },
          {
            "Text": ", "
          },
          {
            "Text": "HEADER_1_H",
            "AttrFlags": 2
          },
          {
            "Text": " was already defined by the previous inclusion. Ergo, it boils down to the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774353,
        "id": "6ec68ac7-3704-416e-a369-690aa3e3c13f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774353,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#define HEADER_1_H\n\ntypedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);\n\n#define HEADER_2_H\n\nint myFunction2(MyStruct *value);\n\nint main() {\n    // do something\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#define HEADER_1_H\n\ntypedef struct {\n    …\n} MyStruct;\n\nint myFunction(MyStruct *value);\n\n#define HEADER_2_H\n\nint myFunction2(MyStruct *value);\n\nint main() {\n    // do something\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774353,
        "id": "c1d48af9-cd7a-4b96-af50-68d1fbc326f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774353,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And thus there is no compilation error."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And thus there is no compilation error."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774353,
        "id": "03d40e44-14b3-4652-b256-6af7e95ae97a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774353,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: There are multiple different conventions for naming the header guards. Some people like to name it "
            ],
            [
              "HEADER_2_H_",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", some include the project name like "
            ],
            [
              "MY_PROJECT_HEADER_2_H",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The important thing is to ensure that the convention you follow makes it so that each file in your project has a unique header guard."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: There are multiple different conventions for naming the header guards. Some people like to name it "
          },
          {
            "Text": "HEADER_2_H_",
            "AttrFlags": 2
          },
          {
            "Text": ", some include the project name like "
          },
          {
            "Text": "MY_PROJECT_HEADER_2_H",
            "AttrFlags": 2
          },
          {
            "Text": ". The important thing is to ensure that the convention you follow makes it so that each file in your project has a unique header guard."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774353,
        "id": "5e338468-8c31-421a-8838-06d701d80bf1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774353,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774354,
        "id": "968257cd-5c20-47fe-aa53-e9de4542359a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774354,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the structure details were not included in the header, the type declared would be incomplete or an "
            ],
            [
              "opaque type",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Opaque_data_type"
                ]
              ]
            ],
            [
              ". Such types can be useful, hiding implementation details from users of the functions. For many purposes, the "
            ],
            [
              "FILE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type in the standard C library can be regarded as an opaque type (though it usually isn’t opaque so that macro implementations of the standard I/O functions can make use of the internals of the structure). In that case, the "
            ],
            [
              "header-1.h",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " could contain:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the structure details were not included in the header, the type declared would be incomplete or an "
          },
          {
            "Text": "opaque type",
            "Link": "https://en.wikipedia.org/wiki/Opaque_data_type"
          },
          {
            "Text": ". Such types can be useful, hiding implementation details from users of the functions. For many purposes, the "
          },
          {
            "Text": "FILE",
            "AttrFlags": 2
          },
          {
            "Text": " type in the standard C library can be regarded as an opaque type (though it usually isn’t opaque so that macro implementations of the standard I/O functions can make use of the internals of the structure). In that case, the "
          },
          {
            "Text": "header-1.h",
            "AttrFlags": 2
          },
          {
            "Text": " could contain:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774354,
        "id": "9bfb9a68-75bc-4a1d-947c-d131253ab435",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774354,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#ifndef HEADER_1_H\n#define HEADER_1_H\n\ntypedef struct MyStruct MyStruct;\n\nint myFunction(MyStruct *value);\n\n#endif"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#ifndef HEADER_1_H\n#define HEADER_1_H\n\ntypedef struct MyStruct MyStruct;\n\nint myFunction(MyStruct *value);\n\n#endif",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774354,
        "id": "748a0ea2-81a3-4945-ad72-33c0a15c4447",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774354,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that the structure must have a tag name (here "
            ],
            [
              "MyStruct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " — that’s in the tags namespace, separate from the ordinary identifiers namespace of the typedef name "
            ],
            [
              "MyStruct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), and that the "
            ],
            [
              "{ … }",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is omitted. This says “there is a structure type "
            ],
            [
              "struct MyStruct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and there is an alias for it "
            ],
            [
              "MyStruct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "”."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that the structure must have a tag name (here "
          },
          {
            "Text": "MyStruct",
            "AttrFlags": 2
          },
          {
            "Text": " — that’s in the tags namespace, separate from the ordinary identifiers namespace of the typedef name "
          },
          {
            "Text": "MyStruct",
            "AttrFlags": 2
          },
          {
            "Text": "), and that the "
          },
          {
            "Text": "{ … }",
            "AttrFlags": 2
          },
          {
            "Text": " is omitted. This says “there is a structure type "
          },
          {
            "Text": "struct MyStruct",
            "AttrFlags": 2
          },
          {
            "Text": " and there is an alias for it "
          },
          {
            "Text": "MyStruct",
            "AttrFlags": 2
          },
          {
            "Text": "”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774355,
        "id": "f84c16fe-7aaa-49b3-8e44-af22c860a453",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774355,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the implementation file, the details of the structure can be defined to make the type complete:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the implementation file, the details of the structure can be defined to make the type complete:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774355,
        "id": "1bd6ec66-43ef-43ca-835e-4af0947f045a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774355,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct MyStruct {\n    …\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct MyStruct {\n    …\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774355,
        "id": "9342853b-7b36-4a2b-b16e-3e4a61216ce7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774355,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you are using C11, you could repeat the "
            ],
            [
              "typedef struct MyStruct MyStruct;",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " declaration without causing a compilation error, but earlier versions of C would complain. Consequently, it is still best to use the include guard idiom, even though in this example, it would be optional if the code was only ever compiled with compilers that supported C11."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you are using C11, you could repeat the "
          },
          {
            "Text": "typedef struct MyStruct MyStruct;",
            "AttrFlags": 2
          },
          {
            "Text": " declaration without causing a compilation error, but earlier versions of C would complain. Consequently, it is still best to use the include guard idiom, even though in this example, it would be optional if the code was only ever compiled with compilers that supported C11."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774355,
        "id": "e9eb4e4a-ffe9-4117-b5ea-b640835b994a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774355,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774355,
        "id": "1b33cc73-279c-4fb8-8133-66eafe918aea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774355,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Many compilers support the "
            ],
            [
              "#pragma once",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " directive, which has the same results:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Many compilers support the "
          },
          {
            "Text": "#pragma once",
            "AttrFlags": 2
          },
          {
            "Text": " directive, which has the same results:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774355,
        "id": "184e77f5-bd03-45cf-aed0-279e3c98b091",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774355,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "my-header-file.h",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "my-header-file.h",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774355,
        "id": "fb7a54cd-4c36-49e5-98a7-2426e8fb88e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774355,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#pragma once\n\n// Code for header file"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#pragma once\n\n// Code for header file",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774355,
        "id": "9e4e59d7-b136-460b-89a0-50a3ca58af9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774355,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "However, "
            ],
            [
              "#pragma once",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not part of the C standard, so the code is less portable if you use it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "However, "
          },
          {
            "Text": "#pragma once",
            "AttrFlags": 2
          },
          {
            "Text": " is not part of the C standard, so the code is less portable if you use it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774356,
        "id": "03fca141-be7c-416f-8094-20df010e033f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774356,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935774356,
        "id": "78daf1c2-5207-4d2a-a71b-b9214e3a365c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935774356,
        "parent_id": "c45f439f-3f80-46a7-9fec-6e1e91aab4d5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A few headers do not use the include guard idiom. One specific example is the standard "
            ],
            [
              "\u003cassert.h\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " header. It may be included multiple times in a single translation unit, and the effect of doing so depends on whether the macro "
            ],
            [
              "NDEBUG",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is defined each time the header is included. You may occasionally have an analogous requirement; such cases will be few and far between. Ordinarily, your headers should be protected by the include guard idiom."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A few headers do not use the include guard idiom. One specific example is the standard "
          },
          {
            "Text": "\u003cassert.h\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " header. It may be included multiple times in a single translation unit, and the effect of doing so depends on whether the macro "
          },
          {
            "Text": "NDEBUG",
            "AttrFlags": 2
          },
          {
            "Text": " is defined each time the header is included. You may occasionally have an analogous requirement; such cases will be few and far between. Ordinarily, your headers should be protected by the include guard idiom."
          }
        ]
      }
    ],
    "title": "Header Include Guards",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}