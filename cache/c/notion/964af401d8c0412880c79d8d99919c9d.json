{
  "ID": "964af401-d8c0-4128-80c7-9d8d99919c9d",
  "Root": {
    "alive": true,
    "content": [
      "25d408ac-35ee-41aa-9346-6bcba7e75bd9",
      "b197642e-10ab-4bd2-89d0-005d7e6a893b",
      "b8a98677-58e1-45c3-844e-ab63ded167e7",
      "c42bd7e0-985f-4917-9270-05e6daaf936c",
      "61e4b2fb-a8de-4145-b399-85bb8745b057",
      "fb97ed21-46ec-42fb-a22a-7dbe76014c79",
      "02304069-b832-41d1-87fe-429b9a9fc433",
      "c487a51e-23b9-4ca3-8a0f-b0355d40273a",
      "8286fe54-eae7-4dba-888e-24cd5ea7a4cf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936638320,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936638320,
    "parent_id": "476e4bcf-2254-4ffd-82b2-b3dcbd9fdf01",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Single precision and long double precision floating-point remainder fmodf fmodl"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638318,
        "id": "25d408ac-35ee-41aa-9346-6bcba7e75bd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638318,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These functions returns the floating-point remainder of the division of "
            ],
            [
              "x/y",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The returned value has the same sign as x."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These functions returns the floating-point remainder of the division of "
          },
          {
            "Text": "x/y",
            "AttrFlags": 2
          },
          {
            "Text": ". The returned value has the same sign as x."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638319,
        "id": "b197642e-10ab-4bd2-89d0-005d7e6a893b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638319,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Single Precision:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Single Precision:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638319,
        "id": "b8a98677-58e1-45c3-844e-ab63ded167e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638319,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cmath.h\u003e /* for fmodf() */\n#include \u003cstdio.h\u003e /* for printf() */\n\nint main(void)\n{\n    float x = 10.0;\n    float y = 5.1;\n\n    float modulus = fmodf(x, y);\n\n    printf(\"%f\\n\", modulus); /* lf would do as well as modulus gets promoted to double. */\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cmath.h\u003e /* for fmodf() */\n#include \u003cstdio.h\u003e /* for printf() */\n\nint main(void)\n{\n    float x = 10.0;\n    float y = 5.1;\n\n    float modulus = fmodf(x, y);\n\n    printf(\"%f\\n\", modulus); /* lf would do as well as modulus gets promoted to double. */\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638319,
        "id": "c42bd7e0-985f-4917-9270-05e6daaf936c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638319,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638319,
        "id": "61e4b2fb-a8de-4145-b399-85bb8745b057",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638319,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "4.90000"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "4.90000",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638319,
        "id": "fb97ed21-46ec-42fb-a22a-7dbe76014c79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638319,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Double Double Precision:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Double Double Precision:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638319,
        "id": "02304069-b832-41d1-87fe-429b9a9fc433",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638319,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cmath.h\u003e /* for fmodl() */\n#include \u003cstdio.h\u003e /* for printf() */\n\nint main(void)\n{\n    long double x = 10.0;\n    long double y = 5.1;\n\n    long double modulus = fmodl(x, y);\n\n    printf(\"%Lf\\n\", modulus); /* Lf is for long double. */\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cmath.h\u003e /* for fmodl() */\n#include \u003cstdio.h\u003e /* for printf() */\n\nint main(void)\n{\n    long double x = 10.0;\n    long double y = 5.1;\n\n    long double modulus = fmodl(x, y);\n\n    printf(\"%Lf\\n\", modulus); /* Lf is for long double. */\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638320,
        "id": "c487a51e-23b9-4ca3-8a0f-b0355d40273a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638320,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936638320,
        "id": "8286fe54-eae7-4dba-888e-24cd5ea7a4cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936638320,
        "parent_id": "964af401-d8c0-4128-80c7-9d8d99919c9d",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "4.90000"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "4.90000",
        "code_language": "Plain Text"
      }
    ],
    "title": "Single precision and long double precision floating-point remainder fmodf fmodl",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}