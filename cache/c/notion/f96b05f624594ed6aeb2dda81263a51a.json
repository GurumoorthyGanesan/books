{
  "ID": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
  "Root": {
    "alive": true,
    "content": [
      "adb4dde0-6246-485b-b5d8-47723cce3899",
      "8f9ad405-fd93-4259-b263-b4a6e5202816",
      "78baa94c-7979-4e68-be9a-030b923cc48f",
      "a5f190d5-944a-4bec-878f-21d5577c9445",
      "3701a950-ae23-4220-b58e-d2b53df08533",
      "ad1aca3d-754d-4ca2-8ef8-8514d9b9ade5",
      "ca377254-a687-4ed5-a3e7-d70d063c2b67",
      "b7c9211d-c107-44e9-ab97-edd4cfd57aed"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551937262237,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551937262237,
    "parent_id": "f4f6d384-72dd-4d02-aa47-f083a22f6481",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Classifying characters from a string"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937262232,
        "id": "adb4dde0-6246-485b-b5d8-47723cce3899",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937262232,
        "parent_id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cctype.h\u003e\n#include \u003cstddef.h\u003e\n\ntypedef struct {\n  size_t space;\n  size_t alnum;\n  size_t punct;\n} chartypes;\n\nchartypes classify(const char *s) {\n  chartypes types = { 0, 0, 0 };\n  const char *p;\n  for (p= s; p != '\\0'; p++) {\n    types.space += !!isspace((unsigned char)*p);\n    types.alnum += !!isalnum((unsigned char)*p);\n    types.punct += !!ispunct((unsigned char)*p);\n  }\n\n  return types;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cctype.h\u003e\n#include \u003cstddef.h\u003e\n\ntypedef struct {\n  size_t space;\n  size_t alnum;\n  size_t punct;\n} chartypes;\n\nchartypes classify(const char *s) {\n  chartypes types = { 0, 0, 0 };\n  const char *p;\n  for (p= s; p != '\\0'; p++) {\n    types.space += !!isspace((unsigned char)*p);\n    types.alnum += !!isalnum((unsigned char)*p);\n    types.punct += !!ispunct((unsigned char)*p);\n  }\n\n  return types;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937262234,
        "id": "8f9ad405-fd93-4259-b263-b4a6e5202816",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937262234,
        "parent_id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "classify",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function examines all characters from a string and counts the number of spaces, alphanumeric and punctuation characters. It avoids several pitfalls."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "classify",
            "AttrFlags": 2
          },
          {
            "Text": " function examines all characters from a string and counts the number of spaces, alphanumeric and punctuation characters. It avoids several pitfalls."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937262235,
        "id": "78baa94c-7979-4e68-be9a-030b923cc48f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937262235,
        "parent_id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The character classification functions (e.g. "
            ],
            [
              "isspace",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") expect their argument to be "
            ],
            [
              "either representable as an ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "unsigned char",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ", or the value of the ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "EOF",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " macro",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The character classification functions (e.g. "
          },
          {
            "Text": "isspace",
            "AttrFlags": 2
          },
          {
            "Text": ") expect their argument to be "
          },
          {
            "Text": "either representable as an ",
            "AttrFlags": 4
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 6
          },
          {
            "Text": ", or the value of the ",
            "AttrFlags": 4
          },
          {
            "Text": "EOF",
            "AttrFlags": 6
          },
          {
            "Text": " macro",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937262235,
        "id": "a5f190d5-944a-4bec-878f-21d5577c9445",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937262235,
        "parent_id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The expression "
            ],
            [
              "*p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is of type "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and must therefore be converted to match the above wording."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The expression "
          },
          {
            "Text": "*p",
            "AttrFlags": 2
          },
          {
            "Text": " is of type "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " and must therefore be converted to match the above wording."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937262236,
        "id": "3701a950-ae23-4220-b58e-d2b53df08533",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937262236,
        "parent_id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type is defined to be equivalent to either "
            ],
            [
              "signed char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " type is defined to be equivalent to either "
          },
          {
            "Text": "signed char",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937262236,
        "id": "ad1aca3d-754d-4ca2-8ef8-8514d9b9ade5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937262236,
        "parent_id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is equivalent to "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", there is no problem, since every possible value of the "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type is representable as "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " is equivalent to "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": ", there is no problem, since every possible value of the "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " type is representable as "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937262236,
        "id": "ca377254-a687-4ed5-a3e7-d70d063c2b67",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937262236,
        "parent_id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is equivalent to "
            ],
            [
              "signed char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it must be converted to "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " before being passed to the character classification functions. And although the value of the character may change because of this conversion, this is exactly what these functions expect."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": " is equivalent to "
          },
          {
            "Text": "signed char",
            "AttrFlags": 2
          },
          {
            "Text": ", it must be converted to "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": " before being passed to the character classification functions. And although the value of the character may change because of this conversion, this is exactly what these functions expect."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551937262237,
        "id": "b7c9211d-c107-44e9-ab97-edd4cfd57aed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551937262237,
        "parent_id": "f96b05f6-2459-4ed6-aeb2-dda81263a51a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The return value of the character classification functions only distinguishes between zero (meaning "
            ],
            [
              "false",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and nonzero (meaning "
            ],
            [
              "true",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "). For counting the number of occurrences, this value needs to be converted to a 1 or 0, which is done by the double negation, "
            ],
            [
              "!!",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The return value of the character classification functions only distinguishes between zero (meaning "
          },
          {
            "Text": "false",
            "AttrFlags": 2
          },
          {
            "Text": ") and nonzero (meaning "
          },
          {
            "Text": "true",
            "AttrFlags": 2
          },
          {
            "Text": "). For counting the number of occurrences, this value needs to be converted to a 1 or 0, which is done by the double negation, "
          },
          {
            "Text": "!!",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Classifying characters from a string",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}