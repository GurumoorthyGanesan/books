{
  "ID": "d53c0e56-0b36-446b-913f-b23229717536",
  "Root": {
    "alive": true,
    "content": [
      "7dafcfdb-6e81-45f2-9c59-f08f9732c02e",
      "0ebb5e7c-3690-4134-85a8-a04448fa61d9",
      "8a880a3b-0d63-4ac9-b32b-1aa4c1939967",
      "f0505f30-feb4-4bb4-9131-b0ac7daa518c",
      "f448584c-c9ee-49dc-a4f7-facf5d377023",
      "84fabe10-84d9-495a-8694-fdaf0f29e35e",
      "fd3ac09b-c841-4fcd-a76d-ffb20fe10d62"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935834558,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d53c0e56-0b36-446b-913f-b23229717536",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935834558,
    "parent_id": "b81cd45f-aa26-4f19-8238-7b90dd64a769",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Simple Assertion"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935834555,
        "id": "7dafcfdb-6e81-45f2-9c59-f08f9732c02e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935834555,
        "parent_id": "d53c0e56-0b36-446b-913f-b23229717536",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An assertion is a statement used to assert that a fact must be true when that line of code is reached. Assertions are useful for ensuring that expected conditions are met. When the condition passed to an assertion is true, there is no action. The behavior on false conditions depends on compiler flags. When assertions are enabled, a false input causes an immediate program halt. When they are disabled, no action is taken. It is common practice to enable assertions in internal and debug builds, and disable them in release builds, though assertions are often enabled in release. (Whether termination is better or worse than errors depends on the program.) Assertions should be used only to catch internal programming errors, which usually means being passed bad parameters."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An assertion is a statement used to assert that a fact must be true when that line of code is reached. Assertions are useful for ensuring that expected conditions are met. When the condition passed to an assertion is true, there is no action. The behavior on false conditions depends on compiler flags. When assertions are enabled, a false input causes an immediate program halt. When they are disabled, no action is taken. It is common practice to enable assertions in internal and debug builds, and disable them in release builds, though assertions are often enabled in release. (Whether termination is better or worse than errors depends on the program.) Assertions should be used only to catch internal programming errors, which usually means being passed bad parameters."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935834557,
        "id": "0ebb5e7c-3690-4134-85a8-a04448fa61d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935834557,
        "parent_id": "d53c0e56-0b36-446b-913f-b23229717536",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n/* Uncomment to disable `assert()` */\n/* #define NDEBUG */\n#include \u003cassert.h\u003e\n\nint main(void)\n{\n    int x = -1;\n    assert(x \u003e= 0);\n\n    printf(\"x = %d\\n\", x);   \n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n/* Uncomment to disable `assert()` */\n/* #define NDEBUG */\n#include \u003cassert.h\u003e\n\nint main(void)\n{\n    int x = -1;\n    assert(x \u003e= 0);\n\n    printf(\"x = %d\\n\", x);   \n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935834557,
        "id": "8a880a3b-0d63-4ac9-b32b-1aa4c1939967",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935834557,
        "parent_id": "d53c0e56-0b36-446b-913f-b23229717536",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Possible output with "
            ],
            [
              "NDEBUG",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " undefined:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Possible output with "
          },
          {
            "Text": "NDEBUG",
            "AttrFlags": 2
          },
          {
            "Text": " undefined:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935834557,
        "id": "f0505f30-feb4-4bb4-9131-b0ac7daa518c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935834557,
        "parent_id": "d53c0e56-0b36-446b-913f-b23229717536",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "a.out: main.c:9: main: Assertion `x \u003e= 0' failed."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "a.out: main.c:9: main: Assertion `x \u003e= 0' failed.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935834558,
        "id": "f448584c-c9ee-49dc-a4f7-facf5d377023",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935834558,
        "parent_id": "d53c0e56-0b36-446b-913f-b23229717536",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Possible output with "
            ],
            [
              "NDEBUG",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " defined:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Possible output with "
          },
          {
            "Text": "NDEBUG",
            "AttrFlags": 2
          },
          {
            "Text": " defined:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935834558,
        "id": "84fabe10-84d9-495a-8694-fdaf0f29e35e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935834558,
        "parent_id": "d53c0e56-0b36-446b-913f-b23229717536",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "x = -1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "x = -1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935834558,
        "id": "fd3ac09b-c841-4fcd-a76d-ffb20fe10d62",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935834558,
        "parent_id": "d53c0e56-0b36-446b-913f-b23229717536",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s good practice to define "
            ],
            [
              "NDEBUG",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " globally, so that you can easily compile your code with all assertions either on or off. An easy way to do this is define "
            ],
            [
              "NDEBUG",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as an option to the compiler, or define it in a shared configuration header (e.g. "
            ],
            [
              "config.h",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s good practice to define "
          },
          {
            "Text": "NDEBUG",
            "AttrFlags": 2
          },
          {
            "Text": " globally, so that you can easily compile your code with all assertions either on or off. An easy way to do this is define "
          },
          {
            "Text": "NDEBUG",
            "AttrFlags": 2
          },
          {
            "Text": " as an option to the compiler, or define it in a shared configuration header (e.g. "
          },
          {
            "Text": "config.h",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      }
    ],
    "title": "Simple Assertion",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}