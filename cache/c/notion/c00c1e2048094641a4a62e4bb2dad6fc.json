{
  "ID": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
  "Root": {
    "alive": true,
    "content": [
      "cf6f8631-e4a7-4949-8bef-6f9b1d0b4c8a",
      "e87b9cc5-7d57-47ff-892a-58ea6d734212",
      "3ce6fba3-7443-4e26-9b54-ccad92b7b8ee",
      "0093e008-c1b1-4254-b6d0-f6b4bc7aab43",
      "a6b8db0c-c22a-41d8-887d-4b7c6924445b",
      "46637c00-aba8-4f53-abed-10ebfec63612",
      "01e9f31b-55ba-4cdb-9174-793458ea5e03",
      "f674dc23-c06b-4925-950f-da8b61458150",
      "ea26e7bf-5bc7-4f40-a0df-2105883fac36"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935643123,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935643123,
    "parent_id": "218cbf42-b3ba-4b2a-bdab-e522009865b7",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Short circuit behavior of logical operators"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643119,
        "id": "cf6f8631-e4a7-4949-8bef-6f9b1d0b4c8a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643119,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Short circuiting is a functionality that skips evaluating parts of a (if/while/…) condition when able. In case of a logical operation on two operands, the first operand is evaluated (to true or false) and if there is a verdict (i.e first operand is false when using \u0026\u0026, first operand is true when using ||) the second operand is not evaluated."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Short circuiting is a functionality that skips evaluating parts of a (if/while/…) condition when able. In case of a logical operation on two operands, the first operand is evaluated (to true or false) and if there is a verdict (i.e first operand is false when using \u0026\u0026, first operand is true when using ||) the second operand is not evaluated."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643122,
        "id": "e87b9cc5-7d57-47ff-892a-58ea6d734212",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643122,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643122,
        "id": "3ce6fba3-7443-4e26-9b54-ccad92b7b8ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643122,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n \nint main(void) {\n  int a = 20;\n  int b = -5;\n \n  /* here 'b == -5' is not evaluated,\n     since a 'a != 20' is false. */\n  if (a != 20 \u0026\u0026 b == -5) {\n    printf(\"I won't be printed!\\n\");\n  }\n   \n  return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n \nint main(void) {\n  int a = 20;\n  int b = -5;\n \n  /* here 'b == -5' is not evaluated,\n     since a 'a != 20' is false. */\n  if (a != 20 \u0026\u0026 b == -5) {\n    printf(\"I won't be printed!\\n\");\n  }\n   \n  return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643122,
        "id": "0093e008-c1b1-4254-b6d0-f6b4bc7aab43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643122,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Check it out yourself:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Check it out yourself:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643122,
        "id": "a6b8db0c-c22a-41d8-887d-4b7c6924445b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643122,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n\nint print(int i) {\n printf(\"print function %d\\n\", i);\n return i;\n}\n\nint main(void) {\n int a = 20;\n\n /* here 'print(a)' is not called,\n    since a 'a != 20' is false. */\n if (a != 20 \u0026\u0026 print(a)) {\n   printf(\"I won't be printed!\\n\");\n }\n\n /* here 'print(a)' is called,\n    since a 'a == 20' is true. */\n if (a == 20 \u0026\u0026 print(a)) {\n   printf(\"I will be printed!\\n\");\n }\n\n return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n\nint print(int i) {\n printf(\"print function %d\\n\", i);\n return i;\n}\n\nint main(void) {\n int a = 20;\n\n /* here 'print(a)' is not called,\n    since a 'a != 20' is false. */\n if (a != 20 \u0026\u0026 print(a)) {\n   printf(\"I won't be printed!\\n\");\n }\n\n /* here 'print(a)' is called,\n    since a 'a == 20' is true. */\n if (a == 20 \u0026\u0026 print(a)) {\n   printf(\"I will be printed!\\n\");\n }\n\n return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643122,
        "id": "46637c00-aba8-4f53-abed-10ebfec63612",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643122,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643122,
        "id": "01e9f31b-55ba-4cdb-9174-793458ea5e03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643122,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$ ./a.out\nprint function 20\nI will be printed!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$ ./a.out\nprint function 20\nI will be printed!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643122,
        "id": "f674dc23-c06b-4925-950f-da8b61458150",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643122,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935643123,
        "id": "ea26e7bf-5bc7-4f40-a0df-2105883fac36",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935643123,
        "parent_id": "c00c1e20-4809-4641-a4a6-2e4bb2dad6fc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Short circuiting is important, when you want to avoid evaluating terms that are (computationally) costly. Moreover, it can heavily affect the flow of your program like in this case: http://stackoverflow.com/questions/26716255/why-does-this-program-print-forked-4-times"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Short circuiting is important, when you want to avoid evaluating terms that are (computationally) costly. Moreover, it can heavily affect the flow of your program like in this case: http://stackoverflow.com/questions/26716255/why-does-this-program-print-forked-4-times"
          }
        ]
      }
    ],
    "title": "Short circuit behavior of logical operators",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}