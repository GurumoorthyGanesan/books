{
  "ID": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
  "Root": {
    "alive": true,
    "content": [
      "05d5a777-6cd4-48cb-befc-4ea785c0eaa3",
      "b87122a1-679c-44e8-a934-c308750ecf32",
      "4e9877f3-7301-4c0e-b640-6d62f4ba711e",
      "e7dcd9d6-9b49-4561-842d-24d9f4339a94",
      "95effca7-48ba-4eda-92c4-ca94272904bd",
      "4d5bab7f-9ffe-4cc6-a867-590db500e616",
      "d62cac1b-7baa-4c3b-90e2-c713e5a8169e",
      "a73f8ee0-6449-487f-b68d-96e317a1fddf",
      "c300be42-aab6-4d5c-94b7-de2537ba4e98",
      "332dc59f-5cd7-4bca-80e2-9631def3c1fc",
      "66014a42-b9d8-45c7-9431-f1a65f20b043",
      "ca730483-1b84-4488-9c03-2603a7d446a9",
      "2c01bf38-ba47-4f78-8fe1-6c65221fcaa1",
      "9992efde-4024-4dec-8b6d-cfcc4ff577a2",
      "0ff7f8e6-8324-4a3e-9369-c5aca275ca32",
      "e794a03a-9cfe-4533-b8a8-ce2b20ec868e",
      "3fa33142-20e3-49ef-9324-bb4352d4bd6b",
      "d771da15-1080-405b-a2dc-d5f2b13027c5",
      "8bbf3275-4071-4d20-9c4e-3f82e3427e6a",
      "a8fd0fa1-5501-4e8e-8c67-80444f721342"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935833060,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935833060,
    "parent_id": "b81cd45f-aa26-4f19-8238-7b90dd64a769",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Assertion"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833052,
        "id": "05d5a777-6cd4-48cb-befc-4ea785c0eaa3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833052,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833055,
        "id": "b87122a1-679c-44e8-a934-c308750ecf32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833055,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An "
            ],
            [
              "assertion",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " is a predicate that the presented condition must be true at the moment the assertion is encountered by the software. Most common are "
            ],
            [
              "simple assertions",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              ", which are validated at execution time. However, "
            ],
            [
              "static assertions",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " are checked at compile time."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An "
          },
          {
            "Text": "assertion",
            "AttrFlags": 5
          },
          {
            "Text": " is a predicate that the presented condition must be true at the moment the assertion is encountered by the software. Most common are "
          },
          {
            "Text": "simple assertions",
            "AttrFlags": 5
          },
          {
            "Text": ", which are validated at execution time. However, "
          },
          {
            "Text": "static assertions",
            "AttrFlags": 5
          },
          {
            "Text": " are checked at compile time."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833055,
        "id": "4e9877f3-7301-4c0e-b640-6d62f4ba711e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833055,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833055,
        "id": "e7dcd9d6-9b49-4561-842d-24d9f4339a94",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833055,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "assert(expression)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "assert(expression)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833056,
        "id": "95effca7-48ba-4eda-92c4-ca94272904bd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833056,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "static_assert(expression, message)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "static_assert(expression, message)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833056,
        "id": "4d5bab7f-9ffe-4cc6-a867-590db500e616",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833056,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "_Static_assert(expression, message)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "_Static_assert(expression, message)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833056,
        "id": "d62cac1b-7baa-4c3b-90e2-c713e5a8169e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833056,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833056,
        "id": "a73f8ee0-6449-487f-b68d-96e317a1fddf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833056,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameter | Details |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameter | Details |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833056,
        "id": "c300be42-aab6-4d5c-94b7-de2537ba4e98",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833056,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "——— | —–– |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "——— | —–– |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833056,
        "id": "332dc59f-5cd7-4bca-80e2-9631def3c1fc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833056,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "expression | expression of scalar type. |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "expression | expression of scalar type. |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833056,
        "id": "66014a42-b9d8-45c7-9431-f1a65f20b043",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833056,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "message | string literal to be included in the diagnostic message. |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "message | string literal to be included in the diagnostic message. |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833057,
        "id": "ca730483-1b84-4488-9c03-2603a7d446a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833057,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833057,
        "id": "2c01bf38-ba47-4f78-8fe1-6c65221fcaa1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833057,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Both "
            ],
            [
              "assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "static_assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are macros defined in "
            ],
            [
              "assert.h",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Both "
          },
          {
            "Text": "assert",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "static_assert",
            "AttrFlags": 2
          },
          {
            "Text": " are macros defined in "
          },
          {
            "Text": "assert.h",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833057,
        "id": "9992efde-4024-4dec-8b6d-cfcc4ff577a2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833057,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The definition of "
            ],
            [
              "assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " depends on the macro "
            ],
            [
              "NDEBUG",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which is not defined by the standard library. If "
            ],
            [
              "NDEBUG",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is defined, "
            ],
            [
              "assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a no-op:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The definition of "
          },
          {
            "Text": "assert",
            "AttrFlags": 2
          },
          {
            "Text": " depends on the macro "
          },
          {
            "Text": "NDEBUG",
            "AttrFlags": 2
          },
          {
            "Text": " which is not defined by the standard library. If "
          },
          {
            "Text": "NDEBUG",
            "AttrFlags": 2
          },
          {
            "Text": " is defined, "
          },
          {
            "Text": "assert",
            "AttrFlags": 2
          },
          {
            "Text": " is a no-op:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833057,
        "id": "0ff7f8e6-8324-4a3e-9369-c5aca275ca32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833057,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#ifdef NDEBUG#  define assert(condition) ((void) 0)#else#  define assert(condition) /* implementation defined */#endif"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#ifdef NDEBUG#  define assert(condition) ((void) 0)#else#  define assert(condition) /* implementation defined */#endif",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833057,
        "id": "e794a03a-9cfe-4533-b8a8-ce2b20ec868e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833057,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Opinion varies about whether "
            ],
            [
              "NDEBUG",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " should always be used for production compilations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Opinion varies about whether "
          },
          {
            "Text": "NDEBUG",
            "AttrFlags": 2
          },
          {
            "Text": " should always be used for production compilations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833058,
        "id": "3fa33142-20e3-49ef-9324-bb4352d4bd6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833058,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The pro-camp argues that "
            ],
            [
              "assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " calls "
            ],
            [
              "abort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and assertion messages are not helpful for end users, so the result is not helpful to user. If you have fatal conditions to check in production code you should use ordinary "
            ],
            [
              "if/else",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " conditions and "
            ],
            [
              "exit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "quick_exit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to end the program. In contrast to "
            ],
            [
              "abort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", these allow the program to do some cleanup (via functions registered with "
            ],
            [
              "atexit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "at_quick_exit",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The pro-camp argues that "
          },
          {
            "Text": "assert",
            "AttrFlags": 2
          },
          {
            "Text": " calls "
          },
          {
            "Text": "abort",
            "AttrFlags": 2
          },
          {
            "Text": " and assertion messages are not helpful for end users, so the result is not helpful to user. If you have fatal conditions to check in production code you should use ordinary "
          },
          {
            "Text": "if/else",
            "AttrFlags": 2
          },
          {
            "Text": " conditions and "
          },
          {
            "Text": "exit",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "quick_exit",
            "AttrFlags": 2
          },
          {
            "Text": " to end the program. In contrast to "
          },
          {
            "Text": "abort",
            "AttrFlags": 2
          },
          {
            "Text": ", these allow the program to do some cleanup (via functions registered with "
          },
          {
            "Text": "atexit",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "at_quick_exit",
            "AttrFlags": 2
          },
          {
            "Text": ")."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833060,
        "id": "d771da15-1080-405b-a2dc-d5f2b13027c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833060,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The con-camp argues that "
            ],
            [
              "assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " calls should never fire in production code, but if they do, the condition that is checked means there is something dramatically wrong and the program will misbehave worse if execution continues. Therefore, it is better to have the assertions active in production code because if they fire, hell has already broken loose."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The con-camp argues that "
          },
          {
            "Text": "assert",
            "AttrFlags": 2
          },
          {
            "Text": " calls should never fire in production code, but if they do, the condition that is checked means there is something dramatically wrong and the program will misbehave worse if execution continues. Therefore, it is better to have the assertions active in production code because if they fire, hell has already broken loose."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833060,
        "id": "8bbf3275-4071-4d20-9c4e-3f82e3427e6a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833060,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another option is to use a home-brew system of assertions which always perform the check but handle errors differently between development (where "
            ],
            [
              "abort",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is appropriate) and production (where an ‘unexpected internal error - please contact Technical Support’ may be more appropriate)."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another option is to use a home-brew system of assertions which always perform the check but handle errors differently between development (where "
          },
          {
            "Text": "abort",
            "AttrFlags": 2
          },
          {
            "Text": " is appropriate) and production (where an ‘unexpected internal error - please contact Technical Support’ may be more appropriate)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935833060,
        "id": "a8fd0fa1-5501-4e8e-8c67-80444f721342",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935833060,
        "parent_id": "3237cefc-6dd7-4feb-bbef-e13a7ac2b599",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "static_assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expands to "
            ],
            [
              "_Static_assert",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which is a keyword. The condition is checked at compile time, thus "
            ],
            [
              "condition",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must be a constant expression. There is no need for this to be handled differently between development and production."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "static_assert",
            "AttrFlags": 2
          },
          {
            "Text": " expands to "
          },
          {
            "Text": "_Static_assert",
            "AttrFlags": 2
          },
          {
            "Text": " which is a keyword. The condition is checked at compile time, thus "
          },
          {
            "Text": "condition",
            "AttrFlags": 2
          },
          {
            "Text": " must be a constant expression. There is no need for this to be handled differently between development and production."
          }
        ]
      }
    ],
    "title": "Assertion",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}