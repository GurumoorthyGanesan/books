{
  "ID": "e0e23ef4-bae5-497a-ba1c-82665f43e8e1",
  "Root": {
    "alive": true,
    "content": [
      "3a1eb7fb-02b2-4351-875d-7d25c6fda607",
      "95d4f855-8ea6-4136-a71a-b8c583b136ee",
      "6e2a39e4-97ab-430a-8730-eeda9dcf60c4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935691309,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e0e23ef4-bae5-497a-ba1c-82665f43e8e1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935691309,
    "parent_id": "c613c743-331e-4cb0-8344-4963dbf825f3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Iterating through an array using pointers"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935691304,
        "id": "3a1eb7fb-02b2-4351-875d-7d25c6fda607",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935691304,
        "parent_id": "e0e23ef4-bae5-497a-ba1c-82665f43e8e1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdio.h\u003e\n#define SIZE (10)\nint main()\n{\n    size_t i = 0;\n    int *p = NULL;\n    int a[SIZE];\n    \n    /* Setting up the values to be i*i */\n    for(i = 0; i \u003c SIZE; ++i) \n    {\n        a[i] = i * i;\n    }\n    \n    /* Reading the values using pointers */\n    for(p = a; p \u003c a + SIZE; ++p) \n    {\n        printf(\"%d\\n\", *p);\n    }\n\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdio.h\u003e\n#define SIZE (10)\nint main()\n{\n    size_t i = 0;\n    int *p = NULL;\n    int a[SIZE];\n    \n    /* Setting up the values to be i*i */\n    for(i = 0; i \u003c SIZE; ++i) \n    {\n        a[i] = i * i;\n    }\n    \n    /* Reading the values using pointers */\n    for(p = a; p \u003c a + SIZE; ++p) \n    {\n        printf(\"%d\\n\", *p);\n    }\n\n    return 0;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935691308,
        "id": "95d4f855-8ea6-4136-a71a-b8c583b136ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935691308,
        "parent_id": "e0e23ef4-bae5-497a-ba1c-82665f43e8e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here, in the initialization of "
            ],
            [
              "p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the first "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop condition, the array "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "decays",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "http://stackoverflow.com/questions/1461432/what-is-array-decaying"
                ]
              ]
            ],
            [
              " to a pointer to its first element, as it would in almost all places where such an array variable is used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here, in the initialization of "
          },
          {
            "Text": "p",
            "AttrFlags": 2
          },
          {
            "Text": " in the first "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loop condition, the array "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "decays",
            "AttrFlags": 4,
            "Link": "http://stackoverflow.com/questions/1461432/what-is-array-decaying"
          },
          {
            "Text": " to a pointer to its first element, as it would in almost all places where such an array variable is used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935691309,
        "id": "6e2a39e4-97ab-430a-8730-eeda9dcf60c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935691309,
        "parent_id": "e0e23ef4-bae5-497a-ba1c-82665f43e8e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then, the "
            ],
            [
              "++p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " performs pointer arithmetic on the pointer "
            ],
            [
              "p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and walks one by one through the elements of the array, and refers to them by dereferencing them with "
            ],
            [
              "*p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then, the "
          },
          {
            "Text": "++p",
            "AttrFlags": 2
          },
          {
            "Text": " performs pointer arithmetic on the pointer "
          },
          {
            "Text": "p",
            "AttrFlags": 2
          },
          {
            "Text": " and walks one by one through the elements of the array, and refers to them by dereferencing them with "
          },
          {
            "Text": "*p",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Iterating through an array using pointers",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}