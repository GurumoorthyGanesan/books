{
  "ID": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
  "Root": {
    "alive": true,
    "content": [
      "f467fca3-2f47-4891-a914-aeb93be861fe",
      "d3d6a9a7-b33a-4d7a-8686-15258df34f3f",
      "6fc853fb-d226-41d2-a221-a28b322435f5",
      "0f5025a1-c28a-4254-bf7d-035e394c2d84",
      "ab6ad21d-6d97-4d18-a48a-db89f3b3fb76",
      "ff8fce12-8a74-4a95-9397-975394732dd9",
      "afda5e36-8600-423c-82d1-5ce6ebaf5491",
      "042fdb1e-49eb-4690-a084-7ca91882c779",
      "94d470b4-8942-4741-8227-a86d821c2ac9"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936742059,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936742059,
    "parent_id": "a32e93b8-a175-40b5-b72f-e58c30d058bb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Inline assembly"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742057,
        "id": "f467fca3-2f47-4891-a914-aeb93be861fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742057,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742057,
        "id": "d3d6a9a7-b33a-4d7a-8686-15258df34f3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742057,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Inline assembly is the practice of adding assembly instructions in the middle of C source code. No ISO C standard requires support of inline assembly. Since it is not required, the syntax for inline assembly varies from compiler to compiler. Even though it is typically supported there are very few reasons to use inline assembly and many reasons not to."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Inline assembly is the practice of adding assembly instructions in the middle of C source code. No ISO C standard requires support of inline assembly. Since it is not required, the syntax for inline assembly varies from compiler to compiler. Even though it is typically supported there are very few reasons to use inline assembly and many reasons not to."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742058,
        "id": "6fc853fb-d226-41d2-a221-a28b322435f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742058,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pros"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pros"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742058,
        "id": "0f5025a1-c28a-4254-bf7d-035e394c2d84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742058,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Performance",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " By writing the specific assembly instructions for an operation, you can achieve better performance than the assembly code generated by the compiler. Note that these performance gains are rare. In most cases you can achieve better performance gains just by rearranging your C code so the optimizer can do its job."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Performance",
            "AttrFlags": 1
          },
          {
            "Text": " By writing the specific assembly instructions for an operation, you can achieve better performance than the assembly code generated by the compiler. Note that these performance gains are rare. In most cases you can achieve better performance gains just by rearranging your C code so the optimizer can do its job."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742058,
        "id": "ab6ad21d-6d97-4d18-a48a-db89f3b3fb76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742058,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Hardware interface",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Device driver or processor startup code may need some assembly code to access the correct registers and to guarantee certain operations occur in a specific order with a specific delay between operations."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Hardware interface",
            "AttrFlags": 1
          },
          {
            "Text": " Device driver or processor startup code may need some assembly code to access the correct registers and to guarantee certain operations occur in a specific order with a specific delay between operations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742058,
        "id": "ff8fce12-8a74-4a95-9397-975394732dd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742058,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Cons"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Cons"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742059,
        "id": "afda5e36-8600-423c-82d1-5ce6ebaf5491",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742059,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compiler Portability",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Syntax for inline assembly is not guaranteed to be the same from one compiler to another. If you are writing code with inline assembly that should be supported by different compilers, use preprocessor macros ("
            ],
            [
              "#ifdef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") to check which compiler is being used. Then, write a separate inline assembly section for each supported compiler."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compiler Portability",
            "AttrFlags": 1
          },
          {
            "Text": " Syntax for inline assembly is not guaranteed to be the same from one compiler to another. If you are writing code with inline assembly that should be supported by different compilers, use preprocessor macros ("
          },
          {
            "Text": "#ifdef",
            "AttrFlags": 2
          },
          {
            "Text": ") to check which compiler is being used. Then, write a separate inline assembly section for each supported compiler."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742059,
        "id": "042fdb1e-49eb-4690-a084-7ca91882c779",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742059,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Processor Portability",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " You can’t write inline assembly for an x86 processor and expect it to work on an ARM processor. Inline assembly is intended to be written for a specific processor or processor family. If you have inline assembly that you want supported on different processors, use preprocessor macros to check which processor the code is being compiled for and to select the appropriate assembly code section."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Processor Portability",
            "AttrFlags": 1
          },
          {
            "Text": " You can’t write inline assembly for an x86 processor and expect it to work on an ARM processor. Inline assembly is intended to be written for a specific processor or processor family. If you have inline assembly that you want supported on different processors, use preprocessor macros to check which processor the code is being compiled for and to select the appropriate assembly code section."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936742059,
        "id": "94d470b4-8942-4741-8227-a86d821c2ac9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936742059,
        "parent_id": "9547bd29-f5db-40c9-84cf-d7d319e73a0f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Future Performance Changes",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Inline assembly may be written expecting delays based upon a certain processor clock speed. If the program is compiled for a processor with a faster clock, the assembly code may not perform as expected."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Future Performance Changes",
            "AttrFlags": 1
          },
          {
            "Text": " Inline assembly may be written expecting delays based upon a certain processor clock speed. If the program is compiled for a processor with a faster clock, the assembly code may not perform as expected."
          }
        ]
      }
    ],
    "title": "Inline assembly",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}