{
  "ID": "be1c5d2e-1475-4c76-aed1-ec1572626cff",
  "Root": {
    "alive": true,
    "content": [
      "a281ad58-a0b4-4954-8cbb-e05e32b4e36e",
      "f1849094-b21b-4629-9a5c-ff0ffde08faf",
      "4b2deb80-a1ee-48c1-bfc8-2e38efc9467e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936261602,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "be1c5d2e-1475-4c76-aed1-ec1572626cff",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936261602,
    "parent_id": "fb1c49da-f858-420f-804f-317776d975e9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Effective type"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936261599,
        "id": "a281ad58-a0b4-4954-8cbb-e05e32b4e36e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936261599,
        "parent_id": "be1c5d2e-1475-4c76-aed1-ec1572626cff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "effective type",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " of a data object is the last type information that was associated with it, if any."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "effective type",
            "AttrFlags": 4
          },
          {
            "Text": " of a data object is the last type information that was associated with it, if any."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936261602,
        "id": "f1849094-b21b-4629-9a5c-ff0ffde08faf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936261602,
        "parent_id": "be1c5d2e-1475-4c76-aed1-ec1572626cff",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// a normal variable, effective type uint32_t, and this type never changes\nuint32_t a = 0.0;\n\n// effective type of *pa is uint32_t, too, simply\n// because *pa is the object a\nuint32_t* pa = \u0026a;\n\n// the object pointed to by q has no effective type, yet\nvoid* q = malloc(sizeof uint32_t);\n// the object pointed to by q still has no effective type,\n// because nobody has written to it\nuint32_t* qb = q;\n// *qb now has effective type uint32_t because a uint32_t value was written\n*qb = 37;\n\n// the object pointed to by r has no effective type, yet, although\n// it is initialized\nvoid* r = calloc(1, sizeof uint32_t);\n// the object pointed to by r still has no effective type,\n// because nobody has written to or read from it\nuint32_t* rc = r;\n// *rc now has effective type uint32_t because a value is read\n// from it with that type. The read operation is valid because we used calloc.\n// Now the object pointed to by r (which is the same as *rc) has\n// gained an effective type, although we didn't change its value.\nuint32_t c = *rc;\n\n// the object pointed to by s has no effective type, yet.\nvoid* s = malloc(sizeof uint32_t);\n// the object pointed to by s now has effective type uint32_t\n// because an uint32_t value is copied into it.\nmemcpy(s, r, sizeof uint32_t);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// a normal variable, effective type uint32_t, and this type never changes\nuint32_t a = 0.0;\n\n// effective type of *pa is uint32_t, too, simply\n// because *pa is the object a\nuint32_t* pa = \u0026a;\n\n// the object pointed to by q has no effective type, yet\nvoid* q = malloc(sizeof uint32_t);\n// the object pointed to by q still has no effective type,\n// because nobody has written to it\nuint32_t* qb = q;\n// *qb now has effective type uint32_t because a uint32_t value was written\n*qb = 37;\n\n// the object pointed to by r has no effective type, yet, although\n// it is initialized\nvoid* r = calloc(1, sizeof uint32_t);\n// the object pointed to by r still has no effective type,\n// because nobody has written to or read from it\nuint32_t* rc = r;\n// *rc now has effective type uint32_t because a value is read\n// from it with that type. The read operation is valid because we used calloc.\n// Now the object pointed to by r (which is the same as *rc) has\n// gained an effective type, although we didn't change its value.\nuint32_t c = *rc;\n\n// the object pointed to by s has no effective type, yet.\nvoid* s = malloc(sizeof uint32_t);\n// the object pointed to by s now has effective type uint32_t\n// because an uint32_t value is copied into it.\nmemcpy(s, r, sizeof uint32_t);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936261602,
        "id": "4b2deb80-a1ee-48c1-bfc8-2e38efc9467e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936261602,
        "parent_id": "be1c5d2e-1475-4c76-aed1-ec1572626cff",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Observe that for the latter, it was not necessary that we even have an "
            ],
            [
              "uint32_t*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " pointer to that object. The fact that we have copied another "
            ],
            [
              "uint32_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object is sufficient."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Observe that for the latter, it was not necessary that we even have an "
          },
          {
            "Text": "uint32_t*",
            "AttrFlags": 2
          },
          {
            "Text": " pointer to that object. The fact that we have copied another "
          },
          {
            "Text": "uint32_t",
            "AttrFlags": 2
          },
          {
            "Text": " object is sufficient."
          }
        ]
      }
    ],
    "title": "Effective type",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}