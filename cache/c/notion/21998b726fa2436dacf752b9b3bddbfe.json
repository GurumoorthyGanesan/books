{
  "ID": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
  "Root": {
    "alive": true,
    "content": [
      "136a0b65-656f-400d-9309-d15792102e25",
      "585f0777-b4b1-4762-983f-7d09cc6eb787",
      "b2816035-dc45-4613-9b9a-9efcbad40c5a",
      "2a00221f-aa38-4f9a-8ccb-2e43a2468836",
      "430e3070-a94b-4b30-a2f1-dfced8674bcb",
      "3ca6e021-cd42-4886-994e-78d57462c3f0",
      "02673ef7-7302-4f02-a9bd-d0dcf1ba2e06",
      "a76b9b3e-cae5-4561-8edf-1398fe5d54f1",
      "9488089a-6332-42e7-ba53-c11bf988e774",
      "49d5434e-0ec9-496c-b20a-950d4c2285b1",
      "1699417b-dec8-4fb4-8567-51186f657607",
      "a8f06fe8-aa4d-4c3a-a498-362f519afb4e",
      "4488ae0f-498b-44d5-9f90-3c598a1e4b8f",
      "f10470cb-5a38-4922-96e0-a25e182c2238",
      "ad419a84-3c55-4b79-9eac-7f95b4b9e42d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936790368,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936790368,
    "parent_id": "5e44bd54-3362-4b1a-934b-acecce2afc7f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Memory management"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790363,
        "id": "136a0b65-656f-400d-9309-d15792102e25",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790363,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790364,
        "id": "585f0777-b4b1-4762-983f-7d09cc6eb787",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790364,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For managing dynamically allocated memory, the standard C library provides the functions "
            ],
            [
              "malloc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "calloc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "realloc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "free()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". In C99 and later, there is also "
            ],
            [
              "aligned_alloc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Some systems also provide "
            ],
            [
              "alloca()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For managing dynamically allocated memory, the standard C library provides the functions "
          },
          {
            "Text": "malloc()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "calloc()",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "realloc()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "free()",
            "AttrFlags": 2
          },
          {
            "Text": ". In C99 and later, there is also "
          },
          {
            "Text": "aligned_alloc()",
            "AttrFlags": 2
          },
          {
            "Text": ". Some systems also provide "
          },
          {
            "Text": "alloca()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790364,
        "id": "b2816035-dc45-4613-9b9a-9efcbad40c5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790364,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Syntax"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Syntax"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790365,
        "id": "2a00221f-aa38-4f9a-8ccb-2e43a2468836",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790365,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "void *aligned_alloc(size_t alignment, size_t size); /* Only since C11 */"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "void *aligned_alloc(size_t alignment, size_t size); /* Only since C11 */"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790365,
        "id": "430e3070-a94b-4b30-a2f1-dfced8674bcb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790365,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "void *calloc(size_t nelements, size_t size);"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "void *calloc(size_t nelements, size_t size);"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790365,
        "id": "3ca6e021-cd42-4886-994e-78d57462c3f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790365,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "void free(void *ptr);"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "void free(void *ptr);"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790365,
        "id": "02673ef7-7302-4f02-a9bd-d0dcf1ba2e06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790365,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "void *malloc(size_t size);"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "void *malloc(size_t size);"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790366,
        "id": "a76b9b3e-cae5-4561-8edf-1398fe5d54f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790366,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "void *realloc(void *ptr, size_t size);"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "void *realloc(void *ptr, size_t size);"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790366,
        "id": "9488089a-6332-42e7-ba53-c11bf988e774",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790366,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "void *alloca(size_t size); /* from alloca.h, not standard, not portable, dangerous. */"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "void *alloca(size_t size); /* from alloca.h, not standard, not portable, dangerous. */"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790366,
        "id": "49d5434e-0ec9-496c-b20a-950d4c2285b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790366,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790366,
        "id": "1699417b-dec8-4fb4-8567-51186f657607",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790366,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "name | description |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "name | description |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790366,
        "id": "a8f06fe8-aa4d-4c3a-a498-362f519afb4e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790366,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "|———|––––––––| | size ("
            ],
            [
              "malloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "realloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "aligned_alloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") | total size of the memory in bytes. For "
            ],
            [
              "aligned_alloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the size must be a integral multiple of alignment. | | size ("
            ],
            [
              "calloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") | size of each element | | nelements | number of elements | | ptr | pointer to allocated memory previously returned by "
            ],
            [
              "malloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "calloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "realloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "aligned_alloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | | alignment | alignment of allocated memory"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "|———|––––––––| | size ("
          },
          {
            "Text": "malloc",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "realloc",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "aligned_alloc",
            "AttrFlags": 2
          },
          {
            "Text": ") | total size of the memory in bytes. For "
          },
          {
            "Text": "aligned_alloc",
            "AttrFlags": 2
          },
          {
            "Text": " the size must be a integral multiple of alignment. | | size ("
          },
          {
            "Text": "calloc",
            "AttrFlags": 2
          },
          {
            "Text": ") | size of each element | | nelements | number of elements | | ptr | pointer to allocated memory previously returned by "
          },
          {
            "Text": "malloc",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "calloc",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "realloc",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "aligned_alloc",
            "AttrFlags": 2
          },
          {
            "Text": " | | alignment | alignment of allocated memory"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790367,
        "id": "4488ae0f-498b-44d5-9f90-3c598a1e4b8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790367,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790367,
        "id": "f10470cb-5a38-4922-96e0-a25e182c2238",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790367,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that "
            ],
            [
              "aligned_alloc()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is only defined for C11 or later."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that "
          },
          {
            "Text": "aligned_alloc()",
            "AttrFlags": 2
          },
          {
            "Text": " is only defined for C11 or later."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936790368,
        "id": "ad419a84-3c55-4b79-9eac-7f95b4b9e42d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936790368,
        "parent_id": "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Systems such as those based on "
            ],
            [
              "POSIX",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/posix"
                ]
              ]
            ],
            [
              " provide other ways of allocating aligned memory (e.g. "
            ],
            [
              "posix_memalign()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://pubs.opengroup.org/onlinepubs/9699919799/functions/posix_memalign.html"
                ]
              ]
            ],
            [
              "), and also have other memory management options (e.g. "
            ],
            [
              "mmap()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "http://pubs.opengroup.org/onlinepubs/9699919799/functions/mmap.html"
                ]
              ]
            ],
            [
              ")."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Systems such as those based on "
          },
          {
            "Text": "POSIX",
            "Link": "http://stackoverflow.com/documentation/posix"
          },
          {
            "Text": " provide other ways of allocating aligned memory (e.g. "
          },
          {
            "Text": "posix_memalign()",
            "AttrFlags": 2,
            "Link": "http://pubs.opengroup.org/onlinepubs/9699919799/functions/posix_memalign.html"
          },
          {
            "Text": "), and also have other memory management options (e.g. "
          },
          {
            "Text": "mmap()",
            "AttrFlags": 2,
            "Link": "http://pubs.opengroup.org/onlinepubs/9699919799/functions/mmap.html"
          },
          {
            "Text": ")."
          }
        ]
      }
    ],
    "title": "Memory management",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}