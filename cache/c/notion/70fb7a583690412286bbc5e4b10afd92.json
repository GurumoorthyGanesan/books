{
  "ID": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
  "Root": {
    "alive": true,
    "content": [
      "9d03363a-dc49-43f3-bd08-41909afc6229",
      "f438d284-5657-4640-9a13-2f2a89f0d181",
      "09b68106-d980-475f-afd1-3215c666549f",
      "daf166eb-fa6f-456b-a424-6b9208b879a1",
      "20a2cfe7-a2f5-4960-9112-5d75542c6286",
      "76e8edf4-48e0-490b-bd41-bcd241306dd9",
      "24ce6ff0-09a0-4ebf-bfdc-d56293c425c7",
      "447ecc2a-40e6-4bf8-bab5-048b12c56984",
      "b8960d1d-5b0d-4f9d-948e-fb1f71cc0a2a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936233394,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936233394,
    "parent_id": "fcadea6a-df33-4395-8abc-4c71f5599a2d",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Indeterminately sequenced expressions"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233392,
        "id": "9d03363a-dc49-43f3-bd08-41909afc6229",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233392,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function calls as "
            ],
            [
              "f(a)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " always imply a sequence point between the evaluation of the arguments and the designator (here "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") and the actual call. If two such calls are unsequenced, the two function calls are indeterminately sequenced, that is, one is executed before the other, and order is unspecified."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function calls as "
          },
          {
            "Text": "f(a)",
            "AttrFlags": 2
          },
          {
            "Text": " always imply a sequence point between the evaluation of the arguments and the designator (here "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ") and the actual call. If two such calls are unsequenced, the two function calls are indeterminately sequenced, that is, one is executed before the other, and order is unspecified."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233393,
        "id": "f438d284-5657-4640-9a13-2f2a89f0d181",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233393,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "unsigned counter = 0;\n\nunsingned account(void) {\n   return counter++;\n}\n\nint main(void) {\n   printf(\"the order is %u %u\\n\", account(), account());\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "unsigned counter = 0;\n\nunsingned account(void) {\n   return counter++;\n}\n\nint main(void) {\n   printf(\"the order is %u %u\\n\", account(), account());\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233393,
        "id": "09b68106-d980-475f-afd1-3215c666549f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233393,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This implicit twofold modification of "
            ],
            [
              "counter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " during the evaluation of the "
            ],
            [
              "printf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " arguments is valid, we just don’t know which of the calls comes first. As the order is unspecified, it may vary and cannot be depended on. So the printout could be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This implicit twofold modification of "
          },
          {
            "Text": "counter",
            "AttrFlags": 2
          },
          {
            "Text": " during the evaluation of the "
          },
          {
            "Text": "printf",
            "AttrFlags": 2
          },
          {
            "Text": " arguments is valid, we just don’t know which of the calls comes first. As the order is unspecified, it may vary and cannot be depended on. So the printout could be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233393,
        "id": "daf166eb-fa6f-456b-a424-6b9208b879a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233393,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the order is 0 1"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "the order is 0 1"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233393,
        "id": "20a2cfe7-a2f5-4960-9112-5d75542c6286",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233393,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233393,
        "id": "76e8edf4-48e0-490b-bd41-bcd241306dd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233393,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "the order is 1 0"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "the order is 1 0"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233393,
        "id": "24ce6ff0-09a0-4ebf-bfdc-d56293c425c7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233393,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The analogous statement to the above without intermediate function call"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The analogous statement to the above without intermediate function call"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233393,
        "id": "447ecc2a-40e6-4bf8-bab5-048b12c56984",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233393,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "printf(\"the order is %u %u\\n\", counter++, counter++); // undefined behavior"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "printf(\"the order is %u %u\\n\", counter++, counter++); // undefined behavior",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936233394,
        "id": "b8960d1d-5b0d-4f9d-948e-fb1f71cc0a2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936233394,
        "parent_id": "70fb7a58-3690-4122-86bb-c5e4b10afd92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "has undefined behavior because there is no sequence point between the two modifications of "
            ],
            [
              "counter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "has undefined behavior because there is no sequence point between the two modifications of "
          },
          {
            "Text": "counter",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Indeterminately sequenced expressions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}