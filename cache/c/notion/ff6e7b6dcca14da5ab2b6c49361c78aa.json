{
  "ID": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
  "Root": {
    "alive": true,
    "content": [
      "675d60be-8cd0-4970-b225-65b0bc88f8b6",
      "8a7dcfe4-44c8-41d2-ab80-c68e34c20f49",
      "e9129e03-e0b2-44e0-8080-d1d7ce41c599",
      "9abf658d-8339-41fb-8681-741f31ae72fd",
      "dd0eb0b0-023b-4e50-a136-575bc08d68bf",
      "75ab5274-c7db-4141-9bb0-f1777a91fd97",
      "d428fc3d-f451-43fa-b0d0-f7c77c116471"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936744394,
    "id": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936744394,
    "parent_id": "a32e93b8-a175-40b5-b72f-e58c30d058bb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 gcc Extended asm support"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936744390,
        "id": "675d60be-8cd0-4970-b225-65b0bc88f8b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936744390,
        "parent_id": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Extended asm support in gcc has the following syntax:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Extended asm support in gcc has the following syntax:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936744392,
        "id": "8a7dcfe4-44c8-41d2-ab80-c68e34c20f49",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936744392,
        "parent_id": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "asm [volatile] ( AssemblerTemplate\n                  : OutputOperands\n                  [ : InputOperands\n                  [ : Clobbers ] ])\n \n asm [volatile] goto ( AssemblerTemplate\n                       :\n                       : InputOperands\n                       : Clobbers\n                       : GotoLabels)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "asm [volatile] ( AssemblerTemplate\n                  : OutputOperands\n                  [ : InputOperands\n                  [ : Clobbers ] ])\n \n asm [volatile] goto ( AssemblerTemplate\n                       :\n                       : InputOperands\n                       : Clobbers\n                       : GotoLabels)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936744393,
        "id": "e9129e03-e0b2-44e0-8080-d1d7ce41c599",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936744393,
        "parent_id": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "where "
            ],
            [
              "AssemblerTemplate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the template for the assembler instruction, "
            ],
            [
              "OutputOperands",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are any C variables that can be modified by the assembly code, "
            ],
            [
              "InputOperands",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are any C variables used as input parameters, "
            ],
            [
              "Clobbers",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are a list or registers that are modified by the assembly code, and "
            ],
            [
              "GotoLabels",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are any goto statement labels that may be used in the assembly code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "where "
          },
          {
            "Text": "AssemblerTemplate",
            "AttrFlags": 2
          },
          {
            "Text": " is the template for the assembler instruction, "
          },
          {
            "Text": "OutputOperands",
            "AttrFlags": 2
          },
          {
            "Text": " are any C variables that can be modified by the assembly code, "
          },
          {
            "Text": "InputOperands",
            "AttrFlags": 2
          },
          {
            "Text": " are any C variables used as input parameters, "
          },
          {
            "Text": "Clobbers",
            "AttrFlags": 2
          },
          {
            "Text": " are a list or registers that are modified by the assembly code, and "
          },
          {
            "Text": "GotoLabels",
            "AttrFlags": 2
          },
          {
            "Text": " are any goto statement labels that may be used in the assembly code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936744393,
        "id": "9abf658d-8339-41fb-8681-741f31ae72fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936744393,
        "parent_id": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The extended format is used within C functions and is the more typical usage of inline assembly. Below is an example from the Linux kernel for byte swapping 16-bit and 32-bit numbers for an ARM processor:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The extended format is used within C functions and is the more typical usage of inline assembly. Below is an example from the Linux kernel for byte swapping 16-bit and 32-bit numbers for an ARM processor:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936744393,
        "id": "dd0eb0b0-023b-4e50-a136-575bc08d68bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936744393,
        "parent_id": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* From arch/arm/include/asm/swab.h in Linux kernel version 4.6.4 */\n#if __LINUX_ARM_ARCH__ \u003e= 6\n\nstatic inline __attribute_const__ __u32 __arch_swahb32(__u32 x)\n{\n    __asm__ (\"rev16 %0, %1\" : \"=r\" (x) : \"r\" (x));\n    return x;\n}\n#define __arch_swahb32 __arch_swahb32\n#define __arch_swab16(x) ((__u16)__arch_swahb32(x))\n\nstatic inline __attribute_const__ __u32 __arch_swab32(__u32 x)\n{\n    __asm__ (\"rev %0, %1\" : \"=r\" (x) : \"r\" (x));\n    return x;\n}\n#define __arch_swab32 __arch_swab32\n\n#endif"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* From arch/arm/include/asm/swab.h in Linux kernel version 4.6.4 */\n#if __LINUX_ARM_ARCH__ \u003e= 6\n\nstatic inline __attribute_const__ __u32 __arch_swahb32(__u32 x)\n{\n    __asm__ (\"rev16 %0, %1\" : \"=r\" (x) : \"r\" (x));\n    return x;\n}\n#define __arch_swahb32 __arch_swahb32\n#define __arch_swab16(x) ((__u16)__arch_swahb32(x))\n\nstatic inline __attribute_const__ __u32 __arch_swab32(__u32 x)\n{\n    __asm__ (\"rev %0, %1\" : \"=r\" (x) : \"r\" (x));\n    return x;\n}\n#define __arch_swab32 __arch_swab32\n\n#endif",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936744393,
        "id": "75ab5274-c7db-4141-9bb0-f1777a91fd97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936744393,
        "parent_id": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Each asm section uses the variable "
            ],
            [
              "x",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as its input and output parameter. The C function then returns the manipulated result."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Each asm section uses the variable "
          },
          {
            "Text": "x",
            "AttrFlags": 2
          },
          {
            "Text": " as its input and output parameter. The C function then returns the manipulated result."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936744393,
        "id": "d428fc3d-f451-43fa-b0d0-f7c77c116471",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936744393,
        "parent_id": "ff6e7b6d-cca1-4da5-ab2b-6c49361c78aa",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "With the extended asm format, gcc may optimize the assembly instructions in an asm block following the same rules it uses for optimizing C code. If you want your asm section to remain untouched, use the "
            ],
            [
              "volatile",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword for the asm section."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "With the extended asm format, gcc may optimize the assembly instructions in an asm block following the same rules it uses for optimizing C code. If you want your asm section to remain untouched, use the "
          },
          {
            "Text": "volatile",
            "AttrFlags": 2
          },
          {
            "Text": " keyword for the asm section."
          }
        ]
      }
    ],
    "title": "020 gcc Extended asm support"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}