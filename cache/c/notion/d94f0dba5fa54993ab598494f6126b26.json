{
  "ID": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
  "Root": {
    "alive": true,
    "content": [
      "2611b4d1-ebbe-4222-a6ab-bdb942f8a26f",
      "3d55e43e-f031-45fa-bd10-ea766d89d35e",
      "6ce3c881-ae56-4554-9872-12d01aa56105",
      "e25b4c74-5a64-4d6f-aafe-a2dcd45aa1be",
      "9b487bf5-2d1e-46f4-ab5d-0cccd744a7c6",
      "1bcf4a52-6664-4012-8f64-acf6198be436",
      "723d6691-804f-4cff-9f2c-038b967d389f",
      "73eacfcf-9531-4250-8f1e-6270fe399211"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935690309,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935690309,
    "parent_id": "c613c743-331e-4cb0-8344-4963dbf825f3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Clearing array contents zeroing"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935690307,
        "id": "2611b4d1-ebbe-4222-a6ab-bdb942f8a26f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935690307,
        "parent_id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes it’s necessary to set an array to zero, after the initialization has been done."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes it’s necessary to set an array to zero, after the initialization has been done."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935690308,
        "id": "3d55e43e-f031-45fa-bd10-ea766d89d35e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935690308,
        "parent_id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cstdlib.h\u003e /* for EXIT_SUCCESS */\n\n#define ARRLEN (10)\n\nint main(void)\n{\n  int array[ARRLEN]; /* Allocated but not initialised, as not defined static or global. */\n\n  size_t i;\n  for(i = 0; i \u003c ARRLEN; ++i)\n  {\n    array[i] = 0;\n  }\n\n  return EXIT_SUCCESS;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cstdlib.h\u003e /* for EXIT_SUCCESS */\n\n#define ARRLEN (10)\n\nint main(void)\n{\n  int array[ARRLEN]; /* Allocated but not initialised, as not defined static or global. */\n\n  size_t i;\n  for(i = 0; i \u003c ARRLEN; ++i)\n  {\n    array[i] = 0;\n  }\n\n  return EXIT_SUCCESS;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935690308,
        "id": "6ce3c881-ae56-4554-9872-12d01aa56105",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935690308,
        "parent_id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An common short cut to the above loop is to use "
            ],
            [
              "memset()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " from "
            ],
            [
              "\u003cstring.h\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Passing "
            ],
            [
              "array",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as shown below makes it decay to a pointer to its 1st element."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An common short cut to the above loop is to use "
          },
          {
            "Text": "memset()",
            "AttrFlags": 2
          },
          {
            "Text": " from "
          },
          {
            "Text": "\u003cstring.h\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ". Passing "
          },
          {
            "Text": "array",
            "AttrFlags": 2
          },
          {
            "Text": " as shown below makes it decay to a pointer to its 1st element."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935690308,
        "id": "e25b4c74-5a64-4d6f-aafe-a2dcd45aa1be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935690308,
        "parent_id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "memset(array, 0, ARRLEN * sizeof (int)); /* Use size explicitly provided type (int here). */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "memset(array, 0, ARRLEN * sizeof (int)); /* Use size explicitly provided type (int here). */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935690308,
        "id": "9b487bf5-2d1e-46f4-ab5d-0cccd744a7c6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935690308,
        "parent_id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935690309,
        "id": "1bcf4a52-6664-4012-8f64-acf6198be436",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935690309,
        "parent_id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "memset(array, 0, ARRLEN * sizeof *array); /* Use size of type the pointer is pointing to. */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "memset(array, 0, ARRLEN * sizeof *array); /* Use size of type the pointer is pointing to. */",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935690309,
        "id": "723d6691-804f-4cff-9f2c-038b967d389f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935690309,
        "parent_id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As in this example "
            ],
            [
              "array",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "is",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " an array and not just a pointer to an array’s 1st element (see http://stackoverflow.com/documentation/c/322/arrays/1125/array-length#t=201701141205543540386 on why this is important) a third option to 0-out the array is possible:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As in this example "
          },
          {
            "Text": "array",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "is",
            "AttrFlags": 4
          },
          {
            "Text": " an array and not just a pointer to an array’s 1st element (see http://stackoverflow.com/documentation/c/322/arrays/1125/array-length#t=201701141205543540386 on why this is important) a third option to 0-out the array is possible:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935690309,
        "id": "73eacfcf-9531-4250-8f1e-6270fe399211",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935690309,
        "parent_id": "d94f0dba-5fa5-4993-ab59-8494f6126b26",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "memset(array, 0, sizeof array); /* Use size of the array itself. */"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "memset(array, 0, sizeof array); /* Use size of the array itself. */",
        "code_language": "Plain Text"
      }
    ],
    "title": "Clearing array contents zeroing",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}