{
  "ID": "0839c5c6-e319-4f6d-96db-fa6a4fcf6fb9",
  "Root": {
    "alive": true,
    "content": [
      "43a548f3-9334-4074-8207-2dadd0b31eaf",
      "30feea35-75af-492e-bb61-71cfca1599bc",
      "b0b4672b-e9c5-41ed-b6eb-e7fa3c7e23e2",
      "cb05c04a-fffc-40fe-80b8-aaca1b9be02e",
      "7558d68c-80eb-406a-92ad-3365100ba7a4",
      "6e07e53b-d042-4d10-a6f6-473c1cfa8d7f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936224504,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0839c5c6-e319-4f6d-96db-fa6a4fcf6fb9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936224504,
    "parent_id": "fceea03f-c65b-4f89-8e06-817d0fcf3348",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Object-based programming using structs"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936224504,
        "id": "43a548f3-9334-4074-8207-2dadd0b31eaf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936224504,
        "parent_id": "0839c5c6-e319-4f6d-96db-fa6a4fcf6fb9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Structs may be used to implement code in an object oriented manner. A struct is similar to a class, but is missing the functions which normally also form part of a class, we can add these as function pointer member variables. To stay with our coordinates example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Structs may be used to implement code in an object oriented manner. A struct is similar to a class, but is missing the functions which normally also form part of a class, we can add these as function pointer member variables. To stay with our coordinates example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936224504,
        "id": "30feea35-75af-492e-bb61-71cfca1599bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936224504,
        "parent_id": "0839c5c6-e319-4f6d-96db-fa6a4fcf6fb9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* coordinates.h */\n\ntypedef struct coordinate_s \n{\n    /* Pointers to method functions */\n    void (*setx)(coordinate *this, int x);\n    void (*sety)(coordinate *this, int y);\n    void (*print)(coordinate *this);\n    /* Data */\n    int x;\n    int y;\n} coordinate;\n\n/* Constructor */\ncoordinate *coordinate_create(void);\n/* Destructor */\nvoid coordinate_destroy(coordinate *this);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* coordinates.h */\n\ntypedef struct coordinate_s \n{\n    /* Pointers to method functions */\n    void (*setx)(coordinate *this, int x);\n    void (*sety)(coordinate *this, int y);\n    void (*print)(coordinate *this);\n    /* Data */\n    int x;\n    int y;\n} coordinate;\n\n/* Constructor */\ncoordinate *coordinate_create(void);\n/* Destructor */\nvoid coordinate_destroy(coordinate *this);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936224504,
        "id": "b0b4672b-e9c5-41ed-b6eb-e7fa3c7e23e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936224504,
        "parent_id": "0839c5c6-e319-4f6d-96db-fa6a4fcf6fb9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And now the implementing C file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And now the implementing C file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936224504,
        "id": "cb05c04a-fffc-40fe-80b8-aaca1b9be02e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936224504,
        "parent_id": "0839c5c6-e319-4f6d-96db-fa6a4fcf6fb9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* coordinates.c */\n\n#include \"coordinates.h\"\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n\n/* Constructor */\ncoordinate *coordinate_create(void)\n{\n    coordinate *c = malloc(sizeof(*c));\n    if (c != 0)\n    {\n        c-\u003esetx = \u0026coordinate_setx;\n        c-\u003esety = \u0026coordinate_sety;\n        c-\u003eprint = \u0026coordinate_print;\n        c-\u003ex = 0;\n        c-\u003ey = 0;\n    }\n    return c;\n}\n\n/* Destructor */\nvoid coordinate_destroy(coordinate *this)\n{\n    if (this != NULL)\n    {\n        free(this);  \n    }  \n}\n\n/* Methods */\nstatic void coordinate_setx(coordinate *this, int x)\n{\n    if (this != NULL)\n    {    \n        this-\u003ex = x;\n    }\n}\n\nstatic void coordinate_sety(coordinate *this, int y)\n{\n    if (this != NULL)\n    {\n        this-\u003ey = y;\n    }\n}\n\nstatic void coordinate_print(coordinate *this)\n{\n    if (this != NULL)\n    {\n        printf(\"Coordinate: (%i, %i)\\n\", this-\u003ex, this-\u003ey);\n    }\n    else\n    {\n        printf(\"NULL pointer exception!\\n\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* coordinates.c */\n\n#include \"coordinates.h\"\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n\n/* Constructor */\ncoordinate *coordinate_create(void)\n{\n    coordinate *c = malloc(sizeof(*c));\n    if (c != 0)\n    {\n        c-\u003esetx = \u0026coordinate_setx;\n        c-\u003esety = \u0026coordinate_sety;\n        c-\u003eprint = \u0026coordinate_print;\n        c-\u003ex = 0;\n        c-\u003ey = 0;\n    }\n    return c;\n}\n\n/* Destructor */\nvoid coordinate_destroy(coordinate *this)\n{\n    if (this != NULL)\n    {\n        free(this);  \n    }  \n}\n\n/* Methods */\nstatic void coordinate_setx(coordinate *this, int x)\n{\n    if (this != NULL)\n    {    \n        this-\u003ex = x;\n    }\n}\n\nstatic void coordinate_sety(coordinate *this, int y)\n{\n    if (this != NULL)\n    {\n        this-\u003ey = y;\n    }\n}\n\nstatic void coordinate_print(coordinate *this)\n{\n    if (this != NULL)\n    {\n        printf(\"Coordinate: (%i, %i)\\n\", this-\u003ex, this-\u003ey);\n    }\n    else\n    {\n        printf(\"NULL pointer exception!\\n\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936224504,
        "id": "7558d68c-80eb-406a-92ad-3365100ba7a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936224504,
        "parent_id": "0839c5c6-e319-4f6d-96db-fa6a4fcf6fb9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example usage of our coordinate class would be:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example usage of our coordinate class would be:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936224504,
        "id": "6e07e53b-d042-4d10-a6f6-473c1cfa8d7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936224504,
        "parent_id": "0839c5c6-e319-4f6d-96db-fa6a4fcf6fb9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* main.c */\n\n#include \"coordinates.h\"\n#include \u003cstddef.h\u003e\n\nint main(void) \n{\n    /* Create and initialize pointers to coordinate objects */\n    coordinate *c1 = coordinate_create();\n    coordinate *c2 = coordinate_create();\n    \n    /* Now we can use our objects using our methods and passing the object as parameter */\n    c1-\u003esetx(c1, 1);\n    c1-\u003esety(c1, 2);\n\n    c2-\u003esetx(c2, 3);\n    c2-\u003esety(c2, 4);\n\n    c1-\u003eprint(c1);\n    c2-\u003eprint(c2);\n\n    /* After using our objects we destroy them using our \"destructor\" function */\n    coordinate_destroy(c1);\n    c1 = NULL;\n    coordinate_destroy(c2);\n    c2 = NULL;\n\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* main.c */\n\n#include \"coordinates.h\"\n#include \u003cstddef.h\u003e\n\nint main(void) \n{\n    /* Create and initialize pointers to coordinate objects */\n    coordinate *c1 = coordinate_create();\n    coordinate *c2 = coordinate_create();\n    \n    /* Now we can use our objects using our methods and passing the object as parameter */\n    c1-\u003esetx(c1, 1);\n    c1-\u003esety(c1, 2);\n\n    c2-\u003esetx(c2, 3);\n    c2-\u003esety(c2, 4);\n\n    c1-\u003eprint(c1);\n    c2-\u003eprint(c2);\n\n    /* After using our objects we destroy them using our \"destructor\" function */\n    coordinate_destroy(c1);\n    c1 = NULL;\n    coordinate_destroy(c2);\n    c2 = NULL;\n\n    return 0;\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Object-based programming using structs",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}