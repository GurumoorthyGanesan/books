{
  "ID": "064368a5-914e-4cb8-a594-15c9db88cd3c",
  "Root": {
    "alive": true,
    "content": [
      "ce94fc3b-11a1-456e-9557-2557c166e650",
      "54abd6cf-1664-4bd7-a5ed-45a923c39dd4",
      "f7859d4b-9102-4e65-8d69-4c4685bad0b4",
      "273a8b87-a6ae-4867-840a-2aa1bb7eccf0",
      "1fa87b50-6ae7-468d-a603-71828f64963c",
      "a8080deb-ac6a-4015-8dee-406e43045637",
      "0263c5f9-1edd-4ee0-af3d-01f08607d228",
      "6008b3c8-e09b-4b12-b26c-f218a56be1aa",
      "e3a316e8-1146-4707-bc9c-1c2e482b4ddd",
      "a33a1f86-45c5-4e44-a1e2-ac7064c7be65",
      "787e461b-b555-4f36-82bb-6e8647fadf17"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935878812,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935878812,
    "parent_id": "9dc6ce73-bdfa-4d4d-b5a1-db84c9227865",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Code generation"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878809,
        "id": "ce94fc3b-11a1-456e-9557-2557c166e650",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878809,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "X-Macros can be used for code generation, by writing repetitive code: iterate over a list to do some tasks, or to declare a set of constants, objects or functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "X-Macros can be used for code generation, by writing repetitive code: iterate over a list to do some tasks, or to declare a set of constants, objects or functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878810,
        "id": "54abd6cf-1664-4bd7-a5ed-45a923c39dd4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878810,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here we use X-macros to declare an enum containing 4 commands and a map of their names as strings"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here we use X-macros to declare an enum containing 4 commands and a map of their names as strings"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878810,
        "id": "f7859d4b-9102-4e65-8d69-4c4685bad0b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878810,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then we can print the string values of the enum."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then we can print the string values of the enum."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878810,
        "id": "273a8b87-a6ae-4867-840a-2aa1bb7eccf0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878810,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* All our commands */\n#define COMMANDS(OP) OP(Open) OP(Close) OP(Save) OP(Quit)\n\n/* generate the enum Commands: {cmdOpen, cmdClose, cmdSave, cmdQuit, }; */\n#define ENUM_NAME(name) cmd##name,\nenum Commands {\n  COMMANDS(ENUM_NAME)\n};\n#undef ENUM_NAME\n\n/* generate the string table */\n#define COMMAND_OP(name) #name,\nconst char* const commandNames[] = {\n  COMMANDS(COMMAND_OP)\n};\n#undef COMMAND_OP\n\n/* the following prints \"Quit\\n\": */\nprintf(\"%s\\n\", commandNames[cmdQuit]());"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* All our commands */\n#define COMMANDS(OP) OP(Open) OP(Close) OP(Save) OP(Quit)\n\n/* generate the enum Commands: {cmdOpen, cmdClose, cmdSave, cmdQuit, }; */\n#define ENUM_NAME(name) cmd##name,\nenum Commands {\n  COMMANDS(ENUM_NAME)\n};\n#undef ENUM_NAME\n\n/* generate the string table */\n#define COMMAND_OP(name) #name,\nconst char* const commandNames[] = {\n  COMMANDS(COMMAND_OP)\n};\n#undef COMMAND_OP\n\n/* the following prints \"Quit\\n\": */\nprintf(\"%s\\n\", commandNames[cmdQuit]());",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878810,
        "id": "1fa87b50-6ae7-468d-a603-71828f64963c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878810,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878810,
        "id": "a8080deb-ac6a-4015-8dee-406e43045637",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878810,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarly, we can generate a jump table to call functions by the enum value."
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Similarly, we can generate a jump table to call functions by the enum value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878811,
        "id": "0263c5f9-1edd-4ee0-af3d-01f08607d228",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878811,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This requires all functions to have the same signature. If they take no arguments and return an int, we would put this in a header with the enum definition:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This requires all functions to have the same signature. If they take no arguments and return an int, we would put this in a header with the enum definition:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878811,
        "id": "6008b3c8-e09b-4b12-b26c-f218a56be1aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878811,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* declare all functions as extern */\n#define EXTERN_FUNC(name) extern int doCmd##name(void);\nCOMMANDS(EXTERN_FUNC)\n#undef EXTERN_FUNC\n\n/* declare the function pointer type and the jump table  */\ntypedef int (*CommandFunc)(void);\nextern CommandFunc commandJumpTable[];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* declare all functions as extern */\n#define EXTERN_FUNC(name) extern int doCmd##name(void);\nCOMMANDS(EXTERN_FUNC)\n#undef EXTERN_FUNC\n\n/* declare the function pointer type and the jump table  */\ntypedef int (*CommandFunc)(void);\nextern CommandFunc commandJumpTable[];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878811,
        "id": "e3a316e8-1146-4707-bc9c-1c2e482b4ddd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878811,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All of the following can be in different compilation units assuming the part above is included as a header:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All of the following can be in different compilation units assuming the part above is included as a header:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878811,
        "id": "a33a1f86-45c5-4e44-a1e2-ac7064c7be65",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878811,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* generate the jump table */\n#define FUNC_NAME(name) doCmd##name,\nCommandFunc commandJumpTable[] = {\n  COMMANDS(FUNC_NAME)\n};\n#undef FUNC_NAME\n\n/* call the save command like this: */\nint result = commandJumpTable[cmdSave]();\n\n/* somewhere else, we need the implementations of the commands */\nint doCmdOpen(void) {/* code performing open command */}\nint doCmdClose(void) {/* code performing close command */}\nint doCmdSave(void) {/* code performing save command */}\nint doCmdQuit(void) {/* code performing quit command */}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* generate the jump table */\n#define FUNC_NAME(name) doCmd##name,\nCommandFunc commandJumpTable[] = {\n  COMMANDS(FUNC_NAME)\n};\n#undef FUNC_NAME\n\n/* call the save command like this: */\nint result = commandJumpTable[cmdSave]();\n\n/* somewhere else, we need the implementations of the commands */\nint doCmdOpen(void) {/* code performing open command */}\nint doCmdClose(void) {/* code performing close command */}\nint doCmdSave(void) {/* code performing save command */}\nint doCmdQuit(void) {/* code performing quit command */}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935878812,
        "id": "787e461b-b555-4f36-82bb-6e8647fadf17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935878812,
        "parent_id": "064368a5-914e-4cb8-a594-15c9db88cd3c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An example of this technique being used in real code is for "
            ],
            [
              "GPU command dispatching in Chromium",
              [
                [
                  "a",
                  "https://src.chromium.org/viewvc/chrome/trunk/src/gpu/command_buffer/common/gles2_cmd_ids_autogen.h"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "An example of this technique being used in real code is for "
          },
          {
            "Text": "GPU command dispatching in Chromium",
            "Link": "https://src.chromium.org/viewvc/chrome/trunk/src/gpu/command_buffer/common/gles2_cmd_ids_autogen.h"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Code generation",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}