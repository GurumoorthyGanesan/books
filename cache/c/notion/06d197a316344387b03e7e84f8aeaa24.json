{
  "ID": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
  "Root": {
    "alive": true,
    "content": [
      "8a42a9e2-62be-43f7-a15f-8a33a822f161",
      "14fc032c-1967-4df2-aeeb-8e55b0183e38",
      "9bc3010c-ece5-44ef-b31e-882117ee5a96",
      "51656d0e-4b56-4bdb-9088-adeecf1ae026",
      "a601f102-6fa1-401c-9cd7-d98adfde44e0",
      "db80ad04-5313-4f70-bfb1-bfb4215ce8e3",
      "008a4685-419f-479d-8696-06497b8a9788",
      "b289bc45-e749-4c4d-b7a2-4d876266ceed",
      "37eeaaf9-15e6-4104-ae30-77e272f954b7",
      "5b4f9119-97b2-4ea5-b236-4e82d0d394a7",
      "790edb14-48b0-4a44-9437-b10498781aa9",
      "7a289a38-ecfa-4a20-a8bf-e17dd7713ba8",
      "a18cb002-010d-4fae-9c1c-b172d3461769",
      "e079cde5-6b0b-43b4-b2b4-f311dcf53222",
      "224c0752-2c23-4d8a-9b18-3eeee0f18f87",
      "777c8925-de58-4e4c-88d7-f2f8c6dc7c46",
      "4f8e2237-cb20-4d13-b43e-901f6c3f4559"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936209487,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936209487,
    "parent_id": "1e14553b-8aea-44fb-a0fe-fbc893ff529a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Dereferencing a Pointer to a struct"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209481,
        "id": "8a42a9e2-62be-43f7-a15f-8a33a822f161",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209481,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s say we have the following structure:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s say we have the following structure:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209484,
        "id": "14fc032c-1967-4df2-aeeb-8e55b0183e38",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209484,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct MY_STRUCT \n{\n    int my_int;\n    float my_float;\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct MY_STRUCT \n{\n    int my_int;\n    float my_float;\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209484,
        "id": "9bc3010c-ece5-44ef-b31e-882117ee5a96",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209484,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can define "
            ],
            [
              "MY_STRUCT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to omit the "
            ],
            [
              "struct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword so we don’t have to type "
            ],
            [
              "struct MY_STRUCT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " each time we use it. This, however, is optional."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can define "
          },
          {
            "Text": "MY_STRUCT",
            "AttrFlags": 2
          },
          {
            "Text": " to omit the "
          },
          {
            "Text": "struct",
            "AttrFlags": 2
          },
          {
            "Text": " keyword so we don’t have to type "
          },
          {
            "Text": "struct MY_STRUCT",
            "AttrFlags": 2
          },
          {
            "Text": " each time we use it. This, however, is optional."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209485,
        "id": "51656d0e-4b56-4bdb-9088-adeecf1ae026",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209485,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef struct MY_STRUCT MY_STRUCT;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef struct MY_STRUCT MY_STRUCT;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209485,
        "id": "a601f102-6fa1-401c-9cd7-d98adfde44e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209485,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we then have a pointer to an instance of this struct"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we then have a pointer to an instance of this struct"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209485,
        "id": "db80ad04-5313-4f70-bfb1-bfb4215ce8e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209485,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MY_STRUCT *instance;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MY_STRUCT *instance;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209485,
        "id": "008a4685-419f-479d-8696-06497b8a9788",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209485,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If this statement appears at file scope, "
            ],
            [
              "instance",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be initialized with a null pointer when the program starts. If this statement appears inside a function, its value is undefined. The variable must be initialized to point to a valid "
            ],
            [
              "MY_STRUCT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable, or to dynamically allocated space, before it can be dereferenced. For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If this statement appears at file scope, "
          },
          {
            "Text": "instance",
            "AttrFlags": 2
          },
          {
            "Text": " will be initialized with a null pointer when the program starts. If this statement appears inside a function, its value is undefined. The variable must be initialized to point to a valid "
          },
          {
            "Text": "MY_STRUCT",
            "AttrFlags": 2
          },
          {
            "Text": " variable, or to dynamically allocated space, before it can be dereferenced. For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209485,
        "id": "b289bc45-e749-4c4d-b7a2-4d876266ceed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209485,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MY_STRUCT info = { 1, 3.141593F };\nMY_STRUCT *instance = \u0026info;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MY_STRUCT info = { 1, 3.141593F };\nMY_STRUCT *instance = \u0026info;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209485,
        "id": "37eeaaf9-15e6-4104-ae30-77e272f954b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209485,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the pointer is valid, we can dereference it to access its members using one of two different notations:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the pointer is valid, we can dereference it to access its members using one of two different notations:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209485,
        "id": "5b4f9119-97b2-4ea5-b236-4e82d0d394a7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209485,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int a = (*instance).my_int;\nfloat b = instance-\u003emy_float;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int a = (*instance).my_int;\nfloat b = instance-\u003emy_float;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209486,
        "id": "790edb14-48b0-4a44-9437-b10498781aa9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209486,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While both these methods work, it is better practice to use the arrow "
            ],
            [
              "-\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator rather than the combination of parentheses, the dereference "
            ],
            [
              "\\*",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator and the dot "
            ],
            [
              ".",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator because it is easier to read and understand, especially with nested uses."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While both these methods work, it is better practice to use the arrow "
          },
          {
            "Text": "-\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " operator rather than the combination of parentheses, the dereference "
          },
          {
            "Text": "\\*",
            "AttrFlags": 2
          },
          {
            "Text": " operator and the dot "
          },
          {
            "Text": ".",
            "AttrFlags": 2
          },
          {
            "Text": " operator because it is easier to read and understand, especially with nested uses."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209486,
        "id": "7a289a38-ecfa-4a20-a8bf-e17dd7713ba8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209486,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another important difference is shown below:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another important difference is shown below:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209486,
        "id": "a18cb002-010d-4fae-9c1c-b172d3461769",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209486,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MY_STRUCT copy = *instance;\ncopy.my_int    = 2;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MY_STRUCT copy = *instance;\ncopy.my_int    = 2;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209486,
        "id": "e079cde5-6b0b-43b4-b2b4-f311dcf53222",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209486,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case, "
            ],
            [
              "copy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " contains a copy of the contents of "
            ],
            [
              "instance",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Changing "
            ],
            [
              "my_int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " of "
            ],
            [
              "copy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will not change it in "
            ],
            [
              "instance",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case, "
          },
          {
            "Text": "copy",
            "AttrFlags": 2
          },
          {
            "Text": " contains a copy of the contents of "
          },
          {
            "Text": "instance",
            "AttrFlags": 2
          },
          {
            "Text": ". Changing "
          },
          {
            "Text": "my_int",
            "AttrFlags": 2
          },
          {
            "Text": " of "
          },
          {
            "Text": "copy",
            "AttrFlags": 2
          },
          {
            "Text": " will not change it in "
          },
          {
            "Text": "instance",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209486,
        "id": "224c0752-2c23-4d8a-9b18-3eeee0f18f87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209486,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MY_STRUCT *ref = instance;\nref-\u003emy_int    = 2;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MY_STRUCT *ref = instance;\nref-\u003emy_int    = 2;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209487,
        "id": "777c8925-de58-4e4c-88d7-f2f8c6dc7c46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209487,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this case, "
            ],
            [
              "ref",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a reference to "
            ],
            [
              "instance",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Changing "
            ],
            [
              "my_int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " using the reference will change it in "
            ],
            [
              "instance",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this case, "
          },
          {
            "Text": "ref",
            "AttrFlags": 2
          },
          {
            "Text": " is a reference to "
          },
          {
            "Text": "instance",
            "AttrFlags": 2
          },
          {
            "Text": ". Changing "
          },
          {
            "Text": "my_int",
            "AttrFlags": 2
          },
          {
            "Text": " using the reference will change it in "
          },
          {
            "Text": "instance",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936209487,
        "id": "4f8e2237-cb20-4d13-b43e-901f6c3f4559",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936209487,
        "parent_id": "06d197a3-1634-4387-b03e-7e84f8aeaa24",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is common practice to use pointers to structs as parameters in functions, rather than the structs themselves. Using the structs as function parameters could cause the stack to overflow if the struct is large. Using a pointer to a struct only uses enough stack space for the pointer, but can cause side effects if the function changes the struct which is passed into the function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is common practice to use pointers to structs as parameters in functions, rather than the structs themselves. Using the structs as function parameters could cause the stack to overflow if the struct is large. Using a pointer to a struct only uses enough stack space for the pointer, but can cause side effects if the function changes the struct which is passed into the function."
          }
        ]
      }
    ],
    "title": "Dereferencing a Pointer to a struct",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}