{
  "ID": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
  "Root": {
    "alive": true,
    "content": [
      "cb6b7a45-1cb8-42af-be8c-346066472b77",
      "c9ff343a-2355-4aea-bbab-1482c55d5063",
      "ed3e3cdf-a357-4542-92e3-071c87ffc4eb",
      "eac00890-b211-4836-a8e4-4e6b00168cc2",
      "1e91b945-ba56-4c06-b3e6-b4bd9b0afe3f",
      "0f5d7b06-13a3-43b8-85b1-320803c6c9a6",
      "7e95d27c-c2e9-4497-857f-72d1a978c592",
      "0da73d69-c355-46f6-8756-b4d3f85226e7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936263197,
    "id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936263197,
    "parent_id": "fb1c49da-f858-420f-804f-317776d975e9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "030 Changing bytes"
        ]
      ]
    },
    "type": "page",
    "version": 1,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936263192,
        "id": "cb6b7a45-1cb8-42af-be8c-346066472b77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936263192,
        "parent_id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Once an object has an effective type, you should not attempt to modify it through a pointer of another type, unless that other type is a character type, "
            ],
            [
              "char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "signed char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Once an object has an effective type, you should not attempt to modify it through a pointer of another type, unless that other type is a character type, "
          },
          {
            "Text": "char",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "signed char",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936263194,
        "id": "c9ff343a-2355-4aea-bbab-1482c55d5063",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936263194,
        "parent_id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#include \u003cinttypes.h\u003e\n#include \u003cstdio.h\u003e\n\nint main(void) {\n  uint32_t a = 57;\n  // conversion from incompatible types needs a cast !\n  unsigned char* ap = (unsigned char*)\u0026a;\n  for (size_t i = 0; i \u003c sizeof a; ++i) {\n    /* set each byte of a to 42 */\n    ap[i] = 42;\n  }\n  printf(\"a now has value %\" PRIu32 \"\\n\", a);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#include \u003cinttypes.h\u003e\n#include \u003cstdio.h\u003e\n\nint main(void) {\n  uint32_t a = 57;\n  // conversion from incompatible types needs a cast !\n  unsigned char* ap = (unsigned char*)\u0026a;\n  for (size_t i = 0; i \u003c sizeof a; ++i) {\n    /* set each byte of a to 42 */\n    ap[i] = 42;\n  }\n  printf(\"a now has value %\" PRIu32 \"\\n\", a);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936263195,
        "id": "ed3e3cdf-a357-4542-92e3-071c87ffc4eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936263195,
        "parent_id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a valid program that prints"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a valid program that prints"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936263195,
        "id": "eac00890-b211-4836-a8e4-4e6b00168cc2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936263195,
        "parent_id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "a now has value 707406378"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "a now has value 707406378"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936263195,
        "id": "1e91b945-ba56-4c06-b3e6-b4bd9b0afe3f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936263195,
        "parent_id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This works because:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This works because:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936263196,
        "id": "0f5d7b06-13a3-43b8-85b1-320803c6c9a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936263196,
        "parent_id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The access is made to the individual bytes seen with type "
            ],
            [
              "unsigned char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " so each modification is well defined."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The access is made to the individual bytes seen with type "
          },
          {
            "Text": "unsigned char",
            "AttrFlags": 2
          },
          {
            "Text": " so each modification is well defined."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936263196,
        "id": "7e95d27c-c2e9-4497-857f-72d1a978c592",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936263196,
        "parent_id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The two views to the object, through "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and through "
            ],
            [
              "*ap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", alias, but since "
            ],
            [
              "ap",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a pointer to a character type, the strict aliasing rule does not apply. Thus the compiler has to assume that the value of "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " may have been changed in the "
            ],
            [
              "for",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " loop. The modified value of "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " must be constructed from the bytes that have been changed."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The two views to the object, through "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " and through "
          },
          {
            "Text": "*ap",
            "AttrFlags": 2
          },
          {
            "Text": ", alias, but since "
          },
          {
            "Text": "ap",
            "AttrFlags": 2
          },
          {
            "Text": " is a pointer to a character type, the strict aliasing rule does not apply. Thus the compiler has to assume that the value of "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " may have been changed in the "
          },
          {
            "Text": "for",
            "AttrFlags": 2
          },
          {
            "Text": " loop. The modified value of "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": " must be constructed from the bytes that have been changed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936263197,
        "id": "0da73d69-c355-46f6-8756-b4d3f85226e7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936263197,
        "parent_id": "0c4a8045-bc73-4a7c-a548-6412b6d84dd4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The type of "
            ],
            [
              "a",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "uint32_t",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has no padding bits. All its bits of the representation count for the value, here "
            ],
            [
              "707406378",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and there can be no trap representation."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The type of "
          },
          {
            "Text": "a",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "uint32_t",
            "AttrFlags": 2
          },
          {
            "Text": " has no padding bits. All its bits of the representation count for the value, here "
          },
          {
            "Text": "707406378",
            "AttrFlags": 2
          },
          {
            "Text": ", and there can be no trap representation."
          }
        ]
      }
    ],
    "title": "030 Changing bytes"
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}