{
  "ID": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
  "Root": {
    "alive": true,
    "content": [
      "8004e9b6-eac7-41ab-ba8a-00cf6403e85b",
      "110e2334-c6e9-493e-8bfd-897403c5a506",
      "e4ca4931-3597-4638-961a-47c771c84f5c",
      "9bdfaf21-a47d-4e80-9502-903dbc1e9d64",
      "da6c1db8-92cf-4896-9369-0bc039f8eabf",
      "4df09289-c73d-4658-98bb-5c188ac043e0",
      "8960c7a1-de0f-40ac-a285-0dcda7b8f03a",
      "f6763db8-788f-4ffd-9da3-f4e79df9c26b",
      "19d616c7-becb-46a1-84a3-ad6844409a22",
      "e2dfe64f-5085-4f27-9ff2-0053b26bef92",
      "435d6ab6-7982-4f95-92c2-44a02c21d2b7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936228405,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936228405,
    "parent_id": "fceea03f-c65b-4f89-8e06-817d0fcf3348",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Typedef enum"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228399,
        "id": "8004e9b6-eac7-41ab-ba8a-00cf6403e85b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228399,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are several possibilities and conventions to name an enumeration. The first is to use a "
            ],
            [
              "tag name",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " just after the "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are several possibilities and conventions to name an enumeration. The first is to use a "
          },
          {
            "Text": "tag name",
            "AttrFlags": 4
          },
          {
            "Text": " just after the "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " keyword."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228402,
        "id": "110e2334-c6e9-493e-8bfd-897403c5a506",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228402,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum color\n{ \n    RED, \n    GREEN, \n    BLUE \n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum color\n{ \n    RED, \n    GREEN, \n    BLUE \n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228402,
        "id": "e4ca4931-3597-4638-961a-47c771c84f5c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228402,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This enumeration must then always be used with the keyword "
            ],
            [
              "and",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the tag like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This enumeration must then always be used with the keyword "
          },
          {
            "Text": "and",
            "AttrFlags": 4
          },
          {
            "Text": " the tag like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228403,
        "id": "9bdfaf21-a47d-4e80-9502-903dbc1e9d64",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228403,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum color chosenColor = RED;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum color chosenColor = RED;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228403,
        "id": "da6c1db8-92cf-4896-9369-0bc039f8eabf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228403,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we use "
            ],
            [
              "typedef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " directly when declaring the "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we can omit the tag name and then use the type without the "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we use "
          },
          {
            "Text": "typedef",
            "AttrFlags": 2
          },
          {
            "Text": " directly when declaring the "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": ", we can omit the tag name and then use the type without the "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " keyword:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228403,
        "id": "4df09289-c73d-4658-98bb-5c188ac043e0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228403,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef enum \n{ \n    RED, \n    GREEN, \n    BLUE \n} color;\n\ncolor chosenColor = RED;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef enum \n{ \n    RED, \n    GREEN, \n    BLUE \n} color;\n\ncolor chosenColor = RED;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228405,
        "id": "8960c7a1-de0f-40ac-a285-0dcda7b8f03a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228405,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But in this latter case we cannot use it as "
            ],
            [
              "enum color",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", because we didnâ€™t use the tag name in the definition. One common convention is to use both, such that the same name can be used with or without "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword. This has the particular advantage of being compatible with "
            ],
            [
              "C++",
              [
                [
                  "a",
                  "https://stackoverflow.com/documentation/c%2B%2B/topics"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "But in this latter case we cannot use it as "
          },
          {
            "Text": "enum color",
            "AttrFlags": 2
          },
          {
            "Text": ", because we didnâ€™t use the tag name in the definition. One common convention is to use both, such that the same name can be used with or without "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " keyword. This has the particular advantage of being compatible with "
          },
          {
            "Text": "C++",
            "Link": "https://stackoverflow.com/documentation/c%2B%2B/topics"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228405,
        "id": "f6763db8-788f-4ffd-9da3-f4e79df9c26b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228405,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "enum color                /* as in the first example */\n{ \n    RED, \n    GREEN, \n    BLUE \n};\ntypedef enum color color; /* also a typedef of same identifier */\n\ncolor chosenColor  = RED;\nenum color defaultColor = BLUE;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "enum color                /* as in the first example */\n{ \n    RED, \n    GREEN, \n    BLUE \n};\ntypedef enum color color; /* also a typedef of same identifier */\n\ncolor chosenColor  = RED;\nenum color defaultColor = BLUE;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228405,
        "id": "19d616c7-becb-46a1-84a3-ad6844409a22",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228405,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228405,
        "id": "e2dfe64f-5085-4f27-9ff2-0053b26bef92",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228405,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void printColor()\n{\n    if (chosenColor == RED)\n    {\n        printf(\"RED\\n\");\n    }\n    else if (chosenColor == GREEN)\n    {\n        printf(\"GREEN\\n\");    \n    }\n    else if (chosenColor == BLUE)\n    {\n        printf(\"BLUE\\n\");\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void printColor()\n{\n    if (chosenColor == RED)\n    {\n        printf(\"RED\\n\");\n    }\n    else if (chosenColor == GREEN)\n    {\n        printf(\"GREEN\\n\");    \n    }\n    else if (chosenColor == BLUE)\n    {\n        printf(\"BLUE\\n\");\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936228405,
        "id": "435d6ab6-7982-4f95-92c2-44a02c21d2b7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936228405,
        "parent_id": "5ef1da77-bf0f-4cb6-be82-3ee8d506aa74",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For more on "
            ],
            [
              "typedef",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " see https://stackoverflow.com/documentation/c/2681/typedef"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For more on "
          },
          {
            "Text": "typedef",
            "AttrFlags": 2
          },
          {
            "Text": " see https://stackoverflow.com/documentation/c/2681/typedef"
          }
        ]
      }
    ],
    "title": "Typedef enum",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}