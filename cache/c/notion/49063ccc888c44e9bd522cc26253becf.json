{
  "ID": "49063ccc-888c-44e9-bd52-2cc26253becf",
  "Root": {
    "alive": true,
    "content": [
      "123a6194-a5e0-4cf1-ada7-1b867d694f70",
      "a1b7da29-23fc-4187-83fc-ef27b60acb2c",
      "69408813-365f-4e8f-acbe-a6a7093558ac",
      "3fc5ae90-3814-4abe-a12b-90ba0f376ae6",
      "f3b4c629-c5f8-4c16-9330-584620f11e3a",
      "90f0853f-fdfa-4654-9408-c7d1ba230b95",
      "4ca08dfc-cc1e-4187-807b-9f396bd5728a",
      "d327d764-54b4-4e15-bac0-380d22e9ec57",
      "d607a55d-0a03-46a1-a0e3-4a877fe3a81d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936262199,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "49063ccc-888c-44e9-bd52-2cc26253becf",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936262199,
    "parent_id": "fb1c49da-f858-420f-804f-317776d975e9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "restrict qualification"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262195,
        "id": "123a6194-a5e0-4cf1-ada7-1b867d694f70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262195,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we have two pointer arguments of the same type, the compiler can’t make any assumption and will always have to assume that the change to "
            ],
            [
              "*e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " may change "
            ],
            [
              "*f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If we have two pointer arguments of the same type, the compiler can’t make any assumption and will always have to assume that the change to "
          },
          {
            "Text": "*e",
            "AttrFlags": 2
          },
          {
            "Text": " may change "
          },
          {
            "Text": "*f",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262197,
        "id": "a1b7da29-23fc-4187-83fc-ef27b60acb2c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262197,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void fun(float* e, float* f) {\n    float a = *f\n    *e = 22;\n    float b = *f;\n    print(\"is %g equal to %g?\\n\", a, b);\n}\n\nfloat fval = 4;\nfloat eval = 77;\n fun(\u0026eval, \u0026fval);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void fun(float* e, float* f) {\n    float a = *f\n    *e = 22;\n    float b = *f;\n    print(\"is %g equal to %g?\\n\", a, b);\n}\n\nfloat fval = 4;\nfloat eval = 77;\n fun(\u0026eval, \u0026fval);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262198,
        "id": "69408813-365f-4e8f-acbe-a6a7093558ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262198,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "all goes well and something like"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "all goes well and something like"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262198,
        "id": "3fc5ae90-3814-4abe-a12b-90ba0f376ae6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262198,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "is 4 equal to 4?"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "is 4 equal to 4?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262198,
        "id": "f3b4c629-c5f8-4c16-9330-584620f11e3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262198,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "is printed. If we pass the same pointer, the program will still do the right thing and print"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "is printed. If we pass the same pointer, the program will still do the right thing and print"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262198,
        "id": "90f0853f-fdfa-4654-9408-c7d1ba230b95",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262198,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "is 4 equal to 22?"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "is 4 equal to 22?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262198,
        "id": "4ca08dfc-cc1e-4187-807b-9f396bd5728a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262198,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can turn out to be inefficient, if we "
            ],
            [
              "know",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " by some outside information that "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will never point to the same data object. We can reflect that knowledge by adding "
            ],
            [
              "restrict",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " qualifiers to the pointer parameters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can turn out to be inefficient, if we "
          },
          {
            "Text": "know",
            "AttrFlags": 4
          },
          {
            "Text": " by some outside information that "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " will never point to the same data object. We can reflect that knowledge by adding "
          },
          {
            "Text": "restrict",
            "AttrFlags": 2
          },
          {
            "Text": " qualifiers to the pointer parameters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262199,
        "id": "d327d764-54b4-4e15-bac0-380d22e9ec57",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262199,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void fan(float*restrict e, float*restrict f) {\n    float a = *f\n    *e = 22;\n    float b = *f;\n    print(\"is %g equal to %g?\\n\", a, b);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void fan(float*restrict e, float*restrict f) {\n    float a = *f\n    *e = 22;\n    float b = *f;\n    print(\"is %g equal to %g?\\n\", a, b);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936262199,
        "id": "d607a55d-0a03-46a1-a0e3-4a877fe3a81d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936262199,
        "parent_id": "49063ccc-888c-44e9-bd52-2cc26253becf",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Then the compiler may always suppose that "
            ],
            [
              "e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "f",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " point to different objects."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Then the compiler may always suppose that "
          },
          {
            "Text": "e",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "f",
            "AttrFlags": 2
          },
          {
            "Text": " point to different objects."
          }
        ]
      }
    ],
    "title": "restrict qualification",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}