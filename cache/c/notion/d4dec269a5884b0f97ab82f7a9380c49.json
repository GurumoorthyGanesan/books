{
  "ID": "d4dec269-a588-4b0f-97ab-82f7a9380c49",
  "Root": {
    "alive": true,
    "content": [
      "9123225d-cdec-4455-ae52-d3d30765490b",
      "2c0bd4df-020c-4f83-b620-3dc449700050",
      "cdac2cfd-a635-4d13-a889-ac20cb9ce9ae"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551935781371,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d4dec269-a588-4b0f-97ab-82f7a9380c49",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551935781371,
    "parent_id": "68e74303-cec6-4c9d-a46e-83274bc84bf4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Token pasting"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935781368,
        "id": "9123225d-cdec-4455-ae52-d3d30765490b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935781368,
        "parent_id": "d4dec269-a588-4b0f-97ab-82f7a9380c49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Token pasting allows one to glue together two macro arguments. For example, "
            ],
            [
              "front##back",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " yields "
            ],
            [
              "frontback",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". A famous example is Win32’s "
            ],
            [
              "\u003cTCHAR.H\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " header. In standard C, one can write "
            ],
            [
              "L\"string\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to declare a wide character string. However, Windows API allows one to convert between wide character strings and narrow character strings simply by "
            ],
            [
              "#define",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "ing "
            ],
            [
              "UNICODE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". In order to implement the string literals, "
            ],
            [
              "TCHAR.H",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " uses this"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Token pasting allows one to glue together two macro arguments. For example, "
          },
          {
            "Text": "front##back",
            "AttrFlags": 2
          },
          {
            "Text": " yields "
          },
          {
            "Text": "frontback",
            "AttrFlags": 2
          },
          {
            "Text": ". A famous example is Win32’s "
          },
          {
            "Text": "\u003cTCHAR.H\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " header. In standard C, one can write "
          },
          {
            "Text": "L\"string\"",
            "AttrFlags": 2
          },
          {
            "Text": " to declare a wide character string. However, Windows API allows one to convert between wide character strings and narrow character strings simply by "
          },
          {
            "Text": "#define",
            "AttrFlags": 2
          },
          {
            "Text": "ing "
          },
          {
            "Text": "UNICODE",
            "AttrFlags": 2
          },
          {
            "Text": ". In order to implement the string literals, "
          },
          {
            "Text": "TCHAR.H",
            "AttrFlags": 2
          },
          {
            "Text": " uses this"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935781371,
        "id": "2c0bd4df-020c-4f83-b620-3dc449700050",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935781371,
        "parent_id": "d4dec269-a588-4b0f-97ab-82f7a9380c49",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#ifdef UNICODE\n#define TEXT(x) L##x\n#endif"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#ifdef UNICODE\n#define TEXT(x) L##x\n#endif",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551935781371,
        "id": "cdac2cfd-a635-4d13-a889-ac20cb9ce9ae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551935781371,
        "parent_id": "d4dec269-a588-4b0f-97ab-82f7a9380c49",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Whenever a user writes "
            ],
            [
              "TEXT(\"hello, world\")",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and UNICODE is defined, the C preprocessor concatenates "
            ],
            [
              "L",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the macro argument. "
            ],
            [
              "L",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " concatenated with "
            ],
            [
              "\"hello, world\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " gives "
            ],
            [
              "L\"hello, world\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Whenever a user writes "
          },
          {
            "Text": "TEXT(\"hello, world\")",
            "AttrFlags": 2
          },
          {
            "Text": ", and UNICODE is defined, the C preprocessor concatenates "
          },
          {
            "Text": "L",
            "AttrFlags": 2
          },
          {
            "Text": " and the macro argument. "
          },
          {
            "Text": "L",
            "AttrFlags": 2
          },
          {
            "Text": " concatenated with "
          },
          {
            "Text": "\"hello, world\"",
            "AttrFlags": 2
          },
          {
            "Text": " gives "
          },
          {
            "Text": "L\"hello, world\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Token pasting",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}