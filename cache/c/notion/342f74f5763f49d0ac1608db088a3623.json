{
  "ID": "342f74f5-763f-49d0-ac16-08db088a3623",
  "Root": {
    "alive": true,
    "content": [
      "8067fe6a-78df-4882-8e33-2c5ed2382589",
      "fd23a3f7-fa09-4b17-a9ab-d42d64ad0e17",
      "2f5522c6-0a30-41b9-ba2e-5c58bbdee7df",
      "72b7902a-3296-4fbe-8463-cacf97d357b6",
      "81197f1b-cd96-4828-aef7-7d764ec636cc",
      "8f72aada-9876-4656-8f5b-67b823e0307d",
      "5edf0ac9-8ce4-4138-8a8b-4ec68e58da0e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936717313,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "342f74f5-763f-49d0-ac16-08db088a3623",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936717313,
    "parent_id": "ae1ce0ef-9ced-4caa-9c8d-f14041e087b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "040 The printf Function"
        ]
      ]
    },
    "type": "page",
    "version": 2,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936717310,
        "id": "8067fe6a-78df-4882-8e33-2c5ed2382589",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936717310,
        "parent_id": "342f74f5-763f-49d0-ac16-08db088a3623",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Accessed through including "
            ],
            [
              "\u003cstdio.h\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the function "
            ],
            [
              "printf()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the primary tool used for printing text to the console in C."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Accessed through including "
          },
          {
            "Text": "\u003cstdio.h\u003e",
            "AttrFlags": 2
          },
          {
            "Text": ", the function "
          },
          {
            "Text": "printf()",
            "AttrFlags": 2
          },
          {
            "Text": " is the primary tool used for printing text to the console in C."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936717312,
        "id": "fd23a3f7-fa09-4b17-a9ab-d42d64ad0e17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936717312,
        "parent_id": "342f74f5-763f-49d0-ac16-08db088a3623",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "printf(\"Hello world!\");\n// Hello world!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "printf(\"Hello world!\");\n// Hello world!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936717313,
        "id": "2f5522c6-0a30-41b9-ba2e-5c58bbdee7df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936717313,
        "parent_id": "342f74f5-763f-49d0-ac16-08db088a3623",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Normal, unformatted character arrays can be printed by themselves by placing them directly in between the parentheses."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Normal, unformatted character arrays can be printed by themselves by placing them directly in between the parentheses."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936717313,
        "id": "72b7902a-3296-4fbe-8463-cacf97d357b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936717313,
        "parent_id": "342f74f5-763f-49d0-ac16-08db088a3623",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "printf(\"%d is the answer to life, the universe, and everything.\", 42);\n// 42 is the answer to life, the universe, and everything.\n\nint x = 3;\nchar y = 'Z';\nchar* z = \"Example\";\nprintf(\"Int: %d, Char: %c, String: %s\", x, y, z);\n// Int: 3, Char: Z, String: Example"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "printf(\"%d is the answer to life, the universe, and everything.\", 42);\n// 42 is the answer to life, the universe, and everything.\n\nint x = 3;\nchar y = 'Z';\nchar* z = \"Example\";\nprintf(\"Int: %d, Char: %c, String: %s\", x, y, z);\n// Int: 3, Char: Z, String: Example",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936717313,
        "id": "81197f1b-cd96-4828-aef7-7d764ec636cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936717313,
        "parent_id": "342f74f5-763f-49d0-ac16-08db088a3623",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Alternatively, integers, floating-point numbers, characters, and more can be printed using the escape character "
            ],
            [
              "%",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", followed by a character or sequence of characters denoting the format, known as the "
            ],
            [
              "format specifier",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Alternatively, integers, floating-point numbers, characters, and more can be printed using the escape character "
          },
          {
            "Text": "%",
            "AttrFlags": 2
          },
          {
            "Text": ", followed by a character or sequence of characters denoting the format, known as the "
          },
          {
            "Text": "format specifier",
            "AttrFlags": 4
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936717313,
        "id": "8f72aada-9876-4656-8f5b-67b823e0307d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936717313,
        "parent_id": "342f74f5-763f-49d0-ac16-08db088a3623",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All additional arguments to the function "
            ],
            [
              "printf()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are separated by commas, and these arguments should be in the same order as the format specifiers. Additional arguments are ignored, while incorrectly typed arguments or a lack of arguments will cause errors or undefined behavior. Each argument can be either a literal value or a variable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All additional arguments to the function "
          },
          {
            "Text": "printf()",
            "AttrFlags": 2
          },
          {
            "Text": " are separated by commas, and these arguments should be in the same order as the format specifiers. Additional arguments are ignored, while incorrectly typed arguments or a lack of arguments will cause errors or undefined behavior. Each argument can be either a literal value or a variable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936717313,
        "id": "5edf0ac9-8ce4-4138-8a8b-4ec68e58da0e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936717313,
        "parent_id": "342f74f5-763f-49d0-ac16-08db088a3623",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "After successful execution, the number of characters printed is returned with type "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Otherwise, a failure returns a negative value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "After successful execution, the number of characters printed is returned with type "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": ". Otherwise, a failure returns a negative value."
          }
        ]
      }
    ],
    "title": "040 The printf Function",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}