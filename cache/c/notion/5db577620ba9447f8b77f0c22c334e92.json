{
  "ID": "5db57762-0ba9-447f-8b77-f0c22c334e92",
  "Root": {
    "alive": true,
    "content": [
      "02b348aa-b01d-44de-a1ad-981542e6493a",
      "8c4e5422-9956-48ba-9950-ee34ca8f5ec3",
      "ce02be14-8597-4712-946a-8ee5649cd861",
      "8b207ca3-05e0-4fdb-9414-87292e97610b",
      "4d0b0e49-b265-420a-9698-c5ead4f6096f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551936743234,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "5db57762-0ba9-447f-8b77-f0c22c334e92",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551936743234,
    "parent_id": "a32e93b8-a175-40b5-b72f-e58c30d058bb",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "gcc Basic asm support"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936743230,
        "id": "02b348aa-b01d-44de-a1ad-981542e6493a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936743230,
        "parent_id": "5db57762-0ba9-447f-8b77-f0c22c334e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Basic assembly support with gcc has the following syntax:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Basic assembly support with gcc has the following syntax:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936743233,
        "id": "8c4e5422-9956-48ba-9950-ee34ca8f5ec3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936743233,
        "parent_id": "5db57762-0ba9-447f-8b77-f0c22c334e92",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "asm [ volatile ] ( AssemblerInstructions )"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "asm [ volatile ] ( AssemblerInstructions )",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936743233,
        "id": "ce02be14-8597-4712-946a-8ee5649cd861",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936743233,
        "parent_id": "5db57762-0ba9-447f-8b77-f0c22c334e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "where "
            ],
            [
              "AssemblerInstructions",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the direct assembly code for the given processor. The volatile keyword is optional and has no effect as gcc does not optimize code within a basic asm statement. "
            ],
            [
              "AssemblerInstructions",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can contain multiple assembly instructions. A basic asm statement is used if you have an asm routine that must exist outside of a C function. The following example is from the GCC manual:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "where "
          },
          {
            "Text": "AssemblerInstructions",
            "AttrFlags": 2
          },
          {
            "Text": " is the direct assembly code for the given processor. The volatile keyword is optional and has no effect as gcc does not optimize code within a basic asm statement. "
          },
          {
            "Text": "AssemblerInstructions",
            "AttrFlags": 2
          },
          {
            "Text": " can contain multiple assembly instructions. A basic asm statement is used if you have an asm routine that must exist outside of a C function. The following example is from the GCC manual:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936743234,
        "id": "8b207ca3-05e0-4fdb-9414-87292e97610b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936743234,
        "parent_id": "5db57762-0ba9-447f-8b77-f0c22c334e92",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* Note that this code will not compile with -masm=intel */\n#define DebugBreak() asm(\"int $3\")"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* Note that this code will not compile with -masm=intel */\n#define DebugBreak() asm(\"int $3\")",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551936743234,
        "id": "4d0b0e49-b265-420a-9698-c5ead4f6096f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551936743234,
        "parent_id": "5db57762-0ba9-447f-8b77-f0c22c334e92",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, you could then use "
            ],
            [
              "DebugBreak()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in other places in your code and it will execute the assembly instruction "
            ],
            [
              "int $3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Note that even though gcc will not modify any code in a basic asm statement, the optimizer may still move consecutive asm statements around. If you have multiple assembly instructions that must occur in a specific order, include them in one asm statement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, you could then use "
          },
          {
            "Text": "DebugBreak()",
            "AttrFlags": 2
          },
          {
            "Text": " in other places in your code and it will execute the assembly instruction "
          },
          {
            "Text": "int $3",
            "AttrFlags": 2
          },
          {
            "Text": ". Note that even though gcc will not modify any code in a basic asm statement, the optimizer may still move consecutive asm statements around. If you have multiple assembly instructions that must occur in a specific order, include them in one asm statement."
          }
        ]
      }
    ],
    "title": "gcc Basic asm support",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}