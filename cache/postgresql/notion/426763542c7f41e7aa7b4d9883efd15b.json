{
  "ID": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
  "Root": {
    "alive": true,
    "content": [
      "0c6f6dd7-ac93-4d3f-9304-90e99602a6c4",
      "e59add32-9d35-46d4-9904-a86c099c31c4",
      "7045e277-8a9a-40ae-ba5c-e8e896bc2658",
      "a5bd6596-8c33-4fff-822f-497adce9e107",
      "35c177f1-d56b-488d-aad0-b4d78b20a186",
      "bd0104db-c5bf-410c-abd9-fe6da6814009",
      "a3d3808f-9606-40f1-9f38-0bca1e8e7b70",
      "d099f93b-f54f-4777-9a6b-1e06341d2231",
      "2aef2e84-60fe-4885-920c-be29899a6f40",
      "2609d5d5-572a-4d91-9b80-3d4d09733f26",
      "49dd71dc-5009-4325-b0c3-a7646f536de7",
      "d3853cab-41f9-4ae7-9bc2-12eade0f9298"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550384984262,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550480340000,
    "parent_id": "f25f5b01-03a7-4c7d-8e93-9426f864b292",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Accessing PostgreSQL with the C-API"
        ]
      ]
    },
    "type": "page",
    "version": 7,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984258,
        "id": "0c6f6dd7-ac93-4d3f-9304-90e99602a6c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984258,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The C-API is the most powerful way to access PostgreSQL and it is surprisingly comfortable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The C-API is the most powerful way to access PostgreSQL and it is surprisingly comfortable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984260,
        "id": "e59add32-9d35-46d4-9904-a86c099c31c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984260,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Compilation and linking"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Compilation and linking"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984261,
        "id": "7045e277-8a9a-40ae-ba5c-e8e896bc2658",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984261,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "During compilation, you have to add the PostgreSQL include directory, which can be found with "
            ],
            [
              "pg_config --includedir",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", to the include path."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "During compilation, you have to add the PostgreSQL include directory, which can be found with "
          },
          {
            "Text": "pg_config --includedir",
            "AttrFlags": 2
          },
          {
            "Text": ", to the include path."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984261,
        "id": "a5bd6596-8c33-4fff-822f-497adce9e107",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984261,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You must link with the PostgreSQL client shared library ("
            ],
            [
              "libpq.so",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on UNIX, "
            ],
            [
              "libpq.dll",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on Windows). This library is in the PostgreSQL library directory, which can be found with "
            ],
            [
              "pg_config --libdir",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You must link with the PostgreSQL client shared library ("
          },
          {
            "Text": "libpq.so",
            "AttrFlags": 2
          },
          {
            "Text": " on UNIX, "
          },
          {
            "Text": "libpq.dll",
            "AttrFlags": 2
          },
          {
            "Text": " on Windows). This library is in the PostgreSQL library directory, which can be found with "
          },
          {
            "Text": "pg_config --libdir",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984261,
        "id": "35c177f1-d56b-488d-aad0-b4d78b20a186",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984261,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " For historical reason, the library is called "
            ],
            [
              "libpq.so",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "and "
            ],
            [
              "not",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "libpg.so",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is a popular trap for beginners."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note:",
            "AttrFlags": 1
          },
          {
            "Text": " For historical reason, the library is called "
          },
          {
            "Text": "libpq.so",
            "AttrFlags": 2
          },
          {
            "Text": "and "
          },
          {
            "Text": "not",
            "AttrFlags": 4
          },
          {
            "Text": " "
          },
          {
            "Text": "libpg.so",
            "AttrFlags": 2
          },
          {
            "Text": ", which is a popular trap for beginners."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984261,
        "id": "bd0104db-c5bf-410c-abd9-fe6da6814009",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984261,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Given that the below code sample is in file "
            ],
            [
              "coltype.c",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", compilation and linking would be done with"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Given that the below code sample is in file "
          },
          {
            "Text": "coltype.c",
            "AttrFlags": 2
          },
          {
            "Text": ", compilation and linking would be done with"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984262,
        "id": "a3d3808f-9606-40f1-9f38-0bca1e8e7b70",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984262,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "gcc -Wall -I \"$(pg_config --includedir)\" -L \"$(pg_config --libdir)\" -o coltype coltype.c -lpq"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "gcc -Wall -I \"$(pg_config --includedir)\" -L \"$(pg_config --libdir)\" -o coltype coltype.c -lpq",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984262,
        "id": "d099f93b-f54f-4777-9a6b-1e06341d2231",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984262,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "with the GNU C compiler (consider adding "
            ],
            [
              "-Wl,-rpath,\"$(pg_config --libdir)\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to add the library search path) or with"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "with the GNU C compiler (consider adding "
          },
          {
            "Text": "-Wl,-rpath,\"$(pg_config --libdir)\"",
            "AttrFlags": 2
          },
          {
            "Text": " to add the library search path) or with"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984262,
        "id": "2aef2e84-60fe-4885-920c-be29899a6f40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984262,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "cl /MT /W4 /I \u003cinclude directory\u003e coltype.c \u003cpath to libpq.lib\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "cl /MT /W4 /I \u003cinclude directory\u003e coltype.c \u003cpath to libpq.lib\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984262,
        "id": "2609d5d5-572a-4d91-9b80-3d4d09733f26",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984262,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "on Windows with Microsoft Visual C."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "on Windows with Microsoft Visual C."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984262,
        "id": "49dd71dc-5009-4325-b0c3-a7646f536de7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984262,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sample program"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sample program"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550384984262,
        "id": "d3853cab-41f9-4ae7-9bc2-12eade0f9298",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550384984262,
        "parent_id": "42676354-2c7f-41e7-aa7b-4d9883efd15b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "/* necessary for all PostgreSQL client programs, should be first */\n#include \u003clibpq-fe.h\u003e\n\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n\n#ifdef TRACE\n#define TRACEFILE \"trace.out\"\n#endif\n\nint main(int argc, char **argv) {\n#ifdef TRACE\n    FILE *trc;\n#endif\n    PGconn *conn;\n    PGresult *res;\n    int rowcount, colcount, i, j, firstcol;\n    /* parameter type should be guessed by PostgreSQL */\n    const Oid paramTypes[1] = { 0 };\n    /* parameter value */\n    const char * const paramValues[1] = { \"pg_database\" };\n\n    /*\n     * Using an empty connectstring will use default values for everything.\n     * If set, the environment variables PGHOST, PGDATABASE, PGPORT and\n     * PGUSER will be used.\n     */\n    conn = PQconnectdb(\"\");\n\n    /*\n     * This can only happen if there is not enough memory\n     * to allocate the PGconn structure.\n     */\n    if (conn == NULL)\n    {\n        fprintf(stderr, \"Out of memory connecting to PostgreSQL.\\n\");\n        return 1;\n    }\n\n    /* check if the connection attempt worked */\n    if (PQstatus(conn) != CONNECTION_OK)\n    {\n        fprintf(stderr, \"%s\\n\", PQerrorMessage(conn));\n        /*\n         * Even if the connection failed, the PGconn structure has been\n         * allocated and must be freed.\n         */\n        PQfinish(conn);\n        return 1;\n    }\n\n#ifdef TRACE\n    if (NULL == (trc = fopen(TRACEFILE, \"w\")))\n    {\n        fprintf(stderr, \"Error opening trace file \\\"%s\\\"!\\n\", TRACEFILE);\n        PQfinish(conn);\n        return 1;\n    }\n\n    /* tracing for client-server communication */\n    PQtrace(conn, trc);\n#endif\n\n    /* this program expects the database to return data in UTF-8 */\n    PQsetClientEncoding(conn, \"UTF8\");\n\n    /* perform a query with parameters */\n    res = PQexecParams(\n        conn,\n        \"SELECT column_name, data_type \"\n            \"FROM information_schema.columns \"\n            \"WHERE table_name = $1\",\n        1,            /* one parameter */\n        paramTypes,        \n        paramValues,\n        NULL,        /* parameter lengths are not required for strings */\n        NULL,        /* all parameters are in text format */\n        0            /* result shall be in text format */\n    );\n\n    /* out of memory or sever communication broken */\n    if (NULL == res)\n    {\n        fprintf(stderr, \"%s\\n\", PQerrorMessage(conn));\n        PQfinish(conn);\n#ifdef TRACE\n        fclose(trc);\n#endif\n        return 1;\n    }\n\n    /* SQL statement should return results */\n    if (PGRES_TUPLES_OK != PQresultStatus(res))\n    {\n        fprintf(stderr, \"%s\\n\", PQerrorMessage(conn));\n        PQfinish(conn);\n#ifdef TRACE\n        fclose(trc);\n#endif\n        return 1;\n    }\n\n    /* get count of result rows and columns */\n    rowcount = PQntuples(res);\n    colcount = PQnfields(res);\n\n    /* print column headings */\n    firstcol = 1;\n\n    printf(\"Description of the table \\\"pg_database\\\"\\n\");\n\n    for (j=0; j\u003ccolcount; ++j)\n    {\n        if (firstcol)\n            firstcol = 0;\n        else\n            printf(\": \");\n\n        printf(PQfname(res, j));\n    }\n\n    printf(\"\\n\\n\");\n\n    /* loop through rosult rows */\n    for (i=0; i\u003crowcount; ++i)\n    {\n        /* print all column data */\n        firstcol = 1;\n\n        for (j=0; j\u003ccolcount; ++j)\n        {\n            if (firstcol)\n                firstcol = 0;\n            else\n                printf(\": \");\n\n            printf(PQgetvalue(res, i, j));\n        }\n\n        printf(\"\\n\");\n    }\n\n    /* this must be done after every statement to avoid memory leaks */\n    PQclear(res);\n    /* close the database connection and release memory */\n    PQfinish(conn);\n#ifdef TRACE\n    fclose(trc);\n#endif\n    return 0;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "/* necessary for all PostgreSQL client programs, should be first */\n#include \u003clibpq-fe.h\u003e\n\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n\n#ifdef TRACE\n#define TRACEFILE \"trace.out\"\n#endif\n\nint main(int argc, char **argv) {\n#ifdef TRACE\n    FILE *trc;\n#endif\n    PGconn *conn;\n    PGresult *res;\n    int rowcount, colcount, i, j, firstcol;\n    /* parameter type should be guessed by PostgreSQL */\n    const Oid paramTypes[1] = { 0 };\n    /* parameter value */\n    const char * const paramValues[1] = { \"pg_database\" };\n\n    /*\n     * Using an empty connectstring will use default values for everything.\n     * If set, the environment variables PGHOST, PGDATABASE, PGPORT and\n     * PGUSER will be used.\n     */\n    conn = PQconnectdb(\"\");\n\n    /*\n     * This can only happen if there is not enough memory\n     * to allocate the PGconn structure.\n     */\n    if (conn == NULL)\n    {\n        fprintf(stderr, \"Out of memory connecting to PostgreSQL.\\n\");\n        return 1;\n    }\n\n    /* check if the connection attempt worked */\n    if (PQstatus(conn) != CONNECTION_OK)\n    {\n        fprintf(stderr, \"%s\\n\", PQerrorMessage(conn));\n        /*\n         * Even if the connection failed, the PGconn structure has been\n         * allocated and must be freed.\n         */\n        PQfinish(conn);\n        return 1;\n    }\n\n#ifdef TRACE\n    if (NULL == (trc = fopen(TRACEFILE, \"w\")))\n    {\n        fprintf(stderr, \"Error opening trace file \\\"%s\\\"!\\n\", TRACEFILE);\n        PQfinish(conn);\n        return 1;\n    }\n\n    /* tracing for client-server communication */\n    PQtrace(conn, trc);\n#endif\n\n    /* this program expects the database to return data in UTF-8 */\n    PQsetClientEncoding(conn, \"UTF8\");\n\n    /* perform a query with parameters */\n    res = PQexecParams(\n        conn,\n        \"SELECT column_name, data_type \"\n            \"FROM information_schema.columns \"\n            \"WHERE table_name = $1\",\n        1,            /* one parameter */\n        paramTypes,        \n        paramValues,\n        NULL,        /* parameter lengths are not required for strings */\n        NULL,        /* all parameters are in text format */\n        0            /* result shall be in text format */\n    );\n\n    /* out of memory or sever communication broken */\n    if (NULL == res)\n    {\n        fprintf(stderr, \"%s\\n\", PQerrorMessage(conn));\n        PQfinish(conn);\n#ifdef TRACE\n        fclose(trc);\n#endif\n        return 1;\n    }\n\n    /* SQL statement should return results */\n    if (PGRES_TUPLES_OK != PQresultStatus(res))\n    {\n        fprintf(stderr, \"%s\\n\", PQerrorMessage(conn));\n        PQfinish(conn);\n#ifdef TRACE\n        fclose(trc);\n#endif\n        return 1;\n    }\n\n    /* get count of result rows and columns */\n    rowcount = PQntuples(res);\n    colcount = PQnfields(res);\n\n    /* print column headings */\n    firstcol = 1;\n\n    printf(\"Description of the table \\\"pg_database\\\"\\n\");\n\n    for (j=0; j\u003ccolcount; ++j)\n    {\n        if (firstcol)\n            firstcol = 0;\n        else\n            printf(\": \");\n\n        printf(PQfname(res, j));\n    }\n\n    printf(\"\\n\\n\");\n\n    /* loop through rosult rows */\n    for (i=0; i\u003crowcount; ++i)\n    {\n        /* print all column data */\n        firstcol = 1;\n\n        for (j=0; j\u003ccolcount; ++j)\n        {\n            if (firstcol)\n                firstcol = 0;\n            else\n                printf(\": \");\n\n            printf(PQgetvalue(res, i, j));\n        }\n\n        printf(\"\\n\");\n    }\n\n    /* this must be done after every statement to avoid memory leaks */\n    PQclear(res);\n    /* close the database connection and release memory */\n    PQfinish(conn);\n#ifdef TRACE\n    fclose(trc);\n#endif\n    return 0;\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Accessing PostgreSQL with the C-API",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}