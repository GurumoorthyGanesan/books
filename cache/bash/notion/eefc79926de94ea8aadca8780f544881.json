{
  "ID": "eefc7992-6de9-4ea8-aadc-a8780f544881",
  "Root": {
    "alive": true,
    "content": [
      "aef34b82-939b-4a31-b3a7-40c81b81a8aa",
      "e2da55c6-8cc1-4f0d-93e4-8a163255c278",
      "b7e93fe0-fefe-46ea-86bc-67f576f9ff3b",
      "bc8690f7-f00d-42a3-add7-495abcfc577b",
      "b018b7c5-d69a-4615-b3c0-c9329263abd9",
      "5175b1fb-1015-4114-b97f-f0b46f39199f",
      "e1479b4f-94c8-4f6b-ade9-670b6be38963",
      "6abe3229-ffca-4b5d-9504-9c79bd1739df",
      "45e984fb-96d6-41b5-882d-4c8bd65c1643",
      "9b96b35e-e61d-43d3-9280-589f25dded33",
      "0da641bc-61b9-43b7-9401-a16a13171982",
      "8884fb97-7549-4d6e-bfed-276e9777e3e5",
      "dcc26353-b1ae-4094-a32f-12cd810799d8",
      "ae1b0d1c-2352-4f57-9473-9a47453c5d16"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551931110509,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551931110509,
    "parent_id": "139e8100-64d0-4114-93bd-673de054649a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Request Method POST w JSON"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110507,
        "id": "aef34b82-939b-4a31-b3a7-40c81b81a8aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110507,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using Request Method "
            ],
            [
              "POST",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in combination with "
            ],
            [
              "SSL",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " makes datatransfer more secure."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using Request Method "
          },
          {
            "Text": "POST",
            "AttrFlags": 2
          },
          {
            "Text": " in combination with "
          },
          {
            "Text": "SSL",
            "AttrFlags": 2
          },
          {
            "Text": " makes datatransfer more secure."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110507,
        "id": "e2da55c6-8cc1-4f0d-93e4-8a163255c278",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110507,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In addition…"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In addition…"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110507,
        "id": "b7e93fe0-fefe-46ea-86bc-67f576f9ff3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110507,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most of the encoding and decoding is not needed any more"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most of the encoding and decoding is not needed any more"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110508,
        "id": "bc8690f7-f00d-42a3-add7-495abcfc577b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110508,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The URL will be visible to any one and needs to be url encoded. The data will be send separately and therefor should be secured via SSL"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The URL will be visible to any one and needs to be url encoded. The data will be send separately and therefor should be secured via SSL"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110508,
        "id": "b018b7c5-d69a-4615-b3c0-c9329263abd9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110508,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The size of the data is almost unlitmited"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "The size of the data is almost unlitmited"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110508,
        "id": "5175b1fb-1015-4114-b97f-f0b46f39199f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110508,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Still needs protection against Cross-Side-Scripting (XSS)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Still needs protection against Cross-Side-Scripting (XSS)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110508,
        "id": "e1479b4f-94c8-4f6b-ade9-670b6be38963",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110508,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To keep this showcase simple we want to receive "
            ],
            [
              "JSON Data",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "and communication should be over "
            ],
            [
              "Cross-Origin Resource Sharing",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " (CORS). The following script will also demonstrate two different "
            ],
            [
              "Content-Types",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To keep this showcase simple we want to receive "
          },
          {
            "Text": "JSON Data",
            "AttrFlags": 1
          },
          {
            "Text": "and communication should be over "
          },
          {
            "Text": "Cross-Origin Resource Sharing",
            "AttrFlags": 1
          },
          {
            "Text": " (CORS). The following script will also demonstrate two different "
          },
          {
            "Text": "Content-Types",
            "AttrFlags": 1
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110508,
        "id": "6abe3229-ffca-4b5d-9504-9c79bd1739df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110508,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#!/bin/bash\n\nexec 2\u003e/dev/null    # We dont want any error messages be printed to stdout\ntrap \"response_with_html \u0026\u0026 exit 0\" ERR    # response with an html message when an error occurred and close the script\n\nfunction response_with_html(){    \n    echo \"Content-type: text/html\"\n    echo \"\"\n    echo \"\u003c!DOCTYPE html\u003e\"\n    echo \"\u003chtml\u003e\u003chead\u003e\"\n    echo \"\u003ctitle\u003e456\u003c/title\u003e\"\n    echo \"\u003c/head\u003e\u003cbody\u003e\"\n    echo \"\u003ch1\u003e456\u003c/h1\u003e\"\n    echo \"\u003cp\u003eAttempt to communicate with the server went wrong.\u003c/p\u003e\"\n    echo \"\u003chr\u003e\"\n    echo \"$SERVER_SIGNATURE\"\n    echo \"\u003c/body\u003e\u003c/html\u003e\"\n}\n        \nfunction response_with_json(){\n    echo \"Content-type: application/json\"\n    echo \"\"\n    echo \"{\\\"message\\\": \\\"Hello World!\\\"}\"\n}\n\nif [ \"$REQUEST_METHOD\" = \"POST\" ]; then\n   \n    # The environment variabe $CONTENT_TYPE describes the data-type received\n    case \"$CONTENT_TYPE\" in\n    application/json)\n        # The environment variabe $CONTENT_LENGTH describes the size of the data\n        read -n \"$CONTENT_LENGTH\" QUERY_STRING_POST        # read datastream \n\n        # The following lines will prevent XSS and check for valide JSON-Data.\n        # But these Symbols need to be encoded somehow before sending to this script\n        QUERY_STRING_POST=$(echo \"$QUERY_STRING_POST\" | sed \"s/'//g\" | sed 's/\\$//g;s/`//g;s/\\*//g;s/\\\\//g' )        # removes some symbols (like \\ * ` $ ') to prevent XSS with Bash and SQL.\n        QUERY_STRING_POST=$(echo \"$QUERY_STRING_POST\" | sed -e :a -e 's/\u003c[^\u003e]*\u003e//g;/\u003c/N;//ba')    # removes most html declarations to prevent XSS within documents\n        JSON=$(echo \"$QUERY_STRING_POST\" | jq .)        # json encode - This is a pretty save way to check for valide json code\n    ;;\n    *)\n        response_with_html\n        exit 0\n    ;;\n    esac\n\nelse\n    response_with_html\n    exit 0\nfi\n\n# Some Commands ...\n\nresponse_with_json\n\nexit 0"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#!/bin/bash\n\nexec 2\u003e/dev/null    # We dont want any error messages be printed to stdout\ntrap \"response_with_html \u0026\u0026 exit 0\" ERR    # response with an html message when an error occurred and close the script\n\nfunction response_with_html(){    \n    echo \"Content-type: text/html\"\n    echo \"\"\n    echo \"\u003c!DOCTYPE html\u003e\"\n    echo \"\u003chtml\u003e\u003chead\u003e\"\n    echo \"\u003ctitle\u003e456\u003c/title\u003e\"\n    echo \"\u003c/head\u003e\u003cbody\u003e\"\n    echo \"\u003ch1\u003e456\u003c/h1\u003e\"\n    echo \"\u003cp\u003eAttempt to communicate with the server went wrong.\u003c/p\u003e\"\n    echo \"\u003chr\u003e\"\n    echo \"$SERVER_SIGNATURE\"\n    echo \"\u003c/body\u003e\u003c/html\u003e\"\n}\n        \nfunction response_with_json(){\n    echo \"Content-type: application/json\"\n    echo \"\"\n    echo \"{\\\"message\\\": \\\"Hello World!\\\"}\"\n}\n\nif [ \"$REQUEST_METHOD\" = \"POST\" ]; then\n   \n    # The environment variabe $CONTENT_TYPE describes the data-type received\n    case \"$CONTENT_TYPE\" in\n    application/json)\n        # The environment variabe $CONTENT_LENGTH describes the size of the data\n        read -n \"$CONTENT_LENGTH\" QUERY_STRING_POST        # read datastream \n\n        # The following lines will prevent XSS and check for valide JSON-Data.\n        # But these Symbols need to be encoded somehow before sending to this script\n        QUERY_STRING_POST=$(echo \"$QUERY_STRING_POST\" | sed \"s/'//g\" | sed 's/\\$//g;s/`//g;s/\\*//g;s/\\\\//g' )        # removes some symbols (like \\ * ` $ ') to prevent XSS with Bash and SQL.\n        QUERY_STRING_POST=$(echo \"$QUERY_STRING_POST\" | sed -e :a -e 's/\u003c[^\u003e]*\u003e//g;/\u003c/N;//ba')    # removes most html declarations to prevent XSS within documents\n        JSON=$(echo \"$QUERY_STRING_POST\" | jq .)        # json encode - This is a pretty save way to check for valide json code\n    ;;\n    *)\n        response_with_html\n        exit 0\n    ;;\n    esac\n\nelse\n    response_with_html\n    exit 0\nfi\n\n# Some Commands ...\n\nresponse_with_json\n\nexit 0",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110508,
        "id": "45e984fb-96d6-41b5-882d-4c8bd65c1643",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110508,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You will get "
            ],
            [
              "{\"message\":\"Hello World!\"}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as an answer when sending "
            ],
            [
              "JSON-Data",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " via "
            ],
            [
              "POST",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to this Script. Every thing else will receive the html document."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You will get "
          },
          {
            "Text": "{\"message\":\"Hello World!\"}",
            "AttrFlags": 2
          },
          {
            "Text": " as an answer when sending "
          },
          {
            "Text": "JSON-Data",
            "AttrFlags": 1
          },
          {
            "Text": " via "
          },
          {
            "Text": "POST",
            "AttrFlags": 2
          },
          {
            "Text": " to this Script. Every thing else will receive the html document."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110508,
        "id": "9b96b35e-e61d-43d3-9280-589f25dded33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110508,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Important is also the varialbe "
            ],
            [
              "$JSON",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". This variable is free of XSS, but still could have wrong values in it and needs to be verify first. Please keep that in mind."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Important is also the varialbe "
          },
          {
            "Text": "$JSON",
            "AttrFlags": 2
          },
          {
            "Text": ". This variable is free of XSS, but still could have wrong values in it and needs to be verify first. Please keep that in mind."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110509,
        "id": "0da641bc-61b9-43b7-9401-a16a13171982",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110509,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This code works similar without JSON. You could get any data this way. You just need to change the "
            ],
            [
              "Content-Type",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for your needs."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This code works similar without JSON. You could get any data this way. You just need to change the "
          },
          {
            "Text": "Content-Type",
            "AttrFlags": 2
          },
          {
            "Text": " for your needs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110509,
        "id": "8884fb97-7549-4d6e-bfed-276e9777e3e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110509,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110509,
        "id": "dcc26353-b1ae-4094-a32f-12cd810799d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110509,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "if [ \"$REQUEST_METHOD\" = \"POST\" ]; then \n    case \"$CONTENT_TYPE\" in\n    application/x-www-form-urlencoded)\n            read -n \"$CONTENT_LENGTH\" QUERY_STRING_POST\n    text/plain)\n            read -n \"$CONTENT_LENGTH\" QUERY_STRING_POST\n    ;;\n    esac\nfi"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "if [ \"$REQUEST_METHOD\" = \"POST\" ]; then \n    case \"$CONTENT_TYPE\" in\n    application/x-www-form-urlencoded)\n            read -n \"$CONTENT_LENGTH\" QUERY_STRING_POST\n    text/plain)\n            read -n \"$CONTENT_LENGTH\" QUERY_STRING_POST\n    ;;\n    esac\nfi",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551931110509,
        "id": "ae1b0d1c-2352-4f57-9473-9a47453c5d16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551931110509,
        "parent_id": "eefc7992-6de9-4ea8-aadc-a8780f544881",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Last but not least, dont forget to response to all requests, otherwise third party programms wont know if they succeeded"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Last but not least, dont forget to response to all requests, otherwise third party programms wont know if they succeeded"
          }
        ]
      }
    ],
    "title": "Request Method POST w JSON",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}