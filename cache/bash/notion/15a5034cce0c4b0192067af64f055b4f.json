{
  "ID": "15a5034c-ce0c-4b01-9206-7af64f055b4f",
  "Root": {
    "alive": true,
    "content": [
      "844087a5-5d24-4f26-813e-227e30d90b11",
      "0efc025d-fcda-4423-8e2c-f69114a08f53"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551930843811,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "15a5034c-ce0c-4b01-9206-7af64f055b4f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551930843811,
    "parent_id": "bb59e31b-01d8-4626-b093-ac86180c90d6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Examining assoc arrays"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551930843808,
        "id": "844087a5-5d24-4f26-813e-227e30d90b11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551930843808,
        "parent_id": "15a5034c-ce0c-4b01-9206-7af64f055b4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All needed usage shown with this snippet:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All needed usage shown with this snippet:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551930843811,
        "id": "0efc025d-fcda-4423-8e2c-f69114a08f53",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551930843811,
        "parent_id": "15a5034c-ce0c-4b01-9206-7af64f055b4f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#!/usr/bin/env bash\n\ndeclare -A assoc_array=([key_string]=value                                   \\\n                        [one]=\"something\"                                    \\\n                        [two]=\"another thing\"                                \\\n                        [ three ]='mind the blanks!'                         \\\n                        [ \" four\" ]='count the blanks of this key later!'    \\\n                                                [IMPORTANT]='SPACES DO ADD UP!!!'                    \\\n                        [1]='there are no integers!'                         \\\n                        [info]=\"to avoid history expansion \"                 \\\n                        [info2]=\"quote exclamation mark with single quotes\"  \\\n                       )\necho # just a blank line\necho now here are the values of assoc_array:\necho ${assoc_array[@]}\necho not that useful, \necho # just a blank line\necho this is better:\n\ndeclare -p assoc_array    # -p == print\n\necho have a close look at the spaces above\\!\\!\\!\necho # just a blank line\n\necho accessing the keys\necho the keys in assoc_array are ${!assoc_array[*]}\necho mind the use of indirection operator \\!\necho # just a blank line\n\n\necho now we loop over the assoc_array line by line\necho note the \\! indirection operator which works differently,\necho if used with assoc_array.\necho # just a blank line\n\nfor key in \"${!assoc_array[@]}\"; do # accessing keys using ! indirection!!!!\n   printf \"key: \\\"%s\\\"\\nvalue: \\\"%s\\\"\\n\\n\" \"$key\" \"${assoc_array[$key]}\"\ndone\n\n\necho have a close look at the spaces in entries with keys two, three and four above\\!\\!\\!\necho # just a blank line\necho # just another blank line\n\necho there is a difference using integers as keys\\!\\!\\!\ni=1\necho declaring an integer var i=1\necho # just a blank line\necho Within an integer_array bash recognizes artithmetic context.\necho Within an assoc_array bash DOES NOT recognize artithmetic context.\necho # just a blank line\necho this works: \\${assoc_array[\\$i]}:  ${assoc_array[$i]}\necho this NOT!!: \\${assoc_array[i]}:  ${assoc_array[i]}\necho # just a blank line\necho # just a blank line\necho an \\${assoc_array[i]} has a string context within braces in contrast to an integer_array\ndeclare -i integer_array=( one two three )\necho \"doing a: declare -i integer_array=( one two three )\"\necho # just a blank line\n\necho both forms do work: \\${integer_array[i]} : ${integer_array[i]}\necho and this too:  \\${integer_array[\\$i]} : ${integer_array[$i]}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#!/usr/bin/env bash\n\ndeclare -A assoc_array=([key_string]=value                                   \\\n                        [one]=\"something\"                                    \\\n                        [two]=\"another thing\"                                \\\n                        [ three ]='mind the blanks!'                         \\\n                        [ \" four\" ]='count the blanks of this key later!'    \\\n                                                [IMPORTANT]='SPACES DO ADD UP!!!'                    \\\n                        [1]='there are no integers!'                         \\\n                        [info]=\"to avoid history expansion \"                 \\\n                        [info2]=\"quote exclamation mark with single quotes\"  \\\n                       )\necho # just a blank line\necho now here are the values of assoc_array:\necho ${assoc_array[@]}\necho not that useful, \necho # just a blank line\necho this is better:\n\ndeclare -p assoc_array    # -p == print\n\necho have a close look at the spaces above\\!\\!\\!\necho # just a blank line\n\necho accessing the keys\necho the keys in assoc_array are ${!assoc_array[*]}\necho mind the use of indirection operator \\!\necho # just a blank line\n\n\necho now we loop over the assoc_array line by line\necho note the \\! indirection operator which works differently,\necho if used with assoc_array.\necho # just a blank line\n\nfor key in \"${!assoc_array[@]}\"; do # accessing keys using ! indirection!!!!\n   printf \"key: \\\"%s\\\"\\nvalue: \\\"%s\\\"\\n\\n\" \"$key\" \"${assoc_array[$key]}\"\ndone\n\n\necho have a close look at the spaces in entries with keys two, three and four above\\!\\!\\!\necho # just a blank line\necho # just another blank line\n\necho there is a difference using integers as keys\\!\\!\\!\ni=1\necho declaring an integer var i=1\necho # just a blank line\necho Within an integer_array bash recognizes artithmetic context.\necho Within an assoc_array bash DOES NOT recognize artithmetic context.\necho # just a blank line\necho this works: \\${assoc_array[\\$i]}:  ${assoc_array[$i]}\necho this NOT!!: \\${assoc_array[i]}:  ${assoc_array[i]}\necho # just a blank line\necho # just a blank line\necho an \\${assoc_array[i]} has a string context within braces in contrast to an integer_array\ndeclare -i integer_array=( one two three )\necho \"doing a: declare -i integer_array=( one two three )\"\necho # just a blank line\n\necho both forms do work: \\${integer_array[i]} : ${integer_array[i]}\necho and this too:  \\${integer_array[\\$i]} : ${integer_array[$i]}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Examining assoc arrays",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}