{
  "ID": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
  "Root": {
    "alive": true,
    "content": [
      "0edc230f-baca-46a7-a95c-48e92f98fb6c",
      "a79c8cd1-1b6b-41c3-b5a5-b53b1aaf9449",
      "3870dd01-bb15-472b-9db2-6e910f976c1a",
      "3f5a71b2-8974-4a92-8d92-f2416481bf06",
      "bd0226d1-db08-49f8-8a2c-0c4969101d4d",
      "dea37a81-349e-4223-a79e-e4644cd59926",
      "48986f7c-912a-4b72-8e5a-3ccdb0eadc85"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552021108340,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552021108340,
    "parent_id": "b1a21291-9e7c-4ffa-8e64-d67c8ab753f2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "The instancetype return type"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021108335,
        "id": "0edc230f-baca-46a7-a95c-48e92f98fb6c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021108335,
        "parent_id": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Objective-C supports a special type called `instancetype that can only be used as type returned by a method. It evaluates to the class of the receiving object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Objective-C supports a special type called `instancetype that can only be used as type returned by a method. It evaluates to the class of the receiving object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021108338,
        "id": "a79c8cd1-1b6b-41c3-b5a5-b53b1aaf9449",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021108338,
        "parent_id": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the following class hierarchy:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the following class hierarchy:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021108338,
        "id": "3870dd01-bb15-472b-9db2-6e910f976c1a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021108338,
        "parent_id": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@interface Foo : NSObject\n\n- (instancetype)initWithString:(NSString *)string;\n\n@end\n\n@interface Bar : Foo\n@end"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@interface Foo : NSObject\n\n- (instancetype)initWithString:(NSString *)string;\n\n@end\n\n@interface Bar : Foo\n@end",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021108338,
        "id": "3f5a71b2-8974-4a92-8d92-f2416481bf06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021108338,
        "parent_id": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When "
            ],
            [
              "[[Foo alloc] initWithString:@\"abc\"]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called, the compiler can infer that the return type is "
            ],
            [
              "Foo *",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The "
            ],
            [
              "Bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " class derived from "
            ],
            [
              "Foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " but did not override the declaration of the initializer. Yet, thanks to "
            ],
            [
              "instancetype",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the compiler can infer that "
            ],
            [
              "[[Bar alloc] initWithString:@\"xyz\"]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns a value of type "
            ],
            [
              "Bar *",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When "
          },
          {
            "Text": "[[Foo alloc] initWithString:@\"abc\"]",
            "AttrFlags": 2
          },
          {
            "Text": " is called, the compiler can infer that the return type is "
          },
          {
            "Text": "Foo *",
            "AttrFlags": 2
          },
          {
            "Text": ". The "
          },
          {
            "Text": "Bar",
            "AttrFlags": 2
          },
          {
            "Text": " class derived from "
          },
          {
            "Text": "Foo",
            "AttrFlags": 2
          },
          {
            "Text": " but did not override the declaration of the initializer. Yet, thanks to "
          },
          {
            "Text": "instancetype",
            "AttrFlags": 2
          },
          {
            "Text": ", the compiler can infer that "
          },
          {
            "Text": "[[Bar alloc] initWithString:@\"xyz\"]",
            "AttrFlags": 2
          },
          {
            "Text": " returns a value of type "
          },
          {
            "Text": "Bar *",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021108339,
        "id": "bd0226d1-db08-49f8-8a2c-0c4969101d4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021108339,
        "parent_id": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consider the return type of "
            ],
            [
              "-[Foo initWithString:]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " being "
            ],
            [
              "Foo *",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instead: if you would call "
            ],
            [
              "[[Bar alloc] initWithString:]",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the compiler would infer that a "
            ],
            [
              "Foo *",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is returned, not a "
            ],
            [
              "Bar *",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as is the intention of the developer. The "
            ],
            [
              "instancetype",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " solved this issue."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consider the return type of "
          },
          {
            "Text": "-[Foo initWithString:]",
            "AttrFlags": 2
          },
          {
            "Text": " being "
          },
          {
            "Text": "Foo *",
            "AttrFlags": 2
          },
          {
            "Text": " instead: if you would call "
          },
          {
            "Text": "[[Bar alloc] initWithString:]",
            "AttrFlags": 2
          },
          {
            "Text": ", the compiler would infer that a "
          },
          {
            "Text": "Foo *",
            "AttrFlags": 2
          },
          {
            "Text": " is returned, not a "
          },
          {
            "Text": "Bar *",
            "AttrFlags": 2
          },
          {
            "Text": " as is the intention of the developer. The "
          },
          {
            "Text": "instancetype",
            "AttrFlags": 2
          },
          {
            "Text": " solved this issue."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021108339,
        "id": "dea37a81-349e-4223-a79e-e4644cd59926",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021108339,
        "parent_id": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Before the introduction of "
            ],
            [
              "instancetype",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", initializers, static methods like singleton accessors and other methods that want to return an instance of the receiving class needed to return an "
            ],
            [
              "id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The problem is that "
            ],
            [
              "id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means "
            ],
            [
              "“an object of any type”",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". The compiler is thus not able to detect that "
            ],
            [
              "NSString *wrong = [[Foo alloc] initWithString:@\"abc\"];",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is assigning to a variable with an incorrect type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Before the introduction of "
          },
          {
            "Text": "instancetype",
            "AttrFlags": 2
          },
          {
            "Text": ", initializers, static methods like singleton accessors and other methods that want to return an instance of the receiving class needed to return an "
          },
          {
            "Text": "id",
            "AttrFlags": 2
          },
          {
            "Text": ". The problem is that "
          },
          {
            "Text": "id",
            "AttrFlags": 2
          },
          {
            "Text": " means "
          },
          {
            "Text": "“an object of any type”",
            "AttrFlags": 4
          },
          {
            "Text": ". The compiler is thus not able to detect that "
          },
          {
            "Text": "NSString *wrong = [[Foo alloc] initWithString:@\"abc\"];",
            "AttrFlags": 2
          },
          {
            "Text": " is assigning to a variable with an incorrect type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021108340,
        "id": "48986f7c-912a-4b72-8e5a-3ccdb0eadc85",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021108340,
        "parent_id": "fb9137a6-3474-4d37-b5b2-7a0d1b319f0a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Due to this issue, "
            ],
            [
              "initializers should always use ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "instancetype",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " instead of ",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "id",
              [
                [
                  "b"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              " as the return value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Due to this issue, "
          },
          {
            "Text": "initializers should always use ",
            "AttrFlags": 1
          },
          {
            "Text": "instancetype",
            "AttrFlags": 3
          },
          {
            "Text": " instead of ",
            "AttrFlags": 1
          },
          {
            "Text": "id",
            "AttrFlags": 3
          },
          {
            "Text": " as the return value."
          }
        ]
      }
    ],
    "title": "The instancetype return type",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}