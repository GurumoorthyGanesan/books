{
  "ID": "7413acc8-8d8d-4959-86e0-2fdedd66b8c9",
  "Root": {
    "alive": true,
    "content": [
      "3f548e47-4385-4ff8-a9fa-1334565fb61d",
      "456e0879-fd8b-4b13-800d-918da3c904dc",
      "d8d46eda-5137-4e9a-a4f2-b63e72b53f1d",
      "9935c43e-c727-4a92-8c57-94b74218fad4",
      "e9a9865d-3ba6-4669-b732-8d4e4c65ab76",
      "2dbbc048-7fc9-4710-b421-ffb2e8996f1f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552021226723,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7413acc8-8d8d-4959-86e0-2fdedd66b8c9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552021226723,
    "parent_id": "1e25a23e-d9da-4b30-9aa1-85fc78588266",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Properties that cause updates"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021226719,
        "id": "3f548e47-4385-4ff8-a9fa-1334565fb61d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021226719,
        "parent_id": "7413acc8-8d8d-4959-86e0-2fdedd66b8c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This object, "
            ],
            [
              "Shape",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has a property "
            ],
            [
              "image",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that depends on "
            ],
            [
              "numberOfSides",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "sideWidth",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". If either one of them is set, than the "
            ],
            [
              "image",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has to be recalculated. But recalculation is presumably long, and only needs to be done once if both properties are set, so the "
            ],
            [
              "Shape",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " provides a way to set both properties and only recalculate once. This is done by setting the property ivars directly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This object, "
          },
          {
            "Text": "Shape",
            "AttrFlags": 2
          },
          {
            "Text": " has a property "
          },
          {
            "Text": "image",
            "AttrFlags": 2
          },
          {
            "Text": " that depends on "
          },
          {
            "Text": "numberOfSides",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "sideWidth",
            "AttrFlags": 2
          },
          {
            "Text": ". If either one of them is set, than the "
          },
          {
            "Text": "image",
            "AttrFlags": 2
          },
          {
            "Text": " has to be recalculated. But recalculation is presumably long, and only needs to be done once if both properties are set, so the "
          },
          {
            "Text": "Shape",
            "AttrFlags": 2
          },
          {
            "Text": " provides a way to set both properties and only recalculate once. This is done by setting the property ivars directly."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021226722,
        "id": "456e0879-fd8b-4b13-800d-918da3c904dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021226722,
        "parent_id": "7413acc8-8d8d-4959-86e0-2fdedd66b8c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In "
            ],
            [
              "Shape.h",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In "
          },
          {
            "Text": "Shape.h",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021226722,
        "id": "d8d46eda-5137-4e9a-a4f2-b63e72b53f1d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021226722,
        "parent_id": "7413acc8-8d8d-4959-86e0-2fdedd66b8c9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@interface Shape {\n    NSUInteger numberOfSides;\n    CGFloat sideWidth;\n\n    UIImage * image;\n}\n\n// Initializer that takes initial values for the properties.\n- (instancetype)initWithNumberOfSides:(NSUInteger)numberOfSides withWidth:(CGFloat)width;\n\n// Method that allows to set both properties in once call.\n// This is useful if setting these properties has expensive side-effects.\n// Using a method to set both values at once allows you to have the side-\n// effect executed only once.\n- (void)setNumberOfSides:(NSUInteger)numberOfSides andWidth:(CGFloat)width;\n\n// Properties using default attributes.\n@property NSUInteger numberOfSides;\n@property CGFloat sideWidth;\n\n// Property using explicit attributes.\n@property(strong, readonly) UIImage * image;\n\n@end"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@interface Shape {\n    NSUInteger numberOfSides;\n    CGFloat sideWidth;\n\n    UIImage * image;\n}\n\n// Initializer that takes initial values for the properties.\n- (instancetype)initWithNumberOfSides:(NSUInteger)numberOfSides withWidth:(CGFloat)width;\n\n// Method that allows to set both properties in once call.\n// This is useful if setting these properties has expensive side-effects.\n// Using a method to set both values at once allows you to have the side-\n// effect executed only once.\n- (void)setNumberOfSides:(NSUInteger)numberOfSides andWidth:(CGFloat)width;\n\n// Properties using default attributes.\n@property NSUInteger numberOfSides;\n@property CGFloat sideWidth;\n\n// Property using explicit attributes.\n@property(strong, readonly) UIImage * image;\n\n@end",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021226722,
        "id": "9935c43e-c727-4a92-8c57-94b74218fad4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021226722,
        "parent_id": "7413acc8-8d8d-4959-86e0-2fdedd66b8c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In "
            ],
            [
              "Shape.m",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In "
          },
          {
            "Text": "Shape.m",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021226722,
        "id": "e9a9865d-3ba6-4669-b732-8d4e4c65ab76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021226722,
        "parent_id": "7413acc8-8d8d-4959-86e0-2fdedd66b8c9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@implementation AnObject\n\n// The variable name of a property that is auto-generated by the compiler\n// defaults to being the property name prefixed with an underscore, for\n// example \"_propertyName\". You can change this default variable name using\n// the following statement:\n// @synthesize propertyName = customVariableName;\n\n- (id)initWithNumberOfSides:(NSUInteger)numberOfSides withWidth:(CGFloat)width {\n    if ((self = [self init])) {\n       [self setNumberOfSides:numberOfSides andWidth:width];\n    }\n\n    return self;\n}\n\n- (void)setNumberOfSides:(NSUInteger)numberOfSides {\n    _numberOfSides = numberOfSides;\n\n    [self updateImage];\n}\n\n- (void)setSideWidth:(CGFloat)sideWidth {\n    _sideWidth = sideWidth;\n\n    [self updateImage];\n}\n\n- (void)setNumberOfSides:(NSUInteger)numberOfSides andWidth:(CGFloat)sideWidth {\n    _numberOfSides = numberOfSides;\n    _sideWidth = sideWidth;\n\n    [self updateImage];\n}\n\n// Method that does some post-processing once either of the properties has\n// been updated.\n- (void)updateImage {\n    ...\n}\n\n@end"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@implementation AnObject\n\n// The variable name of a property that is auto-generated by the compiler\n// defaults to being the property name prefixed with an underscore, for\n// example \"_propertyName\". You can change this default variable name using\n// the following statement:\n// @synthesize propertyName = customVariableName;\n\n- (id)initWithNumberOfSides:(NSUInteger)numberOfSides withWidth:(CGFloat)width {\n    if ((self = [self init])) {\n       [self setNumberOfSides:numberOfSides andWidth:width];\n    }\n\n    return self;\n}\n\n- (void)setNumberOfSides:(NSUInteger)numberOfSides {\n    _numberOfSides = numberOfSides;\n\n    [self updateImage];\n}\n\n- (void)setSideWidth:(CGFloat)sideWidth {\n    _sideWidth = sideWidth;\n\n    [self updateImage];\n}\n\n- (void)setNumberOfSides:(NSUInteger)numberOfSides andWidth:(CGFloat)sideWidth {\n    _numberOfSides = numberOfSides;\n    _sideWidth = sideWidth;\n\n    [self updateImage];\n}\n\n// Method that does some post-processing once either of the properties has\n// been updated.\n- (void)updateImage {\n    ...\n}\n\n@end",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021226723,
        "id": "2dbbc048-7fc9-4710-b421-ffb2e8996f1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021226723,
        "parent_id": "7413acc8-8d8d-4959-86e0-2fdedd66b8c9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When properties are assigned to (using "
            ],
            [
              "object.property = value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), the setter method "
            ],
            [
              "setProperty:",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is called. This setter, even if provided by "
            ],
            [
              "@synthesize",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", can be overridden, as it is in this case for "
            ],
            [
              "numberOfSides",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "sideWidth",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". However, if you set an property’s ivar directly (through "
            ],
            [
              "property",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if the object is self, or "
            ],
            [
              "object-\u003eproperty",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "), it doesn’t call the getter or setter, allowing you to do things like multiple property sets that only call one update or bypass side-effects caused by the setter."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When properties are assigned to (using "
          },
          {
            "Text": "object.property = value",
            "AttrFlags": 2
          },
          {
            "Text": "), the setter method "
          },
          {
            "Text": "setProperty:",
            "AttrFlags": 2
          },
          {
            "Text": " is called. This setter, even if provided by "
          },
          {
            "Text": "@synthesize",
            "AttrFlags": 2
          },
          {
            "Text": ", can be overridden, as it is in this case for "
          },
          {
            "Text": "numberOfSides",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "sideWidth",
            "AttrFlags": 2
          },
          {
            "Text": ". However, if you set an property’s ivar directly (through "
          },
          {
            "Text": "property",
            "AttrFlags": 2
          },
          {
            "Text": " if the object is self, or "
          },
          {
            "Text": "object-\u003eproperty",
            "AttrFlags": 2
          },
          {
            "Text": "), it doesn’t call the getter or setter, allowing you to do things like multiple property sets that only call one update or bypass side-effects caused by the setter."
          }
        ]
      }
    ],
    "title": "Properties that cause updates",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}