{
  "ID": "015ee53c-abd4-4101-a82e-b4a75510d57b",
  "Root": {
    "alive": true,
    "content": [
      "cda6dacd-d9bc-4ebf-80d6-161d0fe10bba",
      "87863949-eba5-4303-8738-e8c7454bda08",
      "3fc038cb-0847-4840-a826-ae641de7197e",
      "d2abfcb8-a289-4f85-86a9-6a632d3f00c2",
      "0e629e9a-01f9-4687-9cc6-5bae2619500c",
      "fb9cc673-2d96-408a-a107-5be870096132",
      "006962b7-328c-43ff-989d-add4a425eae3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552021576156,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "015ee53c-abd4-4101-a82e-b4a75510d57b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552021576156,
    "parent_id": "9ab4b6b8-bf3c-4fb8-b76e-f1e7486d2519",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "NSInteger and NSUInteger"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021576154,
        "id": "cda6dacd-d9bc-4ebf-80d6-161d0fe10bba",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021576154,
        "parent_id": "015ee53c-abd4-4101-a82e-b4a75510d57b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The NSInteger is just a typedef for either an int or a long depending on the architecture. The same goes for a NSUInteger which is a typedef for the unsigned variants. If you check the NSInteger you will see the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The NSInteger is just a typedef for either an int or a long depending on the architecture. The same goes for a NSUInteger which is a typedef for the unsigned variants. If you check the NSInteger you will see the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021576155,
        "id": "87863949-eba5-4303-8738-e8c7454bda08",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021576155,
        "parent_id": "015ee53c-abd4-4101-a82e-b4a75510d57b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#if __LP64__ || (TARGET_OS_EMBEDDED \u0026\u0026 !TARGET_OS_IPHONE) || TARGET_OS_WIN32 || NS_BUILD_32_LIKE_64\ntypedef long NSInteger;\ntypedef unsigned long NSUInteger;\n#else\ntypedef int NSInteger;\ntypedef unsigned int NSUInteger;\n#endif"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#if __LP64__ || (TARGET_OS_EMBEDDED \u0026\u0026 !TARGET_OS_IPHONE) || TARGET_OS_WIN32 || NS_BUILD_32_LIKE_64\ntypedef long NSInteger;\ntypedef unsigned long NSUInteger;\n#else\ntypedef int NSInteger;\ntypedef unsigned int NSUInteger;\n#endif",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021576155,
        "id": "3fc038cb-0847-4840-a826-ae641de7197e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021576155,
        "parent_id": "015ee53c-abd4-4101-a82e-b4a75510d57b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The difference between an signed and an unsigned int or long is that a signed int or long can contain negative values. The range of the int is -2 147 483 648 to 2 147 483 647 while the unsigned int has a range of 0 to 4 294 967 295. The value is doubled because the first bit isn’t used anymore to say the value is negative or not. For a long and NSInteger on 64-bit architectures, the range is much wider."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The difference between an signed and an unsigned int or long is that a signed int or long can contain negative values. The range of the int is -2 147 483 648 to 2 147 483 647 while the unsigned int has a range of 0 to 4 294 967 295. The value is doubled because the first bit isn’t used anymore to say the value is negative or not. For a long and NSInteger on 64-bit architectures, the range is much wider."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021576155,
        "id": "d2abfcb8-a289-4f85-86a9-6a632d3f00c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021576155,
        "parent_id": "015ee53c-abd4-4101-a82e-b4a75510d57b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most methods Apple provides are returning an NS(U)Integer over the normal int. You’ll get a warning if you try to cast it to a normal int because you will lose precision if you are running on a 64-bit architecture. Not that it would matter in most cases, but it is easier to use NS(U)Integer. For example, the count method on a array will return an NSUInteger."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most methods Apple provides are returning an NS(U)Integer over the normal int. You’ll get a warning if you try to cast it to a normal int because you will lose precision if you are running on a 64-bit architecture. Not that it would matter in most cases, but it is easier to use NS(U)Integer. For example, the count method on a array will return an NSUInteger."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021576155,
        "id": "0e629e9a-01f9-4687-9cc6-5bae2619500c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021576155,
        "parent_id": "015ee53c-abd4-4101-a82e-b4a75510d57b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSNumber *iAmNumber = @0;\n\nNSInteger iAmSigned = [iAmNumber integerValue];\nNSUInteger iAmUnsigned = [iAmNumber unsignedIntegerValue];\n\nNSLog(@\"%ld\", iAmSigned); // The way to print a NSInteger.\nNSLog(@\"%lu\", iAmUnsigned); // The way to print a NSUInteger."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSNumber *iAmNumber = @0;\n\nNSInteger iAmSigned = [iAmNumber integerValue];\nNSUInteger iAmUnsigned = [iAmNumber unsignedIntegerValue];\n\nNSLog(@\"%ld\", iAmSigned); // The way to print a NSInteger.\nNSLog(@\"%lu\", iAmUnsigned); // The way to print a NSUInteger.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021576156,
        "id": "fb9cc673-2d96-408a-a107-5be870096132",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021576156,
        "parent_id": "015ee53c-abd4-4101-a82e-b4a75510d57b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just like a BOOL, the NS(U)Integer is a primitive datatype, so you sometimes need to wrap it in a NSNumber you can use the @ before the integer to cast it like above and retrieve it using the methods below. But to cast it to NSNumber, you could also use the following methods:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just like a BOOL, the NS(U)Integer is a primitive datatype, so you sometimes need to wrap it in a NSNumber you can use the @ before the integer to cast it like above and retrieve it using the methods below. But to cast it to NSNumber, you could also use the following methods:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021576156,
        "id": "006962b7-328c-43ff-989d-add4a425eae3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021576156,
        "parent_id": "015ee53c-abd4-4101-a82e-b4a75510d57b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[NSNumber numberWithInteger:0];\n[NSNumber numberWithUnsignedInteger:0];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[NSNumber numberWithInteger:0];\n[NSNumber numberWithUnsignedInteger:0];",
        "code_language": "Plain Text"
      }
    ],
    "title": "NSInteger and NSUInteger",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}