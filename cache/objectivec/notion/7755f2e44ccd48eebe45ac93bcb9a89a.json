{
  "ID": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
  "Root": {
    "alive": true,
    "content": [
      "09622050-050d-40f9-af71-41776f775030",
      "561cc745-010f-4a26-af22-d495f4318ebb",
      "5a92c6a6-1adb-4edb-81cc-e831740d5b19",
      "e43532db-2b3c-483e-b329-87c4e350deda",
      "c8f64740-e9df-4c0d-8d26-374f27f5db07",
      "e200974e-2fa6-4b51-be5a-f9f4b10a7ab1",
      "962d72a1-7617-422a-87ef-5489bc89b6f3",
      "01211564-bf2f-47a9-89f9-d3bc941f4087",
      "64201262-df76-472b-826d-5b2f9d961730",
      "492e870a-f573-479e-a672-6405b4084488",
      "45a54152-b87d-4efa-9e24-5a782c878d66",
      "2942233e-e366-4599-a4e7-f864e77da4ea",
      "e8b33a85-6846-42f3-a704-161ddbf26d75",
      "a3f0fa1d-8949-476a-987e-c4b2cbe3f277",
      "e45df57f-3bd0-4824-a305-b81699d656ea",
      "ebc1013f-dc58-474b-85da-2ede7c7a0d93",
      "c38f18a5-10f2-4b84-a1d4-863554a937dd",
      "ac0f0709-dbe9-4eb6-a3b8-f969ec1dce67",
      "a9223b8e-7827-4038-ba83-aa569ff82326",
      "817e349f-1959-4e25-84e5-7f4fd684a056",
      "004bdd5d-d5fe-4610-bd84-833f556963ec",
      "81f53a8d-50e1-4fdb-b2ca-089e33df0b3c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552021083136,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552021083136,
    "parent_id": "1a2fc903-c419-477e-bc9c-634980a5b747",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Collection Operators"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083127,
        "id": "09622050-050d-40f9-af71-41776f775030",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083127,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Collection Operators",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " can be used in a KVC key path to perform an operation on a “collection-type” property (i.e. "
            ],
            [
              "NSArray",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "NSSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and similar). For example, a common operation to perform is to count the objects in a collection. To achieve this, you use the "
            ],
            [
              "@count",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "collection operator",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Collection Operators",
            "AttrFlags": 1
          },
          {
            "Text": " can be used in a KVC key path to perform an operation on a “collection-type” property (i.e. "
          },
          {
            "Text": "NSArray",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "NSSet",
            "AttrFlags": 2
          },
          {
            "Text": " and similar). For example, a common operation to perform is to count the objects in a collection. To achieve this, you use the "
          },
          {
            "Text": "@count",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "collection operator",
            "AttrFlags": 4
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083130,
        "id": "561cc745-010f-4a26-af22-d495f4318ebb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083130,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "self.array = @[@5, @4, @3, @2, @1];\nNSNumber *count = [self.array valueForKeyPath:@\"@count\"];\nNSNumber *countAlt = [self valueForKeyPath:@\"array.@count\"];\n// count == countAlt == 5"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "self.array = @[@5, @4, @3, @2, @1];\nNSNumber *count = [self.array valueForKeyPath:@\"@count\"];\nNSNumber *countAlt = [self valueForKeyPath:@\"array.@count\"];\n// count == countAlt == 5",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083131,
        "id": "5a92c6a6-1adb-4edb-81cc-e831740d5b19",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083131,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While this is completely redundant here (we could have just accessed the "
            ],
            [
              "count",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property), it "
            ],
            [
              "can",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " be useful on occasion, though it is rarely necessary. There are, however, some collection operators that are much more useful, namely "
            ],
            [
              "@max",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "@min",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "@sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "@avg",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and the "
            ],
            [
              "@unionOf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " family. It is important to note that these operators "
            ],
            [
              "also",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " require a separate key path "
            ],
            [
              "following",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " the operator to function correctly. Here’s a list of them and the type of data they work with:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While this is completely redundant here (we could have just accessed the "
          },
          {
            "Text": "count",
            "AttrFlags": 2
          },
          {
            "Text": " property), it "
          },
          {
            "Text": "can",
            "AttrFlags": 4
          },
          {
            "Text": " be useful on occasion, though it is rarely necessary. There are, however, some collection operators that are much more useful, namely "
          },
          {
            "Text": "@max",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "@min",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "@sum",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "@avg",
            "AttrFlags": 2
          },
          {
            "Text": " and the "
          },
          {
            "Text": "@unionOf",
            "AttrFlags": 2
          },
          {
            "Text": " family. It is important to note that these operators "
          },
          {
            "Text": "also",
            "AttrFlags": 4
          },
          {
            "Text": " require a separate key path "
          },
          {
            "Text": "following",
            "AttrFlags": 4
          },
          {
            "Text": " the operator to function correctly. Here’s a list of them and the type of data they work with:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083132,
        "id": "e43532db-2b3c-483e-b329-87c4e350deda",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083132,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Operator | Data Type |\n–––– | ———————————————————–– |"
            ],
            [
              "@count",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | (none) |"
            ],
            [
              "@max",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSNumber",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "NSDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and related), etc. |"
            ],
            [
              "@min",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSNumber",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "NSDate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and related), etc. |"
            ],
            [
              "@sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSNumber",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and related), "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and related), etc. |"
            ],
            [
              "@avg",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSNumber",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and related), "
            ],
            [
              "double",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and related), etc. |"
            ],
            [
              "@unionOfObjects",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSArray",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "NSSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc. |"
            ],
            [
              "@distinctUnionOfObjects",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSArray",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "NSSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc. |"
            ],
            [
              "@unionOfArrays",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSArray\u003cNSArray*\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "@distinctUnionOfArrays",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSArray\u003cNSArray*\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ],
            [
              "@distinctUnionOfSets",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " | "
            ],
            [
              "NSSet\u003cNSSet*\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Operator | Data Type |\n–––– | ———————————————————–– |"
          },
          {
            "Text": "@count",
            "AttrFlags": 2
          },
          {
            "Text": " | (none) |"
          },
          {
            "Text": "@max",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSNumber",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "NSDate",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " (and related), etc. |"
          },
          {
            "Text": "@min",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSNumber",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "NSDate",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " (and related), etc. |"
          },
          {
            "Text": "@sum",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSNumber",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " (and related), "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " (and related), etc. |"
          },
          {
            "Text": "@avg",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSNumber",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " (and related), "
          },
          {
            "Text": "double",
            "AttrFlags": 2
          },
          {
            "Text": " (and related), etc. |"
          },
          {
            "Text": "@unionOfObjects",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSArray",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "NSSet",
            "AttrFlags": 2
          },
          {
            "Text": ", etc. |"
          },
          {
            "Text": "@distinctUnionOfObjects",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSArray",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "NSSet",
            "AttrFlags": 2
          },
          {
            "Text": ", etc. |"
          },
          {
            "Text": "@unionOfArrays",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSArray\u003cNSArray*\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "@distinctUnionOfArrays",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSArray\u003cNSArray*\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          },
          {
            "Text": "@distinctUnionOfSets",
            "AttrFlags": 2
          },
          {
            "Text": " | "
          },
          {
            "Text": "NSSet\u003cNSSet*\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " |"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083133,
        "id": "c8f64740-e9df-4c0d-8d26-374f27f5db07",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083133,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@max",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "@min",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will return the highest or lowest value, respectively, of a property of objects in the collection. For example, look at the following code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "@max",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "@min",
            "AttrFlags": 2
          },
          {
            "Text": " will return the highest or lowest value, respectively, of a property of objects in the collection. For example, look at the following code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083133,
        "id": "e200974e-2fa6-4b51-be5a-f9f4b10a7ab1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083133,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// “Point” class used in our collection\n@interface Point : NSObject\n\n@property NSInteger x, y;\n\n+ (instancetype)pointWithX:(NSInteger)x y:(NSInteger)y;\n\n@end\n\n...\n\nself.points = @[[Point pointWithX:0 y:0],\n                [Point pointWithX:1 y:-1],\n                [Point pointWithX:5 y:-6],\n                [Point pointWithX:3 y:0],\n                [Point pointWithX:8 y:-4],\n];\n\nNSNumber *maxX = [self valueForKeyPath:@\"points.@max.x\"];\nNSNumber *minX = [self valueForKeyPath:@\"points.@min.x\"];\nNSNumber *maxY = [self valueForKeyPath:@\"points.@max.y\"];\nNSNumber *minY = [self valueForKeyPath:@\"points.@min.y\"];\n\nNSArray\u003cNSNumber*\u003e *boundsOfAllPoints = @[maxX, minX, maxY, minY];\n\n..."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// “Point” class used in our collection\n@interface Point : NSObject\n\n@property NSInteger x, y;\n\n+ (instancetype)pointWithX:(NSInteger)x y:(NSInteger)y;\n\n@end\n\n...\n\nself.points = @[[Point pointWithX:0 y:0],\n                [Point pointWithX:1 y:-1],\n                [Point pointWithX:5 y:-6],\n                [Point pointWithX:3 y:0],\n                [Point pointWithX:8 y:-4],\n];\n\nNSNumber *maxX = [self valueForKeyPath:@\"points.@max.x\"];\nNSNumber *minX = [self valueForKeyPath:@\"points.@min.x\"];\nNSNumber *maxY = [self valueForKeyPath:@\"points.@max.y\"];\nNSNumber *minY = [self valueForKeyPath:@\"points.@min.y\"];\n\nNSArray\u003cNSNumber*\u003e *boundsOfAllPoints = @[maxX, minX, maxY, minY];\n\n...",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083133,
        "id": "962d72a1-7617-422a-87ef-5489bc89b6f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083133,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In just a 4 lines of code and pure Foundation, with the power of Key-Value Coding collection operators we were able to extract a rectangle that encapsulates all of the points in our array."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In just a 4 lines of code and pure Foundation, with the power of Key-Value Coding collection operators we were able to extract a rectangle that encapsulates all of the points in our array."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083133,
        "id": "01211564-bf2f-47a9-89f9-d3bc941f4087",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083133,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It is important to note that these comparisons are made by invoking the "
            ],
            [
              "compare:",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method on the objects, so if you ever want to make your own class compatible with these operators, you must implement this method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It is important to note that these comparisons are made by invoking the "
          },
          {
            "Text": "compare:",
            "AttrFlags": 2
          },
          {
            "Text": " method on the objects, so if you ever want to make your own class compatible with these operators, you must implement this method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083133,
        "id": "64201262-df76-472b-826d-5b2f9d961730",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083133,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will, as you can probably guess, add up all the values of a property."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "@sum",
            "AttrFlags": 2
          },
          {
            "Text": " will, as you can probably guess, add up all the values of a property."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083133,
        "id": "492e870a-f573-479e-a672-6405b4084488",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083133,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "@interface Expense : NSObject\n\n@property NSNumber *price;\n\n+ (instancetype)expenseWithPrice:(NSNumber *)price;\n\n@end\n\n...\n\nself.expenses = @[[Expense expenseWithPrice:@1.50],\n                  [Expense expenseWithPrice:@9.99],\n                  [Expense expenseWithPrice:@2.78],\n                  [Expense expenseWithPrice:@9.99],\n                  [Expense expenseWithPrice:@24.95]\n];\n\nNSNumber *totalExpenses = [self valueForKeyPath:@\"expenses.@sum.price\"];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "@interface Expense : NSObject\n\n@property NSNumber *price;\n\n+ (instancetype)expenseWithPrice:(NSNumber *)price;\n\n@end\n\n...\n\nself.expenses = @[[Expense expenseWithPrice:@1.50],\n                  [Expense expenseWithPrice:@9.99],\n                  [Expense expenseWithPrice:@2.78],\n                  [Expense expenseWithPrice:@9.99],\n                  [Expense expenseWithPrice:@24.95]\n];\n\nNSNumber *totalExpenses = [self valueForKeyPath:@\"expenses.@sum.price\"];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083134,
        "id": "45a54152-b87d-4efa-9e24-5a782c878d66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083134,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here, we used "
            ],
            [
              "@sum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to find the total price of all the expenses in the array. If we instead wanted to find the average price we’re paying for each expense, we can use "
            ],
            [
              "@avg",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here, we used "
          },
          {
            "Text": "@sum",
            "AttrFlags": 2
          },
          {
            "Text": " to find the total price of all the expenses in the array. If we instead wanted to find the average price we’re paying for each expense, we can use "
          },
          {
            "Text": "@avg",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083134,
        "id": "2942233e-e366-4599-a4e7-f864e77da4ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083134,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSNumber *averagePrice = [self valueForKeyPath:@\"expenses.@avg.price\"];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSNumber *averagePrice = [self valueForKeyPath:@\"expenses.@avg.price\"];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083134,
        "id": "e8b33a85-6846-42f3-a704-161ddbf26d75",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083134,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Finally, there’s the "
            ],
            [
              "@unionOf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " family. There are five different operators in this family, but they all work mostly the same, with only small differences between each. First, there’s "
            ],
            [
              "@unionOfObjects",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which will return an array of the properties of objects in an array:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Finally, there’s the "
          },
          {
            "Text": "@unionOf",
            "AttrFlags": 2
          },
          {
            "Text": " family. There are five different operators in this family, but they all work mostly the same, with only small differences between each. First, there’s "
          },
          {
            "Text": "@unionOfObjects",
            "AttrFlags": 2
          },
          {
            "Text": " which will return an array of the properties of objects in an array:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083134,
        "id": "a3f0fa1d-8949-476a-987e-c4b2cbe3f277",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083134,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// See \"expenses\" array above\n\nNSArray\u003cNSNumber*\u003e *allPrices = [self valueForKeyPath:\n    @\"expenses.@unionOfObjects.price\"];\n\n// Equal to @[ @1.50, @9.99, @2.78, @9.99, @24.95 ]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// See \"expenses\" array above\n\nNSArray\u003cNSNumber*\u003e *allPrices = [self valueForKeyPath:\n    @\"expenses.@unionOfObjects.price\"];\n\n// Equal to @[ @1.50, @9.99, @2.78, @9.99, @24.95 ]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083134,
        "id": "e45df57f-3bd0-4824-a305-b81699d656ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083134,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@distinctUnionOfObjects",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " functions the same as "
            ],
            [
              "@unionOfObjects",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but it removes duplicates:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "@distinctUnionOfObjects",
            "AttrFlags": 2
          },
          {
            "Text": " functions the same as "
          },
          {
            "Text": "@unionOfObjects",
            "AttrFlags": 2
          },
          {
            "Text": ", but it removes duplicates:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083134,
        "id": "ebc1013f-dc58-474b-85da-2ede7c7a0d93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083134,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSArray\u003cNSNumber*\u003e *differentPrices = [self valueForKeyPath:\n    @\"expenses.@distinctUnionOfObjects.price\"];\n\n// Equal to @[ @1.50, @9.99, @2.78, @24.95 ]"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSArray\u003cNSNumber*\u003e *differentPrices = [self valueForKeyPath:\n    @\"expenses.@distinctUnionOfObjects.price\"];\n\n// Equal to @[ @1.50, @9.99, @2.78, @24.95 ]",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083135,
        "id": "c38f18a5-10f2-4b84-a1d4-863554a937dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083135,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And finally, the last 3 operators in the "
            ],
            [
              "@unionOf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " family will go one step deeper and return an array of values found for a property contained inside dually-nested arrays:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And finally, the last 3 operators in the "
          },
          {
            "Text": "@unionOf",
            "AttrFlags": 2
          },
          {
            "Text": " family will go one step deeper and return an array of values found for a property contained inside dually-nested arrays:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083135,
        "id": "ac0f0709-dbe9-4eb6-a3b8-f969ec1dce67",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083135,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSArray\u003cNSArray\u003cExpense*,Expense*\u003e*\u003e *arrayOfArrays =\n    @[\n        @[ [Expense expenseWithPrice:@19.99],\n           [Expense expenseWithPrice:@14.95],\n           [Expense expenseWithPrice:@4.50],\n           [Expense expenseWithPrice:@19.99]\n         ],\n\n        @[ [Expense expenseWithPrice:@3.75],\n           [Expense expenseWithPrice:@14.95]\n         ]\n     ];\n\n// @unionOfArrays\nNSArray\u003cNSNumber*\u003e allPrices = [arrayOfArrays valueForKeyPath:\n    @\"@unionOfArrays.price\"];\n// Equal to @[ @19.99, @14.95, @4.50, @19.99, @3.75, @14.95 ];\n\n// @distinctUnionOfArrays\nNSArray\u003cNSNumber*\u003e allPrices = [arrayOfArrays valueForKeyPath:\n    @\"@distinctUnionOfArrays.price\"];\n// Equal to @[ @19.99, @14.95, @4.50, @3.75 ];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSArray\u003cNSArray\u003cExpense*,Expense*\u003e*\u003e *arrayOfArrays =\n    @[\n        @[ [Expense expenseWithPrice:@19.99],\n           [Expense expenseWithPrice:@14.95],\n           [Expense expenseWithPrice:@4.50],\n           [Expense expenseWithPrice:@19.99]\n         ],\n\n        @[ [Expense expenseWithPrice:@3.75],\n           [Expense expenseWithPrice:@14.95]\n         ]\n     ];\n\n// @unionOfArrays\nNSArray\u003cNSNumber*\u003e allPrices = [arrayOfArrays valueForKeyPath:\n    @\"@unionOfArrays.price\"];\n// Equal to @[ @19.99, @14.95, @4.50, @19.99, @3.75, @14.95 ];\n\n// @distinctUnionOfArrays\nNSArray\u003cNSNumber*\u003e allPrices = [arrayOfArrays valueForKeyPath:\n    @\"@distinctUnionOfArrays.price\"];\n// Equal to @[ @19.99, @14.95, @4.50, @3.75 ];",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083135,
        "id": "a9223b8e-7827-4038-ba83-aa569ff82326",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083135,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The one missing from this example is "
            ],
            [
              "@distinctUnionOfSets",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", however this functions exactly the same as "
            ],
            [
              "@distinctUnionOfArrays",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but works with and returns "
            ],
            [
              "NSSet",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s instead (there is no non-"
            ],
            [
              "distinct",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " version because in a set, every object must be distinct anyway)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The one missing from this example is "
          },
          {
            "Text": "@distinctUnionOfSets",
            "AttrFlags": 2
          },
          {
            "Text": ", however this functions exactly the same as "
          },
          {
            "Text": "@distinctUnionOfArrays",
            "AttrFlags": 2
          },
          {
            "Text": ", but works with and returns "
          },
          {
            "Text": "NSSet",
            "AttrFlags": 2
          },
          {
            "Text": "s instead (there is no non-"
          },
          {
            "Text": "distinct",
            "AttrFlags": 2
          },
          {
            "Text": " version because in a set, every object must be distinct anyway)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083135,
        "id": "817e349f-1959-4e25-84e5-7f4fd684a056",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083135,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And that’s it! Collection operators can be really powerful if used correctly, and can help to avoid having to loop through stuff unnecessarily."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And that’s it! Collection operators can be really powerful if used correctly, and can help to avoid having to loop through stuff unnecessarily."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083136,
        "id": "004bdd5d-d5fe-4610-bd84-833f556963ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083136,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One last note: you can also use the standard collection operators on arrays of "
            ],
            [
              "NSNumber",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "s (without additional property access). To do this, you access the "
            ],
            [
              "self",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " pseudo-property that just returns the object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One last note: you can also use the standard collection operators on arrays of "
          },
          {
            "Text": "NSNumber",
            "AttrFlags": 2
          },
          {
            "Text": "s (without additional property access). To do this, you access the "
          },
          {
            "Text": "self",
            "AttrFlags": 2
          },
          {
            "Text": " pseudo-property that just returns the object:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021083136,
        "id": "81f53a8d-50e1-4fdb-b2ca-089e33df0b3c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021083136,
        "parent_id": "7755f2e4-4ccd-48ee-be45-ac93bcb9a89a",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSArray\u003cNSNumber*\u003e *numbers = @[@0, @1, @5, @27, @1337, @2048];\n\nNSNumber *largest = [numbers valueForKeyPath:@\"@max.self\"];\nNSNumber *smallest = [numbers valueForKeyPath:@\"@min.self\"];\nNSNumber *total = [numbers valueForKeyPath:@\"@sum.self\"];\nNSNumber *average = [numbers valueForKeyPath:@\"@avg.self\"];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSArray\u003cNSNumber*\u003e *numbers = @[@0, @1, @5, @27, @1337, @2048];\n\nNSNumber *largest = [numbers valueForKeyPath:@\"@max.self\"];\nNSNumber *smallest = [numbers valueForKeyPath:@\"@min.self\"];\nNSNumber *total = [numbers valueForKeyPath:@\"@sum.self\"];\nNSNumber *average = [numbers valueForKeyPath:@\"@avg.self\"];",
        "code_language": "Plain Text"
      }
    ],
    "title": "Collection Operators",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}