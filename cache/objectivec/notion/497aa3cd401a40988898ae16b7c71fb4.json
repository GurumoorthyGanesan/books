{
  "ID": "497aa3cd-401a-4098-8898-ae16b7c71fb4",
  "Root": {
    "alive": true,
    "content": [
      "494c1734-f312-4764-9718-b52806fe8682",
      "6e8dccfc-6206-4cc2-b903-b37adaff1f27",
      "eec46328-b1b9-4f5a-be61-955ce70a1854",
      "66bf8075-fbf9-4c10-a098-abc31dabcf6f",
      "0e9c6d57-50d2-430e-a8c8-a4a3ffe84925",
      "b28f1725-0bca-4e5d-b01a-d2bf9c492d46"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552021196249,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "497aa3cd-401a-4098-8898-ae16b7c71fb4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552021196249,
    "parent_id": "705af5a2-3877-4339-99bf-d2b1f18377ff",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Converting C std vectorEnum to an Objective-C Array"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021196246,
        "id": "494c1734-f312-4764-9718-b52806fe8682",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021196246,
        "parent_id": "497aa3cd-401a-4098-8898-ae16b7c71fb4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Many C++ libraries use enums and return/receive data using vectors that contain enums. As C enums are not Objective-C objects, Objective-C collections cannot be used directly with C enums. The example below deals with this by using a combination of an NSArray and generics and a wrapper object for the array. This way, the collection can be explicit about the data type and there is no worry about possible memory leaks with C arrays Objective-C objects are used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Many C++ libraries use enums and return/receive data using vectors that contain enums. As C enums are not Objective-C objects, Objective-C collections cannot be used directly with C enums. The example below deals with this by using a combination of an NSArray and generics and a wrapper object for the array. This way, the collection can be explicit about the data type and there is no worry about possible memory leaks with C arrays Objective-C objects are used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021196248,
        "id": "6e8dccfc-6206-4cc2-b903-b37adaff1f27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021196248,
        "parent_id": "497aa3cd-401a-4098-8898-ae16b7c71fb4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is the C enum \u0026 Objective-C equivalent object:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is the C enum \u0026 Objective-C equivalent object:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021196249,
        "id": "eec46328-b1b9-4f5a-be61-955ce70a1854",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021196249,
        "parent_id": "497aa3cd-401a-4098-8898-ae16b7c71fb4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef enum \n{  \n  Error0 = 0,\n  Error1 = 1,\n  Error2 = 2\n} MyError;\n\n@interface ErrorEnumObj : NSObject\n\n@property (nonatomic) int intValue;\n\n+ (instancetype) objWithEnum:(MyError) myError;\n- (MyError) getEnumValue;\n\n@end \n\n@implementation ErrorEnumObj\n\n+ (instancetype) objWithEnum:(MyError) error\n{\n    ErrorEnumObj * obj = [ErrorEnumObj new];\n    obj.intValue = (int)error;\n    return obj;\n}\n\n- (MyError) getEnumValue\n{\n    return (MyError)self.intValue;\n}\n\n@end"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef enum \n{  \n  Error0 = 0,\n  Error1 = 1,\n  Error2 = 2\n} MyError;\n\n@interface ErrorEnumObj : NSObject\n\n@property (nonatomic) int intValue;\n\n+ (instancetype) objWithEnum:(MyError) myError;\n- (MyError) getEnumValue;\n\n@end \n\n@implementation ErrorEnumObj\n\n+ (instancetype) objWithEnum:(MyError) error\n{\n    ErrorEnumObj * obj = [ErrorEnumObj new];\n    obj.intValue = (int)error;\n    return obj;\n}\n\n- (MyError) getEnumValue\n{\n    return (MyError)self.intValue;\n}\n\n@end",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021196249,
        "id": "66bf8075-fbf9-4c10-a098-abc31dabcf6f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021196249,
        "parent_id": "497aa3cd-401a-4098-8898-ae16b7c71fb4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "And here is a possible use of it in Objective-C++ (the resulting NSArray can be used in Objective-C only files as no C++ is used)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "And here is a possible use of it in Objective-C++ (the resulting NSArray can be used in Objective-C only files as no C++ is used)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021196249,
        "id": "0e9c6d57-50d2-430e-a8c8-a4a3ffe84925",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021196249,
        "parent_id": "497aa3cd-401a-4098-8898-ae16b7c71fb4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class ListenerImpl : public Listener\n{\npublic:\n    ListenerImpl(Listener* listener) : _listener(listener) {}\n    void onError(std::vector\u003cMyError\u003e errors) override\n    {\n        NSMutableArray\u003cErrorEnumObj *\u003e * array = [NSMutableArray\u003cErrorEnumObj *\u003e new]; \n        for (auto\u0026\u0026 myError : errors)\n        {\n            [array addObject:[ErrorEnumObj objWithEnum:myError]];\n        }\n        [_listener onError:array];\n    }\n\nprivate:\n    __weak Listener* _listener;\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class ListenerImpl : public Listener\n{\npublic:\n    ListenerImpl(Listener* listener) : _listener(listener) {}\n    void onError(std::vector\u003cMyError\u003e errors) override\n    {\n        NSMutableArray\u003cErrorEnumObj *\u003e * array = [NSMutableArray\u003cErrorEnumObj *\u003e new]; \n        for (auto\u0026\u0026 myError : errors)\n        {\n            [array addObject:[ErrorEnumObj objWithEnum:myError]];\n        }\n        [_listener onError:array];\n    }\n\nprivate:\n    __weak Listener* _listener;\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021196249,
        "id": "b28f1725-0bca-4e5d-b01a-d2bf9c492d46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021196249,
        "parent_id": "497aa3cd-401a-4098-8898-ae16b7c71fb4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If this kind of solution is to be used on multiple enums, the creation of the EnumObj (declaration \u0026 implementation) can be done using a macro (to create a template like solution)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If this kind of solution is to be used on multiple enums, the creation of the EnumObj (declaration \u0026 implementation) can be done using a macro (to create a template like solution)."
          }
        ]
      }
    ],
    "title": "Converting C std vectorEnum to an Objective-C Array",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}