{
  "ID": "b9f82cd3-fc08-4a8b-ba1f-94b7ea647b82",
  "Root": {
    "alive": true,
    "content": [
      "461450b6-9380-466b-b125-d53d4eed4da8",
      "7ed39c62-27dc-4f17-afcd-ea7f29409e76",
      "3752e261-be79-429d-8608-099183585562",
      "accd0ab3-f8c2-448d-985c-efe3278c2f1f",
      "80ca0a48-1ecb-4f1d-89b8-a57f50de5da1",
      "60c816e2-60a3-4fb3-9740-6425c7b3cc9c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552021090198,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b9f82cd3-fc08-4a8b-ba1f-94b7ea647b82",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552021090198,
    "parent_id": "71be0d2e-f5d6-49fc-8196-d4c08c802f89",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Logging Variable Values"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021090192,
        "id": "461450b6-9380-466b-b125-d53d4eed4da8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021090192,
        "parent_id": "b9f82cd3-fc08-4a8b-ba1f-94b7ea647b82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You shouldn’t call "
            ],
            [
              "NSLog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " without a literal format string like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You shouldn’t call "
          },
          {
            "Text": "NSLog",
            "AttrFlags": 2
          },
          {
            "Text": " without a literal format string like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021090195,
        "id": "7ed39c62-27dc-4f17-afcd-ea7f29409e76",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021090195,
        "parent_id": "b9f82cd3-fc08-4a8b-ba1f-94b7ea647b82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSLog(variable);    // Dangerous code!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSLog(variable);    // Dangerous code!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021090195,
        "id": "3752e261-be79-429d-8608-099183585562",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021090195,
        "parent_id": "b9f82cd3-fc08-4a8b-ba1f-94b7ea647b82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the variable is not an "
            ],
            [
              "NSString",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the program will crash, because "
            ],
            [
              "NSLog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " expects an "
            ],
            [
              "NSString",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the variable is not an "
          },
          {
            "Text": "NSString",
            "AttrFlags": 2
          },
          {
            "Text": ", the program will crash, because "
          },
          {
            "Text": "NSLog",
            "AttrFlags": 2
          },
          {
            "Text": " expects an "
          },
          {
            "Text": "NSString",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021090197,
        "id": "accd0ab3-f8c2-448d-985c-efe3278c2f1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021090197,
        "parent_id": "b9f82cd3-fc08-4a8b-ba1f-94b7ea647b82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the variable is an "
            ],
            [
              "NSString",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it will work unless your string contains a "
            ],
            [
              "%",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "NSLog",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will parse the "
            ],
            [
              "%",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " sequence as a format specifier and then read a garbage value off the stack, causing a crash or even "
            ],
            [
              "executing arbitrary code",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Uncontrolled_format_string"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the variable is an "
          },
          {
            "Text": "NSString",
            "AttrFlags": 2
          },
          {
            "Text": ", it will work unless your string contains a "
          },
          {
            "Text": "%",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "NSLog",
            "AttrFlags": 2
          },
          {
            "Text": " will parse the "
          },
          {
            "Text": "%",
            "AttrFlags": 2
          },
          {
            "Text": " sequence as a format specifier and then read a garbage value off the stack, causing a crash or even "
          },
          {
            "Text": "executing arbitrary code",
            "Link": "https://en.wikipedia.org/wiki/Uncontrolled_format_string"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021090198,
        "id": "80ca0a48-1ecb-4f1d-89b8-a57f50de5da1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021090198,
        "parent_id": "b9f82cd3-fc08-4a8b-ba1f-94b7ea647b82",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead, always make the first argument a format specifier, like this:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead, always make the first argument a format specifier, like this:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021090198,
        "id": "60c816e2-60a3-4fb3-9740-6425c7b3cc9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021090198,
        "parent_id": "b9f82cd3-fc08-4a8b-ba1f-94b7ea647b82",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSLog(@\"%@\", anObjectVariable);\nNSLog(@\"%d\", anIntegerVariable);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSLog(@\"%@\", anObjectVariable);\nNSLog(@\"%d\", anIntegerVariable);",
        "code_language": "Plain Text"
      }
    ],
    "title": "Logging Variable Values",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}