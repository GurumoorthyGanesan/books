{
  "ID": "06836a2a-e74a-460b-ba75-cb00aa68faba",
  "Root": {
    "alive": true,
    "content": [
      "4221d56f-f4f2-497d-82ae-e3fe7e98e387",
      "af3fa394-ad66-4395-9190-23b461301960",
      "3f50b4f6-48d0-4832-9b7b-4f9238816d06",
      "0281e8fb-db9e-41d2-9340-21b00b00222f",
      "f5218a4e-d883-4401-b25a-345c7f3b1e8f"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552021105209,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "06836a2a-e74a-460b-ba75-cb00aa68faba",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552021105209,
    "parent_id": "b1a21291-9e7c-4ffa-8e64-d67c8ab753f2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Difference between allocation and initialization"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021105207,
        "id": "4221d56f-f4f2-497d-82ae-e3fe7e98e387",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021105207,
        "parent_id": "06836a2a-e74a-460b-ba75-cb00aa68faba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In most object oriented languages, allocating memory for an object and initializing it is an atomic operation:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In most object oriented languages, allocating memory for an object and initializing it is an atomic operation:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021105208,
        "id": "af3fa394-ad66-4395-9190-23b461301960",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021105208,
        "parent_id": "06836a2a-e74a-460b-ba75-cb00aa68faba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Both allocates memory and calls the constructor\nMyClass object = new MyClass();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Both allocates memory and calls the constructor\nMyClass object = new MyClass();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021105208,
        "id": "3f50b4f6-48d0-4832-9b7b-4f9238816d06",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021105208,
        "parent_id": "06836a2a-e74a-460b-ba75-cb00aa68faba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In Objective-C, these are separate operations. The class methods "
            ],
            [
              "alloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (and its historic sibling "
            ],
            [
              "allocWithZone:",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") makes the Objective-C runtime reserve the required memory and clears it. Except for a few internal values, all properties and variables are set to 0/"
            ],
            [
              "NO",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "/"
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In Objective-C, these are separate operations. The class methods "
          },
          {
            "Text": "alloc",
            "AttrFlags": 2
          },
          {
            "Text": " (and its historic sibling "
          },
          {
            "Text": "allocWithZone:",
            "AttrFlags": 2
          },
          {
            "Text": ") makes the Objective-C runtime reserve the required memory and clears it. Except for a few internal values, all properties and variables are set to 0/"
          },
          {
            "Text": "NO",
            "AttrFlags": 2
          },
          {
            "Text": "/"
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021105208,
        "id": "0281e8fb-db9e-41d2-9340-21b00b00222f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021105208,
        "parent_id": "06836a2a-e74a-460b-ba75-cb00aa68faba",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The object then is already “valid” but we always want to call a method to actually set up the object, which we call an "
            ],
            [
              "initializer",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". These serve the same purpose as "
            ],
            [
              "constructors",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " in other languages. By convention, these methods start with "
            ],
            [
              "init",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". From a language point of view, they are just normal methods."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The object then is already “valid” but we always want to call a method to actually set up the object, which we call an "
          },
          {
            "Text": "initializer",
            "AttrFlags": 4
          },
          {
            "Text": ". These serve the same purpose as "
          },
          {
            "Text": "constructors",
            "AttrFlags": 4
          },
          {
            "Text": " in other languages. By convention, these methods start with "
          },
          {
            "Text": "init",
            "AttrFlags": 2
          },
          {
            "Text": ". From a language point of view, they are just normal methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021105209,
        "id": "f5218a4e-d883-4401-b25a-345c7f3b1e8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021105209,
        "parent_id": "06836a2a-e74a-460b-ba75-cb00aa68faba",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Allocate memory and set all properties and variables to 0/NO/nil.\nMyClass *object = [MyClass alloc];\n// Initialize the object.\nobject = [object init];\n\n// Shorthand:\nobject = [[MyClass alloc] init];"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Allocate memory and set all properties and variables to 0/NO/nil.\nMyClass *object = [MyClass alloc];\n// Initialize the object.\nobject = [object init];\n\n// Shorthand:\nobject = [[MyClass alloc] init];",
        "code_language": "Plain Text"
      }
    ],
    "title": "Difference between allocation and initialization",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}