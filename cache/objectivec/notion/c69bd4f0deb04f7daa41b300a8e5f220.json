{
  "ID": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
  "Root": {
    "alive": true,
    "content": [
      "d8830ea3-6b85-4ef6-9d49-aef88840c485",
      "4bcabf0d-4b01-40d9-a9fe-19d331f38eb2",
      "ba7eac85-38fc-4d4c-9fe7-15baeddf03f3",
      "f2eb9f11-699e-4b2d-a02b-86c6ad69fdf9",
      "42c6e41c-150c-4bc0-8025-e35b624e3cf5",
      "193a4667-7e72-46ba-8f5d-3cccf68ed1ce",
      "d2b18054-e0ef-4b7b-8b5f-f8ca8102b81a",
      "4b0e1425-c38a-4251-bb88-8eba77e4d76e",
      "d994cbbe-82df-4aa9-b18a-94b28ec2fbfa",
      "62a05c12-36f8-45ec-b2e2-59f255e3f7d0",
      "e6fdeda6-f66c-4376-b4d1-67a9db1bc103",
      "1e8c06eb-15ef-4738-b556-5393fa149978"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552021496153,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552021496153,
    "parent_id": "3732f308-d12a-4cbd-8512-6e4f9d34a917",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Memory management rules when using manual reference counting."
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496144,
        "id": "d8830ea3-6b85-4ef6-9d49-aef88840c485",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496144,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These rules apply only if you use manual reference counting!",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These rules apply only if you use manual reference counting!",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496147,
        "id": "4bcabf0d-4b01-40d9-a9fe-19d331f38eb2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496147,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You own any object you create",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You own any object you create",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496147,
        "id": "ba7eac85-38fc-4d4c-9fe7-15baeddf03f3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496147,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By calling a method whose name begins with "
            ],
            [
              "alloc",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "new",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "copy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "mutableCopy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". For example:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By calling a method whose name begins with "
          },
          {
            "Text": "alloc",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "new",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "copy",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "mutableCopy",
            "AttrFlags": 2
          },
          {
            "Text": ". For example:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496148,
        "id": "f2eb9f11-699e-4b2d-a02b-86c6ad69fdf9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496148,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSObject *object1 = [[NSObject alloc] init];\nNSObject *object2 = [NSObject new];\nNSObject *object3 = [object2 copy];\n\nThat means that you are responsible for releasing these objects when you are done with them."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSObject *object1 = [[NSObject alloc] init];\nNSObject *object2 = [NSObject new];\nNSObject *object3 = [object2 copy];\n\nThat means that you are responsible for releasing these objects when you are done with them.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496148,
        "id": "42c6e41c-150c-4bc0-8025-e35b624e3cf5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496148,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can take ownership of an object using retain",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can take ownership of an object using retain",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496148,
        "id": "193a4667-7e72-46ba-8f5d-3cccf68ed1ce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496148,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "To take ownership for an object you call the retain method.\n\nFor example:\n\n    NSObject *object = [NSObject new]; // object already has a retain count of 1\n    [object retain]; // retain count is now 2\n\nThis makes only sense in some rare situations.\n\nFor example when you implement an accessor or an init method to take ownership:\n\n    - (void)setStringValue:(NSString *)stringValue {\n        [_privateStringValue release]; // Release the old value, you no longer need it\n        [stringValue retain]; // You make sure that this object does not get deallocated outside of your scope.\n        _privateStringValue = stringValue;\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "To take ownership for an object you call the retain method.\n\nFor example:\n\n    NSObject *object = [NSObject new]; // object already has a retain count of 1\n    [object retain]; // retain count is now 2\n\nThis makes only sense in some rare situations.\n\nFor example when you implement an accessor or an init method to take ownership:\n\n    - (void)setStringValue:(NSString *)stringValue {\n        [_privateStringValue release]; // Release the old value, you no longer need it\n        [stringValue retain]; // You make sure that this object does not get deallocated outside of your scope.\n        _privateStringValue = stringValue;\n    }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496148,
        "id": "d2b18054-e0ef-4b7b-8b5f-f8ca8102b81a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496148,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you no longer need it, you must relinquish ownership of an object you own",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you no longer need it, you must relinquish ownership of an object you own",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496148,
        "id": "4b0e1425-c38a-4251-bb88-8eba77e4d76e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496148,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "NSObject* object = [NSObject new]; // The retain count is now 1\n[object performAction1]; // Now we are done with the object\n[object release]; // Release the object"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "NSObject* object = [NSObject new]; // The retain count is now 1\n[object performAction1]; // Now we are done with the object\n[object release]; // Release the object",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496149,
        "id": "d994cbbe-82df-4aa9-b18a-94b28ec2fbfa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496149,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You must not relinquish ownership of an object you do not own",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You must not relinquish ownership of an object you do not own",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496152,
        "id": "62a05c12-36f8-45ec-b2e2-59f255e3f7d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496152,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That means when you didn’t take ownership of an object you don’t release it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That means when you didn’t take ownership of an object you don’t release it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496153,
        "id": "e6fdeda6-f66c-4376-b4d1-67a9db1bc103",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496153,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Autoreleasepool",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Autoreleasepool",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552021496153,
        "id": "1e8c06eb-15ef-4738-b556-5393fa149978",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552021496153,
        "parent_id": "c69bd4f0-deb0-4f7d-aa41-b300a8e5f220",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "The autoreleasepool is a block of code that releases every object in the block that received an autorelease message.\n\nExample:\n\n    @autoreleasepool {\n        NSString* string = [NSString stringWithString:@\"We don't own this object\"];\n    }\n\nWe have created a string without taking ownership. The `NSString` method `stringWithString:` has to make sure that the string is correctly deallocated after it is no longer needed. Before the method returns the newly created string calls the autorelease method so it does not have to take ownership of the string.\n\nThis is how the `stringWithString:` is implemented:\n\n    + (NSString *)stringWithString:(NSString *)string {\n        NSString *createdString = [[NSString alloc] initWithString:string];\n        [createdString autorelease];\n        return createdString;\n    }\n\nIt is necessary to use autoreleasepool blocks because you sometimes have objects that you don't own (the fourth rules does not always apply).\n\nAutomatic reference counting takes automatically care of the rules so you don't have to."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "The autoreleasepool is a block of code that releases every object in the block that received an autorelease message.\n\nExample:\n\n    @autoreleasepool {\n        NSString* string = [NSString stringWithString:@\"We don't own this object\"];\n    }\n\nWe have created a string without taking ownership. The `NSString` method `stringWithString:` has to make sure that the string is correctly deallocated after it is no longer needed. Before the method returns the newly created string calls the autorelease method so it does not have to take ownership of the string.\n\nThis is how the `stringWithString:` is implemented:\n\n    + (NSString *)stringWithString:(NSString *)string {\n        NSString *createdString = [[NSString alloc] initWithString:string];\n        [createdString autorelease];\n        return createdString;\n    }\n\nIt is necessary to use autoreleasepool blocks because you sometimes have objects that you don't own (the fourth rules does not always apply).\n\nAutomatic reference counting takes automatically care of the rules so you don't have to.",
        "code_language": "Plain Text"
      }
    ],
    "title": "Memory management rules when using manual reference counting.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}