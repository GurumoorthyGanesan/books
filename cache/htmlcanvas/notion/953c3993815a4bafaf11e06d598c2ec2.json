{
  "ID": "953c3993-815a-4baf-af11-e06d598c2ec2",
  "Root": {
    "id": "953c3993-815a-4baf-af11-e06d598c2ec2",
    "alive": true,
    "content": [
      "261cadfb-44cb-4fce-87ad-05b69f33684f",
      "1516b026-87c1-4cf0-b43f-c707f7bfe806",
      "7afd87b4-ee79-4a1e-9d7b-81c289351ffb",
      "8b1a4534-dfec-4701-9742-ac4a11d189e0",
      "1a2688cb-1732-4806-a399-fc09c7a2d023",
      "094f3e1e-d513-49a0-b4e3-01e174a48eb1",
      "47502b6e-8ba6-4b21-a8f9-cc7e2887733e",
      "fb8902d3-8296-4d35-a02a-01e013c62e54",
      "471967e8-5037-43bb-9ba5-7dc164c3644d",
      "93cfc7f4-c36a-4daf-8aab-a938148bfdc7",
      "3a8b65be-c4c2-42d9-b64b-5d8de2f5fc1f",
      "9471246c-792a-4445-8647-2b45fe20da93"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551949768299,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551949768299,
    "parent_id": "69ada749-d571-44f8-9e7e-47f98efde9a1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Find point on curve"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "id": "261cadfb-44cb-4fce-87ad-05b69f33684f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768295,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768295,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example finds a point on a bezier or cubic curve at "
            ],
            [
              "position",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " where "
            ],
            [
              "position",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is he unit distance on the curve 0 \u003c= "
            ],
            [
              "position",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " \u003c= 1. The position is clamped to the range thus if values \u003c 0 or \u003e 1 are passed they will be set 0,1 respectively."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example finds a point on a bezier or cubic curve at "
          },
          {
            "Text": "position",
            "AttrFlags": 2
          },
          {
            "Text": " where "
          },
          {
            "Text": "position",
            "AttrFlags": 2
          },
          {
            "Text": " is he unit distance on the curve 0 \u003c= "
          },
          {
            "Text": "position",
            "AttrFlags": 2
          },
          {
            "Text": " \u003c= 1. The position is clamped to the range thus if values \u003c 0 or \u003e 1 are passed they will be set 0,1 respectively."
          }
        ]
      },
      {
        "id": "1516b026-87c1-4cf0-b43f-c707f7bfe806",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768297,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768297,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pass the function 6 coordinates for quadratic bezier or 8 for cubic."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pass the function 6 coordinates for quadratic bezier or 8 for cubic."
          }
        ]
      },
      {
        "id": "7afd87b4-ee79-4a1e-9d7b-81c289351ffb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768298,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The last optional argument is the returned vector (point). If not given it will be created."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The last optional argument is the returned vector (point). If not given it will be created."
          }
        ]
      },
      {
        "id": "8b1a4534-dfec-4701-9742-ac4a11d189e0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768298,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "1a2688cb-1732-4806-a399-fc09c7a2d023",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768298,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example usage"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example usage"
          }
        ]
      },
      {
        "id": "094f3e1e-d513-49a0-b4e3-01e174a48eb1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768298,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var p1 = {x : 10 , y : 100};\nvar p2 = {x : 100, y : 200};\nvar p3 = {x : 200, y : 0};\nvar p4 = {x : 300, y : 100};\nvar point = {x : null, y : null};\n\n// for cubic beziers\npoint = getPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, point);\n// or No need to set point as it is a referance and will be set\ngetPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, point);\n// or to create a new point\nvar point1 = getPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);\n\n// for quadratic beziers\npoint = getPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, null, null, point);\n// or No need to set point as it is a referance and will be set\ngetPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, null, null, point);\n// or to create a new point\nvar point1 = getPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var p1 = {x : 10 , y : 100};\nvar p2 = {x : 100, y : 200};\nvar p3 = {x : 200, y : 0};\nvar p4 = {x : 300, y : 100};\nvar point = {x : null, y : null};\n\n// for cubic beziers\npoint = getPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, point);\n// or No need to set point as it is a referance and will be set\ngetPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, point);\n// or to create a new point\nvar point1 = getPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);\n\n// for quadratic beziers\npoint = getPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, null, null, point);\n// or No need to set point as it is a referance and will be set\ngetPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, null, null, point);\n// or to create a new point\nvar point1 = getPointOnCurve(0.5, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);",
        "code_language": "Plain Text"
      },
      {
        "id": "47502b6e-8ba6-4b21-a8f9-cc7e2887733e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768298,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "fb8902d3-8296-4d35-a02a-01e013c62e54",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768298,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The function"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "The function"
          }
        ]
      },
      {
        "id": "471967e8-5037-43bb-9ba5-7dc164c3644d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768298,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "getPointOnCurve = function(position, x1, y1, x2, y2, x3, y3, [x4, y4], [vec])",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "getPointOnCurve = function(position, x1, y1, x2, y2, x3, y3, [x4, y4], [vec])",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "93cfc7f4-c36a-4daf-8aab-a938148bfdc7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768298,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768298,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: Arguments inside [x4, y4] are optional."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: Arguments inside [x4, y4] are optional."
          }
        ]
      },
      {
        "id": "3a8b65be-c4c2-42d9-b64b-5d8de2f5fc1f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768299,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768299,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note: x4,y4 if null, or undefined means that the curve is a quadratic bezier. vec is optional and will hold the returned point if supplied. If not it will be created."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note: x4,y4 if null, or undefined means that the curve is a quadratic bezier. vec is optional and will hold the returned point if supplied. If not it will be created."
          }
        ]
      },
      {
        "id": "9471246c-792a-4445-8647-2b45fe20da93",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949768299,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949768299,
        "parent_id": "953c3993-815a-4baf-af11-e06d598c2ec2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var getPointOnCurve = function(position, x1, y1, x2, y2, x3, y3, x4, y4, vec){ \n    var vec, quad;\n    quad = false;\n    if(vec === undefined){        \n        vec = {};\n    }\n    \n    if(x4 === undefined || x4 === null){\n        quad = true;\n        x4 = x3;\n        y4 = y3;\n    }\n        \n    if(position \u003c= 0){\n        vec.x = x1;\n        vec.y = y1;\n        return vec;\n    }\n    if(position \u003e= 1){\n        vec.x = x4;\n        vec.y = y4;\n        return vec;\n    }\n    c = position;\n    if(quad){\n        x1 += (x2 - x1) * c;\n        y1 += (y2 - y1) * c;\n        x2 += (x3 - x2) * c;\n        y2 += (y3 - y2) * c;\n        vec.x = x1 + (x2 - x1) * c;\n        vec.y = y1 + (y2 - y1) * c;\n        return vec;\n    }\n    x1 += (x2 - x1) * c;\n    y1 += (y2 - y1) * c;\n    x2 += (x3 - x2) * c;\n    y2 += (y3 - y2) * c;\n    x3 += (x4 - x3) * c;\n    y3 += (y4 - y3) * c;\n    x1 += (x2 - x1) * c;\n    y1 += (y2 - y1) * c;\n    x2 += (x3 - x2) * c;\n    y2 += (y3 - y2) * c;\n    vec.x = x1 + (x2 - x1) * c;\n    vec.y = y1 + (y2 - y1) * c;\n    return vec;     \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var getPointOnCurve = function(position, x1, y1, x2, y2, x3, y3, x4, y4, vec){ \n    var vec, quad;\n    quad = false;\n    if(vec === undefined){        \n        vec = {};\n    }\n    \n    if(x4 === undefined || x4 === null){\n        quad = true;\n        x4 = x3;\n        y4 = y3;\n    }\n        \n    if(position \u003c= 0){\n        vec.x = x1;\n        vec.y = y1;\n        return vec;\n    }\n    if(position \u003e= 1){\n        vec.x = x4;\n        vec.y = y4;\n        return vec;\n    }\n    c = position;\n    if(quad){\n        x1 += (x2 - x1) * c;\n        y1 += (y2 - y1) * c;\n        x2 += (x3 - x2) * c;\n        y2 += (y3 - y2) * c;\n        vec.x = x1 + (x2 - x1) * c;\n        vec.y = y1 + (y2 - y1) * c;\n        return vec;\n    }\n    x1 += (x2 - x1) * c;\n    y1 += (y2 - y1) * c;\n    x2 += (x3 - x2) * c;\n    y2 += (y3 - y2) * c;\n    x3 += (x4 - x3) * c;\n    y3 += (y4 - y3) * c;\n    x1 += (x2 - x1) * c;\n    y1 += (y2 - y1) * c;\n    x2 += (x3 - x2) * c;\n    y2 += (y3 - y2) * c;\n    vec.x = x1 + (x2 - x1) * c;\n    vec.y = y1 + (y2 - y1) * c;\n    return vec;     \n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Find point on curve",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}