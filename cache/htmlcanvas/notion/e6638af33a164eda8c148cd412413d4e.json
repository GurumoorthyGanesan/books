{
  "ID": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
  "Root": {
    "alive": true,
    "content": [
      "1a129ace-76f2-420e-a7a9-62766bda90a6",
      "a39f3507-c4d8-40ea-83db-9c78dea7dcb6",
      "1dfed7b1-98b2-4554-a54e-ea998acc5a78",
      "eff91ea7-d43d-4140-bf2e-c9b545a7dcf8",
      "1a44d758-71af-44dd-ac45-a0baaf3cb6e9",
      "1ff9125f-ccba-4d34-b7c5-de139be2c7a4",
      "c6d7adf2-fd5e-418d-b7fc-32f8d3f620f2",
      "6a44aa0b-3456-485c-af0c-2a63f0b91974",
      "c2297f33-a2c4-4a97-af61-5ed471140947",
      "8d83da12-cc6e-4a77-9b46-5bdc989ccc4f",
      "235f54d9-a1a1-49b2-b8f1-298f34762bf8",
      "5ba5492d-c2e5-4e05-a7db-4eeceadff286",
      "64e6b0fb-a22b-4dd4-b6b4-04aa5359ac24"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551949751799,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551949751799,
    "parent_id": "0d20929d-b856-4186-bfed-fbeecbb675d5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Text on curve cubic and quadratic beziers"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751796,
        "id": "1a129ace-76f2-420e-a7a9-62766bda90a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751796,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/0c6f2dd8-0d43-4356-9bc4-f4e808b515f9/4a012da42664f56bfa116e862b8ceaeb92545ae7.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/0c6f2dd8-0d43-4356-9bc4-f4e808b515f9/4a012da42664f56bfa116e862b8ceaeb92545ae7.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F0c6f2dd8-0d43-4356-9bc4-f4e808b515f9%2F4a012da42664f56bfa116e862b8ceaeb92545ae7.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751797,
        "id": "a39f3507-c4d8-40ea-83db-9c78dea7dcb6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751797,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "textOnCurve(text,offset,x1,y1,x2,y2,x3,y3,x4,y4)",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "textOnCurve(text,offset,x1,y1,x2,y2,x3,y3,x4,y4)",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751797,
        "id": "1dfed7b1-98b2-4554-a54e-ea998acc5a78",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751797,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Renders text on quadratic and cubic curves."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Renders text on quadratic and cubic curves."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751797,
        "id": "eff91ea7-d43d-4140-bf2e-c9b545a7dcf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751797,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "text",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the text to render"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "text",
            "AttrFlags": 2
          },
          {
            "Text": " is the text to render"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751798,
        "id": "1a44d758-71af-44dd-ac45-a0baaf3cb6e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751798,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "offset",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " distance from start of curve to text \u003e= 0"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "offset",
            "AttrFlags": 2
          },
          {
            "Text": " distance from start of curve to text \u003e= 0"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751798,
        "id": "1ff9125f-ccba-4d34-b7c5-de139be2c7a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751798,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "x1,y1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - "
            ],
            [
              "x3,y3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " points of quadratic curve or"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "x1,y1",
            "AttrFlags": 2
          },
          {
            "Text": " - "
          },
          {
            "Text": "x3,y3",
            "AttrFlags": 2
          },
          {
            "Text": " points of quadratic curve or"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751798,
        "id": "c6d7adf2-fd5e-418d-b7fc-32f8d3f620f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751798,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "x1,y1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " - "
            ],
            [
              "x4,y4",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " points of cubic curve or"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "x1,y1",
            "AttrFlags": 2
          },
          {
            "Text": " - "
          },
          {
            "Text": "x4,y4",
            "AttrFlags": 2
          },
          {
            "Text": " points of cubic curve or"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751798,
        "id": "6a44aa0b-3456-485c-af0c-2a63f0b91974",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751798,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example usage:"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example usage:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751798,
        "id": "c2297f33-a2c4-4a97-af61-5ed471140947",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751798,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "textOnCurve(\"Hello world!\",50,100,100,200,200,300,100); // draws text on quadratic curve\n                                                        // 50 pixels from start of curve\n\n\ntextOnCurve(\"Hello world!\",50,100,100,200,200,300,100,400,200); \n                                                        // draws text on cubic curve\n                                                        // 50 pixels from start of curve"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "textOnCurve(\"Hello world!\",50,100,100,200,200,300,100); // draws text on quadratic curve\n                                                        // 50 pixels from start of curve\n\n\ntextOnCurve(\"Hello world!\",50,100,100,200,200,300,100,400,200); \n                                                        // draws text on cubic curve\n                                                        // 50 pixels from start of curve",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751798,
        "id": "8d83da12-cc6e-4a77-9b46-5bdc989ccc4f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751798,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Function and curver helper function"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Function and curver helper function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751798,
        "id": "235f54d9-a1a1-49b2-b8f1-298f34762bf8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751798,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// pass 8 values for cubic bezier\n// pass 6 values for quadratic\n// Renders text from start of curve\nvar textOnCurve = function(text,offset,x1,y1,x2,y2,x3,y3,x4,y4){\n    ctx.save();\n    ctx.textAlign = \"center\";\n    var widths = [];\n    for(var i = 0; i \u003c text.length; i ++){\n        widths[widths.length] = ctx.measureText(text[i]).width;\n    }\n    var ch = curveHelper(x1,y1,x2,y2,x3,y3,x4,y4);\n    var pos = offset;\n    var cpos = 0;\n\n    for(var i = 0; i \u003c text.length; i ++){\n        pos += widths[i] / 2;\n        cpos = ch.forward(pos);\n        ch.tangent(cpos);\n        ctx.setTransform(ch.vect.x, ch.vect.y, -ch.vect.y, ch.vect.x, ch.vec.x, ch.vec.y);\n        ctx.fillText(text[i],0,0);     \n\n        pos += widths[i] / 2;\n    }\n    ctx.restore();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// pass 8 values for cubic bezier\n// pass 6 values for quadratic\n// Renders text from start of curve\nvar textOnCurve = function(text,offset,x1,y1,x2,y2,x3,y3,x4,y4){\n    ctx.save();\n    ctx.textAlign = \"center\";\n    var widths = [];\n    for(var i = 0; i \u003c text.length; i ++){\n        widths[widths.length] = ctx.measureText(text[i]).width;\n    }\n    var ch = curveHelper(x1,y1,x2,y2,x3,y3,x4,y4);\n    var pos = offset;\n    var cpos = 0;\n\n    for(var i = 0; i \u003c text.length; i ++){\n        pos += widths[i] / 2;\n        cpos = ch.forward(pos);\n        ch.tangent(cpos);\n        ctx.setTransform(ch.vect.x, ch.vect.y, -ch.vect.y, ch.vect.x, ch.vec.x, ch.vec.y);\n        ctx.fillText(text[i],0,0);     \n\n        pos += widths[i] / 2;\n    }\n    ctx.restore();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751799,
        "id": "5ba5492d-c2e5-4e05-a7db-4eeceadff286",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751799,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The curve helper function is designed to increase the performance of finding points on the bezier."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The curve helper function is designed to increase the performance of finding points on the bezier."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751799,
        "id": "64e6b0fb-a22b-4dd4-b6b4-04aa5359ac24",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751799,
        "parent_id": "e6638af3-3a16-4eda-8c14-8cd412413d4e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// helper function locates points on bezier curves.\nfunction curveHelper(x1, y1, x2, y2, x3, y3, x4, y4){\n    var tx1, ty1, tx2, ty2, tx3, ty3, tx4, ty4;\n    var a,b,c,u;\n    var vec,currentPos,vec1,vect;\n    vec = {x:0,y:0};\n    vec1 = {x:0,y:0};\n    vect = {x:0,y:0};\n    quad = false;\n    currentPos = 0;\n    currentDist = 0;\n    if(x4 === undefined || x4 === null){\n        quad = true;\n        x4 = x3;\n        y4 = y3;\n    }\n    var estLen = Math.sqrt((x4 - x1) * (x4 - x1) + (y4 - y1) * (y4 - y1));\n    var onePix = 1 / estLen;\n    function posAtC(c){\n        tx1 = x1; ty1 = y1;\n        tx2 = x2; ty2 = y2;\n        tx3 = x3; ty3 = y3;\n        tx1 += (tx2 - tx1) * c;\n        ty1 += (ty2 - ty1) * c;\n        tx2 += (tx3 - tx2) * c;\n        ty2 += (ty3 - ty2) * c;\n        tx3 += (x4 - tx3) * c;\n        ty3 += (y4 - ty3) * c;\n        tx1 += (tx2 - tx1) * c;\n        ty1 += (ty2 - ty1) * c;\n        tx2 += (tx3 - tx2) * c;\n        ty2 += (ty3 - ty2) * c;\n        vec.x = tx1 + (tx2 - tx1) * c;\n        vec.y = ty1 + (ty2 - ty1) * c;    \n        return vec;\n    }\n    function posAtQ(c){\n        tx1 = x1; ty1 = y1;\n        tx2 = x2; ty2 = y2;\n        tx1 += (tx2 - tx1) * c;\n        ty1 += (ty2 - ty1) * c;\n        tx2 += (x3 - tx2) * c;\n        ty2 += (y3 - ty2) * c;\n        vec.x = tx1 + (tx2 - tx1) * c;\n        vec.y = ty1 + (ty2 - ty1) * c;\n        return vec;\n    }    \n    function forward(dist){\n        var step;\n        helper.posAt(currentPos);\n\n        while(currentDist \u003c dist){\n            vec1.x = vec.x;\n            vec1.y = vec.y;            \n            currentPos += onePix;\n            helper.posAt(currentPos);\n            currentDist += step = Math.sqrt((vec.x - vec1.x) * (vec.x - vec1.x) + (vec.y - vec1.y) * (vec.y - vec1.y));\n\n        }\n        currentPos -= ((currentDist - dist) / step) * onePix\n        currentDist -= step;\n        helper.posAt(currentPos);\n        currentDist += Math.sqrt((vec.x - vec1.x) * (vec.x - vec1.x) + (vec.y - vec1.y) * (vec.y - vec1.y));\n        return currentPos;\n    }\n    \n    function tangentQ(pos){\n        a = (1-pos) * 2;\n        b = pos * 2;\n        vect.x = a * (x2 - x1) + b * (x3 - x2);\n        vect.y = a * (y2 - y1) + b * (y3 - y2);       \n        u = Math.sqrt(vect.x * vect.x + vect.y * vect.y);\n        vect.x /= u;\n        vect.y /= u;        \n    }\n    function tangentC(pos){\n        a  = (1-pos)\n        b  = 6 * a * pos;       \n        a *= 3 * a;                  \n        c  = 3 * pos * pos; \n        vect.x  = -x1 * a + x2 * (a - b) + x3 * (b - c) + x4 * c;\n        vect.y  = -y1 * a + y2 * (a - b) + y3 * (b - c) + y4 * c;\n        u = Math.sqrt(vect.x * vect.x + vect.y * vect.y);\n        vect.x /= u;\n        vect.y /= u;\n    }  \n    var helper = {\n        vec : vec,\n        vect : vect,\n        forward : forward,\n    }\n    if(quad){\n        helper.posAt = posAtQ;\n        helper.tangent = tangentQ;\n    }else{\n        helper.posAt = posAtC;\n        helper.tangent = tangentC;\n    }\n    return helper\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// helper function locates points on bezier curves.\nfunction curveHelper(x1, y1, x2, y2, x3, y3, x4, y4){\n    var tx1, ty1, tx2, ty2, tx3, ty3, tx4, ty4;\n    var a,b,c,u;\n    var vec,currentPos,vec1,vect;\n    vec = {x:0,y:0};\n    vec1 = {x:0,y:0};\n    vect = {x:0,y:0};\n    quad = false;\n    currentPos = 0;\n    currentDist = 0;\n    if(x4 === undefined || x4 === null){\n        quad = true;\n        x4 = x3;\n        y4 = y3;\n    }\n    var estLen = Math.sqrt((x4 - x1) * (x4 - x1) + (y4 - y1) * (y4 - y1));\n    var onePix = 1 / estLen;\n    function posAtC(c){\n        tx1 = x1; ty1 = y1;\n        tx2 = x2; ty2 = y2;\n        tx3 = x3; ty3 = y3;\n        tx1 += (tx2 - tx1) * c;\n        ty1 += (ty2 - ty1) * c;\n        tx2 += (tx3 - tx2) * c;\n        ty2 += (ty3 - ty2) * c;\n        tx3 += (x4 - tx3) * c;\n        ty3 += (y4 - ty3) * c;\n        tx1 += (tx2 - tx1) * c;\n        ty1 += (ty2 - ty1) * c;\n        tx2 += (tx3 - tx2) * c;\n        ty2 += (ty3 - ty2) * c;\n        vec.x = tx1 + (tx2 - tx1) * c;\n        vec.y = ty1 + (ty2 - ty1) * c;    \n        return vec;\n    }\n    function posAtQ(c){\n        tx1 = x1; ty1 = y1;\n        tx2 = x2; ty2 = y2;\n        tx1 += (tx2 - tx1) * c;\n        ty1 += (ty2 - ty1) * c;\n        tx2 += (x3 - tx2) * c;\n        ty2 += (y3 - ty2) * c;\n        vec.x = tx1 + (tx2 - tx1) * c;\n        vec.y = ty1 + (ty2 - ty1) * c;\n        return vec;\n    }    \n    function forward(dist){\n        var step;\n        helper.posAt(currentPos);\n\n        while(currentDist \u003c dist){\n            vec1.x = vec.x;\n            vec1.y = vec.y;            \n            currentPos += onePix;\n            helper.posAt(currentPos);\n            currentDist += step = Math.sqrt((vec.x - vec1.x) * (vec.x - vec1.x) + (vec.y - vec1.y) * (vec.y - vec1.y));\n\n        }\n        currentPos -= ((currentDist - dist) / step) * onePix\n        currentDist -= step;\n        helper.posAt(currentPos);\n        currentDist += Math.sqrt((vec.x - vec1.x) * (vec.x - vec1.x) + (vec.y - vec1.y) * (vec.y - vec1.y));\n        return currentPos;\n    }\n    \n    function tangentQ(pos){\n        a = (1-pos) * 2;\n        b = pos * 2;\n        vect.x = a * (x2 - x1) + b * (x3 - x2);\n        vect.y = a * (y2 - y1) + b * (y3 - y2);       \n        u = Math.sqrt(vect.x * vect.x + vect.y * vect.y);\n        vect.x /= u;\n        vect.y /= u;        \n    }\n    function tangentC(pos){\n        a  = (1-pos)\n        b  = 6 * a * pos;       \n        a *= 3 * a;                  \n        c  = 3 * pos * pos; \n        vect.x  = -x1 * a + x2 * (a - b) + x3 * (b - c) + x4 * c;\n        vect.y  = -y1 * a + y2 * (a - b) + y3 * (b - c) + y4 * c;\n        u = Math.sqrt(vect.x * vect.x + vect.y * vect.y);\n        vect.x /= u;\n        vect.y /= u;\n    }  \n    var helper = {\n        vec : vec,\n        vect : vect,\n        forward : forward,\n    }\n    if(quad){\n        helper.posAt = posAtQ;\n        helper.tangent = tangentQ;\n    }else{\n        helper.posAt = posAtC;\n        helper.tangent = tangentC;\n    }\n    return helper\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Text on curve cubic and quadratic beziers",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}