{
  "ID": "1a4ae6db-1010-4e76-b69a-87a803d10615",
  "Root": {
    "id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
    "alive": true,
    "content": [
      "a2e682e5-0b26-4994-a4f5-1dcfec0df612",
      "22af6674-4033-4ec5-bd07-14ca3edf2b03",
      "06d68042-259c-4be1-b4fb-d30d5602800e",
      "f5f4ac00-6696-4e9e-88f9-7cf002ba1613",
      "989290a5-3f5c-4662-a439-42e8f5b37ca8",
      "6b9bb237-fb6e-4fdc-9951-7164d3d80832",
      "3948fa67-11dc-4b81-baa9-3896118c2182",
      "5709f714-adeb-472b-ba80-f8bf7729541b",
      "9818b1a9-a516-46b5-96ac-e554ecc5532f",
      "dde2acf0-1e59-4ab8-9310-1daa40b8c1f6",
      "7e60c0d2-07b5-4f4f-9ae3-48d07b6686fa",
      "49ae33f6-d5e1-40e1-9a34-a36c3bdb340c",
      "cb644a56-cd99-4b02-a88a-239fbdd772b1",
      "09337a3f-1459-459b-a212-f7e69b2ba8a1",
      "6125bb93-864d-48ca-b62e-5682fb89a771",
      "9ff4cd96-e8f6-4349-bd2f-f72774d5548b",
      "14ee5756-93d7-4d79-b2e3-6f3b42b6966e",
      "5f71c512-088a-4608-94a0-095fddd2bc10",
      "60e89afb-1c0b-44ad-811a-1fed46bc784e",
      "1f832efd-1b01-4ca1-ad67-b6239c8e5715",
      "cd2bd22a-5779-4bbf-bc3f-956ba94b2bd2",
      "5fff3ffd-6a0b-4323-b83e-92e3763f23b5",
      "39893b36-793f-426f-b6d9-cf56ebc58f88",
      "f37c1a3a-b4b9-42bf-9e51-075956210118",
      "b51959f8-9bf7-4237-9b2f-900f33be0d31",
      "52b892e8-7a75-4ac2-8f1a-01b7ac467167",
      "98807a7a-45c1-43d8-9ce9-9f0324630b29",
      "69636773-8dba-4c59-b181-fb3f1700ef54",
      "3c18183c-671b-4003-a1d9-67126ff09599",
      "dd66a1c5-0580-46ea-a6a1-3272d29d17fb",
      "e7f97176-6134-451f-b5ef-9f999aee3391",
      "ff633802-1802-4dc6-978f-f456ac6e63b4",
      "bb89dc8c-8fd3-42c3-9b7f-e7893bc30eb5",
      "b27318ff-62ac-4bdb-9c41-c3b289bb3801",
      "d45517ee-b7fa-46d0-96da-cc329141d47f",
      "40c7acc6-84d1-4c90-8e7b-2e4d0fb944f4",
      "83c1a960-52fc-48ba-9135-9fcf787068bc",
      "0b1735a7-79cd-4ed8-ac18-953fa43a20c8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551949751020,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551949751020,
    "parent_id": "0d20929d-b856-4186-bfed-fbeecbb675d5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Rendering text along an arc."
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "id": "a2e682e5-0b26-4994-a4f5-1dcfec0df612",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751010,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751010,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example shows how to render text along an arc. It includes how you can add functionality to the "
            ],
            [
              "CanvasRenderingContext2D",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " by extending its prototype."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example shows how to render text along an arc. It includes how you can add functionality to the "
          },
          {
            "Text": "CanvasRenderingContext2D",
            "AttrFlags": 2
          },
          {
            "Text": " by extending its prototype."
          }
        ]
      },
      {
        "id": "22af6674-4033-4ec5-bd07-14ca3edf2b03",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751015,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751015,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This examples is derived from the stackoverflow answer "
            ],
            [
              "Circular Text",
              [
                [
                  "a",
                  "http://stackoverflow.com/a/34170195/3877726"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This examples is derived from the stackoverflow answer "
          },
          {
            "Text": "Circular Text",
            "Link": "http://stackoverflow.com/a/34170195/3877726"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "06d68042-259c-4be1-b4fb-d30d5602800e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751015,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751015,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "f5f4ac00-6696-4e9e-88f9-7cf002ba1613",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751015,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751015,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example rendering",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example rendering",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "989290a5-3f5c-4662-a439-42e8f5b37ca8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751015,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751015,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/571cda51-218f-456b-a5d7-288bd9066640/0fcffab1a55e8fb49584b09e64ba5cd15feef044.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/571cda51-218f-456b-a5d7-288bd9066640/0fcffab1a55e8fb49584b09e64ba5cd15feef044.png",
        "image_url": "/tmp/571cda51-218f-456b-a5d7-288bd9066640/0fcffab1a55e8fb49584b09e64ba5cd15feef044.png"
      },
      {
        "id": "6b9bb237-fb6e-4fdc-9951-7164d3d80832",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751015,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751015,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "3948fa67-11dc-4b81-baa9-3896118c2182",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751015,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751015,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Example code"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Example code"
          }
        ]
      },
      {
        "id": "5709f714-adeb-472b-ba80-f8bf7729541b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751015,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751015,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The example adds 3 new text rendering functions to the 2D context prototype."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The example adds 3 new text rendering functions to the 2D context prototype."
          }
        ]
      },
      {
        "id": "9818b1a9-a516-46b5-96ac-e554ecc5532f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751016,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751016,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ctx.fillCircleText(text, x, y, radius, start, end, forward);",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "ctx.fillCircleText(text, x, y, radius, start, end, forward);",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "dde2acf0-1e59-4ab8-9310-1daa40b8c1f6",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751016,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751016,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ctx.strokeCircleText(text, x, y, radius, start, end, forward);",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "ctx.strokeCircleText(text, x, y, radius, start, end, forward);",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "7e60c0d2-07b5-4f4f-9ae3-48d07b6686fa",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751016,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751016,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ctx.measureCircleText(text, radius);",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "ctx.measureCircleText(text, radius);",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "49ae33f6-d5e1-40e1-9a34-a36c3bdb340c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751016,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751016,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "(function(){\n    const FILL = 0;        // const to indicate filltext render\n    const STROKE = 1;\n    var renderType = FILL; // used internal to set fill or stroke text\n    const multiplyCurrentTransform = true; // if true Use current transform when rendering\n                                           // if false use absolute coordinates which is a little quicker\n                                           // after render the currentTransform is restored to default transform\n                                           \n      \n\n    // measure circle text\n    // ctx: canvas context\n    // text: string of text to measure\n    // r: radius in pixels\n    //\n    // returns the size metrics of the text\n    //\n    // width: Pixel width of text\n    // angularWidth : angular width of text in radians\n    // pixelAngularSize : angular width of a pixel in radians\n    var measure = function(ctx, text, radius){        \n        var textWidth = ctx.measureText(text).width; // get the width of all the text\n        return {\n            width               : textWidth,\n            angularWidth        : (1 / radius) * textWidth,\n            pixelAngularSize    : 1 / radius\n        };\n    }\n\n    // displays text along a circle\n    // ctx: canvas context\n    // text: string of text to measure\n    // x,y: position of circle center\n    // r: radius of circle in pixels\n    // start: angle in radians to start. \n    // [end]: optional. If included text align is ignored and the text is \n    //        scaled to fit between start and end;\n    // [forward]: optional default true. if true text direction is forwards, if false  direction is backward\n    var circleText = function (ctx, text, x, y, radius, start, end, forward) {\n        var i, textWidth, pA, pAS, a, aw, wScale, aligned, dir, fontSize;\n        if(text.trim() === \"\" || ctx.globalAlpha === 0){ // dont render empty string or transparent\n            return;\n        }\n        if(isNaN(x) || isNaN(y) || isNaN(radius) || isNaN(start) || (end !== undefined \u0026\u0026 end !== null \u0026\u0026 isNaN(end))){ // \n            throw TypeError(\"circle text arguments requires a number for x,y, radius, start, and end.\")\n        }\n        aligned = ctx.textAlign;        // save the current textAlign so that it can be restored at end\n        dir = forward ? 1 : forward === false ? -1 : 1;  // set dir if not true or false set forward as true  \n        pAS = 1 / radius;               // get the angular size of a pixel in radians\n        textWidth = ctx.measureText(text).width; // get the width of all the text\n        if (end !== undefined \u0026\u0026 end !== null) { // if end is supplied then fit text between start and end\n            pA = ((end - start) / textWidth) * dir;\n            wScale = (pA / pAS) * dir;\n        } else {                 // if no end is supplied correct start and end for alignment\n            // if forward is not given then swap top of circle text to read the correct direction\n            if(forward === null || forward === undefined){\n                if(((start % (Math.PI * 2)) + Math.PI * 2) % (Math.PI * 2) \u003e Math.PI){\n                    dir = -1;\n                }\n            }\n            pA = -pAS * dir ;\n            wScale = -1 * dir;\n            switch (aligned) {\n            case \"center\":       // if centered move around half width\n                start -= (pA * textWidth )/2;\n                end = start + pA * textWidth;\n                break;\n            case \"right\":// intentionally falls through to case \"end\"\n            case \"end\":\n                end = start;\n                start -= pA * textWidth;\n                break;\n            case \"left\":  // intentionally falls through to case \"start\"\n            case \"start\":\n                end = start + pA * textWidth;\n            }\n        }\n\n        ctx.textAlign = \"center\";                     // align for rendering\n        a = start;                                    // set the start angle\n        for (var i = 0; i \u003c text.length; i += 1) {    // for each character\n            aw = ctx.measureText(text[i]).width * pA; // get the angular width of the text\n            var xDx = Math.cos(a + aw / 2);           // get the yAxies vector from the center x,y out\n            var xDy = Math.sin(a + aw / 2);\n            if(multiplyCurrentTransform){ // transform multiplying current transform\n                ctx.save();\n                if (xDy \u003c 0) { // is the text upside down. If it is flip it\n                    ctx.transform(-xDy * wScale, xDx * wScale, -xDx, -xDy, xDx * radius + x, xDy * radius + y);\n                } else {\n                    ctx.transform(-xDy * wScale, xDx * wScale, xDx, xDy, xDx * radius + x, xDy * radius + y);\n                }\n            }else{\n                if (xDy \u003c 0) { // is the text upside down. If it is flip it\n                    ctx.setTransform(-xDy * wScale, xDx * wScale, -xDx, -xDy, xDx * radius + x, xDy * radius + y);\n                } else {\n                    ctx.setTransform(-xDy * wScale, xDx * wScale, xDx, xDy, xDx * radius + x, xDy * radius + y);\n                }\n            }\n            if(renderType === FILL){\n                ctx.fillText(text[i], 0, 0);    // render the character\n            }else{                    \n                ctx.strokeText(text[i], 0, 0);  // render the character\n            }\n            if(multiplyCurrentTransform){  // restore current transform\n                ctx.restore();\n            }\n            a += aw;                     // step to the next angle\n        }\n        // all done clean up.\n        if(!multiplyCurrentTransform){\n            ctx.setTransform(1, 0, 0, 1, 0, 0); // restore the transform\n        }\n        ctx.textAlign = aligned;            // restore the text alignment\n    }\n    // define fill text\n    var fillCircleText = function(text, x, y, radius, start, end, forward){\n        renderType = FILL;\n        circleText(this, text, x, y, radius, start, end, forward);\n    }\n    // define stroke text\n    var strokeCircleText = function(text, x, y, radius, start, end, forward){\n        renderType = STROKE;\n        circleText(this, text, x, y, radius, start, end, forward);\n    }\n    // define measure text\n    var measureCircleTextExt = function(text,radius){\n        return measure(this, text, radius);\n    }\n    // set the prototypes\n    CanvasRenderingContext2D.prototype.fillCircleText = fillCircleText;\n    CanvasRenderingContext2D.prototype.strokeCircleText = strokeCircleText;\n    CanvasRenderingContext2D.prototype.measureCircleText = measureCircleTextExt;  \n})();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "(function(){\n    const FILL = 0;        // const to indicate filltext render\n    const STROKE = 1;\n    var renderType = FILL; // used internal to set fill or stroke text\n    const multiplyCurrentTransform = true; // if true Use current transform when rendering\n                                           // if false use absolute coordinates which is a little quicker\n                                           // after render the currentTransform is restored to default transform\n                                           \n      \n\n    // measure circle text\n    // ctx: canvas context\n    // text: string of text to measure\n    // r: radius in pixels\n    //\n    // returns the size metrics of the text\n    //\n    // width: Pixel width of text\n    // angularWidth : angular width of text in radians\n    // pixelAngularSize : angular width of a pixel in radians\n    var measure = function(ctx, text, radius){        \n        var textWidth = ctx.measureText(text).width; // get the width of all the text\n        return {\n            width               : textWidth,\n            angularWidth        : (1 / radius) * textWidth,\n            pixelAngularSize    : 1 / radius\n        };\n    }\n\n    // displays text along a circle\n    // ctx: canvas context\n    // text: string of text to measure\n    // x,y: position of circle center\n    // r: radius of circle in pixels\n    // start: angle in radians to start. \n    // [end]: optional. If included text align is ignored and the text is \n    //        scaled to fit between start and end;\n    // [forward]: optional default true. if true text direction is forwards, if false  direction is backward\n    var circleText = function (ctx, text, x, y, radius, start, end, forward) {\n        var i, textWidth, pA, pAS, a, aw, wScale, aligned, dir, fontSize;\n        if(text.trim() === \"\" || ctx.globalAlpha === 0){ // dont render empty string or transparent\n            return;\n        }\n        if(isNaN(x) || isNaN(y) || isNaN(radius) || isNaN(start) || (end !== undefined \u0026\u0026 end !== null \u0026\u0026 isNaN(end))){ // \n            throw TypeError(\"circle text arguments requires a number for x,y, radius, start, and end.\")\n        }\n        aligned = ctx.textAlign;        // save the current textAlign so that it can be restored at end\n        dir = forward ? 1 : forward === false ? -1 : 1;  // set dir if not true or false set forward as true  \n        pAS = 1 / radius;               // get the angular size of a pixel in radians\n        textWidth = ctx.measureText(text).width; // get the width of all the text\n        if (end !== undefined \u0026\u0026 end !== null) { // if end is supplied then fit text between start and end\n            pA = ((end - start) / textWidth) * dir;\n            wScale = (pA / pAS) * dir;\n        } else {                 // if no end is supplied correct start and end for alignment\n            // if forward is not given then swap top of circle text to read the correct direction\n            if(forward === null || forward === undefined){\n                if(((start % (Math.PI * 2)) + Math.PI * 2) % (Math.PI * 2) \u003e Math.PI){\n                    dir = -1;\n                }\n            }\n            pA = -pAS * dir ;\n            wScale = -1 * dir;\n            switch (aligned) {\n            case \"center\":       // if centered move around half width\n                start -= (pA * textWidth )/2;\n                end = start + pA * textWidth;\n                break;\n            case \"right\":// intentionally falls through to case \"end\"\n            case \"end\":\n                end = start;\n                start -= pA * textWidth;\n                break;\n            case \"left\":  // intentionally falls through to case \"start\"\n            case \"start\":\n                end = start + pA * textWidth;\n            }\n        }\n\n        ctx.textAlign = \"center\";                     // align for rendering\n        a = start;                                    // set the start angle\n        for (var i = 0; i \u003c text.length; i += 1) {    // for each character\n            aw = ctx.measureText(text[i]).width * pA; // get the angular width of the text\n            var xDx = Math.cos(a + aw / 2);           // get the yAxies vector from the center x,y out\n            var xDy = Math.sin(a + aw / 2);\n            if(multiplyCurrentTransform){ // transform multiplying current transform\n                ctx.save();\n                if (xDy \u003c 0) { // is the text upside down. If it is flip it\n                    ctx.transform(-xDy * wScale, xDx * wScale, -xDx, -xDy, xDx * radius + x, xDy * radius + y);\n                } else {\n                    ctx.transform(-xDy * wScale, xDx * wScale, xDx, xDy, xDx * radius + x, xDy * radius + y);\n                }\n            }else{\n                if (xDy \u003c 0) { // is the text upside down. If it is flip it\n                    ctx.setTransform(-xDy * wScale, xDx * wScale, -xDx, -xDy, xDx * radius + x, xDy * radius + y);\n                } else {\n                    ctx.setTransform(-xDy * wScale, xDx * wScale, xDx, xDy, xDx * radius + x, xDy * radius + y);\n                }\n            }\n            if(renderType === FILL){\n                ctx.fillText(text[i], 0, 0);    // render the character\n            }else{                    \n                ctx.strokeText(text[i], 0, 0);  // render the character\n            }\n            if(multiplyCurrentTransform){  // restore current transform\n                ctx.restore();\n            }\n            a += aw;                     // step to the next angle\n        }\n        // all done clean up.\n        if(!multiplyCurrentTransform){\n            ctx.setTransform(1, 0, 0, 1, 0, 0); // restore the transform\n        }\n        ctx.textAlign = aligned;            // restore the text alignment\n    }\n    // define fill text\n    var fillCircleText = function(text, x, y, radius, start, end, forward){\n        renderType = FILL;\n        circleText(this, text, x, y, radius, start, end, forward);\n    }\n    // define stroke text\n    var strokeCircleText = function(text, x, y, radius, start, end, forward){\n        renderType = STROKE;\n        circleText(this, text, x, y, radius, start, end, forward);\n    }\n    // define measure text\n    var measureCircleTextExt = function(text,radius){\n        return measure(this, text, radius);\n    }\n    // set the prototypes\n    CanvasRenderingContext2D.prototype.fillCircleText = fillCircleText;\n    CanvasRenderingContext2D.prototype.strokeCircleText = strokeCircleText;\n    CanvasRenderingContext2D.prototype.measureCircleText = measureCircleTextExt;  \n})();",
        "code_language": "Plain Text"
      },
      {
        "id": "cb644a56-cd99-4b02-a88a-239fbdd772b1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751016,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751016,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "09337a3f-1459-459b-a212-f7e69b2ba8a1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751017,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751017,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Function descriptions",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Function descriptions",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "6125bb93-864d-48ca-b62e-5682fb89a771",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751017,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751017,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example adds 3 functions to the "
            ],
            [
              "CanvasRenderingContext2D prototype",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "fillCircleText",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "strokeCircleText",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and "
            ],
            [
              "measureCircleText",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example adds 3 functions to the "
          },
          {
            "Text": "CanvasRenderingContext2D prototype",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "fillCircleText",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "strokeCircleText",
            "AttrFlags": 2
          },
          {
            "Text": ", and "
          },
          {
            "Text": "measureCircleText",
            "AttrFlags": 2
          }
        ]
      },
      {
        "id": "9ff4cd96-e8f6-4349-bd2f-f72774d5548b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751017,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751017,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CanvasRenderingContext2D.fillCircleText(text, x, y, radius, start, [end, [forward]]);",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "CanvasRenderingContext2D.fillCircleText(text, x, y, radius, start, [end, [forward]]);",
            "AttrFlags": 4
          }
        ]
      },
      {
        "id": "14ee5756-93d7-4d79-b2e3-6f3b42b6966e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751017,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751017,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CanvasRenderingContext2D.strokeCircleText(text, x, y, radius, start, [end, [forward]]);",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "CanvasRenderingContext2D.strokeCircleText(text, x, y, radius, start, [end, [forward]]);",
            "AttrFlags": 4
          }
        ]
      },
      {
        "id": "5f71c512-088a-4608-94a0-095fddd2bc10",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751017,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751017,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "text:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " Text to render as String."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "text:",
            "AttrFlags": 1
          },
          {
            "Text": " Text to render as String."
          }
        ]
      },
      {
        "id": "60e89afb-1c0b-44ad-811a-1fed46bc784e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751018,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751018,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "x",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ","
            ],
            [
              "y",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": Position of circle center as Numbers."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "x",
            "AttrFlags": 1
          },
          {
            "Text": ","
          },
          {
            "Text": "y",
            "AttrFlags": 1
          },
          {
            "Text": ": Position of circle center as Numbers."
          }
        ]
      },
      {
        "id": "1f832efd-1b01-4ca1-ad67-b6239c8e5715",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751018,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751018,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "radius:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " radius of circle in pixels"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "radius:",
            "AttrFlags": 1
          },
          {
            "Text": " radius of circle in pixels"
          }
        ]
      },
      {
        "id": "cd2bd22a-5779-4bbf-bc3f-956ba94b2bd2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751018,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751018,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "start:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " angle in radians to start."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "start:",
            "AttrFlags": 1
          },
          {
            "Text": " angle in radians to start."
          }
        ]
      },
      {
        "id": "5fff3ffd-6a0b-4323-b83e-92e3763f23b5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751018,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751018,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "[end]:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " optional. If included "
            ],
            [
              "ctx.textAlign",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is ignored and the text is scaled to fit between start and end."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "[end]:",
            "AttrFlags": 1
          },
          {
            "Text": " optional. If included "
          },
          {
            "Text": "ctx.textAlign",
            "AttrFlags": 2
          },
          {
            "Text": " is ignored and the text is scaled to fit between start and end."
          }
        ]
      },
      {
        "id": "39893b36-793f-426f-b6d9-cf56ebc58f88",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "[forward]:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " optional default ‘true’. if true text direction is forwards, if ‘false’ direction is backward."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "[forward]:",
            "AttrFlags": 1
          },
          {
            "Text": " optional default ‘true’. if true text direction is forwards, if ‘false’ direction is backward."
          }
        ]
      },
      {
        "id": "f37c1a3a-b4b9-42bf-9e51-075956210118",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Both functions use the textBaseline to position the text vertically around the radius. For the best results use "
            ],
            [
              "ctx.TextBaseline",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Both functions use the textBaseline to position the text vertically around the radius. For the best results use "
          },
          {
            "Text": "ctx.TextBaseline",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "b51959f8-9bf7-4237-9b2f-900f33be0d31",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Functions will throw a "
            ],
            [
              "TypeError",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is any of the numerical arguments as NaN."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Functions will throw a "
          },
          {
            "Text": "TypeError",
            "AttrFlags": 2
          },
          {
            "Text": " is any of the numerical arguments as NaN."
          }
        ]
      },
      {
        "id": "52b892e8-7a75-4ac2-8f1a-01b7ac467167",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the "
            ],
            [
              "text",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument trims to an empty string or "
            ],
            [
              "ctx.globalAlpha = 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the function just drops through and does nothing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the "
          },
          {
            "Text": "text",
            "AttrFlags": 2
          },
          {
            "Text": " argument trims to an empty string or "
          },
          {
            "Text": "ctx.globalAlpha = 0",
            "AttrFlags": 2
          },
          {
            "Text": " the function just drops through and does nothing."
          }
        ]
      },
      {
        "id": "98807a7a-45c1-43d8-9ce9-9f0324630b29",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CanvasRenderingContext2D.measureCircleText(text, radius);",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "CanvasRenderingContext2D.measureCircleText(text, radius);",
            "AttrFlags": 4
          }
        ]
      },
      {
        "id": "69636773-8dba-4c59-b181-fb3f1700ef54",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- **text:** String of text to measure.\n - **radius:** radius of circle in pixels."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- **text:** String of text to measure.\n - **radius:** radius of circle in pixels.",
        "code_language": "Plain Text"
      },
      {
        "id": "3c18183c-671b-4003-a1d9-67126ff09599",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns a Object containing various size metrics for rendering circular text"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns a Object containing various size metrics for rendering circular text"
          }
        ]
      },
      {
        "id": "dd66a1c5-0580-46ea-a6a1-3272d29d17fb",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "- **width:** Pixel width of text as it would normaly be rendered\n- **angularWidth:** angular width of text in radians.\n- **pixelAngularSize:** angular width of a pixel in radians."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "- **width:** Pixel width of text as it would normaly be rendered\n- **angularWidth:** angular width of text in radians.\n- **pixelAngularSize:** angular width of a pixel in radians.",
        "code_language": "Plain Text"
      },
      {
        "id": "e7f97176-6134-451f-b5ef-9f999aee3391",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751019,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "ff633802-1802-4dc6-978f-f456ac6e63b4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751020,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage examples",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage examples",
            "AttrFlags": 1
          }
        ]
      },
      {
        "id": "bb89dc8c-8fd3-42c3-9b7f-e7893bc30eb5",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751020,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const rad = canvas.height * 0.4;\nconst text = \"Hello circle TEXT!\";\nconst fontSize = 40;\nconst centX = canvas.width / 2;\nconst centY = canvas.height / 2;\nctx.clearRect(0,0,canvas.width,canvas.height)\n\nctx.font = fontSize + \"px verdana\";\nctx.textAlign = \"center\";\nctx.textBaseline = \"bottom\";\nctx.fillStyle = \"#000\";\nctx.strokeStyle = \"#666\";\n\n// Text under stretched from Math.PI to 0 (180 - 0 deg)\nctx.fillCircleText(text, centX, centY, rad, Math.PI, 0);\n\n// text over top centered at Math.PI * 1.5 ( 270 deg)\nctx.fillCircleText(text, centX, centY, rad, Math.PI * 1.5);\n\n// text under top centered at Math.PI * 1.5 ( 270 deg)\nctx.textBaseline = \"top\";\nctx.fillCircleText(text, centX, centY, rad, Math.PI * 1.5);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const rad = canvas.height * 0.4;\nconst text = \"Hello circle TEXT!\";\nconst fontSize = 40;\nconst centX = canvas.width / 2;\nconst centY = canvas.height / 2;\nctx.clearRect(0,0,canvas.width,canvas.height)\n\nctx.font = fontSize + \"px verdana\";\nctx.textAlign = \"center\";\nctx.textBaseline = \"bottom\";\nctx.fillStyle = \"#000\";\nctx.strokeStyle = \"#666\";\n\n// Text under stretched from Math.PI to 0 (180 - 0 deg)\nctx.fillCircleText(text, centX, centY, rad, Math.PI, 0);\n\n// text over top centered at Math.PI * 1.5 ( 270 deg)\nctx.fillCircleText(text, centX, centY, rad, Math.PI * 1.5);\n\n// text under top centered at Math.PI * 1.5 ( 270 deg)\nctx.textBaseline = \"top\";\nctx.fillCircleText(text, centX, centY, rad, Math.PI * 1.5);",
        "code_language": "Plain Text"
      },
      {
        "id": "b27318ff-62ac-4bdb-9c41-c3b289bb3801",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751020,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// text over top centered at Math.PI * 1.5 ( 270 deg)\nctx.textBaseline = \"middle\";\nctx.fillCircleText(text, centX, centY, rad, Math.PI * 1.5);\n\n\n// Use measureCircleText to get angular size\nvar circleTextMetric = ctx.measureCircleText(\"Text to measure\", rad);\nconsole.log(circleTextMetric.width);            // width of text if rendered normally\nconsole.log(circleTextMetric.angularWidth);     // angular width of text\nconsole.log(circleTextMetric.pixelAngularSize); // angular size of a pixel"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// text over top centered at Math.PI * 1.5 ( 270 deg)\nctx.textBaseline = \"middle\";\nctx.fillCircleText(text, centX, centY, rad, Math.PI * 1.5);\n\n\n// Use measureCircleText to get angular size\nvar circleTextMetric = ctx.measureCircleText(\"Text to measure\", rad);\nconsole.log(circleTextMetric.width);            // width of text if rendered normally\nconsole.log(circleTextMetric.angularWidth);     // angular width of text\nconsole.log(circleTextMetric.pixelAngularSize); // angular size of a pixel",
        "code_language": "Plain Text"
      },
      {
        "id": "d45517ee-b7fa-46d0-96da-cc329141d47f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751020,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Use measure text to draw a arc around the text\nctx.textBaseline = \"middle\";\nvar width = ctx.measureCircleText(text, rad).angularWidth;    \nctx.fillCircleText(text, centX, centY, rad, Math.PI * 1.5);\n\n// render the arc around the text\nctx.strokeStyle= \"red\";\nctx.lineWidth = 3;\nctx.beginPath();\nctx.arc(centX, centY, rad + fontSize / 2,Math.PI * 1.5 - width/2,Math.PI*1.5 + width/2);\nctx.arc(centX, centY, rad - fontSize / 2,Math.PI * 1.5 + width/2,Math.PI*1.5 - width/2,true);\nctx.closePath();\nctx.stroke();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Use measure text to draw a arc around the text\nctx.textBaseline = \"middle\";\nvar width = ctx.measureCircleText(text, rad).angularWidth;    \nctx.fillCircleText(text, centX, centY, rad, Math.PI * 1.5);\n\n// render the arc around the text\nctx.strokeStyle= \"red\";\nctx.lineWidth = 3;\nctx.beginPath();\nctx.arc(centX, centY, rad + fontSize / 2,Math.PI * 1.5 - width/2,Math.PI*1.5 + width/2);\nctx.arc(centX, centY, rad - fontSize / 2,Math.PI * 1.5 + width/2,Math.PI*1.5 - width/2,true);\nctx.closePath();\nctx.stroke();",
        "code_language": "Plain Text"
      },
      {
        "id": "40c7acc6-84d1-4c90-8e7b-2e4d0fb944f4",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751020,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "id": "83c1a960-52fc-48ba-9135-9fcf787068bc",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751020,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NOTE: The text rendered is only an approximation of circular text. For example if two l’s are rendered the two lines will not be parallel, but if you render a “H” the two edges will be parallel. This is because each character is rendered as close as possible to the required direction, rather than each pixel being correctly transformed to create circular text."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "NOTE: The text rendered is only an approximation of circular text. For example if two l’s are rendered the two lines will not be parallel, but if you render a “H” the two edges will be parallel. This is because each character is rendered as close as possible to the required direction, rather than each pixel being correctly transformed to create circular text."
          }
        ]
      },
      {
        "id": "0b1735a7-79cd-4ed8-ac18-953fa43a20c8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949751020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949751020,
        "parent_id": "1a4ae6db-1010-4e76-b69a-87a803d10615",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "NOTE: const multiplyCurrentTransform = true; defined in this example is used to set the transformation method used. If false the transformation for circular text rendering is absolute and does not depend on the current transformation state. The text will not be effected by any previous scale, rotate, or translate transforms. This will increase the performance of the render function, after the function is called the transform will be set to the default setTransform(1,0,0,1,0,0) If multiplyCurrentTransform = true (set as default in this example) the text will use the current transform so that the text can be scaled translated, skewed, rotated, etc but modifying the current transform befor calling the fillCircleText and strokeCircleText functions. Depending on the current state of the 2D context this may be somewhat slower then multiplyCurrentTransform = false"
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "NOTE: const multiplyCurrentTransform = true; defined in this example is used to set the transformation method used. If false the transformation for circular text rendering is absolute and does not depend on the current transformation state. The text will not be effected by any previous scale, rotate, or translate transforms. This will increase the performance of the render function, after the function is called the transform will be set to the default setTransform(1,0,0,1,0,0) If multiplyCurrentTransform = true (set as default in this example) the text will use the current transform so that the text can be scaled translated, skewed, rotated, etc but modifying the current transform befor calling the fillCircleText and strokeCircleText functions. Depending on the current state of the 2D context this may be somewhat slower then multiplyCurrentTransform = false"
          }
        ]
      }
    ],
    "title": "Rendering text along an arc.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}