{
  "ID": "abf65ea2-ede0-40fa-941b-8d40ef81df14",
  "Root": {
    "alive": true,
    "content": [
      "3677e42a-cfee-42c4-adcc-0c15e433de07",
      "27091143-c14d-49ab-ada7-0ab54fa33f93",
      "342f152c-f8af-4249-92c6-53bf13795e61",
      "8059aab2-0549-4f4c-ad2d-2a964619dad8",
      "d9df6f0e-f606-41f4-aa47-ccedcf280908",
      "adec1c29-54c1-4eb8-932e-e1c4caab4cd3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551949775595,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "abf65ea2-ede0-40fa-941b-8d40ef81df14",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551949775595,
    "parent_id": "69ada749-d571-44f8-9e7e-47f98efde9a1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Length of a Cubic Bezier Curve a close approximation"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949775592,
        "id": "3677e42a-cfee-42c4-adcc-0c15e433de07",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949775592,
        "parent_id": "abf65ea2-ede0-40fa-941b-8d40ef81df14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Given the 4 points of a cubic Bezier curve the following function returns its length."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Given the 4 points of a cubic Bezier curve the following function returns its length."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949775594,
        "id": "27091143-c14d-49ab-ada7-0ab54fa33f93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949775594,
        "parent_id": "abf65ea2-ede0-40fa-941b-8d40ef81df14",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949775594,
        "id": "342f152c-f8af-4249-92c6-53bf13795e61",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949775594,
        "parent_id": "abf65ea2-ede0-40fa-941b-8d40ef81df14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Method:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " The length of a cubic Bezier curve does not have a direct mathematical calculation. This “brute force” method finds a sampling of points along the curve and calculates the total distance spanned by those points."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Method:",
            "AttrFlags": 1
          },
          {
            "Text": " The length of a cubic Bezier curve does not have a direct mathematical calculation. This “brute force” method finds a sampling of points along the curve and calculates the total distance spanned by those points."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949775594,
        "id": "8059aab2-0549-4f4c-ad2d-2a964619dad8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949775594,
        "parent_id": "abf65ea2-ede0-40fa-941b-8d40ef81df14",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Accuracy:",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " The approximate length is 99+% accurate using the default sampling size of 40."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Accuracy:",
            "AttrFlags": 1
          },
          {
            "Text": " The approximate length is 99+% accurate using the default sampling size of 40."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949775595,
        "id": "d9df6f0e-f606-41f4-aa47-ccedcf280908",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949775595,
        "parent_id": "abf65ea2-ede0-40fa-941b-8d40ef81df14",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Return: Close approximation of the length of a Cubic Bezier curve\n//\n// Ax,Ay,Bx,By,Cx,Cy,Dx,Dy: the 4 control points of the curve\n// sampleCount [optional, default=40]: how many intervals to calculate\n// Requires: cubicQxy (included below)\n//\nfunction cubicBezierLength(Ax,Ay,Bx,By,Cx,Cy,Dx,Dy,sampleCount){\n    var ptCount=sampleCount||40;\n    var totDist=0;\n    var lastX=Ax;\n    var lastY=Ay;\n    var dx,dy;\n    for(var i=1;i\u003cptCount;i++){\n        var pt=cubicQxy(i/ptCount,Ax,Ay,Bx,By,Cx,Cy,Dx,Dy);\n        dx=pt.x-lastX;\n        dy=pt.y-lastY;\n        totDist+=Math.sqrt(dx*dx+dy*dy);\n        lastX=pt.x;\n        lastY=pt.y;\n    }\n    dx=Dx-lastX;\n    dy=Dy-lastY;\n    totDist+=Math.sqrt(dx*dx+dy*dy);\n    return(parseInt(totDist));\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Return: Close approximation of the length of a Cubic Bezier curve\n//\n// Ax,Ay,Bx,By,Cx,Cy,Dx,Dy: the 4 control points of the curve\n// sampleCount [optional, default=40]: how many intervals to calculate\n// Requires: cubicQxy (included below)\n//\nfunction cubicBezierLength(Ax,Ay,Bx,By,Cx,Cy,Dx,Dy,sampleCount){\n    var ptCount=sampleCount||40;\n    var totDist=0;\n    var lastX=Ax;\n    var lastY=Ay;\n    var dx,dy;\n    for(var i=1;i\u003cptCount;i++){\n        var pt=cubicQxy(i/ptCount,Ax,Ay,Bx,By,Cx,Cy,Dx,Dy);\n        dx=pt.x-lastX;\n        dy=pt.y-lastY;\n        totDist+=Math.sqrt(dx*dx+dy*dy);\n        lastX=pt.x;\n        lastY=pt.y;\n    }\n    dx=Dx-lastX;\n    dy=Dy-lastY;\n    totDist+=Math.sqrt(dx*dx+dy*dy);\n    return(parseInt(totDist));\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949775595,
        "id": "adec1c29-54c1-4eb8-932e-e1c4caab4cd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949775595,
        "parent_id": "abf65ea2-ede0-40fa-941b-8d40ef81df14",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Return: an [x,y] point along a cubic Bezier curve at interval T\n//\n// Attribution: Stackoverflow's @Blindman67\n// Cite: http://stackoverflow.com/questions/36637211/drawing-a-curved-line-in-css-or-canvas-and-moving-circle-along-it/36827074#36827074\n// As modified from the above citation\n// \n// t: an interval along the curve (0\u003c=t\u003c=1)\n// ax,ay,bx,by,cx,cy,dx,dy: control points defining the curve\n//\nfunction cubicQxy(t,ax,ay,bx,by,cx,cy,dx,dy) {\n    ax += (bx - ax) * t;\n    bx += (cx - bx) * t;\n    cx += (dx - cx) * t;\n    ax += (bx - ax) * t;\n    bx += (cx - bx) * t;\n    ay += (by - ay) * t;\n    by += (cy - by) * t;\n    cy += (dy - cy) * t;\n    ay += (by - ay) * t;\n    by += (cy - by) * t;\n    return({\n        x:ax +(bx - ax) * t,\n        y:ay +(by - ay) * t     \n    });\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Return: an [x,y] point along a cubic Bezier curve at interval T\n//\n// Attribution: Stackoverflow's @Blindman67\n// Cite: http://stackoverflow.com/questions/36637211/drawing-a-curved-line-in-css-or-canvas-and-moving-circle-along-it/36827074#36827074\n// As modified from the above citation\n// \n// t: an interval along the curve (0\u003c=t\u003c=1)\n// ax,ay,bx,by,cx,cy,dx,dy: control points defining the curve\n//\nfunction cubicQxy(t,ax,ay,bx,by,cx,cy,dx,dy) {\n    ax += (bx - ax) * t;\n    bx += (cx - bx) * t;\n    cx += (dx - cx) * t;\n    ax += (bx - ax) * t;\n    bx += (cx - bx) * t;\n    ay += (by - ay) * t;\n    by += (cy - by) * t;\n    cy += (dy - cy) * t;\n    ay += (by - ay) * t;\n    by += (cy - by) * t;\n    return({\n        x:ax +(bx - ax) * t,\n        y:ay +(by - ay) * t     \n    });\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Length of a Cubic Bezier Curve a close approximation",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}