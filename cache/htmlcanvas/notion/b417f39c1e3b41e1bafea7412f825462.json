{
  "ID": "b417f39c-1e3b-41e1-bafe-a7412f825462",
  "Root": {
    "alive": true,
    "content": [
      "d68b3095-dae7-4e99-b9d4-1db0df8016c4",
      "01531364-911a-44d8-aee0-791aead4098b",
      "73d96825-460a-454d-bbf9-32ecd741d3d8",
      "306e4f57-6007-4f97-b07b-0680af6633de",
      "6d9b9175-23b4-4914-a0d9-990bfd39ade5",
      "ff7dc70d-6515-4a63-a002-27c4274c0b99",
      "e63785fd-0c88-4170-9989-da9703c4dd3b",
      "ea6299fa-08d2-4d5c-88e2-a3b464c5fb7a",
      "e9c58134-84f6-413b-8df8-195993a812ac",
      "f5124661-f9fa-4c3d-8e63-b3b9b9670670",
      "af2e8daa-b649-4f82-a211-7424ff54a34b",
      "80d4dbd8-294f-4994-af63-91c96ce4ae71",
      "aca6b768-fcc7-4e36-87d7-9b0363a1f8b3",
      "d1af4cbf-e4ae-4258-845d-296a662647e6",
      "49f55328-00dc-401a-9ad7-ab30d4b2b032",
      "dbcd36b4-02f9-43cd-ab71-f96712a91db0",
      "2bc78656-82b3-4418-8a2d-1f3a587d9644",
      "304200cf-97a5-4400-afcd-0acc6495f868",
      "ac724d6f-3a98-4fc7-876f-0e39930327f2",
      "62025198-d81a-4b00-af07-99b65fc8fd2a",
      "a9bca433-7e32-4e06-81cc-e6a7bd1d4b3a",
      "f133e090-0a2c-438f-b526-68c39db17993",
      "bc1fb82c-5852-4537-99b0-ad9178ca196d",
      "c668f469-693b-4fcf-b748-1b91bbe7521b",
      "64f2f3c2-c9c5-4815-948a-6f2a6af2382a",
      "e2ec50da-3b6a-484c-b7f9-759c65640eef",
      "2cf01460-bd94-4781-bc1d-f8858f8373c8",
      "f4ebe6c2-6795-43ee-ae89-82d547d7a370",
      "a3b618bc-d07d-4a07-975d-d14fd7df8751",
      "ecc02b51-1fcf-4431-ba06-e775001b230c",
      "c947b4ea-5d8e-473b-8429-7a811c33eb89",
      "bef13842-6648-4a6b-99f5-d29ecf541b64",
      "5f27a4dc-790b-4ee7-9afb-69bf4f72e24c",
      "b8d91a84-08c2-4e0d-b297-9f33849e98b9",
      "e8ce776a-b553-440e-a4ab-827b87c9287e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551949834469,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551949834469,
    "parent_id": "90e27c41-8789-4f04-99f3-a04940f3821a",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "A Transformation Matrix to track translated rotated scaled shapes"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834448,
        "id": "d68b3095-dae7-4e99-b9d4-1db0df8016c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834448,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Canvas allows you to "
            ],
            [
              "context.translate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "context.rotate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "context.scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in order to draw your shape in the position \u0026 size you require."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Canvas allows you to "
          },
          {
            "Text": "context.translate",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "context.rotate",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "context.scale",
            "AttrFlags": 2
          },
          {
            "Text": " in order to draw your shape in the position \u0026 size you require."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834451,
        "id": "01531364-911a-44d8-aee0-791aead4098b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834451,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Canvas itself uses a transformation matrix to efficiently track transformations."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Canvas itself uses a transformation matrix to efficiently track transformations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834451,
        "id": "73d96825-460a-454d-bbf9-32ecd741d3d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834451,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can change Canvas’s matrix with "
            ],
            [
              "context.transform",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can change Canvas’s matrix with "
          },
          {
            "Text": "context.transform",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834451,
        "id": "306e4f57-6007-4f97-b07b-0680af6633de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834451,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can change Canvas’s matrix with individual "
            ],
            [
              "translate, rotate \u0026 scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " commands"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can change Canvas’s matrix with individual "
          },
          {
            "Text": "translate, rotate \u0026 scale",
            "AttrFlags": 2
          },
          {
            "Text": " commands"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834452,
        "id": "6d9b9175-23b4-4914-a0d9-990bfd39ade5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834452,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can completely overwrite Canvas’s matrix with "
            ],
            [
              "context.setTransform",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ","
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can completely overwrite Canvas’s matrix with "
          },
          {
            "Text": "context.setTransform",
            "AttrFlags": 2
          },
          {
            "Text": ","
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834452,
        "id": "ff7dc70d-6515-4a63-a002-27c4274c0b99",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834452,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "But you can’t read Canvas’s internal transformation matrix – it’s write-only.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "But you can’t read Canvas’s internal transformation matrix – it’s write-only.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834452,
        "id": "e63785fd-0c88-4170-9989-da9703c4dd3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834452,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Why use a transformation matrix?",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Why use a transformation matrix?",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834452,
        "id": "ea6299fa-08d2-4d5c-88e2-a3b464c5fb7a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834452,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A transformation matrix allows you to aggregate many individual translations, rotations \u0026 scalings into a single, easily reapplied matrix."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A transformation matrix allows you to aggregate many individual translations, rotations \u0026 scalings into a single, easily reapplied matrix."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834452,
        "id": "e9c58134-84f6-413b-8df8-195993a812ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834452,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "During complex animations you might apply dozens (or hundreds) of transformations to a shape. By using a transformation matrix you can (almost) instantly reapply those dozens of transformations with a single line of code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "During complex animations you might apply dozens (or hundreds) of transformations to a shape. By using a transformation matrix you can (almost) instantly reapply those dozens of transformations with a single line of code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834453,
        "id": "f5124661-f9fa-4c3d-8e63-b3b9b9670670",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834453,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some Example uses:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some Example uses:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834453,
        "id": "af2e8daa-b649-4f82-a211-7424ff54a34b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834453,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Test if the mouse is inside a shape that you have translated, rotated \u0026 scaled",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Test if the mouse is inside a shape that you have translated, rotated \u0026 scaled",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834453,
        "id": "80d4dbd8-294f-4994-af63-91c96ce4ae71",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834453,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is a built-in "
            ],
            [
              "context.isPointInPath",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that tests if a point (eg the mouse) is inside a path-shape, but this built-in test is very slow compared to testing using a matrix."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is a built-in "
          },
          {
            "Text": "context.isPointInPath",
            "AttrFlags": 2
          },
          {
            "Text": " that tests if a point (eg the mouse) is inside a path-shape, but this built-in test is very slow compared to testing using a matrix."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834453,
        "id": "aca6b768-fcc7-4e36-87d7-9b0363a1f8b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834453,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Efficiently testing if the mouse is inside a shape involves taking the mouse position reported by the browser and transforming it in the same way that the shape was transformed. Then you can apply hit-testing as if the shape was not transformed."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Efficiently testing if the mouse is inside a shape involves taking the mouse position reported by the browser and transforming it in the same way that the shape was transformed. Then you can apply hit-testing as if the shape was not transformed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834454,
        "id": "d1af4cbf-e4ae-4258-845d-296a662647e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834454,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Redraw a shape that has been extensively translated, rotated \u0026 scaled.",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Redraw a shape that has been extensively translated, rotated \u0026 scaled.",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834454,
        "id": "49f55328-00dc-401a-9ad7-ab30d4b2b032",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834454,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead of reapplying individual transformations with multiple "
            ],
            [
              ".translate, .rotate, .scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you can apply all the aggregated transformations in a single line of code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead of reapplying individual transformations with multiple "
          },
          {
            "Text": ".translate, .rotate, .scale",
            "AttrFlags": 2
          },
          {
            "Text": " you can apply all the aggregated transformations in a single line of code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834454,
        "id": "dbcd36b4-02f9-43cd-ab71-f96712a91db0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834454,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Collision test shapes that have been translated, rotated \u0026 scaled",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Collision test shapes that have been translated, rotated \u0026 scaled",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834454,
        "id": "2bc78656-82b3-4418-8a2d-1f3a587d9644",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834454,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can use geometry \u0026 trigonometry to calculate the points that make up transformed shapes, but it’s faster to use a transformation matrix to calculate those points."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can use geometry \u0026 trigonometry to calculate the points that make up transformed shapes, but it’s faster to use a transformation matrix to calculate those points."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834454,
        "id": "304200cf-97a5-4400-afcd-0acc6495f868",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834454,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A Transformation Matrix “Class”",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "A Transformation Matrix “Class”",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834465,
        "id": "ac724d6f-3a98-4fc7-876f-0e39930327f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834465,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This code mirrors the native "
            ],
            [
              "context.translate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "context.rotate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "context.scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " transformation commands. Unlike the native canvas matrix, this matrix is readable and reusable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This code mirrors the native "
          },
          {
            "Text": "context.translate",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "context.rotate",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "context.scale",
            "AttrFlags": 2
          },
          {
            "Text": " transformation commands. Unlike the native canvas matrix, this matrix is readable and reusable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834465,
        "id": "62025198-d81a-4b00-af07-99b65fc8fd2a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834465,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Methods:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Methods:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834466,
        "id": "a9bca433-7e32-4e06-81cc-e6a7bd1d4b3a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834466,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "translate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "rotate",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "scale",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " mirror the context transformation commands and allow you to feed transformations into the matrix. The matrix efficiently holds the aggregated transformations."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "translate",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "rotate",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "scale",
            "AttrFlags": 2
          },
          {
            "Text": " mirror the context transformation commands and allow you to feed transformations into the matrix. The matrix efficiently holds the aggregated transformations."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834466,
        "id": "f133e090-0a2c-438f-b526-68c39db17993",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834466,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "setContextTransform",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " takes a context and sets that context’s matrix equal to this transformation matrix. This efficiently reapplies all transformations stored in this matrix to the context."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "setContextTransform",
            "AttrFlags": 2
          },
          {
            "Text": " takes a context and sets that context’s matrix equal to this transformation matrix. This efficiently reapplies all transformations stored in this matrix to the context."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834466,
        "id": "bc1fb82c-5852-4537-99b0-ad9178ca196d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834466,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "resetContextTransform",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " resets the context’s transformation to it’s default state (==untransformed)."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "resetContextTransform",
            "AttrFlags": 2
          },
          {
            "Text": " resets the context’s transformation to it’s default state (==untransformed)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834467,
        "id": "c668f469-693b-4fcf-b748-1b91bbe7521b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834467,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "getTransformedPoint",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " takes an untransformed coordinate point and converts it into a transformed point."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "getTransformedPoint",
            "AttrFlags": 2
          },
          {
            "Text": " takes an untransformed coordinate point and converts it into a transformed point."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834467,
        "id": "64f2f3c2-c9c5-4815-948a-6f2a6af2382a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834467,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "getScreenPoint",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " takes a transformed coordinate point and converts it into an untransformed point."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "getScreenPoint",
            "AttrFlags": 2
          },
          {
            "Text": " takes a transformed coordinate point and converts it into an untransformed point."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834467,
        "id": "e2ec50da-3b6a-484c-b7f9-759c65640eef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834467,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "getMatrix",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns the aggregated transformations in the form of a matrix array."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "getMatrix",
            "AttrFlags": 2
          },
          {
            "Text": " returns the aggregated transformations in the form of a matrix array."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834467,
        "id": "2cf01460-bd94-4781-bc1d-f8858f8373c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834467,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Code:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Code:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834467,
        "id": "f4ebe6c2-6795-43ee-ae89-82d547d7a370",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834467,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var TransformationMatrix=( function(){\n    // private\n    var self;\n    var m=[1,0,0,1,0,0];\n    var reset=function(){ var m=[1,0,0,1,0,0]; }\n    var multiply=function(mat){\n        var m0=m[0]*mat[0]+m[2]*mat[1];\n        var m1=m[1]*mat[0]+m[3]*mat[1];\n        var m2=m[0]*mat[2]+m[2]*mat[3];\n        var m3=m[1]*mat[2]+m[3]*mat[3];\n        var m4=m[0]*mat[4]+m[2]*mat[5]+m[4];\n        var m5=m[1]*mat[4]+m[3]*mat[5]+m[5];\n        m=[m0,m1,m2,m3,m4,m5];\n    }\n    var screenPoint=function(transformedX,transformedY){\n        // invert\n        var d =1/(m[0]*m[3]-m[1]*m[2]);\n        im=[ m[3]*d, -m[1]*d, -m[2]*d, m[0]*d, d*(m[2]*m[5]-m[3]*m[4]), d*(m[1]*m[4]-m[0]*m[5]) ];\n        // point\n        return({\n            x:transformedX*im[0]+transformedY*im[2]+im[4],\n            y:transformedX*im[1]+transformedY*im[3]+im[5]\n        });\n    }\n    var transformedPoint=function(screenX,screenY){\n        return({\n            x:screenX*m[0] + screenY*m[2] + m[4],\n            y:screenX*m[1] + screenY*m[3] + m[5]\n        });    \n    }\n    // public\n    function TransformationMatrix(){\n        self=this;\n    }\n    // shared methods\n    TransformationMatrix.prototype.translate=function(x,y){\n        var mat=[ 1, 0, 0, 1, x, y ];\n        multiply(mat);\n    };\n    TransformationMatrix.prototype.rotate=function(rAngle){\n        var c = Math.cos(rAngle);\n        var s = Math.sin(rAngle);\n        var mat=[ c, s, -s, c, 0, 0 ];    \n        multiply(mat);\n    };\n    TransformationMatrix.prototype.scale=function(x,y){\n        var mat=[ x, 0, 0, y, 0, 0 ];        \n        multiply(mat);\n    };\n    TransformationMatrix.prototype.skew=function(radianX,radianY){\n        var mat=[ 1, Math.tan(radianY), Math.tan(radianX), 1, 0, 0 ];\n        multiply(mat);\n    };\n    TransformationMatrix.prototype.reset=function(){\n        reset();\n    }\n    TransformationMatrix.prototype.setContextTransform=function(ctx){\n        ctx.setTransform(m[0],m[1],m[2],m[3],m[4],m[5]);\n    }\n    TransformationMatrix.prototype.resetContextTransform=function(ctx){\n        ctx.setTransform(1,0,0,1,0,0);\n    }\n    TransformationMatrix.prototype.getTransformedPoint=function(screenX,screenY){\n        return(transformedPoint(screenX,screenY));\n    }\n    TransformationMatrix.prototype.getScreenPoint=function(transformedX,transformedY){\n        return(screenPoint(transformedX,transformedY));\n    }\n    TransformationMatrix.prototype.getMatrix=function(){\n        var clone=[m[0],m[1],m[2],m[3],m[4],m[5]];\n        return(clone);\n    }\n    // return public\n    return(TransformationMatrix);\n})();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var TransformationMatrix=( function(){\n    // private\n    var self;\n    var m=[1,0,0,1,0,0];\n    var reset=function(){ var m=[1,0,0,1,0,0]; }\n    var multiply=function(mat){\n        var m0=m[0]*mat[0]+m[2]*mat[1];\n        var m1=m[1]*mat[0]+m[3]*mat[1];\n        var m2=m[0]*mat[2]+m[2]*mat[3];\n        var m3=m[1]*mat[2]+m[3]*mat[3];\n        var m4=m[0]*mat[4]+m[2]*mat[5]+m[4];\n        var m5=m[1]*mat[4]+m[3]*mat[5]+m[5];\n        m=[m0,m1,m2,m3,m4,m5];\n    }\n    var screenPoint=function(transformedX,transformedY){\n        // invert\n        var d =1/(m[0]*m[3]-m[1]*m[2]);\n        im=[ m[3]*d, -m[1]*d, -m[2]*d, m[0]*d, d*(m[2]*m[5]-m[3]*m[4]), d*(m[1]*m[4]-m[0]*m[5]) ];\n        // point\n        return({\n            x:transformedX*im[0]+transformedY*im[2]+im[4],\n            y:transformedX*im[1]+transformedY*im[3]+im[5]\n        });\n    }\n    var transformedPoint=function(screenX,screenY){\n        return({\n            x:screenX*m[0] + screenY*m[2] + m[4],\n            y:screenX*m[1] + screenY*m[3] + m[5]\n        });    \n    }\n    // public\n    function TransformationMatrix(){\n        self=this;\n    }\n    // shared methods\n    TransformationMatrix.prototype.translate=function(x,y){\n        var mat=[ 1, 0, 0, 1, x, y ];\n        multiply(mat);\n    };\n    TransformationMatrix.prototype.rotate=function(rAngle){\n        var c = Math.cos(rAngle);\n        var s = Math.sin(rAngle);\n        var mat=[ c, s, -s, c, 0, 0 ];    \n        multiply(mat);\n    };\n    TransformationMatrix.prototype.scale=function(x,y){\n        var mat=[ x, 0, 0, y, 0, 0 ];        \n        multiply(mat);\n    };\n    TransformationMatrix.prototype.skew=function(radianX,radianY){\n        var mat=[ 1, Math.tan(radianY), Math.tan(radianX), 1, 0, 0 ];\n        multiply(mat);\n    };\n    TransformationMatrix.prototype.reset=function(){\n        reset();\n    }\n    TransformationMatrix.prototype.setContextTransform=function(ctx){\n        ctx.setTransform(m[0],m[1],m[2],m[3],m[4],m[5]);\n    }\n    TransformationMatrix.prototype.resetContextTransform=function(ctx){\n        ctx.setTransform(1,0,0,1,0,0);\n    }\n    TransformationMatrix.prototype.getTransformedPoint=function(screenX,screenY){\n        return(transformedPoint(screenX,screenY));\n    }\n    TransformationMatrix.prototype.getScreenPoint=function(transformedX,transformedY){\n        return(screenPoint(transformedX,transformedY));\n    }\n    TransformationMatrix.prototype.getMatrix=function(){\n        var clone=[m[0],m[1],m[2],m[3],m[4],m[5]];\n        return(clone);\n    }\n    // return public\n    return(TransformationMatrix);\n})();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834467,
        "id": "a3b618bc-d07d-4a07-975d-d14fd7df8751",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834467,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Demo:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Demo:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834468,
        "id": "ecc02b51-1fcf-4431-ba06-e775001b230c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834468,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This demo uses the Transformation Matrix “Class” above to:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This demo uses the Transformation Matrix “Class” above to:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834468,
        "id": "c947b4ea-5d8e-473b-8429-7a811c33eb89",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834468,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Track (==save) a rectangle’s transformation matrix."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Track (==save) a rectangle’s transformation matrix."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834468,
        "id": "bef13842-6648-4a6b-99f5-d29ecf541b64",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834468,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Redraw the transformed rectangle without using context transformation commands."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Redraw the transformed rectangle without using context transformation commands."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834468,
        "id": "5f27a4dc-790b-4ee7-9afb-69bf4f72e24c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834468,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Test if the mouse has clicked inside the transformed rectangle."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Test if the mouse has clicked inside the transformed rectangle."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834468,
        "id": "b8d91a84-08c2-4e0d-b297-9f33849e98b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834468,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Code:",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Code:",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949834468,
        "id": "e8ce776a-b553-440e-a4ab-827b87c9287e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949834468,
        "parent_id": "b417f39c-1e3b-41e1-bafe-a7412f825462",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c!doctype html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n\u003cstyle\u003e\n    body{ background-color:white; }\n    #canvas{border:1px solid red; }\n\u003c/style\u003e\n\u003cscript\u003e\nwindow.onload=(function(){\n\n    var canvas=document.getElementById(\"canvas\");\n    var ctx=canvas.getContext(\"2d\");\n    var cw=canvas.width;\n    var ch=canvas.height;\n    function reOffset(){\n        var BB=canvas.getBoundingClientRect();\n        offsetX=BB.left;\n        offsetY=BB.top;        \n    }\n    var offsetX,offsetY;\n    reOffset();\n    window.onscroll=function(e){ reOffset(); }\n    window.onresize=function(e){ reOffset(); }\n\n    // Transformation Matrix \"Class\"\n    \n    var TransformationMatrix=( function(){\n        // private\n        var self;\n        var m=[1,0,0,1,0,0];\n        var reset=function(){ var m=[1,0,0,1,0,0]; }\n        var multiply=function(mat){\n            var m0=m[0]*mat[0]+m[2]*mat[1];\n            var m1=m[1]*mat[0]+m[3]*mat[1];\n            var m2=m[0]*mat[2]+m[2]*mat[3];\n            var m3=m[1]*mat[2]+m[3]*mat[3];\n            var m4=m[0]*mat[4]+m[2]*mat[5]+m[4];\n            var m5=m[1]*mat[4]+m[3]*mat[5]+m[5];\n            m=[m0,m1,m2,m3,m4,m5];\n        }\n        var screenPoint=function(transformedX,transformedY){\n            // invert\n            var d =1/(m[0]*m[3]-m[1]*m[2]);\n            im=[ m[3]*d, -m[1]*d, -m[2]*d, m[0]*d, d*(m[2]*m[5]-m[3]*m[4]), d*(m[1]*m[4]-m[0]*m[5]) ];\n            // point\n            return({\n                x:transformedX*im[0]+transformedY*im[2]+im[4],\n                y:transformedX*im[1]+transformedY*im[3]+im[5]\n            });\n        }\n        var transformedPoint=function(screenX,screenY){\n            return({\n                x:screenX*m[0] + screenY*m[2] + m[4],\n                y:screenX*m[1] + screenY*m[3] + m[5]\n            });    \n        }\n        // public\n        function TransformationMatrix(){\n            self=this;\n        }\n        // shared methods\n        TransformationMatrix.prototype.translate=function(x,y){\n            var mat=[ 1, 0, 0, 1, x, y ];\n            multiply(mat);\n        };\n        TransformationMatrix.prototype.rotate=function(rAngle){\n            var c = Math.cos(rAngle);\n            var s = Math.sin(rAngle);\n            var mat=[ c, s, -s, c, 0, 0 ];    \n            multiply(mat);\n        };\n        TransformationMatrix.prototype.scale=function(x,y){\n            var mat=[ x, 0, 0, y, 0, 0 ];        \n            multiply(mat);\n        };\n        TransformationMatrix.prototype.skew=function(radianX,radianY){\n            var mat=[ 1, Math.tan(radianY), Math.tan(radianX), 1, 0, 0 ];\n            multiply(mat);\n        };\n        TransformationMatrix.prototype.reset=function(){\n            reset();\n        }\n        TransformationMatrix.prototype.setContextTransform=function(ctx){\n            ctx.setTransform(m[0],m[1],m[2],m[3],m[4],m[5]);\n        }\n        TransformationMatrix.prototype.resetContextTransform=function(ctx){\n            ctx.setTransform(1,0,0,1,0,0);\n        }\n        TransformationMatrix.prototype.getTransformedPoint=function(screenX,screenY){\n            return(transformedPoint(screenX,screenY));\n        }\n        TransformationMatrix.prototype.getScreenPoint=function(transformedX,transformedY){\n            return(screenPoint(transformedX,transformedY));\n        }\n        TransformationMatrix.prototype.getMatrix=function(){\n            var clone=[m[0],m[1],m[2],m[3],m[4],m[5]];\n            return(clone);\n        }\n        // return public\n        return(TransformationMatrix);\n    })();\n\n    // DEMO starts here\n\n    // create a rect and add a transformation matrix\n    // to track it's translations, rotations \u0026 scalings\n    var rect={x:30,y:30,w:50,h:35,matrix:new TransformationMatrix()};\n\n    // draw the untransformed rect in black\n    ctx.strokeRect(rect.x, rect.y, rect.w, rect.h);\n    // Demo: label\n    ctx.font='11px arial';\n    ctx.fillText('Untransformed Rect',rect.x,rect.y-10);\n\n    // transform the canvas \u0026 draw the transformed rect in red\n    ctx.translate(100,0);\n    ctx.scale(2,2);\n    ctx.rotate(Math.PI/12);\n    // draw the transformed rect\n    ctx.strokeStyle='red';\n    ctx.strokeRect(rect.x, rect.y, rect.w, rect.h);\n    ctx.font='6px arial';\n    // Demo: label\n    ctx.fillText('Same Rect: Translated, rotated \u0026 scaled',rect.x,rect.y-6);\n    // reset the context to untransformed state\n    ctx.setTransform(1,0,0,1,0,0);\n\n    // record the transformations in the matrix\n    var m=rect.matrix;\n    m.translate(100,0);\n    m.scale(2,2);\n    m.rotate(Math.PI/12);\n\n    // use the rect's saved transformation matrix to reposition, \n    //     resize \u0026 redraw the rect\n    ctx.strokeStyle='blue';\n    drawTransformedRect(rect);\n\n    // Demo: instructions\n    ctx.font='14px arial';\n    ctx.fillText('Demo: click inside the blue rect',30,200);\n\n    // redraw a rect based on it's saved transformation matrix\n    function drawTransformedRect(r){\n        // set the context transformation matrix using the rect's saved matrix\n        m.setContextTransform(ctx);\n        // draw the rect (no position or size changes needed!)\n        ctx.strokeRect( r.x, r.y, r.w, r.h );\n        // reset the context transformation to default (==untransformed);\n        m.resetContextTransform(ctx);\n    }\n\n    // is the point in the transformed rectangle?\n    function isPointInTransformedRect(r,transformedX,transformedY){\n        var p=r.matrix.getScreenPoint(transformedX,transformedY);\n        var x=p.x;\n        var y=p.y;\n        return(x\u003er.x \u0026\u0026 x\u003cr.x+r.w \u0026\u0026 y\u003er.y \u0026\u0026 y\u003cr.y+r.h);\n    } \n\n    // listen for mousedown events\n    canvas.onmousedown=handleMouseDown;\n    function handleMouseDown(e){\n        // tell the browser we're handling this event\n        e.preventDefault();\n        e.stopPropagation();\n        // get mouse position\n        mouseX=parseInt(e.clientX-offsetX);\n        mouseY=parseInt(e.clientY-offsetY);\n        // is the mouse inside the transformed rect?\n        if(isPointInTransformedRect(rect,mouseX,mouseY)){\n            alert('You clicked in the transformed Rect');\n        }\n    }\n\n    // Demo: redraw transformed rect without using\n    //       context transformation commands\n    function drawTransformedRect(r,color){\n        var m=r.matrix;\n        var tl=m.getTransformedPoint(r.x,r.y);\n        var tr=m.getTransformedPoint(r.x+r.w,r.y);\n        var br=m.getTransformedPoint(r.x+r.w,r.y+r.h);\n        var bl=m.getTransformedPoint(r.x,r.y+r.h);\n        ctx.beginPath();\n        ctx.moveTo(tl.x,tl.y);\n        ctx.lineTo(tr.x,tr.y);\n        ctx.lineTo(br.x,br.y);\n        ctx.lineTo(bl.x,bl.y);\n        ctx.closePath();\n        ctx.strokeStyle=color;\n        ctx.stroke();\n    }\n\n}); // end window.onload\n\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003ccanvas id=\"canvas\" width=512 height=250\u003e\u003c/canvas\u003e\n\u003c/body\u003e\n\u003c/html\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c!doctype html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n\u003cstyle\u003e\n    body{ background-color:white; }\n    #canvas{border:1px solid red; }\n\u003c/style\u003e\n\u003cscript\u003e\nwindow.onload=(function(){\n\n    var canvas=document.getElementById(\"canvas\");\n    var ctx=canvas.getContext(\"2d\");\n    var cw=canvas.width;\n    var ch=canvas.height;\n    function reOffset(){\n        var BB=canvas.getBoundingClientRect();\n        offsetX=BB.left;\n        offsetY=BB.top;        \n    }\n    var offsetX,offsetY;\n    reOffset();\n    window.onscroll=function(e){ reOffset(); }\n    window.onresize=function(e){ reOffset(); }\n\n    // Transformation Matrix \"Class\"\n    \n    var TransformationMatrix=( function(){\n        // private\n        var self;\n        var m=[1,0,0,1,0,0];\n        var reset=function(){ var m=[1,0,0,1,0,0]; }\n        var multiply=function(mat){\n            var m0=m[0]*mat[0]+m[2]*mat[1];\n            var m1=m[1]*mat[0]+m[3]*mat[1];\n            var m2=m[0]*mat[2]+m[2]*mat[3];\n            var m3=m[1]*mat[2]+m[3]*mat[3];\n            var m4=m[0]*mat[4]+m[2]*mat[5]+m[4];\n            var m5=m[1]*mat[4]+m[3]*mat[5]+m[5];\n            m=[m0,m1,m2,m3,m4,m5];\n        }\n        var screenPoint=function(transformedX,transformedY){\n            // invert\n            var d =1/(m[0]*m[3]-m[1]*m[2]);\n            im=[ m[3]*d, -m[1]*d, -m[2]*d, m[0]*d, d*(m[2]*m[5]-m[3]*m[4]), d*(m[1]*m[4]-m[0]*m[5]) ];\n            // point\n            return({\n                x:transformedX*im[0]+transformedY*im[2]+im[4],\n                y:transformedX*im[1]+transformedY*im[3]+im[5]\n            });\n        }\n        var transformedPoint=function(screenX,screenY){\n            return({\n                x:screenX*m[0] + screenY*m[2] + m[4],\n                y:screenX*m[1] + screenY*m[3] + m[5]\n            });    \n        }\n        // public\n        function TransformationMatrix(){\n            self=this;\n        }\n        // shared methods\n        TransformationMatrix.prototype.translate=function(x,y){\n            var mat=[ 1, 0, 0, 1, x, y ];\n            multiply(mat);\n        };\n        TransformationMatrix.prototype.rotate=function(rAngle){\n            var c = Math.cos(rAngle);\n            var s = Math.sin(rAngle);\n            var mat=[ c, s, -s, c, 0, 0 ];    \n            multiply(mat);\n        };\n        TransformationMatrix.prototype.scale=function(x,y){\n            var mat=[ x, 0, 0, y, 0, 0 ];        \n            multiply(mat);\n        };\n        TransformationMatrix.prototype.skew=function(radianX,radianY){\n            var mat=[ 1, Math.tan(radianY), Math.tan(radianX), 1, 0, 0 ];\n            multiply(mat);\n        };\n        TransformationMatrix.prototype.reset=function(){\n            reset();\n        }\n        TransformationMatrix.prototype.setContextTransform=function(ctx){\n            ctx.setTransform(m[0],m[1],m[2],m[3],m[4],m[5]);\n        }\n        TransformationMatrix.prototype.resetContextTransform=function(ctx){\n            ctx.setTransform(1,0,0,1,0,0);\n        }\n        TransformationMatrix.prototype.getTransformedPoint=function(screenX,screenY){\n            return(transformedPoint(screenX,screenY));\n        }\n        TransformationMatrix.prototype.getScreenPoint=function(transformedX,transformedY){\n            return(screenPoint(transformedX,transformedY));\n        }\n        TransformationMatrix.prototype.getMatrix=function(){\n            var clone=[m[0],m[1],m[2],m[3],m[4],m[5]];\n            return(clone);\n        }\n        // return public\n        return(TransformationMatrix);\n    })();\n\n    // DEMO starts here\n\n    // create a rect and add a transformation matrix\n    // to track it's translations, rotations \u0026 scalings\n    var rect={x:30,y:30,w:50,h:35,matrix:new TransformationMatrix()};\n\n    // draw the untransformed rect in black\n    ctx.strokeRect(rect.x, rect.y, rect.w, rect.h);\n    // Demo: label\n    ctx.font='11px arial';\n    ctx.fillText('Untransformed Rect',rect.x,rect.y-10);\n\n    // transform the canvas \u0026 draw the transformed rect in red\n    ctx.translate(100,0);\n    ctx.scale(2,2);\n    ctx.rotate(Math.PI/12);\n    // draw the transformed rect\n    ctx.strokeStyle='red';\n    ctx.strokeRect(rect.x, rect.y, rect.w, rect.h);\n    ctx.font='6px arial';\n    // Demo: label\n    ctx.fillText('Same Rect: Translated, rotated \u0026 scaled',rect.x,rect.y-6);\n    // reset the context to untransformed state\n    ctx.setTransform(1,0,0,1,0,0);\n\n    // record the transformations in the matrix\n    var m=rect.matrix;\n    m.translate(100,0);\n    m.scale(2,2);\n    m.rotate(Math.PI/12);\n\n    // use the rect's saved transformation matrix to reposition, \n    //     resize \u0026 redraw the rect\n    ctx.strokeStyle='blue';\n    drawTransformedRect(rect);\n\n    // Demo: instructions\n    ctx.font='14px arial';\n    ctx.fillText('Demo: click inside the blue rect',30,200);\n\n    // redraw a rect based on it's saved transformation matrix\n    function drawTransformedRect(r){\n        // set the context transformation matrix using the rect's saved matrix\n        m.setContextTransform(ctx);\n        // draw the rect (no position or size changes needed!)\n        ctx.strokeRect( r.x, r.y, r.w, r.h );\n        // reset the context transformation to default (==untransformed);\n        m.resetContextTransform(ctx);\n    }\n\n    // is the point in the transformed rectangle?\n    function isPointInTransformedRect(r,transformedX,transformedY){\n        var p=r.matrix.getScreenPoint(transformedX,transformedY);\n        var x=p.x;\n        var y=p.y;\n        return(x\u003er.x \u0026\u0026 x\u003cr.x+r.w \u0026\u0026 y\u003er.y \u0026\u0026 y\u003cr.y+r.h);\n    } \n\n    // listen for mousedown events\n    canvas.onmousedown=handleMouseDown;\n    function handleMouseDown(e){\n        // tell the browser we're handling this event\n        e.preventDefault();\n        e.stopPropagation();\n        // get mouse position\n        mouseX=parseInt(e.clientX-offsetX);\n        mouseY=parseInt(e.clientY-offsetY);\n        // is the mouse inside the transformed rect?\n        if(isPointInTransformedRect(rect,mouseX,mouseY)){\n            alert('You clicked in the transformed Rect');\n        }\n    }\n\n    // Demo: redraw transformed rect without using\n    //       context transformation commands\n    function drawTransformedRect(r,color){\n        var m=r.matrix;\n        var tl=m.getTransformedPoint(r.x,r.y);\n        var tr=m.getTransformedPoint(r.x+r.w,r.y);\n        var br=m.getTransformedPoint(r.x+r.w,r.y+r.h);\n        var bl=m.getTransformedPoint(r.x,r.y+r.h);\n        ctx.beginPath();\n        ctx.moveTo(tl.x,tl.y);\n        ctx.lineTo(tr.x,tr.y);\n        ctx.lineTo(br.x,br.y);\n        ctx.lineTo(bl.x,bl.y);\n        ctx.closePath();\n        ctx.strokeStyle=color;\n        ctx.stroke();\n    }\n\n}); // end window.onload\n\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003ccanvas id=\"canvas\" width=512 height=250\u003e\u003c/canvas\u003e\n\u003c/body\u003e\n\u003c/html\u003e",
        "code_language": "Plain Text"
      }
    ],
    "title": "A Transformation Matrix to track translated rotated scaled shapes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}