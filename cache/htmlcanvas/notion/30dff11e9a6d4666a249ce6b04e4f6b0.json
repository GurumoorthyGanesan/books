{
  "ID": "30dff11e-9a6d-4666-a249-ce6b04e4f6b0",
  "Root": {
    "alive": true,
    "content": [
      "be8c6fc4-af6e-4ad6-8944-5889e7974b0f",
      "031b0ce4-1209-485b-bdfd-52326f6444a4",
      "bfe82079-43f9-44eb-b40e-8fe443388051",
      "bda7df60-51d3-4d15-9a97-292e4a8c0892",
      "65c2cc11-4b35-404f-b753-7bc1034b026a",
      "d440076a-d410-4df2-a112-ef9103608a42"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551949736601,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "30dff11e-9a6d-4666-a249-ce6b04e4f6b0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551949736601,
    "parent_id": "041fccae-eb96-4fce-9577-0aaf8da6dad2",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Line without blurryness"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949736596,
        "id": "be8c6fc4-af6e-4ad6-8944-5889e7974b0f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949736596,
        "parent_id": "30dff11e-9a6d-4666-a249-ce6b04e4f6b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When Canvas draws a line it automatically adds anti-aliasing to visually heal “jaggedness”. The result is a line that is less jagged but more blurry."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When Canvas draws a line it automatically adds anti-aliasing to visually heal “jaggedness”. The result is a line that is less jagged but more blurry."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949736600,
        "id": "031b0ce4-1209-485b-bdfd-52326f6444a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949736600,
        "parent_id": "30dff11e-9a6d-4666-a249-ce6b04e4f6b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This function draws a line between 2 points without anti-aliasing using "
            ],
            [
              "Bresenham’s_line algorithm",
              [
                [
                  "a",
                  "http://rosettacode.org/wiki/Bitmap/Bresenham's_line_algorithm#JavaScript"
                ]
              ]
            ],
            [
              ". The result is a crisp line without the jaggedness."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This function draws a line between 2 points without anti-aliasing using "
          },
          {
            "Text": "Bresenham’s_line algorithm",
            "Link": "http://rosettacode.org/wiki/Bitmap/Bresenham's_line_algorithm#JavaScript"
          },
          {
            "Text": ". The result is a crisp line without the jaggedness."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949736600,
        "id": "bfe82079-43f9-44eb-b40e-8fe443388051",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949736600,
        "parent_id": "30dff11e-9a6d-4666-a249-ce6b04e4f6b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Important Note:",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " This pixel-by-pixel method is a much slower drawing method than ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "context.lineTo",
              [
                [
                  "i"
                ],
                [
                  "c"
                ]
              ]
            ],
            [
              ".",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Important Note:",
            "AttrFlags": 5
          },
          {
            "Text": " This pixel-by-pixel method is a much slower drawing method than ",
            "AttrFlags": 4
          },
          {
            "Text": "context.lineTo",
            "AttrFlags": 6
          },
          {
            "Text": ".",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949736600,
        "id": "bda7df60-51d3-4d15-9a97-292e4a8c0892",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949736600,
        "parent_id": "30dff11e-9a6d-4666-a249-ce6b04e4f6b0",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/6c217b10-887a-4a74-b89c-8d2021765797/43745b9455b422b6a12f5d6a5b8e05e98b540b76.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/6c217b10-887a-4a74-b89c-8d2021765797/43745b9455b422b6a12f5d6a5b8e05e98b540b76.png",
        "image_url": "https://www.notion.so/image/https:%2F%2Fwww.notion.so%2Ftmp%2F6c217b10-887a-4a74-b89c-8d2021765797%2F43745b9455b422b6a12f5d6a5b8e05e98b540b76.png"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949736600,
        "id": "65c2cc11-4b35-404f-b753-7bc1034b026a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949736601,
        "parent_id": "30dff11e-9a6d-4666-a249-ce6b04e4f6b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Usage:\nbresenhamLine(50,50,250,250);\n\n// x,y line start\n// xx,yy line end\n// the pixel at line start and line end are drawn\nfunction bresenhamLine(x, y, xx, yy){\n    var oldFill = ctx.fillStyle;  // save old fill style\n    ctx.fillStyle = ctx.strokeStyle; // move stroke style to fill\n    xx = Math.floor(xx);\n    yy = Math.floor(yy);\n    x = Math.floor(x);\n    y = Math.floor(y);\n    // BRENSENHAM \n    var dx =  Math.abs(xx-x); \n    var sx = x \u003c xx ? 1 : -1;\n    var dy = -Math.abs(yy-y);\n    var sy = y\u003cyy ? 1 : -1; \n    var err = dx+dy;\n    var errC; // error value\n    var end = false;\n    var x1 = x;\n    var y1 = y;\n\n    while(!end){\n       ctx.fillRect(x1, y1, 1, 1); // draw each pixel as a rect\n        if (x1 === xx \u0026\u0026 y1 === yy) {\n            end = true;\n        }else{\n            errC = 2*err;\n            if (errC \u003e= dy) { \n                err += dy; \n                x1 += sx; \n            }\n            if (errC \u003c= dx) { \n                err += dx; \n                y1 += sy; \n            } \n        }\n    }\n    ctx.fillStyle = oldFill; // restore old fill style\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Usage:\nbresenhamLine(50,50,250,250);\n\n// x,y line start\n// xx,yy line end\n// the pixel at line start and line end are drawn\nfunction bresenhamLine(x, y, xx, yy){\n    var oldFill = ctx.fillStyle;  // save old fill style\n    ctx.fillStyle = ctx.strokeStyle; // move stroke style to fill\n    xx = Math.floor(xx);\n    yy = Math.floor(yy);\n    x = Math.floor(x);\n    y = Math.floor(y);\n    // BRENSENHAM \n    var dx =  Math.abs(xx-x); \n    var sx = x \u003c xx ? 1 : -1;\n    var dy = -Math.abs(yy-y);\n    var sy = y\u003cyy ? 1 : -1; \n    var err = dx+dy;\n    var errC; // error value\n    var end = false;\n    var x1 = x;\n    var y1 = y;\n\n    while(!end){\n       ctx.fillRect(x1, y1, 1, 1); // draw each pixel as a rect\n        if (x1 === xx \u0026\u0026 y1 === yy) {\n            end = true;\n        }else{\n            errC = 2*err;\n            if (errC \u003e= dy) { \n                err += dy; \n                x1 += sx; \n            }\n            if (errC \u003c= dx) { \n                err += dx; \n                y1 += sy; \n            } \n        }\n    }\n    ctx.fillStyle = oldFill; // restore old fill style\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949736601,
        "id": "d440076a-d410-4df2-a112-ef9103608a42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949736601,
        "parent_id": "30dff11e-9a6d-4666-a249-ce6b04e4f6b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\u003c!—– //Blindman67 Please note that using while(true) and then break; rather than while(!end) then end = true may seem more effective, Some Javascript optimisers (chrome’s V8) will mark the loop as “indeterminate exit condition” because of the no apparent exit condition “while(true)” and will cause this function and all functions within the script to be marked “Do not optimise” —–!\u003e"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "\u003c!—– //Blindman67 Please note that using while(true) and then break; rather than while(!end) then end = true may seem more effective, Some Javascript optimisers (chrome’s V8) will mark the loop as “indeterminate exit condition” because of the no apparent exit condition “while(true)” and will cause this function and all functions within the script to be marked “Do not optimise” —–!\u003e"
          }
        ]
      }
    ],
    "title": "Line without blurryness",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}