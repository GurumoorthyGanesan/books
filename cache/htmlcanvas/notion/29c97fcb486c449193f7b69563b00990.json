{
  "ID": "29c97fcb-486c-4491-93f7-b69563b00990",
  "Root": {
    "id": "29c97fcb-486c-4491-93f7-b69563b00990",
    "alive": true,
    "content": [
      "97fd46f7-0df0-452f-90b8-e7844b8d1104",
      "8dbbef4a-cca1-4e3b-bafe-f72977265a1e",
      "7401db92-693a-4da6-8ee0-06ad83c89138",
      "95a7920b-ed51-4d6f-b06e-f6c57d7855fc",
      "ac028ea9-aafb-437d-b3d6-ec7e0d791444"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551949748720,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551949748720,
    "parent_id": "0d20929d-b856-4186-bfed-fbeecbb675d5",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Draw text paragraphs into irregular shapes"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "id": "97fd46f7-0df0-452f-90b8-e7844b8d1104",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949748719,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949748719,
        "parent_id": "29c97fcb-486c-4491-93f7-b69563b00990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This example draws text paragraphs into any portions of the canvas that have opaque pixels."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This example draws text paragraphs into any portions of the canvas that have opaque pixels."
          }
        ]
      },
      {
        "id": "8dbbef4a-cca1-4e3b-bafe-f72977265a1e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949748720,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949748720,
        "parent_id": "29c97fcb-486c-4491-93f7-b69563b00990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It works by finding the next block of opaque pixels that is large enough to contain the next specified word and filling that block with the specified word."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It works by finding the next block of opaque pixels that is large enough to contain the next specified word and filling that block with the specified word."
          }
        ]
      },
      {
        "id": "7401db92-693a-4da6-8ee0-06ad83c89138",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949748720,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949748720,
        "parent_id": "29c97fcb-486c-4491-93f7-b69563b00990",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The opaque pixels can come from any source: Path drawing commands and /or images."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The opaque pixels can come from any source: Path drawing commands and /or images."
          }
        ]
      },
      {
        "id": "95a7920b-ed51-4d6f-b06e-f6c57d7855fc",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949748720,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949748720,
        "parent_id": "29c97fcb-486c-4491-93f7-b69563b00990",
        "parent_table": "block",
        "properties": {
          "source": [
            [
              "/tmp/aaa23e29-574f-4b8d-bdb6-2703ca45a53b/db5d3548a41c3a53761b1ad8c7982fd8ece06f31.png"
            ]
          ]
        },
        "type": "image",
        "version": 1,
        "source": "/tmp/aaa23e29-574f-4b8d-bdb6-2703ca45a53b/db5d3548a41c3a53761b1ad8c7982fd8ece06f31.png",
        "image_url": "/tmp/aaa23e29-574f-4b8d-bdb6-2703ca45a53b/db5d3548a41c3a53761b1ad8c7982fd8ece06f31.png"
      },
      {
        "id": "ac028ea9-aafb-437d-b3d6-ec7e0d791444",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949748720,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949748720,
        "parent_id": "29c97fcb-486c-4491-93f7-b69563b00990",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c!doctype html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n\u003cstyle\u003e\n    body{ background-color:white; padding:10px; }\n    #canvas{border:1px solid red;}\n\u003c/style\u003e\n\u003cscript\u003e\nwindow.onload=(function(){\n\n    var canvas=document.getElementById(\"canvas\");\n    var ctx=canvas.getContext(\"2d\");\n    var cw=canvas.width;\n    var ch=canvas.height;\n\n    var fontsize=12;\n    var fontface='verdana';\n    var lineHeight=parseInt(fontsize*1.286);\n\n    var text='It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way; in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.';\n    var words=text.split(' ');\n    var wordWidths=[];\n    ctx.font=fontsize+'px '+fontface;\n    for(var i=0;i\u003cwords.length;i++){ wordWidths.push(ctx.measureText(words[i]).width); }\n    var spaceWidth=ctx.measureText(' ').width;\n    var wordIndex=0\n    var data=[];\n\n    // Demo: draw Heart \n    // Note: the shape can be ANY opaque drawing -- even an image\n    ctx.scale(3,3);\n    ctx.beginPath();\n    ctx.moveTo(75,40);\n    ctx.bezierCurveTo(75,37,70,25,50,25);\n    ctx.bezierCurveTo(20,25,20,62.5,20,62.5);\n    ctx.bezierCurveTo(20,80,40,102,75,120);\n    ctx.bezierCurveTo(110,102,130,80,130,62.5);\n    ctx.bezierCurveTo(130,62.5,130,25,100,25);\n    ctx.bezierCurveTo(85,25,75,37,75,40);\n    ctx.fillStyle='red';\n    ctx.fill();\n    ctx.setTransform(1,0,0,1,0,0);\n\n    // fill heart with text\n    ctx.fillStyle='white';\n    var imgDataData=ctx.getImageData(0,0,cw,ch).data;\n    for(var i=0;i\u003cimgDataData.length;i+=4){\n        data.push(imgDataData[i+3]);\n    }\n    placeWords();   \n\n    // draw words sequentially into next available block of \n    //    available opaque pixels \n    function placeWords(){\n        var sx=0;\n        var sy=0;\n        var y=0;\n        var wordIndex=0;\n        ctx.textBaseline='top';\n        while(y\u003cch \u0026\u0026 wordIndex\u003cwords.length){\n            sx=0;\n            sy=y;\n            var startingIndex=wordIndex;\n            while(sx\u003ccw \u0026\u0026 wordIndex\u003cwords.length){\n                var x=getRect(sx,sy,lineHeight);\n                var available=x-sx;\n                var spacer=spaceWidth;  // spacer=0 to have no left margin\n                var w=spacer+wordWidths[wordIndex];\n                while(available\u003e=w){\n                    ctx.fillText(words[wordIndex],spacer+sx,sy);\n                    sx+=w;\n                    available-=w;\n                    spacer=spaceWidth;\n                    wordIndex++;\n                    w=spacer+wordWidths[wordIndex];\n                }\n                sx=x+1;\n            }\n            y=(wordIndex\u003estartingIndex)?y+lineHeight:y+1;\n        }\n    }\n\n    // find a rectangular block of opaque pixels\n    function getRect(sx,sy,height){\n        var x=sx;\n        var y=sy;\n        var ok=true;\n        while(ok){\n            if(data[y*cw+x]\u003c250){ok=false;}\n            y++;\n            if(y\u003e=sy+height){\n                y=sy;\n                x++;\n                if(x\u003e=cw){ok=false;}\n            }\n        }\n        return(x);\n    }\n\n}); // end $(function(){});\n\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003ch4\u003eNote: the shape must be closed and alpha\u003e=250 inside\u003c/h4\u003e\n    \u003ccanvas id=\"canvas\" width=400 height=400\u003e\u003c/canvas\u003e\n\u003c/body\u003e\n\u003c/html\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c!doctype html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n\u003cstyle\u003e\n    body{ background-color:white; padding:10px; }\n    #canvas{border:1px solid red;}\n\u003c/style\u003e\n\u003cscript\u003e\nwindow.onload=(function(){\n\n    var canvas=document.getElementById(\"canvas\");\n    var ctx=canvas.getContext(\"2d\");\n    var cw=canvas.width;\n    var ch=canvas.height;\n\n    var fontsize=12;\n    var fontface='verdana';\n    var lineHeight=parseInt(fontsize*1.286);\n\n    var text='It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way; in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.';\n    var words=text.split(' ');\n    var wordWidths=[];\n    ctx.font=fontsize+'px '+fontface;\n    for(var i=0;i\u003cwords.length;i++){ wordWidths.push(ctx.measureText(words[i]).width); }\n    var spaceWidth=ctx.measureText(' ').width;\n    var wordIndex=0\n    var data=[];\n\n    // Demo: draw Heart \n    // Note: the shape can be ANY opaque drawing -- even an image\n    ctx.scale(3,3);\n    ctx.beginPath();\n    ctx.moveTo(75,40);\n    ctx.bezierCurveTo(75,37,70,25,50,25);\n    ctx.bezierCurveTo(20,25,20,62.5,20,62.5);\n    ctx.bezierCurveTo(20,80,40,102,75,120);\n    ctx.bezierCurveTo(110,102,130,80,130,62.5);\n    ctx.bezierCurveTo(130,62.5,130,25,100,25);\n    ctx.bezierCurveTo(85,25,75,37,75,40);\n    ctx.fillStyle='red';\n    ctx.fill();\n    ctx.setTransform(1,0,0,1,0,0);\n\n    // fill heart with text\n    ctx.fillStyle='white';\n    var imgDataData=ctx.getImageData(0,0,cw,ch).data;\n    for(var i=0;i\u003cimgDataData.length;i+=4){\n        data.push(imgDataData[i+3]);\n    }\n    placeWords();   \n\n    // draw words sequentially into next available block of \n    //    available opaque pixels \n    function placeWords(){\n        var sx=0;\n        var sy=0;\n        var y=0;\n        var wordIndex=0;\n        ctx.textBaseline='top';\n        while(y\u003cch \u0026\u0026 wordIndex\u003cwords.length){\n            sx=0;\n            sy=y;\n            var startingIndex=wordIndex;\n            while(sx\u003ccw \u0026\u0026 wordIndex\u003cwords.length){\n                var x=getRect(sx,sy,lineHeight);\n                var available=x-sx;\n                var spacer=spaceWidth;  // spacer=0 to have no left margin\n                var w=spacer+wordWidths[wordIndex];\n                while(available\u003e=w){\n                    ctx.fillText(words[wordIndex],spacer+sx,sy);\n                    sx+=w;\n                    available-=w;\n                    spacer=spaceWidth;\n                    wordIndex++;\n                    w=spacer+wordWidths[wordIndex];\n                }\n                sx=x+1;\n            }\n            y=(wordIndex\u003estartingIndex)?y+lineHeight:y+1;\n        }\n    }\n\n    // find a rectangular block of opaque pixels\n    function getRect(sx,sy,height){\n        var x=sx;\n        var y=sy;\n        var ok=true;\n        while(ok){\n            if(data[y*cw+x]\u003c250){ok=false;}\n            y++;\n            if(y\u003e=sy+height){\n                y=sy;\n                x++;\n                if(x\u003e=cw){ok=false;}\n            }\n        }\n        return(x);\n    }\n\n}); // end $(function(){});\n\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003ch4\u003eNote: the shape must be closed and alpha\u003e=250 inside\u003c/h4\u003e\n    \u003ccanvas id=\"canvas\" width=400 height=400\u003e\u003c/canvas\u003e\n\u003c/body\u003e\n\u003c/html\u003e",
        "code_language": "Plain Text"
      }
    ],
    "title": "Draw text paragraphs into irregular shapes",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 94
    }
  ],
  "Tables": null
}