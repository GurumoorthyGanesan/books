{
  "ID": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
  "Root": {
    "alive": true,
    "content": [
      "395b192a-0681-40ed-92cf-cbd773c57387",
      "a1463c28-29c9-428a-b7c6-8ee00d4894b9",
      "b26d9d00-47db-4874-a1a1-c2a2fdb89be3",
      "15b687fa-b89f-46bb-9ed3-2f964d51ea42",
      "7c6ca84e-4bc3-4a0d-9570-86c7e771573d",
      "0f2bbd5c-3fa5-4281-ae05-a368cda0be80",
      "b59dc1b3-f975-473a-826c-949c5baa5fc5",
      "6165d5b4-1e5c-474d-bea8-d18a2499a2fe",
      "c7fb0362-e3c2-4a10-867c-129111a05999",
      "ed75281c-2bf9-4c8b-abd5-9c4da0f5ee7c",
      "93819ced-de1c-438e-87c1-7f13cfdda914",
      "0a2f13ad-0af4-4309-966a-e6083b2311be",
      "684cd0c5-c11c-439c-aa85-88abb8ea8a46",
      "3473c080-82cd-4f30-8353-be4187301198",
      "c54f5022-8824-44a0-bc84-b642f365800b",
      "75fd79e1-8e52-48a7-a797-2c1223bff323",
      "df9794eb-375d-4d16-8f3a-8e52fca31e45"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551949849492,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551949849492,
    "parent_id": "d29786c7-8259-4e77-8b8c-65265f7b95e3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Responsive canvas animations without resize events."
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849489,
        "id": "395b192a-0681-40ed-92cf-cbd773c57387",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849489,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The window resize events can fire in response to the movement of the user’s input device. When you resize a canvas it is automatically cleared and you are forced to re-render the content. For animations you do this every frame via the main loop function called by "
            ],
            [
              "requestAnimationFrame",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which does its best to keep the rendering in sync with the display hardware."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The window resize events can fire in response to the movement of the user’s input device. When you resize a canvas it is automatically cleared and you are forced to re-render the content. For animations you do this every frame via the main loop function called by "
          },
          {
            "Text": "requestAnimationFrame",
            "AttrFlags": 2
          },
          {
            "Text": " which does its best to keep the rendering in sync with the display hardware."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849490,
        "id": "a1463c28-29c9-428a-b7c6-8ee00d4894b9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849490,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The problem with the resize event is that when the mouse is used to resize the window the events can be trigger many times quicker than the standard 60fps rate of the browser. When the resize event exits the canvas back buffer is presented to the DOM out of sync with the display device, which can cause shearing and other negative effects. There is also a lot of needless memory allocation and release that can further impact the animation when GC cleans up some time afterwards."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The problem with the resize event is that when the mouse is used to resize the window the events can be trigger many times quicker than the standard 60fps rate of the browser. When the resize event exits the canvas back buffer is presented to the DOM out of sync with the display device, which can cause shearing and other negative effects. There is also a lot of needless memory allocation and release that can further impact the animation when GC cleans up some time afterwards."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849490,
        "id": "b26d9d00-47db-4874-a1a1-c2a2fdb89be3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849490,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849490,
        "id": "15b687fa-b89f-46bb-9ed3-2f964d51ea42",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849490,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Debounced resize event"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Debounced resize event"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849490,
        "id": "7c6ca84e-4bc3-4a0d-9570-86c7e771573d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849490,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A common way to deal with the high firing rates of the resize event is to debounce the resize event."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A common way to deal with the high firing rates of the resize event is to debounce the resize event."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849490,
        "id": "0f2bbd5c-3fa5-4281-ae05-a368cda0be80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849490,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Assume canvas is in scope\naddEventListener.(\"resize\", debouncedResize );\n\n// debounce timeout handle\nvar debounceTimeoutHandle;\n\n// The debounce time in ms (1/1000th second)\nconst DEBOUNCE_TIME = 100; \n\n// Resize function \nfunction debouncedResize () { \n    clearTimeout(debounceTimeoutHandle);  // Clears any pending debounce events\n\n    // Schedule a canvas resize \n    debounceTimeoutHandle = setTimeout(resizeCanvas, DEBOUNCE_TIME);\n}\n\n// canvas resize function\nfunction resizeCanvas () { ... resize and redraw ... }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Assume canvas is in scope\naddEventListener.(\"resize\", debouncedResize );\n\n// debounce timeout handle\nvar debounceTimeoutHandle;\n\n// The debounce time in ms (1/1000th second)\nconst DEBOUNCE_TIME = 100; \n\n// Resize function \nfunction debouncedResize () { \n    clearTimeout(debounceTimeoutHandle);  // Clears any pending debounce events\n\n    // Schedule a canvas resize \n    debounceTimeoutHandle = setTimeout(resizeCanvas, DEBOUNCE_TIME);\n}\n\n// canvas resize function\nfunction resizeCanvas () { ... resize and redraw ... }",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849491,
        "id": "b59dc1b3-f975-473a-826c-949c5baa5fc5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849491,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above example delays the resizing of the canvas until 100ms after the resize event. If in that time further resize events are triggered the existing resize timeout is canceled and a new one scheduled. This effectively consumes most of the resize events."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above example delays the resizing of the canvas until 100ms after the resize event. If in that time further resize events are triggered the existing resize timeout is canceled and a new one scheduled. This effectively consumes most of the resize events."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849491,
        "id": "6165d5b4-1e5c-474d-bea8-d18a2499a2fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849491,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It still has some problems, the most notable is the delay between resizing and seeing the resized canvas. Reducing the debounce time improves this but the resize is still out of sync with the display device. You also still have the animation main loop rendering to an ill fitting canvas."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It still has some problems, the most notable is the delay between resizing and seeing the resized canvas. Reducing the debounce time improves this but the resize is still out of sync with the display device. You also still have the animation main loop rendering to an ill fitting canvas."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849491,
        "id": "c7fb0362-e3c2-4a10-867c-129111a05999",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849491,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "More code can reduce the problems! More code also creates its own new problems."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "More code can reduce the problems! More code also creates its own new problems."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849491,
        "id": "ed75281c-2bf9-4c8b-abd5-9c4da0f5ee7c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849491,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "type": "divider",
        "version": 1
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849491,
        "id": "93819ced-de1c-438e-87c1-7f13cfdda914",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849491,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Simple and the best resize"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Simple and the best resize"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849491,
        "id": "0a2f13ad-0af4-4309-966a-e6083b2311be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849491,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Having tried many differing ways to smooth out the resizing of the canvas, from the absurdly complex, to just ignoring the problem (who cares anyways?) I fell back to a trusty friend."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Having tried many differing ways to smooth out the resizing of the canvas, from the absurdly complex, to just ignoring the problem (who cares anyways?) I fell back to a trusty friend."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849491,
        "id": "684cd0c5-c11c-439c-aa85-88abb8ea8a46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849491,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "K.I.S.S.",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " is something most programmers should be aware of (("
            ],
            [
              "K",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "eep "
            ],
            [
              "I",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "t "
            ],
            [
              "S",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "imple "
            ],
            [
              "S",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "tupid) "
            ],
            [
              "The stupid refers to me for not having thought of it years ago.",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " ) and it turns out the best solution is the simplest of all."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "K.I.S.S.",
            "AttrFlags": 1
          },
          {
            "Text": " is something most programmers should be aware of (("
          },
          {
            "Text": "K",
            "AttrFlags": 1
          },
          {
            "Text": "eep "
          },
          {
            "Text": "I",
            "AttrFlags": 1
          },
          {
            "Text": "t "
          },
          {
            "Text": "S",
            "AttrFlags": 1
          },
          {
            "Text": "imple "
          },
          {
            "Text": "S",
            "AttrFlags": 1
          },
          {
            "Text": "tupid) "
          },
          {
            "Text": "The stupid refers to me for not having thought of it years ago.",
            "AttrFlags": 4
          },
          {
            "Text": " ) and it turns out the best solution is the simplest of all."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849492,
        "id": "3473c080-82cd-4f30-8353-be4187301198",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849492,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just resize the canvas from within the main animation loop. It stays in sync with the display device, there is no needless rendering, and the resource management is at the minimum possible while maintaining full frame rate. Nor do you need to add a resize event to the window or any additional resize functions."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just resize the canvas from within the main animation loop. It stays in sync with the display device, there is no needless rendering, and the resource management is at the minimum possible while maintaining full frame rate. Nor do you need to add a resize event to the window or any additional resize functions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849492,
        "id": "c54f5022-8824-44a0-bc84-b642f365800b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849492,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You add the resize where you would normally clear the canvas by checking if the canvas size matches the window size. If not resize it."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You add the resize where you would normally clear the canvas by checking if the canvas size matches the window size. If not resize it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849492,
        "id": "75fd79e1-8e52-48a7-a797-2c1223bff323",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849492,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Assumes canvas element is in scope as canvas\n\n// Standard main loop function callback from requestAnimationFrame\nfunction mainLoop(time) {\n\n    // Check if the canvas size matches the window size\n    if (canvas.width !== innerWidth || canvas.height !== innerHeight) {\n        canvas.width = innerWidth;    // resize canvas\n        canvas.height = innerHeight;  // also clears the canvas\n    } else {\n        ctx.clearRect(0, 0, canvas.width, canvas.height); // clear if not resized\n    }\n\n    // Animation code as normal."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Assumes canvas element is in scope as canvas\n\n// Standard main loop function callback from requestAnimationFrame\nfunction mainLoop(time) {\n\n    // Check if the canvas size matches the window size\n    if (canvas.width !== innerWidth || canvas.height !== innerHeight) {\n        canvas.width = innerWidth;    // resize canvas\n        canvas.height = innerHeight;  // also clears the canvas\n    } else {\n        ctx.clearRect(0, 0, canvas.width, canvas.height); // clear if not resized\n    }\n\n    // Animation code as normal.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551949849492,
        "id": "df9794eb-375d-4d16-8f3a-8e52fca31e45",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551949849492,
        "parent_id": "4c2b00d9-345b-46c7-b431-4eefc6a32a9e",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "requestAnimationFrame(mainLoop);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "requestAnimationFrame(mainLoop);\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Responsive canvas animations without resize events.",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}