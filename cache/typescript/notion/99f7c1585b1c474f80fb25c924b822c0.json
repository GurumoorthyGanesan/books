{
  "ID": "99f7c158-5b1c-474f-80fb-25c924b822c0",
  "Root": {
    "alive": true,
    "content": [
      "5e20ab2c-b269-4ce3-90aa-f378aa1f7f87",
      "3fe8c1bc-ab88-48bc-b68d-2037369cf138",
      "2cab34bb-685c-4c45-b47a-b26a694e34ca",
      "0b1ffff7-0233-4dd1-8b2a-2528256237f1",
      "b15247f8-4ca3-492c-b9d2-0c578a0995ac",
      "466d777d-ef99-4856-8948-82a3959d2895",
      "7995da47-16a9-44db-b95b-62ea98bea9e3",
      "9f514ad5-fb47-4e39-8364-c632d68b3b2b",
      "6782d5d6-ac80-4fd2-9af1-145d6f2128e4",
      "49f62c34-7e83-467a-bb46-03579a57e71d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552106723106,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552106723106,
    "parent_id": "265bfa11-c991-4a72-9490-3434922ce6b4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Type guarding functions"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723101,
        "id": "5e20ab2c-b269-4ce3-90aa-f378aa1f7f87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723101,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can declare functions that serve as type guards using any logic you’d like."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can declare functions that serve as type guards using any logic you’d like."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723103,
        "id": "3fe8c1bc-ab88-48bc-b68d-2037369cf138",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723103,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "They take the form:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "They take the form:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723103,
        "id": "2cab34bb-685c-4c45-b47a-b26a694e34ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723103,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function functionName(variableName: any): variableName is DesiredType {\n    // body that returns boolean\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function functionName(variableName: any): variableName is DesiredType {\n    // body that returns boolean\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723104,
        "id": "0b1ffff7-0233-4dd1-8b2a-2528256237f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723104,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the function returns true, TypeScript will narrow the type to "
            ],
            [
              "DesiredType",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in any block guarded by a call to the function."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the function returns true, TypeScript will narrow the type to "
          },
          {
            "Text": "DesiredType",
            "AttrFlags": 2
          },
          {
            "Text": " in any block guarded by a call to the function."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723105,
        "id": "b15247f8-4ca3-492c-b9d2-0c578a0995ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723105,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example ("
            ],
            [
              "try it",
              [
                [
                  "a",
                  "https://goo.gl/xV4pLK"
                ]
              ]
            ],
            [
              "):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example ("
          },
          {
            "Text": "try it",
            "Link": "https://goo.gl/xV4pLK"
          },
          {
            "Text": "):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723105,
        "id": "466d777d-ef99-4856-8948-82a3959d2895",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723105,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function isString(test: any): test is string {\n    return typeof test === \"string\";\n}\n\nfunction example(foo: any) {\n    if (isString(foo)) {\n        // foo is type as a string in this block\n        console.log(\"it's a string: \" + foo);\n    } else {\n        // foo is type any in this block\n        console.log(\"don't know what this is! [\" + foo + \"]\");\n    }\n}\n\nexample(\"hello world\");          // prints \"it's a string: hello world\"\nexample({ something: \"else\" });  // prints \"don't know what this is! [[object Object]]\""
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function isString(test: any): test is string {\n    return typeof test === \"string\";\n}\n\nfunction example(foo: any) {\n    if (isString(foo)) {\n        // foo is type as a string in this block\n        console.log(\"it's a string: \" + foo);\n    } else {\n        // foo is type any in this block\n        console.log(\"don't know what this is! [\" + foo + \"]\");\n    }\n}\n\nexample(\"hello world\");          // prints \"it's a string: hello world\"\nexample({ something: \"else\" });  // prints \"don't know what this is! [[object Object]]\"",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723106,
        "id": "7995da47-16a9-44db-b95b-62ea98bea9e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723106,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A guard’s function type predicate (the "
            ],
            [
              "foo is Bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the function return type position) is used at compile time to narrow types, the function body is used at runtime. The type predicate and function must agree, or your code won’t work."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A guard’s function type predicate (the "
          },
          {
            "Text": "foo is Bar",
            "AttrFlags": 2
          },
          {
            "Text": " in the function return type position) is used at compile time to narrow types, the function body is used at runtime. The type predicate and function must agree, or your code won’t work."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723106,
        "id": "9f514ad5-fb47-4e39-8364-c632d68b3b2b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723106,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Type guard functions don’t have to use "
            ],
            [
              "typeof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "instanceof",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", they can use more complicated logic."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Type guard functions don’t have to use "
          },
          {
            "Text": "typeof",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "instanceof",
            "AttrFlags": 2
          },
          {
            "Text": ", they can use more complicated logic."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723106,
        "id": "6782d5d6-ac80-4fd2-9af1-145d6f2128e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723106,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "For example, this code determines if you’ve got a jQuery object by checking for it’s version string."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "For example, this code determines if you’ve got a jQuery object by checking for it’s version string."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106723106,
        "id": "49f62c34-7e83-467a-bb46-03579a57e71d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106723106,
        "parent_id": "99f7c158-5b1c-474f-80fb-25c924b822c0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function isJQuery(foo): foo is JQuery {\n    // test for jQuery's version string\n    return foo.jquery !== undefined;\n}\n\nfunction example(foo) {\n    if (isJQuery(foo)) {\n        // foo is typed JQuery here\n        foo.eq(0);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function isJQuery(foo): foo is JQuery {\n    // test for jQuery's version string\n    return foo.jquery !== undefined;\n}\n\nfunction example(foo) {\n    if (isJQuery(foo)) {\n        // foo is typed JQuery here\n        foo.eq(0);\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Type guarding functions",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}