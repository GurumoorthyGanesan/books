{
  "ID": "9058b4f1-158d-4fd1-9b39-cd00f0a52335",
  "Root": {
    "alive": true,
    "content": [
      "c6d62651-b4da-41c5-932c-df110894558b",
      "ec1b8456-4e89-4977-833e-d52f0ee6c3f1",
      "2d2373fd-82a8-4074-830b-8f961e30d172"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552106391500,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9058b4f1-158d-4fd1-9b39-cd00f0a52335",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552106391500,
    "parent_id": "89322076-647d-40be-9dc6-fcad7f299f62",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Configuration for fewer programming errors"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106391495,
        "id": "c6d62651-b4da-41c5-932c-df110894558b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106391495,
        "parent_id": "9058b4f1-158d-4fd1-9b39-cd00f0a52335",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are very good configurations to force typings and get more helpful errors which are not activated by default."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There are very good configurations to force typings and get more helpful errors which are not activated by default."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106391498,
        "id": "ec1b8456-4e89-4977-833e-d52f0ee6c3f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106391498,
        "parent_id": "9058b4f1-158d-4fd1-9b39-cd00f0a52335",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "{\n  \"compilerOptions\": {\n\n    \"alwaysStrict\": true, // Parse in strict mode and emit \"use strict\" for each source file. \n\n    // If you have wrong casing in referenced files e.g. the filename is Global.ts and you have a /// \u003creference path=\"global.ts\" /\u003e to reference this file, then this can cause to unexpected errors. Visite: http://stackoverflow.com/questions/36628612/typescript-transpiler-casing-issue\n    \"forceConsistentCasingInFileNames\": true, // Disallow inconsistently-cased references to the same file.\n\n    // \"allowUnreachableCode\": false, // Do not report errors on unreachable code. (Default: False)\n    // \"allowUnusedLabels\": false, // Do not report errors on unused labels. (Default: False)\n\n    \"noFallthroughCasesInSwitch\": true, // Report errors for fall through cases in switch statement.\n    \"noImplicitReturns\": true, // Report error when not all code paths in function return a value.\n\n    \"noUnusedParameters\": true, // Report errors on unused parameters.\n    \"noUnusedLocals\": true, // Report errors on unused locals.\n\n    \"noImplicitAny\": true, // Raise error on expressions and declarations with an implied \"any\" type.\n    \"noImplicitThis\": true, // Raise error on this expressions with an implied \"any\" type.\n\n    \"strictNullChecks\": true, // The null and undefined values are not in the domain of every type and are only assignable to themselves and any.\n\n    // To enforce this rules, add this configuration.\n    \"noEmitOnError\": true     // Do not emit outputs if any errors were reported.\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "{\n  \"compilerOptions\": {\n\n    \"alwaysStrict\": true, // Parse in strict mode and emit \"use strict\" for each source file. \n\n    // If you have wrong casing in referenced files e.g. the filename is Global.ts and you have a /// \u003creference path=\"global.ts\" /\u003e to reference this file, then this can cause to unexpected errors. Visite: http://stackoverflow.com/questions/36628612/typescript-transpiler-casing-issue\n    \"forceConsistentCasingInFileNames\": true, // Disallow inconsistently-cased references to the same file.\n\n    // \"allowUnreachableCode\": false, // Do not report errors on unreachable code. (Default: False)\n    // \"allowUnusedLabels\": false, // Do not report errors on unused labels. (Default: False)\n\n    \"noFallthroughCasesInSwitch\": true, // Report errors for fall through cases in switch statement.\n    \"noImplicitReturns\": true, // Report error when not all code paths in function return a value.\n\n    \"noUnusedParameters\": true, // Report errors on unused parameters.\n    \"noUnusedLocals\": true, // Report errors on unused locals.\n\n    \"noImplicitAny\": true, // Raise error on expressions and declarations with an implied \"any\" type.\n    \"noImplicitThis\": true, // Raise error on this expressions with an implied \"any\" type.\n\n    \"strictNullChecks\": true, // The null and undefined values are not in the domain of every type and are only assignable to themselves and any.\n\n    // To enforce this rules, add this configuration.\n    \"noEmitOnError\": true     // Do not emit outputs if any errors were reported.\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552106391500,
        "id": "2d2373fd-82a8-4074-830b-8f961e30d172",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552106391500,
        "parent_id": "9058b4f1-158d-4fd1-9b39-cd00f0a52335",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Not enough? If you are a hard coder and want more, then you may be interested to check your TypeScript files with tslint before compiling it with tsc. Check how to "
            ],
            [
              "configure tslint for even stricter code",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/typescript/7457/enforcing-code-style-guideline-with-tslint/25319/configuration-for-fewer-programming-errors#t=201611030920457805689"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Not enough? If you are a hard coder and want more, then you may be interested to check your TypeScript files with tslint before compiling it with tsc. Check how to "
          },
          {
            "Text": "configure tslint for even stricter code",
            "Link": "http://stackoverflow.com/documentation/typescript/7457/enforcing-code-style-guideline-with-tslint/25319/configuration-for-fewer-programming-errors#t=201611030920457805689"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "Configuration for fewer programming errors",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}