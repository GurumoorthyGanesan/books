{
  "ID": "342aadf5-9830-401d-901c-d56cc381db91",
  "Root": {
    "alive": true,
    "content": [
      "9c63f525-bf03-4adb-b99b-6a36bbb3eb63",
      "83af4add-31fc-4209-b3ca-778fa71dea05",
      "2394102f-49d9-4712-9cb8-f6f7b0c2a7c1",
      "b9ff61a5-0b8e-4b76-b4f0-bfcf400e68d0",
      "046cb4d6-9196-47ea-87f7-d279cbc5c308",
      "88d60663-c737-45a2-ba20-3e05929c70b5",
      "e180b075-cb23-4132-8a23-75d7d4c51c77",
      "f06ad37f-0e46-4ee9-9b33-b3edd6182700",
      "d4f70e51-3a81-4d1e-a608-ab18527ef283"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552099912150,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "342aadf5-9830-401d-901c-d56cc381db91",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552099912150,
    "parent_id": "da8fafc6-5f35-4220-90b1-92f7b2069ee8",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "setState pitfalls"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912146,
        "id": "9c63f525-bf03-4adb-b99b-6a36bbb3eb63",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912146,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You should use caution when using "
            ],
            [
              "setState",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in an asynchronous context. For example, you might try to call "
            ],
            [
              "setState",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the callback of a get request:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You should use caution when using "
          },
          {
            "Text": "setState",
            "AttrFlags": 2
          },
          {
            "Text": " in an asynchronous context. For example, you might try to call "
          },
          {
            "Text": "setState",
            "AttrFlags": 2
          },
          {
            "Text": " in the callback of a get request:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912149,
        "id": "83af4add-31fc-4209-b3ca-778fa71dea05",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912149,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyClass extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            user: {}\n        };\n    }\n\n    componentDidMount() {\n        this.fetchUser();\n    }\n\n    fetchUser() {\n        $.get('/api/users/self')\n            .then((user) =\u003e {\n                this.setState({user: user});\n            });\n    }\n\n    render() {\n        return \u003ch1\u003e{this.state.user}\u003c/h1\u003e;\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyClass extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            user: {}\n        };\n    }\n\n    componentDidMount() {\n        this.fetchUser();\n    }\n\n    fetchUser() {\n        $.get('/api/users/self')\n            .then((user) =\u003e {\n                this.setState({user: user});\n            });\n    }\n\n    render() {\n        return \u003ch1\u003e{this.state.user}\u003c/h1\u003e;\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912149,
        "id": "2394102f-49d9-4712-9cb8-f6f7b0c2a7c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912149,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This could call problems - if the callback is called after the "
            ],
            [
              "Component",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is dismounted, then "
            ],
            [
              "this.setState",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " won’t be a function. Whenever this is the case, you should be careful to ensure your usage of "
            ],
            [
              "setState",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is cancellable."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This could call problems - if the callback is called after the "
          },
          {
            "Text": "Component",
            "AttrFlags": 2
          },
          {
            "Text": " is dismounted, then "
          },
          {
            "Text": "this.setState",
            "AttrFlags": 2
          },
          {
            "Text": " won’t be a function. Whenever this is the case, you should be careful to ensure your usage of "
          },
          {
            "Text": "setState",
            "AttrFlags": 2
          },
          {
            "Text": " is cancellable."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912149,
        "id": "b9ff61a5-0b8e-4b76-b4f0-bfcf400e68d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912149,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, you might wish to cancel the XHR request when the component dismounts:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, you might wish to cancel the XHR request when the component dismounts:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912149,
        "id": "046cb4d6-9196-47ea-87f7-d279cbc5c308",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912149,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class MyClass extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            user: {},\n            xhr: null\n        };\n    }\n\n    componentWillUnmount() {\n        let xhr = this.state.xhr;\n\n        // Cancel the xhr request, so the callback is never called\n        if (xhr \u0026\u0026 xhr.readyState != 4) {\n            xhr.abort();\n        }\n    }\n\n    componentDidMount() {\n        this.fetchUser();\n    }\n\n    fetchUser() {\n        let xhr = $.get('/api/users/self')\n            .then((user) =\u003e {\n                this.setState({user: user});\n            });\n\n        this.setState({xhr: xhr});\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class MyClass extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            user: {},\n            xhr: null\n        };\n    }\n\n    componentWillUnmount() {\n        let xhr = this.state.xhr;\n\n        // Cancel the xhr request, so the callback is never called\n        if (xhr \u0026\u0026 xhr.readyState != 4) {\n            xhr.abort();\n        }\n    }\n\n    componentDidMount() {\n        this.fetchUser();\n    }\n\n    fetchUser() {\n        let xhr = $.get('/api/users/self')\n            .then((user) =\u003e {\n                this.setState({user: user});\n            });\n\n        this.setState({xhr: xhr});\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912149,
        "id": "88d60663-c737-45a2-ba20-3e05929c70b5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912149,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The async method is saved as a state. In the "
            ],
            [
              "componentWillUnmount",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you perform all your cleanup - including canceling the XHR request."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The async method is saved as a state. In the "
          },
          {
            "Text": "componentWillUnmount",
            "AttrFlags": 2
          },
          {
            "Text": " you perform all your cleanup - including canceling the XHR request."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912150,
        "id": "e180b075-cb23-4132-8a23-75d7d4c51c77",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912150,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You could also do something more complex. In this example, I’m creating a ‘stateSetter’ function that accepts the this object as an argument and prevents "
            ],
            [
              "this.setState",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " when the function "
            ],
            [
              "cancel",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has been called:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You could also do something more complex. In this example, I’m creating a ‘stateSetter’ function that accepts the this object as an argument and prevents "
          },
          {
            "Text": "this.setState",
            "AttrFlags": 2
          },
          {
            "Text": " when the function "
          },
          {
            "Text": "cancel",
            "AttrFlags": 2
          },
          {
            "Text": " has been called:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912150,
        "id": "f06ad37f-0e46-4ee9-9b33-b3edd6182700",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912150,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function stateSetter(context) {\n    var cancelled = false;\n    return {\n        cancel: function () {\n            cancelled = true;\n        },\n        setState(newState) {\n            if (!cancelled) {\n                context.setState(newState);\n            }\n        }\n    }\n}\n\nclass Component extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setter = stateSetter(this);\n        this.state = {\n            user: 'loading'\n        };\n    }\n    componentWillUnmount() {\n        this.setter.cancel();\n    }\n    componentDidMount() {\n        this.fetchUser();\n    }\n    fetchUser() {\n        $.get('/api/users/self')\n            .then((user) =\u003e {\n                this.setter.setState({user: user});\n            });\n    }\n    render() {\n        return \u003ch1\u003e{this.state.user}\u003c/h1\u003e\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function stateSetter(context) {\n    var cancelled = false;\n    return {\n        cancel: function () {\n            cancelled = true;\n        },\n        setState(newState) {\n            if (!cancelled) {\n                context.setState(newState);\n            }\n        }\n    }\n}\n\nclass Component extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setter = stateSetter(this);\n        this.state = {\n            user: 'loading'\n        };\n    }\n    componentWillUnmount() {\n        this.setter.cancel();\n    }\n    componentDidMount() {\n        this.fetchUser();\n    }\n    fetchUser() {\n        $.get('/api/users/self')\n            .then((user) =\u003e {\n                this.setter.setState({user: user});\n            });\n    }\n    render() {\n        return \u003ch1\u003e{this.state.user}\u003c/h1\u003e\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099912150,
        "id": "d4f70e51-3a81-4d1e-a608-ab18527ef283",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099912150,
        "parent_id": "342aadf5-9830-401d-901c-d56cc381db91",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This works because the "
            ],
            [
              "cancelled",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable is visible in the "
            ],
            [
              "setState",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " closure we created."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This works because the "
          },
          {
            "Text": "cancelled",
            "AttrFlags": 2
          },
          {
            "Text": " variable is visible in the "
          },
          {
            "Text": "setState",
            "AttrFlags": 2
          },
          {
            "Text": " closure we created."
          }
        ]
      }
    ],
    "title": "setState pitfalls",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}