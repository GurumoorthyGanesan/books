{
  "ID": "c987f705-d11c-4239-8e5e-7f555f159f4c",
  "Root": {
    "alive": true,
    "content": [
      "b51cb353-ab82-45cc-b5eb-d1234bca8de1",
      "ed302cf9-d9bb-48f7-9c16-ee494eeb073a",
      "82066940-d52b-4842-9547-18044f0502a1",
      "d9c39c88-822a-432a-9024-e869ddeb1b29",
      "0198dad8-45d9-41c0-a6bc-98c76e385fca"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552099997925,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c987f705-d11c-4239-8e5e-7f555f159f4c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552099997925,
    "parent_id": "a8bc3cbf-7d9a-4b54-9632-4ea3f34b4215",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "HTTP GET request and looping through data"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099997918,
        "id": "b51cb353-ab82-45cc-b5eb-d1234bca8de1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099997918,
        "parent_id": "c987f705-d11c-4239-8e5e-7f555f159f4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example shows how a set of data obtained from a remote source can be rendered into a component."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following example shows how a set of data obtained from a remote source can be rendered into a component."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099997923,
        "id": "ed302cf9-d9bb-48f7-9c16-ee494eeb073a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099997923,
        "parent_id": "c987f705-d11c-4239-8e5e-7f555f159f4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We make an AJAX request using "
            ],
            [
              "fetch",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en/docs/Web/API/Fetch_API"
                ]
              ]
            ],
            [
              ", which is build into most browsers. Use a "
            ],
            [
              "fetch",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://github.com/github/fetch"
                ]
              ]
            ],
            [
              " polyfill",
              [
                [
                  "a",
                  "https://github.com/github/fetch"
                ]
              ]
            ],
            [
              " in production to support older browsers. You can also use any other library for making requests (e.g. "
            ],
            [
              "axios",
              [
                [
                  "a",
                  "https://github.com/mzabriskie/axios"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "SuperAgent",
              [
                [
                  "a",
                  "https://github.com/visionmedia/superagent"
                ]
              ]
            ],
            [
              ", or even plain Javascript)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We make an AJAX request using "
          },
          {
            "Text": "fetch",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en/docs/Web/API/Fetch_API"
          },
          {
            "Text": ", which is build into most browsers. Use a "
          },
          {
            "Text": "fetch",
            "AttrFlags": 2,
            "Link": "https://github.com/github/fetch"
          },
          {
            "Text": " polyfill",
            "Link": "https://github.com/github/fetch"
          },
          {
            "Text": " in production to support older browsers. You can also use any other library for making requests (e.g. "
          },
          {
            "Text": "axios",
            "Link": "https://github.com/mzabriskie/axios"
          },
          {
            "Text": ", "
          },
          {
            "Text": "SuperAgent",
            "Link": "https://github.com/visionmedia/superagent"
          },
          {
            "Text": ", or even plain Javascript)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099997924,
        "id": "82066940-d52b-4842-9547-18044f0502a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099997924,
        "parent_id": "c987f705-d11c-4239-8e5e-7f555f159f4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We set the data we receive as component state, so we can access it inside the render method. There, we loop through the data using "
            ],
            [
              "map",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/map"
                ]
              ]
            ],
            [
              ". Don’t forget to always add a unique "
            ],
            [
              "key",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://facebook.github.io/react/docs/lists-and-keys.html#keys"
                ]
              ]
            ],
            [
              " attribute",
              [
                [
                  "a",
                  "https://facebook.github.io/react/docs/lists-and-keys.html#keys"
                ]
              ]
            ],
            [
              " (or prop) to the looped element, which is important for React’s rendering performance."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We set the data we receive as component state, so we can access it inside the render method. There, we loop through the data using "
          },
          {
            "Text": "map",
            "AttrFlags": 2,
            "Link": "https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/map"
          },
          {
            "Text": ". Don’t forget to always add a unique "
          },
          {
            "Text": "key",
            "AttrFlags": 2,
            "Link": "https://facebook.github.io/react/docs/lists-and-keys.html#keys"
          },
          {
            "Text": " attribute",
            "Link": "https://facebook.github.io/react/docs/lists-and-keys.html#keys"
          },
          {
            "Text": " (or prop) to the looped element, which is important for React’s rendering performance."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099997924,
        "id": "d9c39c88-822a-432a-9024-e869ddeb1b29",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099997924,
        "parent_id": "c987f705-d11c-4239-8e5e-7f555f159f4c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "import React from 'react';\n\nclass Users extends React.Component {\n  constructor() {\n    super();\n    this.state = { users: [] };\n  }\n\n  componentDidMount() {\n    fetch('/api/users')\n      .then(response =\u003e response.json())\n      .then(json =\u003e this.setState({ users: json.data }));\n  }\n\n  render() {\n    return (\n      \u003cdiv\u003e\n        \u003ch1\u003eUsers\u003c/h1\u003e\n        {\n          this.state.users.length == 0\n            ? 'Loading users...'\n            : this.state.users.map(user =\u003e (\n              \u003cfigure key={user.id}\u003e\n                \u003cimg src={user.avatar} /\u003e\n                \u003cfigcaption\u003e\n                  {user.name}\n                \u003c/figcaption\u003e\n              \u003c/figure\u003e\n            ))\n        }\n      \u003c/div\u003e\n    );\n  }\n}\n\nReactDOM.render(\u003cUsers /\u003e, document.getElementById('root'));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "import React from 'react';\n\nclass Users extends React.Component {\n  constructor() {\n    super();\n    this.state = { users: [] };\n  }\n\n  componentDidMount() {\n    fetch('/api/users')\n      .then(response =\u003e response.json())\n      .then(json =\u003e this.setState({ users: json.data }));\n  }\n\n  render() {\n    return (\n      \u003cdiv\u003e\n        \u003ch1\u003eUsers\u003c/h1\u003e\n        {\n          this.state.users.length == 0\n            ? 'Loading users...'\n            : this.state.users.map(user =\u003e (\n              \u003cfigure key={user.id}\u003e\n                \u003cimg src={user.avatar} /\u003e\n                \u003cfigcaption\u003e\n                  {user.name}\n                \u003c/figcaption\u003e\n              \u003c/figure\u003e\n            ))\n        }\n      \u003c/div\u003e\n    );\n  }\n}\n\nReactDOM.render(\u003cUsers /\u003e, document.getElementById('root'));",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099997924,
        "id": "0198dad8-45d9-41c0-a6bc-98c76e385fca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099997924,
        "parent_id": "c987f705-d11c-4239-8e5e-7f555f159f4c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Working example on JSBin",
              [
                [
                  "a",
                  "http://jsbin.com/varigiw/edit?js,output"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Working example on JSBin",
            "Link": "http://jsbin.com/varigiw/edit?js,output"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "HTTP GET request and looping through data",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}