{
  "ID": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
  "Root": {
    "alive": true,
    "content": [
      "c90db111-95be-486f-968f-13b9fe78b16f",
      "4ae3fad5-147e-424a-a911-a6dcedd5193a",
      "8140e9cd-b4a2-410b-92e1-3a62b8030d7f",
      "e3230938-ae11-45b0-a426-aca7f4384edf",
      "24704d29-cb05-438b-a033-e758555368de",
      "fd0e7a57-2d36-44b3-96cd-2c4a7780f6d3",
      "f1aabf3c-6ae7-4414-9958-62ca8253cfdf",
      "edec1572-6adc-4182-85a5-0acebb9441f8",
      "17b78a5e-be11-4be4-a5fe-9d8f035babfb",
      "1a8d4a9c-5d42-415d-999e-54d981901fc8",
      "ba89ae5e-bdbd-4cff-b2a2-b77668d6ab34",
      "c3683d53-a04a-4671-996f-f55fd4bf44d7",
      "f93d8a70-700b-4cc5-92fb-fed38e18ce43",
      "15a8f942-708f-4e42-992e-b52d46181c55",
      "816f7bbb-908d-466c-ae1a-29413948c6bf",
      "d8e0906a-9e22-4cda-a3fd-547e1c56db7f",
      "2bd100ae-03da-451b-a5b2-4149ccde205a",
      "173d7872-41ac-4386-9037-8139837935c2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552099922840,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552099922840,
    "parent_id": "6cafc1d7-8633-42d6-b702-833db7d26eed",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "setState"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922834,
        "id": "c90db111-95be-486f-968f-13b9fe78b16f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922834,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The primary way that you make UI updates to your React applications is through a call to the "
            ],
            [
              "setState()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function. This function will perform a "
            ],
            [
              "shallow merge",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "https://github.com/kolodny/immutability-helper#shallow-merge"
                ]
              ]
            ],
            [
              " between the new state that you provide and the previous state, and will trigger a re-render of your component and all decedents."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The primary way that you make UI updates to your React applications is through a call to the "
          },
          {
            "Text": "setState()",
            "AttrFlags": 2
          },
          {
            "Text": " function. This function will perform a "
          },
          {
            "Text": "shallow merge",
            "AttrFlags": 4,
            "Link": "https://github.com/kolodny/immutability-helper#shallow-merge"
          },
          {
            "Text": " between the new state that you provide and the previous state, and will trigger a re-render of your component and all decedents."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922836,
        "id": "4ae3fad5-147e-424a-a911-a6dcedd5193a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922836,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922837,
        "id": "8140e9cd-b4a2-410b-92e1-3a62b8030d7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922837,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "updater",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": It can be an object with a number of key-value pairs that should be merged into the state or a function that returns such an object."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "updater",
            "AttrFlags": 2
          },
          {
            "Text": ": It can be an object with a number of key-value pairs that should be merged into the state or a function that returns such an object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922838,
        "id": "e3230938-ae11-45b0-a426-aca7f4384edf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922838,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "callback (optional)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ": a function which will be executed after "
            ],
            [
              "setState()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has been executed successfully. Due to the fact that calls to "
            ],
            [
              "setState()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are not guaranteed by React to be atomic, this can sometimes be useful if you want to perform some action after you are positive that "
            ],
            [
              "setState()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has been executed successfully."
            ]
          ]
        },
        "type": "numbered_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "callback (optional)",
            "AttrFlags": 2
          },
          {
            "Text": ": a function which will be executed after "
          },
          {
            "Text": "setState()",
            "AttrFlags": 2
          },
          {
            "Text": " has been executed successfully. Due to the fact that calls to "
          },
          {
            "Text": "setState()",
            "AttrFlags": 2
          },
          {
            "Text": " are not guaranteed by React to be atomic, this can sometimes be useful if you want to perform some action after you are positive that "
          },
          {
            "Text": "setState()",
            "AttrFlags": 2
          },
          {
            "Text": " has been executed successfully."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922838,
        "id": "24704d29-cb05-438b-a033-e758555368de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922838,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usage:",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Usage:",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922838,
        "id": "fd0e7a57-2d36-44b3-96cd-2c4a7780f6d3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922838,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "setState",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method accepts an "
            ],
            [
              "updater",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " argument that can either be an object with a number of key-value-pairs that should be merged into the state, or a function that returns such an object computed from "
            ],
            [
              "prevState",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "props",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "setState",
            "AttrFlags": 2
          },
          {
            "Text": " method accepts an "
          },
          {
            "Text": "updater",
            "AttrFlags": 2
          },
          {
            "Text": " argument that can either be an object with a number of key-value-pairs that should be merged into the state, or a function that returns such an object computed from "
          },
          {
            "Text": "prevState",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "props",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922838,
        "id": "f1aabf3c-6ae7-4414-9958-62ca8253cfdf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922838,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "setState()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with an Object as "
            ],
            [
              "updater",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "setState()",
            "AttrFlags": 2
          },
          {
            "Text": " with an Object as "
          },
          {
            "Text": "updater",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922839,
        "id": "edec1572-6adc-4182-85a5-0acebb9441f8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922839,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//\n// An example ES6 style component, updating the state on a simple button click.\n// Also demonstrates where the state can be set directly and where setState should be used.\n//\nclass Greeting extends React.Component {\n    constructor(props) {\n        super(props);\n        this.click = this.click.bind(this);\n        // Set initial state (ONLY ALLOWED IN CONSTRUCTOR)\n        this.state = {\n            greeting: 'Hello!'\n        };\n    }\n    click(e) {\n        this.setState({\n              greeting: 'Hello World!'\n        });\n    }\n    render() {\n        return(\n            \u003cdiv\u003e\n                \u003cp\u003e{this.state.greeting}\u003c/p\u003e\n                \u003cbutton onClick={this.click}\u003eClick me\u003c/button\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//\n// An example ES6 style component, updating the state on a simple button click.\n// Also demonstrates where the state can be set directly and where setState should be used.\n//\nclass Greeting extends React.Component {\n    constructor(props) {\n        super(props);\n        this.click = this.click.bind(this);\n        // Set initial state (ONLY ALLOWED IN CONSTRUCTOR)\n        this.state = {\n            greeting: 'Hello!'\n        };\n    }\n    click(e) {\n        this.setState({\n              greeting: 'Hello World!'\n        });\n    }\n    render() {\n        return(\n            \u003cdiv\u003e\n                \u003cp\u003e{this.state.greeting}\u003c/p\u003e\n                \u003cbutton onClick={this.click}\u003eClick me\u003c/button\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922839,
        "id": "17b78a5e-be11-4be4-a5fe-9d8f035babfb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922839,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Using "
            ],
            [
              "setState()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with a Function as "
            ],
            [
              "updater",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Using "
          },
          {
            "Text": "setState()",
            "AttrFlags": 2
          },
          {
            "Text": " with a Function as "
          },
          {
            "Text": "updater",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922839,
        "id": "1a8d4a9c-5d42-415d-999e-54d981901fc8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922839,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//\n// This is most often used when you want to check or make use \n// of previous state before updating any values.\n//\n\nthis.setState(function(previousState, currentProps) {\n  return {\n    counter: previousState.counter + 1\n  };\n});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//\n// This is most often used when you want to check or make use \n// of previous state before updating any values.\n//\n\nthis.setState(function(previousState, currentProps) {\n  return {\n    counter: previousState.counter + 1\n  };\n});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922839,
        "id": "ba89ae5e-bdbd-4cff-b2a2-b77668d6ab34",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922839,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This can be safer than using an object argument where multiple calls to "
            ],
            [
              "setState()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are used, as multiple calls may be batched together by React and executed at once, and is the preferred approach when using current props to set state."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This can be safer than using an object argument where multiple calls to "
          },
          {
            "Text": "setState()",
            "AttrFlags": 2
          },
          {
            "Text": " are used, as multiple calls may be batched together by React and executed at once, and is the preferred approach when using current props to set state."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922839,
        "id": "c3683d53-a04a-4671-996f-f55fd4bf44d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922839,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "this.setState({ counter: this.state.counter + 1 });\nthis.setState({ counter: this.state.counter + 1 });\nthis.setState({ counter: this.state.counter + 1 });"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "this.setState({ counter: this.state.counter + 1 });\nthis.setState({ counter: this.state.counter + 1 });\nthis.setState({ counter: this.state.counter + 1 });",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922839,
        "id": "f93d8a70-700b-4cc5-92fb-fed38e18ce43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922839,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "These calls may be batched together by React using "
            ],
            [
              "Object.assign()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", resulting in the counter being incremented by 1 rather than 3."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "These calls may be batched together by React using "
          },
          {
            "Text": "Object.assign()",
            "AttrFlags": 2
          },
          {
            "Text": ", resulting in the counter being incremented by 1 rather than 3."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922840,
        "id": "15a8f942-708f-4e42-992e-b52d46181c55",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922840,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The functional approach can also be used to move state setting logic outside of components. This allows for isolation and re-use of state logic."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The functional approach can also be used to move state setting logic outside of components. This allows for isolation and re-use of state logic."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922840,
        "id": "816f7bbb-908d-466c-ae1a-29413948c6bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922840,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Outside of component class, potentially in another file/module"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Outside of component class, potentially in another file/module",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922840,
        "id": "d8e0906a-9e22-4cda-a3fd-547e1c56db7f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922840,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function incrementCounter(previousState, currentProps) {\n    return {\n        counter: previousState.counter + 1\n    };\n}\n\n// Within component\n\nthis.setState(incrementCounter);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function incrementCounter(previousState, currentProps) {\n    return {\n        counter: previousState.counter + 1\n    };\n}\n\n// Within component\n\nthis.setState(incrementCounter);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922840,
        "id": "2bd100ae-03da-451b-a5b2-4149ccde205a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922840,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Calling "
            ],
            [
              "setState()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with an Object and a callback function"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Calling "
          },
          {
            "Text": "setState()",
            "AttrFlags": 2
          },
          {
            "Text": " with an Object and a callback function"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099922840,
        "id": "173d7872-41ac-4386-9037-8139837935c2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099922840,
        "parent_id": "1c952bba-c167-40a3-8f6d-6e123f40bcef",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//\n// 'Hi There' will be logged to the console after setState completes\n//\n\nthis.setState({ name: 'John Doe' }, console.log('Hi there'));"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//\n// 'Hi There' will be logged to the console after setState completes\n//\n\nthis.setState({ name: 'John Doe' }, console.log('Hi there'));",
        "code_language": "Plain Text"
      }
    ],
    "title": "setState",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}