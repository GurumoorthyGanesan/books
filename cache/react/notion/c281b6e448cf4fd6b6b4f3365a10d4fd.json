{
  "ID": "c281b6e4-48cf-4fd6-b6b4-f3365a10d4fd",
  "Root": {
    "alive": true,
    "content": [
      "10f686ed-7b70-4862-961f-3fba3b92f3e5",
      "e5fd6d1c-0428-437d-8743-2d2c73a8b122",
      "8542ce9a-be81-499b-a12f-5bce8f58ed90",
      "980e6c3c-2907-4e14-8fd5-3d54eec6c6cc"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552099943092,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c281b6e4-48cf-4fd6-b6b4-f3365a10d4fd",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552099943092,
    "parent_id": "3731d999-c1bc-4c1b-a0aa-d1d9fc9593cd",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Controlled Components"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099943091,
        "id": "10f686ed-7b70-4862-961f-3fba3b92f3e5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099943091,
        "parent_id": "c281b6e4-48cf-4fd6-b6b4-f3365a10d4fd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Controlled form components are defined with a "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property. The value of controlled inputs is managed by React, user inputs will not have any direct influence on the rendered input. Instead, a change to the "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property needs to reflect this change."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Controlled form components are defined with a "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": " property. The value of controlled inputs is managed by React, user inputs will not have any direct influence on the rendered input. Instead, a change to the "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": " property needs to reflect this change."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099943092,
        "id": "e5fd6d1c-0428-437d-8743-2d2c73a8b122",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099943092,
        "parent_id": "c281b6e4-48cf-4fd6-b6b4-f3365a10d4fd",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.onChange = this.onChange.bind(this);\n    \n    this.state = {\n      name: ''\n    };\n  }\n  \n  onChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n  \n  render() {\n    return (\n      \u003cdiv\u003e\n        \u003clabel for='name-input'\u003eName: \u003c/label\u003e\n        \u003cinput\n          id='name-input'\n          onChange={this.onChange}\n          value={this.state.name} /\u003e\n      \u003c/div\u003e\n    )\n  }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.onChange = this.onChange.bind(this);\n    \n    this.state = {\n      name: ''\n    };\n  }\n  \n  onChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n  \n  render() {\n    return (\n      \u003cdiv\u003e\n        \u003clabel for='name-input'\u003eName: \u003c/label\u003e\n        \u003cinput\n          id='name-input'\n          onChange={this.onChange}\n          value={this.state.name} /\u003e\n      \u003c/div\u003e\n    )\n  }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099943092,
        "id": "8542ce9a-be81-499b-a12f-5bce8f58ed90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099943092,
        "parent_id": "c281b6e4-48cf-4fd6-b6b4-f3365a10d4fd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above example demonstrates how the "
            ],
            [
              "value",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property defines the current value of the input and the "
            ],
            [
              "onChange",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " event handler updates the component’s state with the user’s input."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The above example demonstrates how the "
          },
          {
            "Text": "value",
            "AttrFlags": 2
          },
          {
            "Text": " property defines the current value of the input and the "
          },
          {
            "Text": "onChange",
            "AttrFlags": 2
          },
          {
            "Text": " event handler updates the component’s state with the user’s input."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099943092,
        "id": "980e6c3c-2907-4e14-8fd5-3d54eec6c6cc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099943092,
        "parent_id": "c281b6e4-48cf-4fd6-b6b4-f3365a10d4fd",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Form inputs should be defined as controlled components where possible. This ensures that the component state and the input value is in sync at all times, even if the value is changed by a trigger other than a user input."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Form inputs should be defined as controlled components where possible. This ensures that the component state and the input value is in sync at all times, even if the value is changed by a trigger other than a user input."
          }
        ]
      }
    ],
    "title": "Controlled Components",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}