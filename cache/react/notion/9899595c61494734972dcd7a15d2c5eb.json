{
  "ID": "9899595c-6149-4734-972d-cd7a15d2c5eb",
  "Root": {
    "alive": true,
    "content": [
      "07ea5d6d-22db-45db-8d79-b898663ad4f5",
      "525d65da-d9e2-41f5-9792-7ddfb0a99d25",
      "2fc6b40a-9ea2-4372-b33c-dff9730175c4",
      "b49ea048-3df2-46f4-8625-6d1699bf1563",
      "0ad17c02-d810-48b7-895b-65179208b278",
      "6b622663-9b84-4c36-9cf9-a44775e40d4a",
      "4855aeb0-0604-4929-9dd3-5f680cfbcaec",
      "01fb1dab-0719-4315-816b-ad3dbb469175",
      "e56fa703-6d3b-49e7-b5cf-b92c7aea9971"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552099972799,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552099972799,
    "parent_id": "fe58dcb8-c978-4ad9-bc8b-66067b6739ab",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Communication between Stateless Functional Components"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972792,
        "id": "07ea5d6d-22db-45db-8d79-b898663ad4f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972792,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example we will make use of "
            ],
            [
              "Redux",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "React Redux",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " modules to handle our application state and for auto re-render of our functional components., And ofcourse "
            ],
            [
              "React",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "React Dom",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example we will make use of "
          },
          {
            "Text": "Redux",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "React Redux",
            "AttrFlags": 2
          },
          {
            "Text": " modules to handle our application state and for auto re-render of our functional components., And ofcourse "
          },
          {
            "Text": "React",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "React Dom",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972796,
        "id": "525d65da-d9e2-41f5-9792-7ddfb0a99d25",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972796,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can checkout the "
            ],
            [
              "completed demo",
              [
                [
                  "a",
                  "https://jsbin.com/depavejudi/1/edit?js,output"
                ]
              ]
            ],
            [
              " here"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can checkout the "
          },
          {
            "Text": "completed demo",
            "Link": "https://jsbin.com/depavejudi/1/edit?js,output"
          },
          {
            "Text": " here"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972796,
        "id": "2fc6b40a-9ea2-4372-b33c-dff9730175c4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972796,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In the example below we have three different components and one connected component"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In the example below we have three different components and one connected component"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972797,
        "id": "b49ea048-3df2-46f4-8625-6d1699bf1563",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972797,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "UserInputForm",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": This component display an input field And when the field value changes, it calls "
            ],
            [
              "inputChange",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method on "
            ],
            [
              "props",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " (which is provided by the parent component) and if the data is provided as well, it displays that in the input field."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "UserInputForm",
            "AttrFlags": 1
          },
          {
            "Text": ": This component display an input field And when the field value changes, it calls "
          },
          {
            "Text": "inputChange",
            "AttrFlags": 2
          },
          {
            "Text": " method on "
          },
          {
            "Text": "props",
            "AttrFlags": 2
          },
          {
            "Text": " (which is provided by the parent component) and if the data is provided as well, it displays that in the input field."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972797,
        "id": "0ad17c02-d810-48b7-895b-65179208b278",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972797,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "UserDashboard",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": This component displays a simple message and also nests "
            ],
            [
              "UserInputForm",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " component, It also passes "
            ],
            [
              "inputChange",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method to "
            ],
            [
              "UserInputForm",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " component, "
            ],
            [
              "UserInputForm",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " component inturn makes use of this method to communicate with the parent component."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "UserDashboard",
            "AttrFlags": 1
          },
          {
            "Text": ": This component displays a simple message and also nests "
          },
          {
            "Text": "UserInputForm",
            "AttrFlags": 2
          },
          {
            "Text": " component, It also passes "
          },
          {
            "Text": "inputChange",
            "AttrFlags": 2
          },
          {
            "Text": " method to "
          },
          {
            "Text": "UserInputForm",
            "AttrFlags": 2
          },
          {
            "Text": " component, "
          },
          {
            "Text": "UserInputForm",
            "AttrFlags": 2
          },
          {
            "Text": " component inturn makes use of this method to communicate with the parent component."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972798,
        "id": "6b622663-9b84-4c36-9cf9-a44775e40d4a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972798,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "UserDashboardConnected",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": This component just wraps the "
            ],
            [
              "UserDashboard",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " component using "
            ],
            [
              "ReactRedux connect",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method., This makes it easier for us to manage the component state and update the component when the state changes."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "UserDashboardConnected",
            "AttrFlags": 1
          },
          {
            "Text": ": This component just wraps the "
          },
          {
            "Text": "UserDashboard",
            "AttrFlags": 2
          },
          {
            "Text": " component using "
          },
          {
            "Text": "ReactRedux connect",
            "AttrFlags": 2
          },
          {
            "Text": " method., This makes it easier for us to manage the component state and update the component when the state changes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972798,
        "id": "4855aeb0-0604-4929-9dd3-5f680cfbcaec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972798,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "App",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ": This component just renders the "
            ],
            [
              "UserDashboardConnected",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " component."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "App",
            "AttrFlags": 1
          },
          {
            "Text": ": This component just renders the "
          },
          {
            "Text": "UserDashboardConnected",
            "AttrFlags": 2
          },
          {
            "Text": " component."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972798,
        "id": "01fb1dab-0719-4315-816b-ad3dbb469175",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972798,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "const UserInputForm = (props) =\u003e {\n  \n  let handleSubmit = (e) =\u003e {\n    e.preventDefault();\n  }\n\n  return(\n    \u003cform action=\"\" onSubmit={handleSubmit}\u003e\n      \u003clabel htmlFor=\"name\"\u003ePlease enter your name\u003c/label\u003e\n      \u003cbr /\u003e\n      \u003cinput type=\"text\" id=\"name\" defaultValue={props.data.name || ''} onChange={ props.inputChange } /\u003e\n    \u003c/form\u003e\n  )\n\n}\n\n\nconst UserDashboard = (props) =\u003e {\n   \n  let inputChangeHandler = (event) =\u003e {\n    props.updateName(event.target.value);\n  }\n\n  return(\n    \u003cdiv\u003e\n      \u003ch1\u003eHi { props.user.name || 'User' }\u003c/h1\u003e\n      \u003cUserInputForm data={props.user} inputChange={inputChangeHandler} /\u003e\n    \u003c/div\u003e\n  )\n\n}\n\nconst mapStateToProps = (state) =\u003e {\n  return {\n    user: state\n  };\n}\nconst mapDispatchToProps = (dispatch) =\u003e {\n  return {\n    updateName: (data) =\u003e dispatch( Action.updateName(data) ),\n  };\n};\n\nconst { connect, Provider } = ReactRedux;\nconst UserDashboardConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserDashboard);\n\n\n\nconst App = (props) =\u003e {\n  return(\n    \u003cdiv\u003e\n      \u003ch1\u003eCommunication between Stateless Functional Components\u003c/h1\u003e\n      \u003cUserDashboardConnected /\u003e\n    \u003c/div\u003e\n  )\n}\n\n\n\nconst user = (state={name: 'John'}, action) =\u003e {\n  switch (action.type) {\n    case 'UPDATE_NAME':\n      return Object.assign( {}, state, {name: action.payload}  );\n\n    default:\n      return state;\n  }\n};\n\nconst { createStore } = Redux;\nconst store = createStore(user);\nconst Action = {\n  updateName: (data) =\u003e {\n    return { type : 'UPDATE_NAME', payload: data }\n  },\n}\n\n\nReactDOM.render(\n  \u003cProvider store={ store }\u003e\n    \u003cApp /\u003e\n  \u003c/Provider\u003e,\n  document.getElementById('application')\n);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "const UserInputForm = (props) =\u003e {\n  \n  let handleSubmit = (e) =\u003e {\n    e.preventDefault();\n  }\n\n  return(\n    \u003cform action=\"\" onSubmit={handleSubmit}\u003e\n      \u003clabel htmlFor=\"name\"\u003ePlease enter your name\u003c/label\u003e\n      \u003cbr /\u003e\n      \u003cinput type=\"text\" id=\"name\" defaultValue={props.data.name || ''} onChange={ props.inputChange } /\u003e\n    \u003c/form\u003e\n  )\n\n}\n\n\nconst UserDashboard = (props) =\u003e {\n   \n  let inputChangeHandler = (event) =\u003e {\n    props.updateName(event.target.value);\n  }\n\n  return(\n    \u003cdiv\u003e\n      \u003ch1\u003eHi { props.user.name || 'User' }\u003c/h1\u003e\n      \u003cUserInputForm data={props.user} inputChange={inputChangeHandler} /\u003e\n    \u003c/div\u003e\n  )\n\n}\n\nconst mapStateToProps = (state) =\u003e {\n  return {\n    user: state\n  };\n}\nconst mapDispatchToProps = (dispatch) =\u003e {\n  return {\n    updateName: (data) =\u003e dispatch( Action.updateName(data) ),\n  };\n};\n\nconst { connect, Provider } = ReactRedux;\nconst UserDashboardConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserDashboard);\n\n\n\nconst App = (props) =\u003e {\n  return(\n    \u003cdiv\u003e\n      \u003ch1\u003eCommunication between Stateless Functional Components\u003c/h1\u003e\n      \u003cUserDashboardConnected /\u003e\n    \u003c/div\u003e\n  )\n}\n\n\n\nconst user = (state={name: 'John'}, action) =\u003e {\n  switch (action.type) {\n    case 'UPDATE_NAME':\n      return Object.assign( {}, state, {name: action.payload}  );\n\n    default:\n      return state;\n  }\n};\n\nconst { createStore } = Redux;\nconst store = createStore(user);\nconst Action = {\n  updateName: (data) =\u003e {\n    return { type : 'UPDATE_NAME', payload: data }\n  },\n}\n\n\nReactDOM.render(\n  \u003cProvider store={ store }\u003e\n    \u003cApp /\u003e\n  \u003c/Provider\u003e,\n  document.getElementById('application')\n);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099972799,
        "id": "e56fa703-6d3b-49e7-b5cf-b92c7aea9971",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099972799,
        "parent_id": "9899595c-6149-4734-972d-cd7a15d2c5eb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JS Bin URL",
              [
                [
                  "a",
                  "https://jsbin.com/depavejudi/1/edit?js,output"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "JS Bin URL",
            "Link": "https://jsbin.com/depavejudi/1/edit?js,output"
          }
        ]
      }
    ],
    "title": "Communication between Stateless Functional Components",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}