{
  "ID": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
  "Root": {
    "alive": true,
    "content": [
      "e1e01e72-c866-415c-992e-927b4919a0ac",
      "6b66bd64-1220-49fc-98cc-fbf894912856",
      "9d8801ca-7a9b-4185-ae36-7c21b72c9073",
      "5e344beb-e190-4042-bf9e-3a2c3094d94c",
      "e5ea145d-1812-47d3-84a5-b159ea11ec4a",
      "8bc7c4fb-d900-4780-87d4-039d6aaa7837",
      "ab4da456-b167-4dde-a615-d3ea09de697f",
      "81ab3ef1-01a5-4f7b-b19d-1c7530c188dc",
      "1f09ef9e-f5d3-4f83-a4de-4a3c508bbed5",
      "d5f47da1-22aa-42e3-bb22-aef0030bcf7c",
      "6315c228-1f31-4ef8-ac81-62841e379e11"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551947000890,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551947000890,
    "parent_id": "55ea0a0e-7756-475f-9073-4b7614f212f0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Pre-push"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000886,
        "id": "e1e01e72-c866-415c-992e-927b4919a0ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000886,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Available in ",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              "Git 1.8.2",
              [
                [
                  "i"
                ],
                [
                  "a",
                  "https://github.com/git/git/blob/master/Documentation/RelNotes/1.8.2.txt"
                ]
              ]
            ],
            [
              " and above.",
              [
                [
                  "i"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Available in ",
            "AttrFlags": 4
          },
          {
            "Text": "Git 1.8.2",
            "AttrFlags": 4,
            "Link": "https://github.com/git/git/blob/master/Documentation/RelNotes/1.8.2.txt"
          },
          {
            "Text": " and above.",
            "AttrFlags": 4
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000887,
        "id": "6b66bd64-1220-49fc-98cc-fbf894912856",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000887,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pre-push hooks can be used to prevent a push from going though. Reasons this is helpful include: blocking accidental manual pushes to specific branches, or blocking pushes if an established check fails (unit tests, syntax)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Pre-push hooks can be used to prevent a push from going though. Reasons this is helpful include: blocking accidental manual pushes to specific branches, or blocking pushes if an established check fails (unit tests, syntax)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000888,
        "id": "9d8801ca-7a9b-4185-ae36-7c21b72c9073",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000888,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A pre-push hook is created by simply creating a file named "
            ],
            [
              "pre-push",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " under "
            ],
            [
              ".git/hooks/",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and ("
            ],
            [
              "gotcha alert",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "), making sure the file is executable: "
            ],
            [
              "chmod +x ./git/hooks/pre-push",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A pre-push hook is created by simply creating a file named "
          },
          {
            "Text": "pre-push",
            "AttrFlags": 2
          },
          {
            "Text": " under "
          },
          {
            "Text": ".git/hooks/",
            "AttrFlags": 2
          },
          {
            "Text": ", and ("
          },
          {
            "Text": "gotcha alert",
            "AttrFlags": 1
          },
          {
            "Text": "), making sure the file is executable: "
          },
          {
            "Text": "chmod +x ./git/hooks/pre-push",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000888,
        "id": "5e344beb-e190-4042-bf9e-3a2c3094d94c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000888,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s an example from "
            ],
            [
              "Hannah Wolfe",
              [
                [
                  "a",
                  "https://dev.ghost.org/prevent-master-push/"
                ]
              ]
            ],
            [
              " that blocks a push to master:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s an example from "
          },
          {
            "Text": "Hannah Wolfe",
            "Link": "https://dev.ghost.org/prevent-master-push/"
          },
          {
            "Text": " that blocks a push to master:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000888,
        "id": "e5ea145d-1812-47d3-84a5-b159ea11ec4a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000888,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#!/bin/bash\n\nprotected_branch='master'  \ncurrent_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\\(.*\\),\\1,')\n\nif [ $protected_branch = $current_branch ]  \nthen  \n    read -p \"You're about to push master, is that what you intended? [y|n] \" -n 1 -r \u003c /dev/tty\n    echo\n    if echo $REPLY | grep -E '^[Yy]$' \u003e /dev/null\n    then\n        exit 0 # push will execute\n    fi\n    exit 1 # push will not execute\nelse  \n    exit 0 # push will execute\nfi"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#!/bin/bash\n\nprotected_branch='master'  \ncurrent_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\\(.*\\),\\1,')\n\nif [ $protected_branch = $current_branch ]  \nthen  \n    read -p \"You're about to push master, is that what you intended? [y|n] \" -n 1 -r \u003c /dev/tty\n    echo\n    if echo $REPLY | grep -E '^[Yy]$' \u003e /dev/null\n    then\n        exit 0 # push will execute\n    fi\n    exit 1 # push will not execute\nelse  \n    exit 0 # push will execute\nfi",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000889,
        "id": "8bc7c4fb-d900-4780-87d4-039d6aaa7837",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000889,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s an example from "
            ],
            [
              "Volkan Unsal",
              [
                [
                  "a",
                  "https://coderwall.com/p/k1hbyw/how-to-run-rspec-tests-before-pushing-with-a-git-pre-push-hook"
                ]
              ]
            ],
            [
              " which makes sure RSpec tests pass before allowing the push:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s an example from "
          },
          {
            "Text": "Volkan Unsal",
            "Link": "https://coderwall.com/p/k1hbyw/how-to-run-rspec-tests-before-pushing-with-a-git-pre-push-hook"
          },
          {
            "Text": " which makes sure RSpec tests pass before allowing the push:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000889,
        "id": "ab4da456-b167-4dde-a615-d3ea09de697f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000889,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "#!/usr/bin/env ruby\nrequire 'pty'\nhtml_path = \"rspec_results.html\"\nbegin\n  PTY.spawn( \"rspec spec --format h \u003e rspec_results.html\" ) do |stdin, stdout, pid|\n  begin\n    stdin.each { |line| print line }\n  rescue Errno::EIO\n  end\nend\nrescue PTY::ChildExited\n  puts \"Child process exit!\"\nend\n\n# find out if there were any errors  \nhtml = open(html_path).read\nexamples = html.match(/(\\d+) examples/)[0].to_i rescue 0\nerrors = html.match(/(\\d+) errors/)[0].to_i rescue 0\nif errors == 0 then\n  errors = html.match(/(\\d+) failure/)[0].to_i rescue 0\nend\npending = html.match(/(\\d+) pending/)[0].to_i rescue 0\n\nif errors.zero?\n  puts \"0 failed! #{examples} run, #{pending} pending\"\n  # HTML Output when tests ran successfully:\n  # puts \"View spec results at #{File.expand_path(html_path)}\"\n  sleep 1\n  exit 0\nelse\n  puts \"\\aCOMMIT FAILED!!\"\n  puts \"View your rspec results at #{File.expand_path(html_path)}\"\n  puts\n  puts \"#{errors} failed! #{examples} run, #{pending} pending\"\n  # Open HTML Ooutput when tests failed\n  # `open #{html_path}`\n  exit 1\nend"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "#!/usr/bin/env ruby\nrequire 'pty'\nhtml_path = \"rspec_results.html\"\nbegin\n  PTY.spawn( \"rspec spec --format h \u003e rspec_results.html\" ) do |stdin, stdout, pid|\n  begin\n    stdin.each { |line| print line }\n  rescue Errno::EIO\n  end\nend\nrescue PTY::ChildExited\n  puts \"Child process exit!\"\nend\n\n# find out if there were any errors  \nhtml = open(html_path).read\nexamples = html.match(/(\\d+) examples/)[0].to_i rescue 0\nerrors = html.match(/(\\d+) errors/)[0].to_i rescue 0\nif errors == 0 then\n  errors = html.match(/(\\d+) failure/)[0].to_i rescue 0\nend\npending = html.match(/(\\d+) pending/)[0].to_i rescue 0\n\nif errors.zero?\n  puts \"0 failed! #{examples} run, #{pending} pending\"\n  # HTML Output when tests ran successfully:\n  # puts \"View spec results at #{File.expand_path(html_path)}\"\n  sleep 1\n  exit 0\nelse\n  puts \"\\aCOMMIT FAILED!!\"\n  puts \"View your rspec results at #{File.expand_path(html_path)}\"\n  puts\n  puts \"#{errors} failed! #{examples} run, #{pending} pending\"\n  # Open HTML Ooutput when tests failed\n  # `open #{html_path}`\n  exit 1\nend",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000889,
        "id": "81ab3ef1-01a5-4f7b-b19d-1c7530c188dc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000889,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As you can see, there are lots of possibilities, but the core piece is to "
            ],
            [
              "exit 0",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if good things happened, and "
            ],
            [
              "exit 1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if bad things happened. Anytime you "
            ],
            [
              "exit 1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the push will be prevented and your code will be in the state it was before running "
            ],
            [
              "git push...",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As you can see, there are lots of possibilities, but the core piece is to "
          },
          {
            "Text": "exit 0",
            "AttrFlags": 2
          },
          {
            "Text": " if good things happened, and "
          },
          {
            "Text": "exit 1",
            "AttrFlags": 2
          },
          {
            "Text": " if bad things happened. Anytime you "
          },
          {
            "Text": "exit 1",
            "AttrFlags": 2
          },
          {
            "Text": " the push will be prevented and your code will be in the state it was before running "
          },
          {
            "Text": "git push...",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000889,
        "id": "1f09ef9e-f5d3-4f83-a4de-4a3c508bbed5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000889,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When using client side hooks, keep in mind that users can skip all client side hooks by using the option “–no-verify” on a push. If you’re relying on the hook to enforce process, you can get burned."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When using client side hooks, keep in mind that users can skip all client side hooks by using the option “–no-verify” on a push. If you’re relying on the hook to enforce process, you can get burned."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000890,
        "id": "d5f47da1-22aa-42e3-bb22-aef0030bcf7c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000890,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Documentation: https://git-scm.com/docs/githooks#_pre_push"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Documentation: https://git-scm.com/docs/githooks#_pre_push"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551947000890,
        "id": "6315c228-1f31-4ef8-ac81-62841e379e11",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551947000890,
        "parent_id": "ef9937c0-d1b0-417d-9b0b-bbdc9e44f819",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Official Sample: https://github.com/git/git/blob/87c86dd14abe8db7d00b0df5661ef8cf147a72a3/templates/hooks–pre-push.sample"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Official Sample: https://github.com/git/git/blob/87c86dd14abe8db7d00b0df5661ef8cf147a72a3/templates/hooks–pre-push.sample"
          }
        ]
      }
    ],
    "title": "Pre-push",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}