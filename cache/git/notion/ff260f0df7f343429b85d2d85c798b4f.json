{
  "ID": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
  "Root": {
    "alive": true,
    "content": [
      "3775bfe0-5fba-4a0e-9ba8-8e09384e1cd0",
      "90345b57-c967-48d3-9001-30736af15696",
      "55c7ddc6-4cf3-4554-9338-8b34c82c2247",
      "cbe03581-1fc1-4ba0-8556-c84affc61d23",
      "27db8315-a91b-49d0-9b75-983284d9136b",
      "fdb45c05-bbfb-430d-aa8f-c73fe2e5ddb7",
      "e1ae9134-ea99-4513-b36f-40f12242eeaa"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551946513457,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551946513457,
    "parent_id": "e3c469c1-1d8e-447a-97fa-8f4b2670ad27",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Staging"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551946513456,
        "id": "3775bfe0-5fba-4a0e-9ba8-8e09384e1cd0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551946513456,
        "parent_id": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551946513456,
        "id": "90345b57-c967-48d3-9001-30736af15696",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551946513456,
        "parent_id": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s worth noting that staging has little to do with ‘files’ themselves and everything to do with the changes within each given file. We stage files that contain changes, and git tracks the changes as commits (even when the changes in a commit are made across several files)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s worth noting that staging has little to do with ‘files’ themselves and everything to do with the changes within each given file. We stage files that contain changes, and git tracks the changes as commits (even when the changes in a commit are made across several files)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551946513456,
        "id": "55c7ddc6-4cf3-4554-9338-8b34c82c2247",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551946513456,
        "parent_id": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The distinction between files and commits may seem minor, but understanding this difference is fundamental to understanding essential functions like cherry-pick and diff. (See the frustration in "
            ],
            [
              "comments regarding the complexity of an accepted answer that proposes cherry-pick as a file management tool",
              [
                [
                  "a",
                  "http://stackoverflow.com/questions/449541/how-do-you-merge-selective-files-with-git-merge"
                ]
              ]
            ],
            [
              ".)"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The distinction between files and commits may seem minor, but understanding this difference is fundamental to understanding essential functions like cherry-pick and diff. (See the frustration in "
          },
          {
            "Text": "comments regarding the complexity of an accepted answer that proposes cherry-pick as a file management tool",
            "Link": "http://stackoverflow.com/questions/449541/how-do-you-merge-selective-files-with-git-merge"
          },
          {
            "Text": ".)"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551946513457,
        "id": "cbe03581-1fc1-4ba0-8556-c84affc61d23",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551946513457,
        "parent_id": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What’s a good place for explaining concepts? Is it in remarks?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "What’s a good place for explaining concepts? Is it in remarks?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551946513457,
        "id": "27db8315-a91b-49d0-9b75-983284d9136b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551946513457,
        "parent_id": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Key concepts:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Key concepts:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551946513457,
        "id": "fdb45c05-bbfb-430d-aa8f-c73fe2e5ddb7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551946513457,
        "parent_id": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A files is the more common metaphor of the two in information technology. Best practice dictates that a filename not change as its contents change (with a few recognized exceptions)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A files is the more common metaphor of the two in information technology. Best practice dictates that a filename not change as its contents change (with a few recognized exceptions)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551946513457,
        "id": "e1ae9134-ea99-4513-b36f-40f12242eeaa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551946513457,
        "parent_id": "ff260f0d-f7f3-4342-9b85-d2d85c798b4f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A commit is a metaphor that is unique to source code management. Commits are changes related to a specific effort, like a bug fix. Commits often involve several files. A single, minor bug fix may involve tweaks to templates and css in unique files. As the change is described, developed, documented, reviewed and deployed, the changes across the separate files can be annotated and handled as a single unit. The single unit in this case is the commit. Equally important, focusing just on the commit during a review allows the unchanged lines of code in the various affected files to be ignored safely."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A commit is a metaphor that is unique to source code management. Commits are changes related to a specific effort, like a bug fix. Commits often involve several files. A single, minor bug fix may involve tweaks to templates and css in unique files. As the change is described, developed, documented, reviewed and deployed, the changes across the separate files can be annotated and handled as a single unit. The single unit in this case is the commit. Equally important, focusing just on the commit during a review allows the unchanged lines of code in the various affected files to be ignored safely."
          }
        ]
      }
    ],
    "title": "Staging",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}