{
  "ID": "1d013190-a2f8-4238-a821-fdedef52b7b0",
  "Root": {
    "alive": true,
    "content": [
      "b0ab89c3-8970-4cb4-8265-df8c57fa02c5",
      "44bc2a42-4daf-4dee-a4d7-d119539e14b1",
      "d8a43eef-c8a1-4b6a-8733-add909f868fa",
      "0ecb1d47-44af-4337-b95a-34ac228dbccb",
      "3e809104-5d05-4dc3-b585-331b6d1dc5e2",
      "ceccafd3-ffae-462f-819f-71f4b9f0b832",
      "5dd9781f-b0e1-4fd2-9c57-dcaab1942f17",
      "14c11822-4093-45bf-b994-04b74cfdd257",
      "83fe76b5-4c62-4e00-9b90-6ebdecb36af6",
      "9d94c34c-d122-4d9a-a171-ef4356cd70d0"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552099310141,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552099310141,
    "parent_id": "e4fc0506-86ce-415f-9b31-5b5862bc69b3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "powershell sql queries"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310137,
        "id": "b0ab89c3-8970-4cb4-8265-df8c57fa02c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310137,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Versions"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Versions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310140,
        "id": "44bc2a42-4daf-4dee-a4d7-d119539e14b1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310140,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "[{“Name”:“3.0”,“GroupName”:null},{“Name”:“4.0”,“GroupName”:null},{“Name”:“5.0”,“GroupName”:null}]"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "[{“Name”:“3.0”,“GroupName”:null},{“Name”:“4.0”,“GroupName”:null},{“Name”:“5.0”,“GroupName”:null}]"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310140,
        "id": "d8a43eef-c8a1-4b6a-8733-add909f868fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310140,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310140,
        "id": "0ecb1d47-44af-4337-b95a-34ac228dbccb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310140,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By going through this document You can get to know how to use SQL queries with powershell"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By going through this document You can get to know how to use SQL queries with powershell"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310141,
        "id": "3e809104-5d05-4dc3-b585-331b6d1dc5e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310141,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310141,
        "id": "ceccafd3-ffae-462f-819f-71f4b9f0b832",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310141,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Item| Description |\n—— | —— |\n$ServerInstance | Here we have to mention the instance in which the database is present"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Item| Description |\n—— | —— |\n$ServerInstance | Here we have to mention the instance in which the database is present"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310141,
        "id": "5dd9781f-b0e1-4fd2-9c57-dcaab1942f17",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310141,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Database | Here we have to mention the database in which the table is present $Query | Here we have to the query which you we want to execute in SQ $Username \u0026 $Password | UserName and Password which have access in database"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "$Database | Here we have to mention the database in which the table is present $Query | Here we have to the query which you we want to execute in SQ $Username \u0026 $Password | UserName and Password which have access in database"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310141,
        "id": "14c11822-4093-45bf-b994-04b74cfdd257",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310141,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310141,
        "id": "83fe76b5-4c62-4e00-9b90-6ebdecb36af6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310141,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can use the below function if in case you are not able to import SQLPS module"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can use the below function if in case you are not able to import SQLPS module"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099310141,
        "id": "9d94c34c-d122-4d9a-a171-ef4356cd70d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099310141,
        "parent_id": "1d013190-a2f8-4238-a821-fdedef52b7b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "function Import-Xls \n{ \n \n    [CmdletBinding(SupportsShouldProcess=$true)] \n     \n    Param( \n        [parameter( \n            mandatory=$true,  \n            position=1,  \n            ValueFromPipeline=$true,  \n            ValueFromPipelineByPropertyName=$true)] \n        [String[]] \n        $Path, \n     \n        [parameter(mandatory=$false)] \n        $Worksheet = 1, \n         \n        [parameter(mandatory=$false)] \n        [switch] \n        $Force \n    ) \n \n    Begin \n    { \n        function GetTempFileName($extension) \n        { \n            $temp = [io.path]::GetTempFileName(); \n            $params = @{ \n                Path = $temp; \n                Destination = $temp + $extension; \n                Confirm = $false; \n                Verbose = $VerbosePreference; \n            } \n            Move-Item @params; \n            $temp += $extension; \n            return $temp; \n        } \n             \n        # since an extension like .xls can have multiple formats, this \n        # will need to be changed \n        # \n        $xlFileFormats = @{ \n            # single worksheet formats \n            '.csv'  = 6;        # 6, 22, 23, 24 \n            '.dbf'  = 11;       # 7, 8, 11 \n            '.dif'  = 9;        #  \n            '.prn'  = 36;       #  \n            '.slk'  = 2;        # 2, 10 \n            '.wk1'  = 31;       # 5, 30, 31 \n            '.wk3'  = 32;       # 15, 32 \n            '.wk4'  = 38;       #  \n            '.wks'  = 4;        #  \n            '.xlw'  = 35;       #  \n             \n            # multiple worksheet formats \n            '.xls'  = -4143;    # -4143, 1, 16, 18, 29, 33, 39, 43 \n            '.xlsb' = 50;       # \n            '.xlsm' = 52;       # \n            '.xlsx' = 51;       # \n            '.xml'  = 46;       # \n            '.ods'  = 60;       # \n        } \n         \n        $xl = New-Object -ComObject Excel.Application; \n        $xl.DisplayAlerts = $false; \n        $xl.Visible = $false; \n    } \n \n    Process \n    { \n        $Path | ForEach-Object { \n             \n            if ($Force -or $psCmdlet.ShouldProcess($_)) { \n             \n                $fileExist = Test-Path $_ \n \n                if (-not $fileExist) { \n                    Write-Error \"Error: $_ does not exist\" -Category ResourceUnavailable;             \n                } else { \n                    # create temporary .csv file from excel file and import .csv \n                    # \n                    $_ = (Resolve-Path $_).toString(); \n                    $wb = $xl.Workbooks.Add($_); \n                    if ($?) { \n                        $csvTemp = GetTempFileName(\".csv\"); \n                        $ws = $wb.Worksheets.Item($Worksheet); \n                        $ws.SaveAs($csvTemp, $xlFileFormats[\".csv\"]); \n                        $wb.Close($false); \n                        Remove-Variable -Name ('ws', 'wb') -Confirm:$false; \n                        Import-Csv $csvTemp; \n                        Remove-Item $csvTemp -Confirm:$false -Verbose:$VerbosePreference; \n                    } \n                } \n            } \n        } \n    } \n    \n    End \n    { \n        $xl.Quit(); \n        Remove-Variable -name xl -Confirm:$false; \n        [gc]::Collect(); \n    } \n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "function Import-Xls \n{ \n \n    [CmdletBinding(SupportsShouldProcess=$true)] \n     \n    Param( \n        [parameter( \n            mandatory=$true,  \n            position=1,  \n            ValueFromPipeline=$true,  \n            ValueFromPipelineByPropertyName=$true)] \n        [String[]] \n        $Path, \n     \n        [parameter(mandatory=$false)] \n        $Worksheet = 1, \n         \n        [parameter(mandatory=$false)] \n        [switch] \n        $Force \n    ) \n \n    Begin \n    { \n        function GetTempFileName($extension) \n        { \n            $temp = [io.path]::GetTempFileName(); \n            $params = @{ \n                Path = $temp; \n                Destination = $temp + $extension; \n                Confirm = $false; \n                Verbose = $VerbosePreference; \n            } \n            Move-Item @params; \n            $temp += $extension; \n            return $temp; \n        } \n             \n        # since an extension like .xls can have multiple formats, this \n        # will need to be changed \n        # \n        $xlFileFormats = @{ \n            # single worksheet formats \n            '.csv'  = 6;        # 6, 22, 23, 24 \n            '.dbf'  = 11;       # 7, 8, 11 \n            '.dif'  = 9;        #  \n            '.prn'  = 36;       #  \n            '.slk'  = 2;        # 2, 10 \n            '.wk1'  = 31;       # 5, 30, 31 \n            '.wk3'  = 32;       # 15, 32 \n            '.wk4'  = 38;       #  \n            '.wks'  = 4;        #  \n            '.xlw'  = 35;       #  \n             \n            # multiple worksheet formats \n            '.xls'  = -4143;    # -4143, 1, 16, 18, 29, 33, 39, 43 \n            '.xlsb' = 50;       # \n            '.xlsm' = 52;       # \n            '.xlsx' = 51;       # \n            '.xml'  = 46;       # \n            '.ods'  = 60;       # \n        } \n         \n        $xl = New-Object -ComObject Excel.Application; \n        $xl.DisplayAlerts = $false; \n        $xl.Visible = $false; \n    } \n \n    Process \n    { \n        $Path | ForEach-Object { \n             \n            if ($Force -or $psCmdlet.ShouldProcess($_)) { \n             \n                $fileExist = Test-Path $_ \n \n                if (-not $fileExist) { \n                    Write-Error \"Error: $_ does not exist\" -Category ResourceUnavailable;             \n                } else { \n                    # create temporary .csv file from excel file and import .csv \n                    # \n                    $_ = (Resolve-Path $_).toString(); \n                    $wb = $xl.Workbooks.Add($_); \n                    if ($?) { \n                        $csvTemp = GetTempFileName(\".csv\"); \n                        $ws = $wb.Worksheets.Item($Worksheet); \n                        $ws.SaveAs($csvTemp, $xlFileFormats[\".csv\"]); \n                        $wb.Close($false); \n                        Remove-Variable -Name ('ws', 'wb') -Confirm:$false; \n                        Import-Csv $csvTemp; \n                        Remove-Item $csvTemp -Confirm:$false -Verbose:$VerbosePreference; \n                    } \n                } \n            } \n        } \n    } \n    \n    End \n    { \n        $xl.Quit(); \n        Remove-Variable -name xl -Confirm:$false; \n        [gc]::Collect(); \n    } \n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "powershell sql queries",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}