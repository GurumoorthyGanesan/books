{
  "ID": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
  "Root": {
    "alive": true,
    "content": [
      "6f6ec2e6-6fc1-4775-a9c0-7291b6bd8746",
      "abfd6915-0ae3-4828-ac28-28028eef18c5",
      "ffa6eb70-59b3-4b47-abae-cddd793462ea",
      "497d4d9e-0565-4d9d-a614-80d570707452",
      "7aa87f1d-4fbb-4569-98a2-178085ab721a",
      "90aa0282-ae97-44de-bd9c-10f5ceff5285",
      "75ef49d4-dd4f-4008-9c50-90d338637bfc",
      "9fefb8ee-5b4d-4a19-be88-7e07cb30de93",
      "7ae9a3de-3f00-4ec4-85ff-ec7093da1679",
      "f3d70c20-a740-4be6-b989-4490302ad980",
      "025c56ad-34ff-4d1b-a03f-8a711d6d895f",
      "836618f5-877d-44dc-bc61-8d9887675aac",
      "990ee967-b07c-47fd-991b-badd581c05d8",
      "af765815-829c-4606-9177-8e626645d61d",
      "0c995329-8a4e-42a4-b84e-11add9f100d9",
      "7267046d-e1f6-4b3e-8aef-276b49a326b6",
      "2911f04a-e5ed-4621-800a-02a62bd970d8",
      "371902e8-df8c-49c4-b4c3-017f52b25ac8",
      "2db514df-d1b3-4ffc-9578-278caa9ea0e3",
      "f70e43c9-8c78-4feb-9d0d-7c03ec6bbbd6",
      "e337672c-db93-4fe7-b564-793afe460c31"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552098576611,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552098576611,
    "parent_id": "19d8158d-1dfe-48df-bb58-944101c99dc0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Adding snippits of XML to current XMLDocument"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576602,
        "id": "6f6ec2e6-6fc1-4775-a9c0-7291b6bd8746",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576602,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sample Data"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sample Data"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576605,
        "id": "abfd6915-0ae3-4828-ac28-28028eef18c5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576605,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "XML Document"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "XML Document"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576605,
        "id": "ffa6eb70-59b3-4b47-abae-cddd793462ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576605,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First, let’s define a sample XML document named “"
            ],
            [
              "books.xml",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              "” in our current directory:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First, let’s define a sample XML document named “"
          },
          {
            "Text": "books.xml",
            "AttrFlags": 1
          },
          {
            "Text": "” in our current directory:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576606,
        "id": "497d4d9e-0565-4d9d-a614-80d570707452",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576606,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003cbooks\u003e\u003cbook\u003e\u003ctitle\u003eOf Mice And Men\u003c/title\u003e\u003cauthor\u003eJohn Steinbeck\u003c/author\u003e\u003cpageCount\u003e187\u003c/pageCount\u003e\u003cpublishers\u003e\u003cpublisher\u003e\u003cisbn\u003e978-88-58702-15-4\u003c/isbn\u003e\u003cname\u003ePascal Covici\u003c/name\u003e\u003cyear\u003e1937\u003c/year\u003e\u003cbinding\u003eHardcover\u003c/binding\u003e\u003cfirst\u003etrue\u003c/first\u003e\u003c/publisher\u003e\u003cpublisher\u003e\u003cisbn\u003e978-05-82461-46-8\u003c/isbn\u003e\u003cname\u003eLongman\u003c/name\u003e\u003cyear\u003e2009\u003c/year\u003e\u003cbinding\u003eHardcover\u003c/binding\u003e\u003c/publisher\u003e\u003c/publishers\u003e\u003ccharacters\u003e\u003ccharacter name=\"Lennie Small\" /\u003e\u003ccharacter name=\"Curley's Wife\" /\u003e\u003ccharacter name=\"George Milton\" /\u003e\u003ccharacter name=\"Curley\" /\u003e\u003c/characters\u003e\u003cfilm\u003eTrue\u003c/film\u003e\u003c/book\u003e\u003cbook\u003e\u003ctitle\u003eThe Hunt for Red October\u003c/title\u003e\u003cauthor\u003eTom Clancy\u003c/author\u003e\u003cpageCount\u003e387\u003c/pageCount\u003e\u003cpublishers\u003e\u003cpublisher\u003e\u003cisbn\u003e978-08-70212-85-7\u003c/isbn\u003e\u003cname\u003eNaval Institute Press\u003c/name\u003e\u003cyear\u003e1984\u003c/year\u003e\u003cbinding\u003eHardcover\u003c/binding\u003e\u003cfirst\u003etrue\u003c/first\u003e\u003c/publisher\u003e\u003cpublisher\u003e\u003cisbn\u003e978-04-25083-83-3\u003c/isbn\u003e\u003cname\u003eBerkley\u003c/name\u003e\u003cyear\u003e1986\u003c/year\u003e\u003cbinding\u003ePaperback\u003c/binding\u003e\u003c/publisher\u003e\u003cpublisher\u003e\u003cisbn\u003e978-08-08587-35-4\u003c/isbn\u003e\u003cname\u003ePenguin Putnam\u003c/name\u003e\u003cyear\u003e2010\u003c/year\u003e\u003cbinding\u003ePaperback\u003c/binding\u003e\u003c/publisher\u003e\u003c/publishers\u003e\u003ccharacters\u003e\u003ccharacter name=\"Marko Alexadrovich Ramius\" /\u003e\u003ccharacter name=\"Jack Ryan\" /\u003e\u003ccharacter name=\"Admiral Greer\" /\u003e\u003ccharacter name=\"Bart Mancuso\" /\u003e\u003ccharacter name=\"Vasily Borodin\" /\u003e\u003c/characters\u003e\u003cfilm\u003eTrue\u003c/film\u003e\u003c/book\u003e\u003c/books\u003e"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003cbooks\u003e\u003cbook\u003e\u003ctitle\u003eOf Mice And Men\u003c/title\u003e\u003cauthor\u003eJohn Steinbeck\u003c/author\u003e\u003cpageCount\u003e187\u003c/pageCount\u003e\u003cpublishers\u003e\u003cpublisher\u003e\u003cisbn\u003e978-88-58702-15-4\u003c/isbn\u003e\u003cname\u003ePascal Covici\u003c/name\u003e\u003cyear\u003e1937\u003c/year\u003e\u003cbinding\u003eHardcover\u003c/binding\u003e\u003cfirst\u003etrue\u003c/first\u003e\u003c/publisher\u003e\u003cpublisher\u003e\u003cisbn\u003e978-05-82461-46-8\u003c/isbn\u003e\u003cname\u003eLongman\u003c/name\u003e\u003cyear\u003e2009\u003c/year\u003e\u003cbinding\u003eHardcover\u003c/binding\u003e\u003c/publisher\u003e\u003c/publishers\u003e\u003ccharacters\u003e\u003ccharacter name=\"Lennie Small\" /\u003e\u003ccharacter name=\"Curley's Wife\" /\u003e\u003ccharacter name=\"George Milton\" /\u003e\u003ccharacter name=\"Curley\" /\u003e\u003c/characters\u003e\u003cfilm\u003eTrue\u003c/film\u003e\u003c/book\u003e\u003cbook\u003e\u003ctitle\u003eThe Hunt for Red October\u003c/title\u003e\u003cauthor\u003eTom Clancy\u003c/author\u003e\u003cpageCount\u003e387\u003c/pageCount\u003e\u003cpublishers\u003e\u003cpublisher\u003e\u003cisbn\u003e978-08-70212-85-7\u003c/isbn\u003e\u003cname\u003eNaval Institute Press\u003c/name\u003e\u003cyear\u003e1984\u003c/year\u003e\u003cbinding\u003eHardcover\u003c/binding\u003e\u003cfirst\u003etrue\u003c/first\u003e\u003c/publisher\u003e\u003cpublisher\u003e\u003cisbn\u003e978-04-25083-83-3\u003c/isbn\u003e\u003cname\u003eBerkley\u003c/name\u003e\u003cyear\u003e1986\u003c/year\u003e\u003cbinding\u003ePaperback\u003c/binding\u003e\u003c/publisher\u003e\u003cpublisher\u003e\u003cisbn\u003e978-08-08587-35-4\u003c/isbn\u003e\u003cname\u003ePenguin Putnam\u003c/name\u003e\u003cyear\u003e2010\u003c/year\u003e\u003cbinding\u003ePaperback\u003c/binding\u003e\u003c/publisher\u003e\u003c/publishers\u003e\u003ccharacters\u003e\u003ccharacter name=\"Marko Alexadrovich Ramius\" /\u003e\u003ccharacter name=\"Jack Ryan\" /\u003e\u003ccharacter name=\"Admiral Greer\" /\u003e\u003ccharacter name=\"Bart Mancuso\" /\u003e\u003ccharacter name=\"Vasily Borodin\" /\u003e\u003c/characters\u003e\u003cfilm\u003eTrue\u003c/film\u003e\u003c/book\u003e\u003c/books\u003e",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576606,
        "id": "7aa87f1d-4fbb-4569-98a2-178085ab721a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576606,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "New Data"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "New Data"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576606,
        "id": "90aa0282-ae97-44de-bd9c-10f5ceff5285",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576606,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What we want to do is add a few new books to this document, let’s say "
            ],
            [
              "Patriot Games",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " by Tom Clancy (yes, I’m a fan of Clancy’s works ^__^) and a Sci-Fi favourite: "
            ],
            [
              "The Hitchhiker’s Guide to the Galaxy",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " by Douglas Adams mainly because Zaphod Beeblebrox is just fun to read."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "What we want to do is add a few new books to this document, let’s say "
          },
          {
            "Text": "Patriot Games",
            "AttrFlags": 4
          },
          {
            "Text": " by Tom Clancy (yes, I’m a fan of Clancy’s works ^__^) and a Sci-Fi favourite: "
          },
          {
            "Text": "The Hitchhiker’s Guide to the Galaxy",
            "AttrFlags": 4
          },
          {
            "Text": " by Douglas Adams mainly because Zaphod Beeblebrox is just fun to read."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576607,
        "id": "75ef49d4-dd4f-4008-9c50-90d338637bfc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576607,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Somehow we’ve acquired the data for the new books and saved them as a list of PSCustomObjects:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Somehow we’ve acquired the data for the new books and saved them as a list of PSCustomObjects:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576607,
        "id": "9fefb8ee-5b4d-4a19-be88-7e07cb30de93",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576607,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$newBooks = @([PSCustomObject] @{\"Title\" = \"Patriot Games\";\"Author\" = \"Tom Clancy\";\"PageCount\" = 540;\"Publishers\" = @([PSCustomObject] @{\"ISBN\" = \"978-0-39-913241-4\";\"Year\" = \"1987\";\"First\" = $True;\"Name\" = \"Putnam\";\"Binding\" = \"Hardcover\";});\"Characters\" = @(\"Jack Ryan\", \"Prince of Wales\", \"Princess of Wales\",\"Robby Jackson\", \"Cathy Ryan\", \"Sean Patrick Miller\");\"film\" = $True;},[PSCustomObject] @{\"Title\" = \"The Hitchhiker's Guide to the Galaxy\";\"Author\" = \"Douglas Adams\";\"PageCount\" = 216;\"Publishers\" = @([PSCustomObject] @{\"ISBN\" = \"978-0-33-025864-7\";\"Year\" = \"1979\";\"First\" = $True;\"Name\" = \"Pan Books\";\"Binding\" = \"Hardcover\";});\"Characters\" = @(\"Arthur Dent\", \"Marvin\", \"Zaphod Beeblebrox\", \"Ford Prefect\",\"Trillian\", \"Slartibartfast\", \"Dirk Gently\");\"film\" = $True;});"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$newBooks = @([PSCustomObject] @{\"Title\" = \"Patriot Games\";\"Author\" = \"Tom Clancy\";\"PageCount\" = 540;\"Publishers\" = @([PSCustomObject] @{\"ISBN\" = \"978-0-39-913241-4\";\"Year\" = \"1987\";\"First\" = $True;\"Name\" = \"Putnam\";\"Binding\" = \"Hardcover\";});\"Characters\" = @(\"Jack Ryan\", \"Prince of Wales\", \"Princess of Wales\",\"Robby Jackson\", \"Cathy Ryan\", \"Sean Patrick Miller\");\"film\" = $True;},[PSCustomObject] @{\"Title\" = \"The Hitchhiker's Guide to the Galaxy\";\"Author\" = \"Douglas Adams\";\"PageCount\" = 216;\"Publishers\" = @([PSCustomObject] @{\"ISBN\" = \"978-0-33-025864-7\";\"Year\" = \"1979\";\"First\" = $True;\"Name\" = \"Pan Books\";\"Binding\" = \"Hardcover\";});\"Characters\" = @(\"Arthur Dent\", \"Marvin\", \"Zaphod Beeblebrox\", \"Ford Prefect\",\"Trillian\", \"Slartibartfast\", \"Dirk Gently\");\"film\" = $True;});",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576607,
        "id": "7ae9a3de-3f00-4ec4-85ff-ec7093da1679",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576607,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Templates"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Templates"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576608,
        "id": "f3d70c20-a740-4be6-b989-4490302ad980",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576608,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now we need to define a few skeleton XML structures for our new data to go into. Basically, you want to create a skeleton/template for each list of data. In our example, that means we need a template for the book, characters, and publishers. We can also use this to define a few default values, such as the value for the "
            ],
            [
              "film",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " tag."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now we need to define a few skeleton XML structures for our new data to go into. Basically, you want to create a skeleton/template for each list of data. In our example, that means we need a template for the book, characters, and publishers. We can also use this to define a few default values, such as the value for the "
          },
          {
            "Text": "film",
            "AttrFlags": 2
          },
          {
            "Text": " tag."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576608,
        "id": "025c56ad-34ff-4d1b-a03f-8a711d6d895f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576608,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "$t_book = [xml] @'\u003cbook\u003e\u003ctitle /\u003e\u003cauthor /\u003e\u003cpageCount /\u003e\u003cpublishers /\u003e\u003ccharacters /\u003e\u003cfilm\u003eFalse\u003c/film\u003e\u003c/book\u003e'@;$t_publisher = [xml] @'\u003cpublisher\u003e\u003cisbn/\u003e\u003cname/\u003e\u003cyear/\u003e\u003cbinding/\u003e\u003cfirst\u003efalse\u003c/first\u003e\u003c/publisher\u003e'@;$t_character = [xml] @'\u003ccharacter name=\"\" /\u003e'@;"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "$t_book = [xml] @'\u003cbook\u003e\u003ctitle /\u003e\u003cauthor /\u003e\u003cpageCount /\u003e\u003cpublishers /\u003e\u003ccharacters /\u003e\u003cfilm\u003eFalse\u003c/film\u003e\u003c/book\u003e'@;$t_publisher = [xml] @'\u003cpublisher\u003e\u003cisbn/\u003e\u003cname/\u003e\u003cyear/\u003e\u003cbinding/\u003e\u003cfirst\u003efalse\u003c/first\u003e\u003c/publisher\u003e'@;$t_character = [xml] @'\u003ccharacter name=\"\" /\u003e'@;",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576608,
        "id": "836618f5-877d-44dc-bc61-8d9887675aac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576608,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We’re done with set-up."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We’re done with set-up."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576609,
        "id": "990ee967-b07c-47fd-991b-badd581c05d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576609,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Adding the new data"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Adding the new data"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576609,
        "id": "af765815-829c-4606-9177-8e626645d61d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576609,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now that we’re all set-up with our sample data, let’s add the custom objects to the XML Document Object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now that we’re all set-up with our sample data, let’s add the custom objects to the XML Document Object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576610,
        "id": "0c995329-8a4e-42a4-b84e-11add9f100d9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576610,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "# Read the xml document$xml = [xml] Get-Content .\\books.xml;# Let's show a list of titles to see what we've got currently:$xml.books.book | Select Title, Author, @{N=\"ISBN\";E={If ( $_.Publishers.Publisher.Count ) { $_.Publishers.publisher[0].ISBN} Else { $_.Publishers.publisher.isbn}}};;# Outputs:# title                                author         ISBN# -----                                ------         ----# Of Mice And Men                      John Steinbeck 978-88-58702-15-4# The Hunt for Red October             Tom Clancy     978-08-70212-85-7# Let's show our new books as well:$newBooks | Select Title, Author, @{N=\"ISBN\";E={$_.Publishers[0].ISBN}};# Outputs:# Title                                Author        ISBN# -----                                ------        ----# Patriot Games                        Tom Clancy    978-0-39-913241-4# The Hitchhiker's Guide to the Galaxy Douglas Adams 978-0-33-025864-7# Now to merge the two:ForEach ( $book in $newBooks ) {$root = $xml.SelectSingleNode(\"/books\");# Add the template for a book as a new node to the root element[void]$root.AppendChild($xml.ImportNode($t_book.book, $true));# Select the new child element$newElement = $root.SelectSingleNode(\"book[last()]\");# Update the parameters of that new element to match our current new book data$newElement.title     = [String]$book.Title;$newElement.author    = [String]$book.Author;$newElement.pageCount = [String]$book.PageCount;$newElement.film      = [String]$book.Film;# Iterate through the properties that are Children of our new Element:ForEach ( $publisher in $book.Publishers ) {# Create the new child publisher element# Note the use of \"SelectSingleNode\" here, this allows the use of the \"AppendChild\" method as it returns# a XmlElement type object instead of the $Null data that is currently stored in that leaf of the# XML document tree[void]$newElement.SelectSingleNode(\"publishers\").AppendChild($xml.ImportNode($t_publisher.publisher, $true));# Update the attribute and text values of our new XML Element to match our new data$newPublisherElement = $newElement.SelectSingleNode(\"publishers/publisher[last()]\");$newPublisherElement.year = [String]$publisher.Year;$newPublisherElement.name = [String]$publisher.Name;$newPublisherElement.binding = [String]$publisher.Binding;$newPublisherElement.isbn = [String]$publisher.ISBN;If ( $publisher.first ) {$newPublisherElement.first = \"True\";}}ForEach ( $character in $book.Characters ) {# Select the characters xml element$charactersElement = $newElement.SelectSingleNode(\"characters\");# Add a new character child element[void]$charactersElement.AppendChild($xml.ImportNode($t_character.character, $true));# Select the new characters/character element$characterElement = $charactersElement.SelectSingleNode(\"character[last()]\");# Update the attribute and text values to match our new data$characterElement.name = [String]$character;}}# Check out the new XML:$xml.books.book | Select Title, Author, @{N=\"ISBN\";E={If ( $_.Publishers.Publisher.Count ) { $_.Publishers.publisher[0].ISBN} Else { $_.Publishers.publisher.isbn}}};# Outputs:# title                                author         ISBN# -----                                ------         ----# Of Mice And Men                      John Steinbeck 978-88-58702-15-4# The Hunt for Red October             Tom Clancy     978-08-70212-85-7# Patriot Games                        Tom Clancy     978-0-39-913241-4# The Hitchhiker's Guide to the Galaxy Douglas Adams  978-0-33-025864-7"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "# Read the xml document$xml = [xml] Get-Content .\\books.xml;# Let's show a list of titles to see what we've got currently:$xml.books.book | Select Title, Author, @{N=\"ISBN\";E={If ( $_.Publishers.Publisher.Count ) { $_.Publishers.publisher[0].ISBN} Else { $_.Publishers.publisher.isbn}}};;# Outputs:# title                                author         ISBN# -----                                ------         ----# Of Mice And Men                      John Steinbeck 978-88-58702-15-4# The Hunt for Red October             Tom Clancy     978-08-70212-85-7# Let's show our new books as well:$newBooks | Select Title, Author, @{N=\"ISBN\";E={$_.Publishers[0].ISBN}};# Outputs:# Title                                Author        ISBN# -----                                ------        ----# Patriot Games                        Tom Clancy    978-0-39-913241-4# The Hitchhiker's Guide to the Galaxy Douglas Adams 978-0-33-025864-7# Now to merge the two:ForEach ( $book in $newBooks ) {$root = $xml.SelectSingleNode(\"/books\");# Add the template for a book as a new node to the root element[void]$root.AppendChild($xml.ImportNode($t_book.book, $true));# Select the new child element$newElement = $root.SelectSingleNode(\"book[last()]\");# Update the parameters of that new element to match our current new book data$newElement.title     = [String]$book.Title;$newElement.author    = [String]$book.Author;$newElement.pageCount = [String]$book.PageCount;$newElement.film      = [String]$book.Film;# Iterate through the properties that are Children of our new Element:ForEach ( $publisher in $book.Publishers ) {# Create the new child publisher element# Note the use of \"SelectSingleNode\" here, this allows the use of the \"AppendChild\" method as it returns# a XmlElement type object instead of the $Null data that is currently stored in that leaf of the# XML document tree[void]$newElement.SelectSingleNode(\"publishers\").AppendChild($xml.ImportNode($t_publisher.publisher, $true));# Update the attribute and text values of our new XML Element to match our new data$newPublisherElement = $newElement.SelectSingleNode(\"publishers/publisher[last()]\");$newPublisherElement.year = [String]$publisher.Year;$newPublisherElement.name = [String]$publisher.Name;$newPublisherElement.binding = [String]$publisher.Binding;$newPublisherElement.isbn = [String]$publisher.ISBN;If ( $publisher.first ) {$newPublisherElement.first = \"True\";}}ForEach ( $character in $book.Characters ) {# Select the characters xml element$charactersElement = $newElement.SelectSingleNode(\"characters\");# Add a new character child element[void]$charactersElement.AppendChild($xml.ImportNode($t_character.character, $true));# Select the new characters/character element$characterElement = $charactersElement.SelectSingleNode(\"character[last()]\");# Update the attribute and text values to match our new data$characterElement.name = [String]$character;}}# Check out the new XML:$xml.books.book | Select Title, Author, @{N=\"ISBN\";E={If ( $_.Publishers.Publisher.Count ) { $_.Publishers.publisher[0].ISBN} Else { $_.Publishers.publisher.isbn}}};# Outputs:# title                                author         ISBN# -----                                ------         ----# Of Mice And Men                      John Steinbeck 978-88-58702-15-4# The Hunt for Red October             Tom Clancy     978-08-70212-85-7# Patriot Games                        Tom Clancy     978-0-39-913241-4# The Hitchhiker's Guide to the Galaxy Douglas Adams  978-0-33-025864-7",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576610,
        "id": "7267046d-e1f6-4b3e-8aef-276b49a326b6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576610,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can now write our XML to disk, or screen, or web, or wherever!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can now write our XML to disk, or screen, or web, or wherever!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576610,
        "id": "2911f04a-e5ed-4621-800a-02a62bd970d8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576610,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Profit"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Profit"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576611,
        "id": "371902e8-df8c-49c4-b4c3-017f52b25ac8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576611,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "While this may not be the procedure for everyone I found it to help avoid a whole bunch of "
            ],
            [
              "[void]$xml.SelectSingleNode(\"/complicated/xpath/goes[here]\").AppendChild($xml.CreateElement(\"newElementName\")",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " followed by "
            ],
            [
              "$xml.SelectSingleNode(\"/complicated/xpath/goes/here/newElementName\") = $textValue",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "While this may not be the procedure for everyone I found it to help avoid a whole bunch of "
          },
          {
            "Text": "[void]$xml.SelectSingleNode(\"/complicated/xpath/goes[here]\").AppendChild($xml.CreateElement(\"newElementName\")",
            "AttrFlags": 2
          },
          {
            "Text": " followed by "
          },
          {
            "Text": "$xml.SelectSingleNode(\"/complicated/xpath/goes/here/newElementName\") = $textValue",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576611,
        "id": "2db514df-d1b3-4ffc-9578-278caa9ea0e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576611,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I think the method detailed in the example is cleaner and easier to parse for normal humans."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "I think the method detailed in the example is cleaner and easier to parse for normal humans."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576611,
        "id": "f70e43c9-8c78-4feb-9d0d-7c03ec6bbbd6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576611,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Improvements"
            ]
          ]
        },
        "type": "header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Improvements"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552098576611,
        "id": "e337672c-db93-4fe7-b564-793afe460c31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552098576611,
        "parent_id": "c51f67c5-6df8-40cc-84bc-fb09390c0725",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It may be possible to change the template to include elements with children instead of breaking out each section as a separate template. You just have to take care to clone the previous element when you loop through the list."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It may be possible to change the template to include elements with children instead of breaking out each section as a separate template. You just have to take care to clone the previous element when you loop through the list."
          }
        ]
      }
    ],
    "title": "Adding snippits of XML to current XMLDocument",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}