{
  "ID": "bdac9060-0904-4f2e-9b99-ba5f62a036af",
  "Root": {
    "alive": true,
    "content": [
      "0bef42a5-78fc-485f-8a68-05eb6d02e2a6",
      "a0fc5d95-7761-4ced-9701-d8a596dca16a",
      "50d6be72-6f2f-4fa3-8ff4-a9257b2f0ba6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1552099666062,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bdac9060-0904-4f2e-9b99-ba5f62a036af",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552794480000,
    "parent_id": "fad4b6aa-3fe0-4b67-8e0d-0f884a4a93b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Simple script for black-box integration test of console applications"
        ]
      ]
    },
    "type": "page",
    "version": 4,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099666060,
        "id": "0bef42a5-78fc-485f-8a68-05eb6d02e2a6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099666060,
        "parent_id": "bdac9060-0904-4f2e-9b99-ba5f62a036af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is a simple example on how you can automate tests for a console application that interact with standard input and standard output."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is a simple example on how you can automate tests for a console application that interact with standard input and standard output."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099666062,
        "id": "a0fc5d95-7761-4ced-9701-d8a596dca16a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552099666062,
        "parent_id": "bdac9060-0904-4f2e-9b99-ba5f62a036af",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The tested application read and sum every new line and will provide the result after a single white line is provided. The power shell script write “pass” when the output match."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The tested application read and sum every new line and will provide the result after a single white line is provided. The power shell script write “pass” when the output match."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552099666062,
        "id": "50d6be72-6f2f-4fa3-8ff4-a9257b2f0ba6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552794480000,
        "parent_id": "bdac9060-0904-4f2e-9b99-ba5f62a036af",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "PowerShell"
            ]
          ],
          "title": [
            [
              "$process = New-Object System.Diagnostics.Process\n$process.StartInfo.FileName = \".\\ConsoleApp1.exe\"\n$process.StartInfo.UseShellExecute = $false\n$process.StartInfo.RedirectStandardOutput = $true\n$process.StartInfo.RedirectStandardInput = $true\nif ( $process.Start() ) {\n    # input\n    $process.StandardInput.WriteLine(\"1\");\n    $process.StandardInput.WriteLine(\"2\");\n    $process.StandardInput.WriteLine(\"3\");\n    $process.StandardInput.WriteLine();\n    $process.StandardInput.WriteLine();\n    # output check\n    $output = $process.StandardOutput.ReadToEnd()\n    if ( $output ) {\n        if ( $output.Contains(\"sum 6\") ) {\n            Write \"pass\"\n        }\n        else {\n            Write-Error $output\n        }\n    }\n    $process.WaitForExit()\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "$process = New-Object System.Diagnostics.Process\n$process.StartInfo.FileName = \".\\ConsoleApp1.exe\"\n$process.StartInfo.UseShellExecute = $false\n$process.StartInfo.RedirectStandardOutput = $true\n$process.StartInfo.RedirectStandardInput = $true\nif ( $process.Start() ) {\n    # input\n    $process.StandardInput.WriteLine(\"1\");\n    $process.StandardInput.WriteLine(\"2\");\n    $process.StandardInput.WriteLine(\"3\");\n    $process.StandardInput.WriteLine();\n    $process.StandardInput.WriteLine();\n    # output check\n    $output = $process.StandardOutput.ReadToEnd()\n    if ( $output ) {\n        if ( $output.Contains(\"sum 6\") ) {\n            Write \"pass\"\n        }\n        else {\n            Write-Error $output\n        }\n    }\n    $process.WaitForExit()\n}",
        "code_language": "PowerShell"
      }
    ],
    "title": "Simple script for black-box integration test of console applications",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 59
    }
  ],
  "Tables": null
}