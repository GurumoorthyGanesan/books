{
  "ID": "ee383fb9-b6b7-4e93-8caa-0dbcb7622e47",
  "Root": {
    "alive": true,
    "content": [
      "5d80d68c-75ed-4abd-a4ae-3e2035b12edf"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551950703293,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ee383fb9-b6b7-4e93-8caa-0dbcb7622e47",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551950703293,
    "parent_id": "5019b4e4-cd69-44b7-a825-05bcb1274fb1",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Basic TCP chat TcpListener TcpClient NetworkStream"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950703290,
        "id": "5d80d68c-75ed-4abd-a4ae-3e2035b12edf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950703290,
        "parent_id": "ee383fb9-b6b7-4e93-8caa-0dbcb7622e47",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "using System;\nusing System.IO;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\n\nclass TcpChat\n{\n    static void Main(string[] args)\n    {\n        if(args.Length == 0)\n        {\n            Console.WriteLine(\"Basic TCP chat\");\n            Console.WriteLine();\n            Console.WriteLine(\"Usage:\");\n            Console.WriteLine(\"tcpchat server \u003cport\u003e\");\n            Console.WriteLine(\"tcpchat client \u003curl\u003e \u003cport\u003e\");\n            return;\n        }\n\n        try\n        {\n            Run(args);\n        }\n        catch(IOException)\n        {\n            Console.WriteLine(\"--- Connection lost\");\n        }\n        catch(SocketException ex)\n        {\n            Console.WriteLine(\"--- Can't connect: \" + ex.Message);\n        }\n    }\n    \n    static void Run(string[] args)\n    {\n        TcpClient client;\n        NetworkStream stream;\n        byte[] buffer = new byte[256];\n        var encoding = Encoding.ASCII;\n\n        if(args[0].StartsWith(\"s\", StringComparison.InvariantCultureIgnoreCase))\n        {\n            var port = int.Parse(args[1]);\n            var listener = new TcpListener(IPAddress.Any, port);\n            listener.Start();\n            Console.WriteLine(\"--- Waiting for a connection...\");\n            client = listener.AcceptTcpClient();\n        }\n        else\n        {\n            var hostName = args[1];\n            var port = int.Parse(args[2]);\n            client = new TcpClient();\n            client.Connect(hostName, port);\n        }\n\n        stream = client.GetStream();\n        Console.WriteLine(\"--- Connected. Start typing! (exit with Ctrl-C)\");\n\n        while(true)\n        {\n            if(Console.KeyAvailable)\n            {\n                var lineToSend = Console.ReadLine();\n                var bytesToSend = encoding.GetBytes(lineToSend + \"\\r\\n\");\n                stream.Write(bytesToSend, 0, bytesToSend.Length);\n                stream.Flush();\n            }\n\n            if (stream.DataAvailable)\n            {\n                var receivedBytesCount = stream.Read(buffer, 0, buffer.Length);\n                var receivedString = encoding.GetString(buffer, 0, receivedBytesCount);\n                Console.Write(receivedString);\n            }\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "using System;\nusing System.IO;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\n\nclass TcpChat\n{\n    static void Main(string[] args)\n    {\n        if(args.Length == 0)\n        {\n            Console.WriteLine(\"Basic TCP chat\");\n            Console.WriteLine();\n            Console.WriteLine(\"Usage:\");\n            Console.WriteLine(\"tcpchat server \u003cport\u003e\");\n            Console.WriteLine(\"tcpchat client \u003curl\u003e \u003cport\u003e\");\n            return;\n        }\n\n        try\n        {\n            Run(args);\n        }\n        catch(IOException)\n        {\n            Console.WriteLine(\"--- Connection lost\");\n        }\n        catch(SocketException ex)\n        {\n            Console.WriteLine(\"--- Can't connect: \" + ex.Message);\n        }\n    }\n    \n    static void Run(string[] args)\n    {\n        TcpClient client;\n        NetworkStream stream;\n        byte[] buffer = new byte[256];\n        var encoding = Encoding.ASCII;\n\n        if(args[0].StartsWith(\"s\", StringComparison.InvariantCultureIgnoreCase))\n        {\n            var port = int.Parse(args[1]);\n            var listener = new TcpListener(IPAddress.Any, port);\n            listener.Start();\n            Console.WriteLine(\"--- Waiting for a connection...\");\n            client = listener.AcceptTcpClient();\n        }\n        else\n        {\n            var hostName = args[1];\n            var port = int.Parse(args[2]);\n            client = new TcpClient();\n            client.Connect(hostName, port);\n        }\n\n        stream = client.GetStream();\n        Console.WriteLine(\"--- Connected. Start typing! (exit with Ctrl-C)\");\n\n        while(true)\n        {\n            if(Console.KeyAvailable)\n            {\n                var lineToSend = Console.ReadLine();\n                var bytesToSend = encoding.GetBytes(lineToSend + \"\\r\\n\");\n                stream.Write(bytesToSend, 0, bytesToSend.Length);\n                stream.Flush();\n            }\n\n            if (stream.DataAvailable)\n            {\n                var receivedBytesCount = stream.Read(buffer, 0, buffer.Length);\n                var receivedString = encoding.GetString(buffer, 0, receivedBytesCount);\n                Console.Write(receivedString);\n            }\n        }\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Basic TCP chat TcpListener TcpClient NetworkStream",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}