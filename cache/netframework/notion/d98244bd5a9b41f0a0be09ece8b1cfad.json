{
  "ID": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
  "Root": {
    "alive": true,
    "content": [
      "fe85f9dd-ef9b-4693-90ce-324b005c4c87",
      "38651679-855d-4e48-95b3-cd0926445d8c",
      "0c643849-feb7-4d13-b0d7-b0140e736e79",
      "e1717010-af53-45d0-8f49-2d3329148f80",
      "901866e1-6213-4f35-9749-b6b5e5d94929",
      "da874512-b0b2-45bc-8806-790b750f2efd",
      "4f6a09b6-d3a7-446f-ad5f-3dea0e0ea3ac",
      "d8904b60-0fac-44ca-b4ed-68e945583bda",
      "5e10a421-ec47-4af4-8345-cde7176c1986",
      "359e6d1a-76a4-43a1-a457-0b8b1326eb1f",
      "99fd173a-13f5-4fdf-9e2d-539c84257b74",
      "77a9e52f-c8a6-4c46-8f7b-5c9717c3d2ed",
      "7d52074b-bca3-4bcc-8547-5f5f4ca2f9d6",
      "9b149231-3ec5-41f3-90a1-eb0f78f271f5",
      "3cdf26a1-2966-42a3-b8ea-0a44bab8fa91",
      "98baa6a3-4c42-4855-bd27-b372d085b918"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551951163357,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551951163357,
    "parent_id": "babb556e-2d0b-4223-9e90-ef7f40ca7705",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Marshaling structs"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163338,
        "id": "fe85f9dd-ef9b-4693-90ce-324b005c4c87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163338,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Simple struct",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Simple struct",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163340,
        "id": "38651679-855d-4e48-95b3-cd0926445d8c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163340,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ signature:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ signature:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163340,
        "id": "0c643849-feb7-4d13-b0d7-b0140e736e79",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163340,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef struct _PERSON\n{\n    int age;\n    char name[32];\n} PERSON, *LP_PERSON;\n\nvoid GetSpouse(PERSON person, LP_PERSON spouse);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef struct _PERSON\n{\n    int age;\n    char name[32];\n} PERSON, *LP_PERSON;\n\nvoid GetSpouse(PERSON person, LP_PERSON spouse);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163340,
        "id": "e1717010-af53-45d0-8f49-2d3329148f80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163340,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C# definition"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C# definition"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163340,
        "id": "901866e1-6213-4f35-9749-b6b5e5d94929",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163340,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]\npublic struct PERSON\n{\n    public int age;\n    [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]\n    public string name;\n}\n\n[DllImport(\"family.dll\", CharSet = CharSet.Auto)]\npublic static extern bool GetSpouse(PERSON person, ref PERSON spouse);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]\npublic struct PERSON\n{\n    public int age;\n    [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]\n    public string name;\n}\n\n[DllImport(\"family.dll\", CharSet = CharSet.Auto)]\npublic static extern bool GetSpouse(PERSON person, ref PERSON spouse);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163341,
        "id": "da874512-b0b2-45bc-8806-790b750f2efd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163341,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Struct with unknown size array fields. Passing in",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Struct with unknown size array fields. Passing in",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163341,
        "id": "4f6a09b6-d3a7-446f-ad5f-3dea0e0ea3ac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163341,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ signature"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ signature"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163341,
        "id": "d8904b60-0fac-44ca-b4ed-68e945583bda",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163341,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef struct\n{\n    int length;\n    int *data;\n} VECTOR;\n\nvoid SetVector(VECTOR \u0026vector);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef struct\n{\n    int length;\n    int *data;\n} VECTOR;\n\nvoid SetVector(VECTOR \u0026vector);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163341,
        "id": "5e10a421-ec47-4af4-8345-cde7176c1986",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163341,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When passed from managed to unmanaged code, this"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When passed from managed to unmanaged code, this"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163356,
        "id": "359e6d1a-76a4-43a1-a457-0b8b1326eb1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163356,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "data",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " array should be defined as IntPtr and memory should be explicitly allocated with "
            ],
            [
              "Marshal.AllocHGlobal()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.marshal.allochglobal(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " (and freed with "
            ],
            [
              "Marshal.FreeHGlobal()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.marshal.freehglobal(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " afterwords):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "data",
            "AttrFlags": 2
          },
          {
            "Text": " array should be defined as IntPtr and memory should be explicitly allocated with "
          },
          {
            "Text": "Marshal.AllocHGlobal()",
            "AttrFlags": 2,
            "Link": "https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.marshal.allochglobal(v=vs.110).aspx"
          },
          {
            "Text": " (and freed with "
          },
          {
            "Text": "Marshal.FreeHGlobal()",
            "AttrFlags": 2,
            "Link": "https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.marshal.freehglobal(v=vs.110).aspx"
          },
          {
            "Text": " afterwords):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163356,
        "id": "99fd173a-13f5-4fdf-9e2d-539c84257b74",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163356,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[StructLayout(LayoutKind.Sequential)]\npublic struct VECTOR : IDisposable\n{\n    int length;\n    IntPtr dataBuf;\n\n    public int[] data\n    {\n        set\n        {\n            FreeDataBuf();\n            if (value != null \u0026\u0026 value.Length \u003e 0)\n            {\n                dataBuf = Marshal.AllocHGlobal(value.Length * Marshal.SizeOf(value[0]));\n                Marshal.Copy(value, 0, dataBuf, value.Length);\n                length = value.Length;\n            }\n        }\n    }\n    void FreeDataBuf()\n    {\n        if (dataBuf != IntPtr.Zero)\n        {\n            Marshal.FreeHGlobal(dataBuf);\n            dataBuf = IntPtr.Zero;\n        }\n    }\n    public void Dispose()\n    {\n        FreeDataBuf();\n    }\n}\n\n[DllImport(\"vectors.dll\")]\npublic static extern void SetVector([In]ref VECTOR vector);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[StructLayout(LayoutKind.Sequential)]\npublic struct VECTOR : IDisposable\n{\n    int length;\n    IntPtr dataBuf;\n\n    public int[] data\n    {\n        set\n        {\n            FreeDataBuf();\n            if (value != null \u0026\u0026 value.Length \u003e 0)\n            {\n                dataBuf = Marshal.AllocHGlobal(value.Length * Marshal.SizeOf(value[0]));\n                Marshal.Copy(value, 0, dataBuf, value.Length);\n                length = value.Length;\n            }\n        }\n    }\n    void FreeDataBuf()\n    {\n        if (dataBuf != IntPtr.Zero)\n        {\n            Marshal.FreeHGlobal(dataBuf);\n            dataBuf = IntPtr.Zero;\n        }\n    }\n    public void Dispose()\n    {\n        FreeDataBuf();\n    }\n}\n\n[DllImport(\"vectors.dll\")]\npublic static extern void SetVector([In]ref VECTOR vector);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163356,
        "id": "77a9e52f-c8a6-4c46-8f7b-5c9717c3d2ed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163356,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Struct with unknown size array fields. Receiving",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Struct with unknown size array fields. Receiving",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163356,
        "id": "7d52074b-bca3-4bcc-8547-5f5f4ca2f9d6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163356,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "C++ signature:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "C++ signature:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163356,
        "id": "9b149231-3ec5-41f3-90a1-eb0f78f271f5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163356,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "typedef struct\n{\n    char *name;\n} USER;\n\nbool GetCurrentUser(USER *user);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "typedef struct\n{\n    char *name;\n} USER;\n\nbool GetCurrentUser(USER *user);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163357,
        "id": "3cdf26a1-2966-42a3-b8ea-0a44bab8fa91",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163357,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When such data is passed out of unmanaged code and memory is allocated by the unmanaged functions, the managed caller should receive it into an "
            ],
            [
              "IntPrt",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " variable and convert the buffer to a managed array. In case of strings there is a convenient "
            ],
            [
              "Marshal.PtrToStringAnsi()",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/7b620dhe(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " method:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When such data is passed out of unmanaged code and memory is allocated by the unmanaged functions, the managed caller should receive it into an "
          },
          {
            "Text": "IntPrt",
            "AttrFlags": 2
          },
          {
            "Text": " variable and convert the buffer to a managed array. In case of strings there is a convenient "
          },
          {
            "Text": "Marshal.PtrToStringAnsi()",
            "AttrFlags": 2,
            "Link": "https://msdn.microsoft.com/en-us/library/7b620dhe(v=vs.110).aspx"
          },
          {
            "Text": " method:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951163357,
        "id": "98baa6a3-4c42-4855-bd27-b372d085b918",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951163357,
        "parent_id": "d98244bd-5a9b-41f0-a0be-09ece8b1cfad",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[StructLayout(LayoutKind.Sequential)]\npublic struct USER\n{\n    IntPtr nameBuffer;\n    public string name { get { return Marshal.PtrToStringAnsi(nameBuffer); } }\n}\n\n[DllImport(\"users.dll\")]\npublic static extern bool GetCurrentUser(out USER user);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[StructLayout(LayoutKind.Sequential)]\npublic struct USER\n{\n    IntPtr nameBuffer;\n    public string name { get { return Marshal.PtrToStringAnsi(nameBuffer); } }\n}\n\n[DllImport(\"users.dll\")]\npublic static extern bool GetCurrentUser(out USER user);",
        "code_language": "Plain Text"
      }
    ],
    "title": "Marshaling structs",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}