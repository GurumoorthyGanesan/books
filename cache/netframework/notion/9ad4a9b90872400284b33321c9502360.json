{
  "ID": "9ad4a9b9-0872-4002-84b3-3321c9502360",
  "Root": {
    "alive": true,
    "content": [
      "b8af9a6a-4a44-4798-886d-00d21a9f5c18",
      "e14bac75-99f0-409a-9cbf-882ab13de697",
      "971040e5-6dc5-4c40-a9f9-64570b32ef82",
      "f7634ba1-1fd1-4a85-8d2a-24cb60f554f2",
      "30b7a6c5-de60-4a06-a706-5524a5cf7f16",
      "dbf926be-8418-473c-9d35-f184580a674c",
      "45b6de87-e411-4d7d-a11c-81ddd757028f",
      "77b725e9-a3d4-4524-9cd1-35bdd950786e",
      "f7e883ef-0b0a-4c58-83ff-7965effc6ae1",
      "7054c277-ed49-48af-ad7e-ab9762cc954c",
      "54af1aab-f2d9-4c67-ad8e-0ac0a6c72e13"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551950801659,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551950801659,
    "parent_id": "0ccb57df-12d4-4086-b00e-2e437157652b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Enum Definition"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801653,
        "id": "b8af9a6a-4a44-4798-886d-00d21a9f5c18",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801653,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "An enum is a special type of class. The "
            ],
            [
              "enum",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " keyword tells the compiler that this class inherits from the abstract System.Enum class. Enums are used for distinct lists of items."
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "An enum is a special type of class. The "
          },
          {
            "Text": "enum",
            "AttrFlags": 2
          },
          {
            "Text": " keyword tells the compiler that this class inherits from the abstract System.Enum class. Enums are used for distinct lists of items."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801655,
        "id": "e14bac75-99f0-409a-9cbf-882ab13de697",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801655,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public enum MyEnum\n{\n    Monday = 1,\n    Tuesday,\n    Wednesday,\n    //...\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public enum MyEnum\n{\n    Monday = 1,\n    Tuesday,\n    Wednesday,\n    //...\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801656,
        "id": "971040e5-6dc5-4c40-a9f9-64570b32ef82",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801656,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can think of an enum as a convenient way of mapping constants to some underlying value. The enum defined above declares values for each day of the week, and starts with "
            ],
            [
              "1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "Tuesday",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " would then automatically become mapped to "
            ],
            [
              "2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Wednesday",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "3",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can think of an enum as a convenient way of mapping constants to some underlying value. The enum defined above declares values for each day of the week, and starts with "
          },
          {
            "Text": "1",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "Tuesday",
            "AttrFlags": 2
          },
          {
            "Text": " would then automatically become mapped to "
          },
          {
            "Text": "2",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Wednesday",
            "AttrFlags": 2
          },
          {
            "Text": " to "
          },
          {
            "Text": "3",
            "AttrFlags": 2
          },
          {
            "Text": ", etc."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801656,
        "id": "f7634ba1-1fd1-4a85-8d2a-24cb60f554f2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801656,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By default, enums use "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as the underlying type and start at 0, but you can use any of the following "
            ],
            [
              "integral types",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ": "
            ],
            [
              "byte, sbyte, short, ushort, int, uint, long, or ulong",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and can specify explicit values for any item. If some items are explicitly specified, but some are not, each item after the last defined one will be incremented by 1."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By default, enums use "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " as the underlying type and start at 0, but you can use any of the following "
          },
          {
            "Text": "integral types",
            "AttrFlags": 4
          },
          {
            "Text": ": "
          },
          {
            "Text": "byte, sbyte, short, ushort, int, uint, long, or ulong",
            "AttrFlags": 2
          },
          {
            "Text": ", and can specify explicit values for any item. If some items are explicitly specified, but some are not, each item after the last defined one will be incremented by 1."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801656,
        "id": "30b7a6c5-de60-4a06-a706-5524a5cf7f16",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801656,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We would use this example by "
            ],
            [
              "casting",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " some other value to a "
            ],
            [
              "MyEnum",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " like so:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We would use this example by "
          },
          {
            "Text": "casting",
            "AttrFlags": 4
          },
          {
            "Text": " some other value to a "
          },
          {
            "Text": "MyEnum",
            "AttrFlags": 4
          },
          {
            "Text": " like so:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801656,
        "id": "dbf926be-8418-473c-9d35-f184580a674c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801656,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MyEnum instance = (MyEnum)3; // the variable named 'instance' gets a \n                             //value of MyEnum.Wednesday, which maps to 3.\n\nint x = 2;\ninstance = (MyEnum)x; // now 'instance' has a value of MyEnum.Tuesday"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MyEnum instance = (MyEnum)3; // the variable named 'instance' gets a \n                             //value of MyEnum.Wednesday, which maps to 3.\n\nint x = 2;\ninstance = (MyEnum)x; // now 'instance' has a value of MyEnum.Tuesday",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801657,
        "id": "45b6de87-e411-4d7d-a11c-81ddd757028f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801657,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another useful, although more complex, type of enum is called "
            ],
            [
              "Flags",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". By "
            ],
            [
              "decorating",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " an enum with the "
            ],
            [
              "Flags",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " attribute, you can assign a variable more than one value at a time. Note that when doing this you "
            ],
            [
              "must",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " define values explicitly in base 2 representation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another useful, although more complex, type of enum is called "
          },
          {
            "Text": "Flags",
            "AttrFlags": 2
          },
          {
            "Text": ". By "
          },
          {
            "Text": "decorating",
            "AttrFlags": 4
          },
          {
            "Text": " an enum with the "
          },
          {
            "Text": "Flags",
            "AttrFlags": 2
          },
          {
            "Text": " attribute, you can assign a variable more than one value at a time. Note that when doing this you "
          },
          {
            "Text": "must",
            "AttrFlags": 4
          },
          {
            "Text": " define values explicitly in base 2 representation."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801657,
        "id": "77b725e9-a3d4-4524-9cd1-35bdd950786e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801657,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "[Flags]\npublic enum MyEnum\n{\n    Monday = 1,\n    Tuesday = 2,\n    Wednesday = 4,\n    Thursday = 8,\n    Friday = 16,\n    Saturday = 32, \n    Sunday = 64\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "[Flags]\npublic enum MyEnum\n{\n    Monday = 1,\n    Tuesday = 2,\n    Wednesday = 4,\n    Thursday = 8,\n    Friday = 16,\n    Saturday = 32, \n    Sunday = 64\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801657,
        "id": "f7e883ef-0b0a-4c58-83ff-7965effc6ae1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801657,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now you can compare more than one value at a time, either using "
            ],
            [
              "bitwise comparisons",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " or, if you are using .NET 4.0 or later, the built-in "
            ],
            [
              "Enum.HasFlag",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now you can compare more than one value at a time, either using "
          },
          {
            "Text": "bitwise comparisons",
            "AttrFlags": 4
          },
          {
            "Text": " or, if you are using .NET 4.0 or later, the built-in "
          },
          {
            "Text": "Enum.HasFlag",
            "AttrFlags": 2
          },
          {
            "Text": " method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801657,
        "id": "7054c277-ed49-48af-ad7e-ab9762cc954c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801657,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "MyEnum instance = MyEnum.Monday | MyEnum.Thursday; // instance now has a value of\n                                                   // *both* Monday and Thursday,\n                                                   // represented by (in binary) 0100. \n\nif (instance.HasFlag(MyEnum.Wednesday))\n{\n    // it doesn't, so this block is skipped\n}\nelse if (instance.HasFlag(MyEnum.Thursday))\n{\n    // it does, so this block is executed\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "MyEnum instance = MyEnum.Monday | MyEnum.Thursday; // instance now has a value of\n                                                   // *both* Monday and Thursday,\n                                                   // represented by (in binary) 0100. \n\nif (instance.HasFlag(MyEnum.Wednesday))\n{\n    // it doesn't, so this block is skipped\n}\nelse if (instance.HasFlag(MyEnum.Thursday))\n{\n    // it does, so this block is executed\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950801659,
        "id": "54af1aab-f2d9-4c67-ad8e-0ac0a6c72e13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950801659,
        "parent_id": "9ad4a9b9-0872-4002-84b3-3321c9502360",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Since the Enum class is subclassed from "
            ],
            [
              "System.ValueType",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", it is treated as a value type and passed by value, not by reference. The base object is created on the heap, but when you pass an enum value into a function call, a copy of the value using the underlying value type of the Enum (typically System.Int32) is pushed onto the stack. The compiler tracks the association between this value and the base object that was created on the stack. See "
            ],
            [
              "ValueType Class (System) (MSDN)",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/system.valuetype(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " for more information."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Since the Enum class is subclassed from "
          },
          {
            "Text": "System.ValueType",
            "AttrFlags": 2
          },
          {
            "Text": ", it is treated as a value type and passed by value, not by reference. The base object is created on the heap, but when you pass an enum value into a function call, a copy of the value using the underlying value type of the Enum (typically System.Int32) is pushed onto the stack. The compiler tracks the association between this value and the base object that was created on the stack. See "
          },
          {
            "Text": "ValueType Class (System) (MSDN)",
            "Link": "https://msdn.microsoft.com/en-us/library/system.valuetype(v=vs.110).aspx"
          },
          {
            "Text": " for more information."
          }
        ]
      }
    ],
    "title": "Enum Definition",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}