{
  "ID": "2e9a82d0-beee-4c64-a974-a12898ea2deb",
  "Root": {
    "alive": true,
    "content": [
      "2f44da8b-2987-4705-b2d6-1480ab80950d",
      "67732134-b1e8-4f97-bb08-bf07d6b600f7",
      "091e8df2-b265-434a-ae0f-f1b92b718354",
      "dee98081-d453-4ed2-9e65-2c8453de5154"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551951230371,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2e9a82d0-beee-4c64-a974-a12898ea2deb",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551951230371,
    "parent_id": "10e9af4b-fd8b-4668-bcc1-8a1d2ce2433e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Count distinct characters"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951230368,
        "id": "2f44da8b-2987-4705-b2d6-1480ab80950d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951230368,
        "parent_id": "2e9a82d0-beee-4c64-a974-a12898ea2deb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you need to count distinct characters then, for the reasons explained in "
            ],
            [
              "Remarks",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " section, you can’t simply use "
            ],
            [
              "Length",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " property because it’s the length of the array of "
            ],
            [
              "System.Char",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which are not characters but code-units (not Unicode code-points nor graphemes). If, for example, you simply write "
            ],
            [
              "text.Distinct().Count()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " you will get incorrect results, correct code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you need to count distinct characters then, for the reasons explained in "
          },
          {
            "Text": "Remarks",
            "AttrFlags": 4
          },
          {
            "Text": " section, you can’t simply use "
          },
          {
            "Text": "Length",
            "AttrFlags": 2
          },
          {
            "Text": " property because it’s the length of the array of "
          },
          {
            "Text": "System.Char",
            "AttrFlags": 2
          },
          {
            "Text": " which are not characters but code-units (not Unicode code-points nor graphemes). If, for example, you simply write "
          },
          {
            "Text": "text.Distinct().Count()",
            "AttrFlags": 2
          },
          {
            "Text": " you will get incorrect results, correct code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951230370,
        "id": "67732134-b1e8-4f97-bb08-bf07d6b600f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951230370,
        "parent_id": "2e9a82d0-beee-4c64-a974-a12898ea2deb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "int distinctCharactersCount = text.EnumerateCharacters().Count();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "int distinctCharactersCount = text.EnumerateCharacters().Count();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951230371,
        "id": "091e8df2-b265-434a-ae0f-f1b92b718354",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951230371,
        "parent_id": "2e9a82d0-beee-4c64-a974-a12898ea2deb",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One step further is to "
            ],
            [
              "count occurrences of each character",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              ", if performance aren’t an issue you may simply do it like this (in this example regardless of case):"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "One step further is to "
          },
          {
            "Text": "count occurrences of each character",
            "AttrFlags": 1
          },
          {
            "Text": ", if performance aren’t an issue you may simply do it like this (in this example regardless of case):"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951230371,
        "id": "dee98081-d453-4ed2-9e65-2c8453de5154",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951230371,
        "parent_id": "2e9a82d0-beee-4c64-a974-a12898ea2deb",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var frequencies = text.EnumerateCharacters()\n    .GroupBy(x =\u003e x, StringComparer.CurrentCultureIgnoreCase)\n    .Select(x =\u003e new { Character = x.Key, Count = x.Count() };"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var frequencies = text.EnumerateCharacters()\n    .GroupBy(x =\u003e x, StringComparer.CurrentCultureIgnoreCase)\n    .Select(x =\u003e new { Character = x.Key, Count = x.Count() };",
        "code_language": "Plain Text"
      }
    ],
    "title": "Count distinct characters",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}