{
  "ID": "010c5636-70b5-4b13-a9ab-778c4c3a20e8",
  "Root": {
    "alive": true,
    "content": [
      "1049da97-46ba-4703-8263-1216bb0a1ce8",
      "ec69590e-000d-42cf-b8a1-ce6da24c3170",
      "07ebc09d-87d7-4180-9de5-b3e10ac418c9",
      "8e1b8514-4b6c-4f3c-9c24-fbf02703ad9d",
      "ba266a93-7bb7-41c4-bc10-cc0a6914b97f",
      "377cfead-5ec6-4f4e-8371-05a35680effd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551952272345,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "010c5636-70b5-4b13-a9ab-778c4c3a20e8",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551952272345,
    "parent_id": "7a6daccd-4284-4458-a422-3162f3088238",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Extracting files from ZIP files"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952272344,
        "id": "1049da97-46ba-4703-8263-1216bb0a1ce8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952272344,
        "parent_id": "010c5636-70b5-4b13-a9ab-778c4c3a20e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Extracting all the files into a directory is very easy:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Extracting all the files into a directory is very easy:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952272345,
        "id": "ec69590e-000d-42cf-b8a1-ce6da24c3170",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952272345,
        "parent_id": "010c5636-70b5-4b13-a9ab-778c4c3a20e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "using (FileStream fs = new FileStream(\"archive.zip\", FileMode.Open))\nusing (ZipArchive archive = new ZipArchive(fs, ZipArchiveMode.Read))\n{\n    archive.ExtractToDirectory(AppDomain.CurrentDomain.BaseDirectory);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "using (FileStream fs = new FileStream(\"archive.zip\", FileMode.Open))\nusing (ZipArchive archive = new ZipArchive(fs, ZipArchiveMode.Read))\n{\n    archive.ExtractToDirectory(AppDomain.CurrentDomain.BaseDirectory);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952272345,
        "id": "07ebc09d-87d7-4180-9de5-b3e10ac418c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952272345,
        "parent_id": "010c5636-70b5-4b13-a9ab-778c4c3a20e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When the file already exists, a "
            ],
            [
              "System.IO.IOException",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " will be thrown."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When the file already exists, a "
          },
          {
            "Text": "System.IO.IOException",
            "AttrFlags": 1
          },
          {
            "Text": " will be thrown."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952272345,
        "id": "8e1b8514-4b6c-4f3c-9c24-fbf02703ad9d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952272345,
        "parent_id": "010c5636-70b5-4b13-a9ab-778c4c3a20e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Extracting specific files:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Extracting specific files:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952272345,
        "id": "ba266a93-7bb7-41c4-bc10-cc0a6914b97f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952272345,
        "parent_id": "010c5636-70b5-4b13-a9ab-778c4c3a20e8",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "using (FileStream fs = new FileStream(\"archive.zip\", FileMode.Open))\nusing (ZipArchive archive = new ZipArchive(fs, ZipArchiveMode.Read))\n{\n    // Get a root entry file\n    archive.GetEntry(\"test.txt\").ExtractToFile(\"test_extracted_getentries.txt\", true);\n\n    // Enter a path if you want to extract files from a subdirectory\n    archive.GetEntry(\"sub/subtest.txt\").ExtractToFile(\"test_sub.txt\", true);\n\n    // You can also use the Entries property to find files\n    archive.Entries.FirstOrDefault(f =\u003e f.Name == \"test.txt\")?.ExtractToFile(\"test_extracted_linq.txt\", true);\n\n    // This will throw a System.ArgumentNullException because the file cannot be found\n    archive.GetEntry(\"nonexistingfile.txt\").ExtractToFile(\"fail.txt\", true);\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "using (FileStream fs = new FileStream(\"archive.zip\", FileMode.Open))\nusing (ZipArchive archive = new ZipArchive(fs, ZipArchiveMode.Read))\n{\n    // Get a root entry file\n    archive.GetEntry(\"test.txt\").ExtractToFile(\"test_extracted_getentries.txt\", true);\n\n    // Enter a path if you want to extract files from a subdirectory\n    archive.GetEntry(\"sub/subtest.txt\").ExtractToFile(\"test_sub.txt\", true);\n\n    // You can also use the Entries property to find files\n    archive.Entries.FirstOrDefault(f =\u003e f.Name == \"test.txt\")?.ExtractToFile(\"test_extracted_linq.txt\", true);\n\n    // This will throw a System.ArgumentNullException because the file cannot be found\n    archive.GetEntry(\"nonexistingfile.txt\").ExtractToFile(\"fail.txt\", true);\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952272345,
        "id": "377cfead-5ec6-4f4e-8371-05a35680effd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952272345,
        "parent_id": "010c5636-70b5-4b13-a9ab-778c4c3a20e8",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any of these methods will produce the same result."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any of these methods will produce the same result."
          }
        ]
      }
    ],
    "title": "Extracting files from ZIP files",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}