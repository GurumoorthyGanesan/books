{
  "ID": "8377310e-ee96-4388-b314-a581ae1831de",
  "Root": {
    "alive": true,
    "content": [
      "3e511df3-21db-48bc-9957-2c6aec0eb415",
      "c4611754-2e7e-486d-8471-5755640ec962",
      "e37c45a3-c59f-42ed-88d8-87d80496394e",
      "254ea9bd-67f1-4c4b-abcb-f9b92557ce75",
      "983890de-a8a9-45e3-819e-10289e0be51e",
      "c24547f4-cff1-4ff6-b7f3-35cc63d8a589",
      "3fca423f-ccc2-4446-92dc-217bb572aa87",
      "b081ed70-5bfb-4553-ba92-5c966e4fc93f",
      "07d65402-54ff-43bb-8023-c52a12498730",
      "f4b0ab4c-adfc-4a6a-b346-28bd30635393",
      "59dfb7cb-4e32-44c9-a4d0-6f0e8d695735"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551951245345,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8377310e-ee96-4388-b314-a581ae1831de",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551951245345,
    "parent_id": "31abdfd9-50d6-441e-a8cb-dc351ce38467",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "InvocationExpression Class"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245343,
        "id": "3e511df3-21db-48bc-9957-2c6aec0eb415",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245343,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "InvocationExpression class",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/system.linq.expressions.invocationexpression(v=vs.110).aspx"
                ]
              ]
            ],
            [
              " allows invocation of other lambda expressions that are parts of the same Expression tree."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "InvocationExpression class",
            "Link": "https://msdn.microsoft.com/en-us/library/system.linq.expressions.invocationexpression(v=vs.110).aspx"
          },
          {
            "Text": " allows invocation of other lambda expressions that are parts of the same Expression tree."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245343,
        "id": "c4611754-2e7e-486d-8471-5755640ec962",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245343,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You create them with static "
            ],
            [
              "Expression.Invoke",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You create them with static "
          },
          {
            "Text": "Expression.Invoke",
            "AttrFlags": 2
          },
          {
            "Text": " method."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245343,
        "id": "e37c45a3-c59f-42ed-88d8-87d80496394e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245343,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Problem We want to get on the items which have “car” in their description. We need to check it for null before searching for a string inside but we don’t want it to be called excessively, as the computation could be expensive."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Problem We want to get on the items which have “car” in their description. We need to check it for null before searching for a string inside but we don’t want it to be called excessively, as the computation could be expensive."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245344,
        "id": "254ea9bd-67f1-4c4b-abcb-f9b92557ce75",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245344,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "using System;\nusing System.Linq;\nusing System.Linq.Expressions;\n                    \npublic class Program\n{\n    public static void Main()\n    {\n        var elements = new[] {\n            new Element { Description = \"car\" },\n            new Element { Description = \"cargo\" },\n            new Element { Description = \"wheel\" },\n            new Element { Description = null },\n            new Element { Description = \"Madagascar\" },\n        };\n    \n        var elementIsInterestingExpression = CreateSearchPredicate(\n            searchTerm: \"car\",\n            whereToSearch: (Element e) =\u003e e.Description);\n            \n        Console.WriteLine(elementIsInterestingExpression.ToString());\n            \n        var elementIsInteresting = elementIsInterestingExpression.Compile();\n        var interestingElements = elements.Where(elementIsInteresting);\n        foreach (var e in interestingElements)\n        {\n            Console.WriteLine(e.Description);\n        }\n        \n        var countExpensiveComputations = 0;\n        Action incCount = () =\u003e countExpensiveComputations++;\n        elements\n            .Where(\n                CreateSearchPredicate(\n                    \"car\",\n                    (Element e) =\u003e ExpensivelyComputed(\n                        e, incCount\n                    )\n                ).Compile()\n            )\n            .Count();\n                   \n        Console.WriteLine(\"Property extractor is called {0} times.\", countExpensiveComputations);\n    }\n    \n    private class Element\n    {\n        public string Description { get; set; }\n    }\n    \n    private static string ExpensivelyComputed(Element source, Action count)\n    {\n        count();\n        return source.Description;\n    }\n    \n    private static Expression\u003cFunc\u003cT, bool\u003e\u003e CreateSearchPredicate\u003cT\u003e(\n            string searchTerm,\n            Expression\u003cFunc\u003cT, string\u003e\u003e whereToSearch)\n    {\n        var extracted = Expression.Parameter(typeof(string), \"extracted\");\n    \n        Expression\u003cFunc\u003cstring, bool\u003e\u003e coalesceNullCheckWithSearch =\n            Expression.Lambda\u003cFunc\u003cstring, bool\u003e\u003e(\n                Expression.AndAlso(\n                    Expression.Not(\n                        Expression.Call(typeof(string), \"IsNullOrEmpty\", null, extracted)\n                    ),\n                    Expression.Call(extracted, \"Contains\", null, Expression.Constant(searchTerm))\n                ),\n                extracted);\n                \n        var elementParameter = Expression.Parameter(typeof(T), \"element\");\n                \n        return Expression.Lambda\u003cFunc\u003cT, bool\u003e\u003e(\n            Expression.Invoke(\n                coalesceNullCheckWithSearch,\n                Expression.Invoke(whereToSearch, elementParameter)\n            ),\n            elementParameter\n        );\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "using System;\nusing System.Linq;\nusing System.Linq.Expressions;\n                    \npublic class Program\n{\n    public static void Main()\n    {\n        var elements = new[] {\n            new Element { Description = \"car\" },\n            new Element { Description = \"cargo\" },\n            new Element { Description = \"wheel\" },\n            new Element { Description = null },\n            new Element { Description = \"Madagascar\" },\n        };\n    \n        var elementIsInterestingExpression = CreateSearchPredicate(\n            searchTerm: \"car\",\n            whereToSearch: (Element e) =\u003e e.Description);\n            \n        Console.WriteLine(elementIsInterestingExpression.ToString());\n            \n        var elementIsInteresting = elementIsInterestingExpression.Compile();\n        var interestingElements = elements.Where(elementIsInteresting);\n        foreach (var e in interestingElements)\n        {\n            Console.WriteLine(e.Description);\n        }\n        \n        var countExpensiveComputations = 0;\n        Action incCount = () =\u003e countExpensiveComputations++;\n        elements\n            .Where(\n                CreateSearchPredicate(\n                    \"car\",\n                    (Element e) =\u003e ExpensivelyComputed(\n                        e, incCount\n                    )\n                ).Compile()\n            )\n            .Count();\n                   \n        Console.WriteLine(\"Property extractor is called {0} times.\", countExpensiveComputations);\n    }\n    \n    private class Element\n    {\n        public string Description { get; set; }\n    }\n    \n    private static string ExpensivelyComputed(Element source, Action count)\n    {\n        count();\n        return source.Description;\n    }\n    \n    private static Expression\u003cFunc\u003cT, bool\u003e\u003e CreateSearchPredicate\u003cT\u003e(\n            string searchTerm,\n            Expression\u003cFunc\u003cT, string\u003e\u003e whereToSearch)\n    {\n        var extracted = Expression.Parameter(typeof(string), \"extracted\");\n    \n        Expression\u003cFunc\u003cstring, bool\u003e\u003e coalesceNullCheckWithSearch =\n            Expression.Lambda\u003cFunc\u003cstring, bool\u003e\u003e(\n                Expression.AndAlso(\n                    Expression.Not(\n                        Expression.Call(typeof(string), \"IsNullOrEmpty\", null, extracted)\n                    ),\n                    Expression.Call(extracted, \"Contains\", null, Expression.Constant(searchTerm))\n                ),\n                extracted);\n                \n        var elementParameter = Expression.Parameter(typeof(T), \"element\");\n                \n        return Expression.Lambda\u003cFunc\u003cT, bool\u003e\u003e(\n            Expression.Invoke(\n                coalesceNullCheckWithSearch,\n                Expression.Invoke(whereToSearch, elementParameter)\n            ),\n            elementParameter\n        );\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245344,
        "id": "983890de-a8a9-45e3-819e-10289e0be51e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245344,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245344,
        "id": "c24547f4-cff1-4ff6-b7f3-35cc63d8a589",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245344,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "element =\u003e Invoke(extracted =\u003e (Not(IsNullOrEmpty(extracted)) AndAlso extracted.Contains(\"car\")), Invoke(e =\u003e e.Description, element))\ncar\ncargo\nMadagascar\nPredicate is called 5 times."
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "element =\u003e Invoke(extracted =\u003e (Not(IsNullOrEmpty(extracted)) AndAlso extracted.Contains(\"car\")), Invoke(e =\u003e e.Description, element))\ncar\ncargo\nMadagascar\nPredicate is called 5 times.",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245344,
        "id": "3fca423f-ccc2-4446-92dc-217bb572aa87",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245344,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First thing to note is how the actual propery access, wrapped in an Invoke:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "First thing to note is how the actual propery access, wrapped in an Invoke:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245344,
        "id": "b081ed70-5bfb-4553-ba92-5c966e4fc93f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245344,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Invoke(e =\u003e e.Description, element)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Invoke(e =\u003e e.Description, element)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245344,
        "id": "07d65402-54ff-43bb-8023-c52a12498730",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245344,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              ", and this is the only part that touches "
            ],
            [
              "e.Description",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", and in place of it, "
            ],
            [
              "extracted",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter of type "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is passed to the next one:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": ", and this is the only part that touches "
          },
          {
            "Text": "e.Description",
            "AttrFlags": 2
          },
          {
            "Text": ", and in place of it, "
          },
          {
            "Text": "extracted",
            "AttrFlags": 2
          },
          {
            "Text": " parameter of type "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": " is passed to the next one:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245344,
        "id": "f4b0ab4c-adfc-4a6a-b346-28bd30635393",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245344,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "(Not(IsNullOrEmpty(extracted)) AndAlso extracted.Contains(\"car\"))"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "(Not(IsNullOrEmpty(extracted)) AndAlso extracted.Contains(\"car\"))",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951245345,
        "id": "59dfb7cb-4e32-44c9-a4d0-6f0e8d695735",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951245345,
        "parent_id": "8377310e-ee96-4388-b314-a581ae1831de",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another important thing to note here is "
            ],
            [
              "AndAlso",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It computes only the left part, if the first part returns ‘false’. It’s a common mistake to use the bitwise operator ‘And’ instead of it, which always computes both parts, and would fail with a NullReferenceException in this example."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Another important thing to note here is "
          },
          {
            "Text": "AndAlso",
            "AttrFlags": 2
          },
          {
            "Text": ". It computes only the left part, if the first part returns ‘false’. It’s a common mistake to use the bitwise operator ‘And’ instead of it, which always computes both parts, and would fail with a NullReferenceException in this example."
          }
        ]
      }
    ],
    "title": "InvocationExpression Class",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}