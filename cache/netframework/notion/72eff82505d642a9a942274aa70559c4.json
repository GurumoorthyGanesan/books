{
  "ID": "72eff825-05d6-42a9-a942-274aa70559c4",
  "Root": {
    "alive": true,
    "content": [
      "ee6bda6f-b8b6-4310-bb1f-c8b43e5cd6ca",
      "d4cca24b-a179-4266-8232-d6642898b0a1",
      "192312cb-2b87-4ac4-b2cd-7f0fb5886392",
      "1b433a2c-af6b-45af-a864-fa487557a625",
      "4c3990f4-e202-465d-9d41-4f144351c2fa",
      "ec7c0859-5139-48af-a634-0e4ce57da2a5",
      "e8d77515-06fb-4bbc-9b42-901963dbc2ef",
      "36829854-0277-47fb-9554-0acd03e6c47f",
      "0ed78dc9-1410-41da-b659-2d1a2427eb8d",
      "9e7d4b80-b02e-431e-8b7c-9d85d1f52007",
      "60a361af-ca43-4bea-bdd4-98c1e9c10d9e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551952258887,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "72eff825-05d6-42a9-a942-274aa70559c4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551952258887,
    "parent_id": "4cd15e8e-d40c-4679-9ced-0cfcb5a44695",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Garbage Collection"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258882,
        "id": "ee6bda6f-b8b6-4310-bb1f-c8b43e5cd6ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258882,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Versions"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Versions"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258885,
        "id": "d4cca24b-a179-4266-8232-d6642898b0a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258885,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "[{“Name”:“1.0”,“GroupName”:”.NET”},{“Name”:“1.1”,“GroupName”:”.NET”},{“Name”:“2.0”,“GroupName”:”.NET”},{“Name”:“3.0”,“GroupName”:”.NET”},{“Name”:“3.5”,“GroupName”:”.NET”},{“Name”:“3.5 SP1”,“GroupName”:”.NET”},{“Name”:“4.0”,“GroupName”:”.NET”},{“Name”:“4.5”,“GroupName”:”.NET”},{“Name”:“4.5.1”,“GroupName”:”.NET”},{“Name”:“4.5.2”,“GroupName”:”.NET”},{“Name”:“4.6”,“GroupName”:”.NET”},{“Name”:“4.6.1”,“GroupName”:”.NET”},{“Name”:“4.6.2”,“GroupName”:”.NET”}]"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "[{“Name”:“1.0”,“GroupName”:”.NET”},{“Name”:“1.1”,“GroupName”:”.NET”},{“Name”:“2.0”,“GroupName”:”.NET”},{“Name”:“3.0”,“GroupName”:”.NET”},{“Name”:“3.5”,“GroupName”:”.NET”},{“Name”:“3.5 SP1”,“GroupName”:”.NET”},{“Name”:“4.0”,“GroupName”:”.NET”},{“Name”:“4.5”,“GroupName”:”.NET”},{“Name”:“4.5.1”,“GroupName”:”.NET”},{“Name”:“4.5.2”,“GroupName”:”.NET”},{“Name”:“4.6”,“GroupName”:”.NET”},{“Name”:“4.6.1”,“GroupName”:”.NET”},{“Name”:“4.6.2”,“GroupName”:”.NET”}]"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258885,
        "id": "192312cb-2b87-4ac4-b2cd-7f0fb5886392",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258885,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Introduction"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Introduction"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258885,
        "id": "1b433a2c-af6b-45af-a864-fa487557a625",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258885,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In .Net, objects created with new() are allocated on the managed heap. These objects are never explicitly finalized by the program that uses them; instead, this process is controlled by the .Net Garbage Collector."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In .Net, objects created with new() are allocated on the managed heap. These objects are never explicitly finalized by the program that uses them; instead, this process is controlled by the .Net Garbage Collector."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258885,
        "id": "4c3990f4-e202-465d-9d41-4f144351c2fa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258885,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Some of the examples below are “lab cases” to show the Garbage Collector at work and some significant details of its behavior, while other focus on how to prepare classes for proper handling by the Garbage Collector."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Some of the examples below are “lab cases” to show the Garbage Collector at work and some significant details of its behavior, while other focus on how to prepare classes for proper handling by the Garbage Collector."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258885,
        "id": "ec7c0859-5139-48af-a634-0e4ce57da2a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258885,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Remarks"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Remarks"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258886,
        "id": "e8d77515-06fb-4bbc-9b42-901963dbc2ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258886,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The Garbage Collector is aimed to lower the program cost in terms of allocated memory, but doing so has a cost in terms of processing time. In order to achieve a good overall compromise, there are a number of optimizations that should be taken into consideration while programming with the Garbage Collector in mind:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The Garbage Collector is aimed to lower the program cost in terms of allocated memory, but doing so has a cost in terms of processing time. In order to achieve a good overall compromise, there are a number of optimizations that should be taken into consideration while programming with the Garbage Collector in mind:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258886,
        "id": "36829854-0277-47fb-9554-0acd03e6c47f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258886,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the Collect() method is to be explicitly invoked (which should not often be the case anyway), consider using the “optimized” mode which finalizes dead object only when memory is actually needed"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "If the Collect() method is to be explicitly invoked (which should not often be the case anyway), consider using the “optimized” mode which finalizes dead object only when memory is actually needed"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258887,
        "id": "0ed78dc9-1410-41da-b659-2d1a2427eb8d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258887,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead of invoking the Collect() method, consider using the AddMemoryPressure() and RemoveMemoryPressure() methods, which trigger a memory collection only if actually needed"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead of invoking the Collect() method, consider using the AddMemoryPressure() and RemoveMemoryPressure() methods, which trigger a memory collection only if actually needed"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258887,
        "id": "9e7d4b80-b02e-431e-8b7c-9d85d1f52007",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258887,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A memory collection is not guaranteed to finalize all dead objects; instead, the Garbage Collector manages 3 “generations”, an object sometimes “surviving” from a generation into the next one"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "A memory collection is not guaranteed to finalize all dead objects; instead, the Garbage Collector manages 3 “generations”, an object sometimes “surviving” from a generation into the next one"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952258887,
        "id": "60a361af-ca43-4bea-bdd4-98c1e9c10d9e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952258887,
        "parent_id": "72eff825-05d6-42a9-a942-274aa70559c4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Several threading models may apply, depending on various factors including setup fine tuning, resulting in different degrees of interference between the Garbage Collector thread and the other application thread(s)"
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 1,
        "inline_content": [
          {
            "Text": "Several threading models may apply, depending on various factors including setup fine tuning, resulting in different degrees of interference between the Garbage Collector thread and the other application thread(s)"
          }
        ]
      }
    ],
    "title": "Garbage Collection",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}