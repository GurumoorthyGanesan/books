{
  "ID": "d587912e-0da6-433e-987b-983bd6f37082",
  "Root": {
    "alive": true,
    "content": [
      "f7eda0ea-d700-488e-ba37-b53144449aff",
      "a40da990-7ba5-4664-8eee-8869ff126188",
      "fff38a4b-9bba-4fe4-b41c-9745d89d221f",
      "7ae99da8-f4fa-4cec-81af-eb89e6a5731a",
      "6d946fa5-f352-47a1-b971-70601809a827",
      "1df63f83-5945-4cc6-bc72-80daac621461",
      "506bddf4-1728-45c4-8abd-56f3b9552245",
      "9186bff8-38d7-42df-aaa7-af25f825fdd3",
      "28e6a8e7-2673-4a04-adcd-4b13ee2e9ca2"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551950719411,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d587912e-0da6-433e-987b-983bd6f37082",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551950719411,
    "parent_id": "921d5395-549c-407d-afd3-31f23e97aca9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "ToDictionary"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719407,
        "id": "f7eda0ea-d700-488e-ba37-b53144449aff",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719407,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returns a new dictionary from the source "
            ],
            [
              "IEnumerable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " using the provided keySelector function to determine keys. Will throw an "
            ],
            [
              "ArgumentException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " if keySelector is not injective(returns a unique value for each member of the source collection.) There are overloads which allow one to specify the value to be stored as well as the key."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returns a new dictionary from the source "
          },
          {
            "Text": "IEnumerable",
            "AttrFlags": 2
          },
          {
            "Text": " using the provided keySelector function to determine keys. Will throw an "
          },
          {
            "Text": "ArgumentException",
            "AttrFlags": 2
          },
          {
            "Text": " if keySelector is not injective(returns a unique value for each member of the source collection.) There are overloads which allow one to specify the value to be stored as well as the key."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719410,
        "id": "a40da990-7ba5-4664-8eee-8869ff126188",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719410,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var persons = new[] {\n    new { Name=\"Fizz\", Id=1},\n    new { Name=\"Buzz\", Id=2},\n    new { Name=\"Foo\", Id=3},\n    new { Name=\"Bar\", Id=4},\n};"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var persons = new[] {\n    new { Name=\"Fizz\", Id=1},\n    new { Name=\"Buzz\", Id=2},\n    new { Name=\"Foo\", Id=3},\n    new { Name=\"Bar\", Id=4},\n};",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719410,
        "id": "fff38a4b-9bba-4fe4-b41c-9745d89d221f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719410,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Specifying just a key selector function will create a "
            ],
            [
              "Dictionary\u003cTKey,TVal\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "TKey",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the return Type of the key selector, "
            ],
            [
              "TVal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " the original object Type, and the original object as the stored value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Specifying just a key selector function will create a "
          },
          {
            "Text": "Dictionary\u003cTKey,TVal\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "TKey",
            "AttrFlags": 2
          },
          {
            "Text": " the return Type of the key selector, "
          },
          {
            "Text": "TVal",
            "AttrFlags": 2
          },
          {
            "Text": " the original object Type, and the original object as the stored value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719410,
        "id": "7ae99da8-f4fa-4cec-81af-eb89e6a5731a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719410,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var personsById = persons.ToDictionary(p =\u003e p.Id);\n// personsById is a Dictionary\u003cint,object\u003e\n\nConsole.WriteLine(personsById[1].Name); //Fizz\nConsole.WriteLine(personsById[2].Name); //Buzz"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var personsById = persons.ToDictionary(p =\u003e p.Id);\n// personsById is a Dictionary\u003cint,object\u003e\n\nConsole.WriteLine(personsById[1].Name); //Fizz\nConsole.WriteLine(personsById[2].Name); //Buzz",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719411,
        "id": "6d946fa5-f352-47a1-b971-70601809a827",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719411,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Specifying a value selector function as well will create a "
            ],
            [
              "Dictionary\u003cTKey,TVal\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with "
            ],
            [
              "TKey",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " still the return type of the key selector, but "
            ],
            [
              "TVal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " now the return type of the value selector function, and the returned value as the stored value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Specifying a value selector function as well will create a "
          },
          {
            "Text": "Dictionary\u003cTKey,TVal\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " with "
          },
          {
            "Text": "TKey",
            "AttrFlags": 2
          },
          {
            "Text": " still the return type of the key selector, but "
          },
          {
            "Text": "TVal",
            "AttrFlags": 2
          },
          {
            "Text": " now the return type of the value selector function, and the returned value as the stored value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719411,
        "id": "1df63f83-5945-4cc6-bc72-80daac621461",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719411,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var namesById = persons.ToDictionary(p =\u003e p.Id, p =\u003e p.Name);\n//namesById is a Dictionary\u003cint,string\u003e\n\nConsole.WriteLine(namesById[3]); //Foo\nConsole.WriteLine(namesById[4]); //Bar"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var namesById = persons.ToDictionary(p =\u003e p.Id, p =\u003e p.Name);\n//namesById is a Dictionary\u003cint,string\u003e\n\nConsole.WriteLine(namesById[3]); //Foo\nConsole.WriteLine(namesById[4]); //Bar",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719411,
        "id": "506bddf4-1728-45c4-8abd-56f3b9552245",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719411,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As stated above, the keys returned by the key selector must be unique. The following will throw an exception."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As stated above, the keys returned by the key selector must be unique. The following will throw an exception."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719411,
        "id": "9186bff8-38d7-42df-aaa7-af25f825fdd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719411,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var persons = new[] {\n    new { Name=\"Fizz\", Id=1},\n    new { Name=\"Buzz\", Id=2},\n    new { Name=\"Foo\", Id=3},\n    new { Name=\"Bar\", Id=4},\n    new { Name=\"Oops\", Id=4}\n};\n\nvar willThrowException = persons.ToDictionary(p =\u003e p.Id)"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var persons = new[] {\n    new { Name=\"Fizz\", Id=1},\n    new { Name=\"Buzz\", Id=2},\n    new { Name=\"Foo\", Id=3},\n    new { Name=\"Bar\", Id=4},\n    new { Name=\"Oops\", Id=4}\n};\n\nvar willThrowException = persons.ToDictionary(p =\u003e p.Id)",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950719411,
        "id": "28e6a8e7-2673-4a04-adcd-4b13ee2e9ca2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950719411,
        "parent_id": "d587912e-0da6-433e-987b-983bd6f37082",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If a unique key can not be given for the source collection, consider using ToLookup instead. On the surface, ToLookup behaves similarly to ToDictionary, however, in the resulting Lookup each key is paired with a collection of values with matching keys."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If a unique key can not be given for the source collection, consider using ToLookup instead. On the surface, ToLookup behaves similarly to ToDictionary, however, in the resulting Lookup each key is paired with a collection of values with matching keys."
          }
        ]
      }
    ],
    "title": "ToDictionary",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}