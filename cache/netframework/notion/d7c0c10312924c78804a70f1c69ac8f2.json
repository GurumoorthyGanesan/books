{
  "ID": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
  "Root": {
    "alive": true,
    "content": [
      "d52d114d-29c1-4d1e-ba54-a8fda2217a8d",
      "c52dfa5d-a586-4f62-82cb-2246ed2c40a8",
      "c65c8e58-ad15-422a-9306-18cc638a57eb",
      "7267408a-7fb8-49c9-8e05-5f3432dc2ccc",
      "1bbcd581-893d-417c-9349-b7e5ab96c4ee",
      "00a42921-30d6-41d4-8210-fc2929cfcdf1",
      "0c1e7c67-52e6-46d5-8d1a-909224d764e9",
      "e42bb7be-6d56-4670-95a1-584377d00840",
      "72a66b45-4e5a-4d63-a205-f3d005c6d7f9",
      "05ad4888-3cb4-49d0-a6f5-d4ea08e4bf5a",
      "e9483d62-daf2-4e7b-a2ed-2890e423a4f4"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551952264332,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551952264332,
    "parent_id": "4cd15e8e-d40c-4679-9ced-0cfcb5a44695",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Weak References"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264330,
        "id": "d52d114d-29c1-4d1e-ba54-a8fda2217a8d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264330,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Weak references are… references, to other objects (aka “targets”), but “weak” as they do not prevent those objects from being garbage-collected. In other words, weak references do not count when the Garbage Collector evaluates objects as “live” or “dead”."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Weak references are… references, to other objects (aka “targets”), but “weak” as they do not prevent those objects from being garbage-collected. In other words, weak references do not count when the Garbage Collector evaluates objects as “live” or “dead”."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264331,
        "id": "c52dfa5d-a586-4f62-82cb-2246ed2c40a8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264331,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following code:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The following code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264331,
        "id": "c65c8e58-ad15-422a-9306-18cc638a57eb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264331,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var weak = new WeakReference\u003cFinalizableObject\u003e(new FinalizableObject());\nGC.Collect();"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var weak = new WeakReference\u003cFinalizableObject\u003e(new FinalizableObject());\nGC.Collect();",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264331,
        "id": "7267408a-7fb8-49c9-8e05-5f3432dc2ccc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264331,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Produces the output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Produces the output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264331,
        "id": "1bbcd581-893d-417c-9349-b7e5ab96c4ee",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264331,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "\u003cnamespace\u003e.FinalizableObject initialized\n\u003cnamespace\u003e.FinalizableObject finalized"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "\u003cnamespace\u003e.FinalizableObject initialized\n\u003cnamespace\u003e.FinalizableObject finalized",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264331,
        "id": "00a42921-30d6-41d4-8210-fc2929cfcdf1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264331,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The object is freed from the managed heap despite being referenced by the WeakReference variable (still in scope when the Garbage collector was invoked)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The object is freed from the managed heap despite being referenced by the WeakReference variable (still in scope when the Garbage collector was invoked)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264332,
        "id": "0c1e7c67-52e6-46d5-8d1a-909224d764e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264332,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consequence #1: at any time, it is unsafe to assume whether a WeakReference target is still allocated on the managed heap or not."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consequence #1: at any time, it is unsafe to assume whether a WeakReference target is still allocated on the managed heap or not."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264332,
        "id": "e42bb7be-6d56-4670-95a1-584377d00840",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264332,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Consequence #2: whenever a program needs to access the target of a Weakreference, code should be provided for both cases, of the target being still allocated or not. The method to access the target is TryGetTarget:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Consequence #2: whenever a program needs to access the target of a Weakreference, code should be provided for both cases, of the target being still allocated or not. The method to access the target is TryGetTarget:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264332,
        "id": "72a66b45-4e5a-4d63-a205-f3d005c6d7f9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264332,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var target = new object(); // Any object will do as target\nvar weak = new WeakReference\u003cobject\u003e(target); // Create weak reference\ntarget = null; // Drop strong reference to the target\n\n// ... Many things may happen in-between\n\n// Check whether the target is still available\nif(weak.TryGetTarget(out target))\n{\n    // Use re-initialized target variable\n    // To do whatever the target is needed for\n}\nelse\n{\n    // Do something when there is no more target object\n    // The target variable value should not be used here\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var target = new object(); // Any object will do as target\nvar weak = new WeakReference\u003cobject\u003e(target); // Create weak reference\ntarget = null; // Drop strong reference to the target\n\n// ... Many things may happen in-between\n\n// Check whether the target is still available\nif(weak.TryGetTarget(out target))\n{\n    // Use re-initialized target variable\n    // To do whatever the target is needed for\n}\nelse\n{\n    // Do something when there is no more target object\n    // The target variable value should not be used here\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264332,
        "id": "05ad4888-3cb4-49d0-a6f5-d4ea08e4bf5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264332,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The generic version of WeakReference is available since .Net 4.5. All framework versions provide a non-generic, untyped version that is built in the same way and checked as follows:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The generic version of WeakReference is available since .Net 4.5. All framework versions provide a non-generic, untyped version that is built in the same way and checked as follows:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952264332,
        "id": "e9483d62-daf2-4e7b-a2ed-2890e423a4f4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952264332,
        "parent_id": "d7c0c103-1292-4c78-804a-70f1c69ac8f2",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var target = new object(); // Any object will do as target\nvar weak = new WeakReference(target); // Create weak reference\ntarget = null; // Drop strong reference to the target\n\n// ... Many things may happen in-between\n\n// Check whether the target is still available\nif (weak.IsAlive)\n{\n    target = weak.Target;\n\n    // Use re-initialized target variable\n    // To do whatever the target is needed for\n}\nelse\n{\n    // Do something when there is no more target object\n    // The target variable value should not be used here\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var target = new object(); // Any object will do as target\nvar weak = new WeakReference(target); // Create weak reference\ntarget = null; // Drop strong reference to the target\n\n// ... Many things may happen in-between\n\n// Check whether the target is still available\nif (weak.IsAlive)\n{\n    target = weak.Target;\n\n    // Use re-initialized target variable\n    // To do whatever the target is needed for\n}\nelse\n{\n    // Do something when there is no more target object\n    // The target variable value should not be used here\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Weak References",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}