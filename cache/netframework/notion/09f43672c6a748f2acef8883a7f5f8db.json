{
  "ID": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
  "Root": {
    "alive": true,
    "content": [
      "49805236-2380-4193-9a10-6dd280da7a02",
      "e306579f-d90e-4d97-a677-cdb566cbddcf",
      "21d495e9-65a4-4bfc-b461-729dc1ac2aed",
      "aa366747-9768-45aa-b7c0-e8c8ddc44175",
      "f68778c6-514f-469b-90d6-5b69d5c530a9",
      "9764d257-e612-4693-a3ec-e8715801fc86",
      "1d669ef2-2c85-4834-8b0a-c14fd9c218c0",
      "da42de40-056d-4290-9e9f-7763c89f9d43",
      "5eb208cc-d9c6-451f-804a-7da411d565ef",
      "7f02644b-2fe2-47d5-9d43-00403b81deac",
      "5c2f02ca-5a04-45ae-afc1-32469555383d",
      "18c8019a-11da-4b21-a59e-e7fec4c7d452",
      "30968137-4a2d-4748-9fab-6f74fd1a9716",
      "e150f11e-63aa-4e4b-908d-4bc6a0cfa366",
      "ea9d9794-767a-41e6-a9d9-7bc37fc46513",
      "b50754ee-2886-49c1-bb3c-9329c9364183",
      "21466407-3495-456c-8303-830fb9a80e27",
      "65b1af8a-bec3-4c98-879c-7154435848fe",
      "bd0a76ef-3b17-421e-a1a9-1516828a0686",
      "17fd00cb-6ce3-41c9-99c4-f07361b193ec",
      "8e1fb345-83fd-412a-8e9f-7a6c05e9f5cf",
      "6f66f797-f6fe-4eab-8a11-865ad056810d"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551950641380,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551950641380,
    "parent_id": "f325a25a-1498-455e-9dd1-d3833aa957f9",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Efficiently building multiple serializers with derived types specified dynamically"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641373,
        "id": "49805236-2380-4193-9a10-6dd280da7a02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641373,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Where we came from"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Where we came from"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641376,
        "id": "e306579f-d90e-4d97-a677-cdb566cbddcf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641376,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes we can’t provide all of the required metadata needed for the XmlSerializer framework in attribute. Suppose we have a base class of serialized objects, and some of the derived classes are unknown to the base class. We can’t place an attribute for all of the classes which are not know at the design time of the base type. We could have another team developing some of the derived classes."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes we can’t provide all of the required metadata needed for the XmlSerializer framework in attribute. Suppose we have a base class of serialized objects, and some of the derived classes are unknown to the base class. We can’t place an attribute for all of the classes which are not know at the design time of the base type. We could have another team developing some of the derived classes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641376,
        "id": "21d495e9-65a4-4bfc-b461-729dc1ac2aed",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641376,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What can we do"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "What can we do"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641376,
        "id": "aa366747-9768-45aa-b7c0-e8c8ddc44175",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641376,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can use "
            ],
            [
              "new XmlSerializer(type, knownTypes)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", but that would be a O(N^2) operation for N serializers, at least to discover all of the types supplied in arguments:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can use "
          },
          {
            "Text": "new XmlSerializer(type, knownTypes)",
            "AttrFlags": 2
          },
          {
            "Text": ", but that would be a O(N^2) operation for N serializers, at least to discover all of the types supplied in arguments:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641376,
        "id": "f68778c6-514f-469b-90d6-5b69d5c530a9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641376,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "// Beware of the N^2 in terms of the number of types.\nvar allSerializers = allTypes.Select(t =\u003e new XmlSerializer(t, allTypes));\nvar serializerDictionary = Enumerable.Range(0, allTypes.Length)\n    .ToDictionary (i =\u003e allTypes[i], i =\u003e allSerializers[i])"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "// Beware of the N^2 in terms of the number of types.\nvar allSerializers = allTypes.Select(t =\u003e new XmlSerializer(t, allTypes));\nvar serializerDictionary = Enumerable.Range(0, allTypes.Length)\n    .ToDictionary (i =\u003e allTypes[i], i =\u003e allSerializers[i])",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641377,
        "id": "9764d257-e612-4693-a3ec-e8715801fc86",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641377,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In this example, the the Base type is not aware of it’s derived types, which is normal in OOP."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In this example, the the Base type is not aware of it’s derived types, which is normal in OOP."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641377,
        "id": "1d669ef2-2c85-4834-8b0a-c14fd9c218c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641377,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Doing it efficiently"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Doing it efficiently"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641377,
        "id": "da42de40-056d-4290-9e9f-7763c89f9d43",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641377,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Luckily, there is a method which addresses this particular problem - supplying known types for multiple serializers efficiently:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Luckily, there is a method which addresses this particular problem - supplying known types for multiple serializers efficiently:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641378,
        "id": "5eb208cc-d9c6-451f-804a-7da411d565ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641378,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "System.Xml.Serialization.XmlSerializer.FromTypes Method (Type[])",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlserializer.fromtypes(v=vs.110).aspx#Anchor_1"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "System.Xml.Serialization.XmlSerializer.FromTypes Method (Type[])",
            "Link": "https://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlserializer.fromtypes(v=vs.110).aspx#Anchor_1"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "7f02644b-2fe2-47d5-9d43-00403b81deac",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The FromTypes method allows you to efficiently create an array of XmlSerializer objects for processing an array of Type objects."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "The FromTypes method allows you to efficiently create an array of XmlSerializer objects for processing an array of Type objects."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "5c2f02ca-5a04-45ae-afc1-32469555383d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var allSerializers = XmlSerializer.FromTypes(allTypes);\nvar serializerDictionary = Enumerable.Range(0, allTypes.Length)\n    .ToDictionary(i =\u003e allTypes[i], i =\u003e allSerializers[i]);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var allSerializers = XmlSerializer.FromTypes(allTypes);\nvar serializerDictionary = Enumerable.Range(0, allTypes.Length)\n    .ToDictionary(i =\u003e allTypes[i], i =\u003e allSerializers[i]);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "18c8019a-11da-4b21-a59e-e7fec4c7d452",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is a complete code sample:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is a complete code sample:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "30968137-4a2d-4748-9fab-6f74fd1a9716",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "using System;\nusing System.Collections.Generic;\nusing System.Xml.Serialization;\nusing System.Linq;\nusing System.Linq;\n                    \npublic class Program\n{\n    public class Container\n    {\n        public Base Base { get; set; }\n    }\n    \n    public class Base\n    {\n        public int JustSomePropInBase { get; set; }\n    }\n    \n    public class Derived : Base\n    {\n        public int JustSomePropInDerived { get; set; }\n    }\n    \n    public void Main()\n    {\n        var sampleObject = new Container { Base = new Derived() };\n        var allTypes = new[] { typeof(Container), typeof(Base), typeof(Derived) };\n        \n        Console.WriteLine(\"Trying to serialize without a derived class metadata:\");\n        SetupSerializers(allTypes.Except(new[] { typeof(Derived) }).ToArray());\n        try\n        {\n            Serialize(sampleObject);\n        }\n        catch (InvalidOperationException e)\n        {\n            Console.WriteLine();\n            Console.WriteLine(\"This error was anticipated,\");\n            Console.WriteLine(\"we have not supplied a derived class.\");\n            Console.WriteLine(e);\n        }\n        Console.WriteLine(\"Now trying to serialize with all of the type information:\");\n        SetupSerializers(allTypes);\n        Serialize(sampleObject);\n        Console.WriteLine();\n        Console.WriteLine(\"Slides down well this time!\");\n    }\n\n    static void Serialize\u003cT\u003e(T o)\n    {\n        serializerDictionary[typeof(T)].Serialize(Console.Out, o);\n    }\n\n    private static Dictionary\u003cType, XmlSerializer\u003e serializerDictionary;\n    \n    static void SetupSerializers(Type[] allTypes)\n    {\n        var allSerializers = XmlSerializer.FromTypes(allTypes);\n        serializerDictionary = Enumerable.Range(0, allTypes.Length)\n            .ToDictionary(i =\u003e allTypes[i], i =\u003e allSerializers[i]);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "using System;\nusing System.Collections.Generic;\nusing System.Xml.Serialization;\nusing System.Linq;\nusing System.Linq;\n                    \npublic class Program\n{\n    public class Container\n    {\n        public Base Base { get; set; }\n    }\n    \n    public class Base\n    {\n        public int JustSomePropInBase { get; set; }\n    }\n    \n    public class Derived : Base\n    {\n        public int JustSomePropInDerived { get; set; }\n    }\n    \n    public void Main()\n    {\n        var sampleObject = new Container { Base = new Derived() };\n        var allTypes = new[] { typeof(Container), typeof(Base), typeof(Derived) };\n        \n        Console.WriteLine(\"Trying to serialize without a derived class metadata:\");\n        SetupSerializers(allTypes.Except(new[] { typeof(Derived) }).ToArray());\n        try\n        {\n            Serialize(sampleObject);\n        }\n        catch (InvalidOperationException e)\n        {\n            Console.WriteLine();\n            Console.WriteLine(\"This error was anticipated,\");\n            Console.WriteLine(\"we have not supplied a derived class.\");\n            Console.WriteLine(e);\n        }\n        Console.WriteLine(\"Now trying to serialize with all of the type information:\");\n        SetupSerializers(allTypes);\n        Serialize(sampleObject);\n        Console.WriteLine();\n        Console.WriteLine(\"Slides down well this time!\");\n    }\n\n    static void Serialize\u003cT\u003e(T o)\n    {\n        serializerDictionary[typeof(T)].Serialize(Console.Out, o);\n    }\n\n    private static Dictionary\u003cType, XmlSerializer\u003e serializerDictionary;\n    \n    static void SetupSerializers(Type[] allTypes)\n    {\n        var allSerializers = XmlSerializer.FromTypes(allTypes);\n        serializerDictionary = Enumerable.Range(0, allTypes.Length)\n            .ToDictionary(i =\u003e allTypes[i], i =\u003e allSerializers[i]);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "e150f11e-63aa-4e4b-908d-4bc6a0cfa366",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "ea9d9794-767a-41e6-a9d9-7bc37fc46513",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Trying to serialize without a derived class metadata:\n\u003c?xml version=\"1.0\" encoding=\"utf-16\"?\u003e\n\u003cContainer xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nThis error was anticipated,\nwe have not supplied a derived class.\nSystem.InvalidOperationException: There was an error generating the XML document. ---\u003e System.InvalidOperationException: The type Program+Derived was not expected. Use the XmlInclude or SoapInclude attribute to specify types that are not known statically.\n   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationWriter1.Write2_Base(String n, String ns, Base o, Boolean isNullable, Boolean needType)\n   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationWriter1.Write3_Container(String n, String ns, Container o, Boolean isNullable, Boolean needType)\n   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationWriter1.Write4_Container(Object o)\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle, String id)\n   --- End of inner exception stack trace ---\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle, String id)\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle)\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces)\n   at Program.Serialize[T](T o)\n   at Program.Main()\nNow trying to serialize with all of the type information:\n\u003c?xml version=\"1.0\" encoding=\"utf-16\"?\u003e\n\u003cContainer xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n  \u003cBase xsi:type=\"Derived\"\u003e\n    \u003cJustSomePropInBase\u003e0\u003c/JustSomePropInBase\u003e\n    \u003cJustSomePropInDerived\u003e0\u003c/JustSomePropInDerived\u003e\n  \u003c/Base\u003e\n\u003c/Container\u003e\nSlides down well this time!"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Trying to serialize without a derived class metadata:\n\u003c?xml version=\"1.0\" encoding=\"utf-16\"?\u003e\n\u003cContainer xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nThis error was anticipated,\nwe have not supplied a derived class.\nSystem.InvalidOperationException: There was an error generating the XML document. ---\u003e System.InvalidOperationException: The type Program+Derived was not expected. Use the XmlInclude or SoapInclude attribute to specify types that are not known statically.\n   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationWriter1.Write2_Base(String n, String ns, Base o, Boolean isNullable, Boolean needType)\n   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationWriter1.Write3_Container(String n, String ns, Container o, Boolean isNullable, Boolean needType)\n   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationWriter1.Write4_Container(Object o)\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle, String id)\n   --- End of inner exception stack trace ---\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle, String id)\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle)\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces)\n   at Program.Serialize[T](T o)\n   at Program.Main()\nNow trying to serialize with all of the type information:\n\u003c?xml version=\"1.0\" encoding=\"utf-16\"?\u003e\n\u003cContainer xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n  \u003cBase xsi:type=\"Derived\"\u003e\n    \u003cJustSomePropInBase\u003e0\u003c/JustSomePropInBase\u003e\n    \u003cJustSomePropInDerived\u003e0\u003c/JustSomePropInDerived\u003e\n  \u003c/Base\u003e\n\u003c/Container\u003e\nSlides down well this time!",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "b50754ee-2886-49c1-bb3c-9329c9364183",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What’s in the output"
            ]
          ]
        },
        "type": "sub_sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "What’s in the output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "21466407-3495-456c-8303-830fb9a80e27",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This error message recommends what we tried to avoid (or what we can not do in some scenarios) - referencing derived types from base class:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This error message recommends what we tried to avoid (or what we can not do in some scenarios) - referencing derived types from base class:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641379,
        "id": "65b1af8a-bec3-4c98-879c-7154435848fe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641379,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Use the XmlInclude or SoapInclude attribute to specify types that are not known statically.",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Use the XmlInclude or SoapInclude attribute to specify types that are not known statically.",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641380,
        "id": "bd0a76ef-3b17-421e-a1a9-1516828a0686",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641380,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is how we get our derived class in the XML:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is how we get our derived class in the XML:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641380,
        "id": "17fd00cb-6ce3-41c9-99c4-f07361b193ec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641380,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "\u003cBase xsi:type=\"Derived\"\u003e",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "\u003cBase xsi:type=\"Derived\"\u003e",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641380,
        "id": "8e1fb345-83fd-412a-8e9f-7a6c05e9f5cf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641380,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Base",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " corresponds to the property type declared in the "
            ],
            [
              "Container",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type, and "
            ],
            [
              "Derived",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " being the type of the instance actually supplied."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Base",
            "AttrFlags": 2
          },
          {
            "Text": " corresponds to the property type declared in the "
          },
          {
            "Text": "Container",
            "AttrFlags": 2
          },
          {
            "Text": " type, and "
          },
          {
            "Text": "Derived",
            "AttrFlags": 2
          },
          {
            "Text": " being the type of the instance actually supplied."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950641380,
        "id": "6f66f797-f6fe-4eab-8a11-865ad056810d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950641380,
        "parent_id": "09f43672-c6a7-48f2-acef-8883a7f5f8db",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here is a working "
            ],
            [
              "example fiddle",
              [
                [
                  "a",
                  "https://dotnetfiddle.net/hufepI"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here is a working "
          },
          {
            "Text": "example fiddle",
            "Link": "https://dotnetfiddle.net/hufepI"
          }
        ]
      }
    ],
    "title": "Efficiently building multiple serializers with derived types specified dynamically",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}