{
  "ID": "c72f1c13-941f-4133-a2f3-22f1b9cc76dc",
  "Root": {
    "alive": true,
    "content": [
      "f30a407f-43fc-4c3e-b6f0-b18b196d3cd7",
      "b3eac750-a634-46f0-b296-5f3ee85651e9",
      "d8e153be-f294-4f7f-986e-ebe63a79a522",
      "f8ff314a-cb21-4a87-a483-f7e505ea4666"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551950797683,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c72f1c13-941f-4133-a2f3-22f1b9cc76dc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551950797683,
    "parent_id": "8fb3262d-e5fa-4d3b-86ba-dae1d9f482b0",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Task cancelling using CancellationToken"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950797679,
        "id": "f30a407f-43fc-4c3e-b6f0-b18b196d3cd7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950797679,
        "parent_id": "c72f1c13-941f-4133-a2f3-22f1b9cc76dc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "var cancellationTokenSource = new CancellationTokenSource();\nvar cancellationToken = cancellationTokenSource.Token;\n\nvar task = new Task((state) =\u003e\n    {\n        int i = 1;\n        var myCancellationToken = (CancellationToken)state;\n        while(true)\n        {\n            Console.Write(\"{0} \", i++);\n            Thread.Sleep(1000);\n            myCancellationToken.ThrowIfCancellationRequested();\n        }\n    },\n    cancellationToken: cancellationToken,\n    state: cancellationToken);\n\nConsole.WriteLine(\"Counting to infinity. Press any key to cancel!\");\ntask.Start();\nConsole.ReadKey();\n\ncancellationTokenSource.Cancel();\ntry\n{\n    task.Wait();\n}\ncatch(AggregateException ex)\n{\n    ex.Handle(inner =\u003e inner is OperationCanceledException);\n}\n\nConsole.WriteLine($\"{Environment.NewLine}You have cancelled! Task status is: {task.Status}\");\n//Canceled"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "var cancellationTokenSource = new CancellationTokenSource();\nvar cancellationToken = cancellationTokenSource.Token;\n\nvar task = new Task((state) =\u003e\n    {\n        int i = 1;\n        var myCancellationToken = (CancellationToken)state;\n        while(true)\n        {\n            Console.Write(\"{0} \", i++);\n            Thread.Sleep(1000);\n            myCancellationToken.ThrowIfCancellationRequested();\n        }\n    },\n    cancellationToken: cancellationToken,\n    state: cancellationToken);\n\nConsole.WriteLine(\"Counting to infinity. Press any key to cancel!\");\ntask.Start();\nConsole.ReadKey();\n\ncancellationTokenSource.Cancel();\ntry\n{\n    task.Wait();\n}\ncatch(AggregateException ex)\n{\n    ex.Handle(inner =\u003e inner is OperationCanceledException);\n}\n\nConsole.WriteLine($\"{Environment.NewLine}You have cancelled! Task status is: {task.Status}\");\n//Canceled",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950797682,
        "id": "b3eac750-a634-46f0-b296-5f3ee85651e9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950797682,
        "parent_id": "c72f1c13-941f-4133-a2f3-22f1b9cc76dc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As an alternative to "
            ],
            [
              "ThrowIfCancellationRequested",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", the cancellation request can be detected with "
            ],
            [
              "IsCancellationRequested",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and a "
            ],
            [
              "OperationCanceledException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be thrown manually:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As an alternative to "
          },
          {
            "Text": "ThrowIfCancellationRequested",
            "AttrFlags": 2
          },
          {
            "Text": ", the cancellation request can be detected with "
          },
          {
            "Text": "IsCancellationRequested",
            "AttrFlags": 2
          },
          {
            "Text": " and a "
          },
          {
            "Text": "OperationCanceledException",
            "AttrFlags": 2
          },
          {
            "Text": " can be thrown manually:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950797682,
        "id": "d8e153be-f294-4f7f-986e-ebe63a79a522",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950797682,
        "parent_id": "c72f1c13-941f-4133-a2f3-22f1b9cc76dc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "//New task delegate\nint i = 1;\nvar myCancellationToken = (CancellationToken)state;\nwhile(!myCancellationToken.IsCancellationRequested)\n{\n    Console.Write(\"{0} \", i++);\n    Thread.Sleep(1000);\n}\nConsole.WriteLine($\"{Environment.NewLine}Ouch, I have been cancelled!!\");\nthrow new OperationCanceledException(myCancellationToken);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "//New task delegate\nint i = 1;\nvar myCancellationToken = (CancellationToken)state;\nwhile(!myCancellationToken.IsCancellationRequested)\n{\n    Console.Write(\"{0} \", i++);\n    Thread.Sleep(1000);\n}\nConsole.WriteLine($\"{Environment.NewLine}Ouch, I have been cancelled!!\");\nthrow new OperationCanceledException(myCancellationToken);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551950797683,
        "id": "f8ff314a-cb21-4a87-a483-f7e505ea4666",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551950797683,
        "parent_id": "c72f1c13-941f-4133-a2f3-22f1b9cc76dc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note how the cancellation token is passed to the task constructor in the "
            ],
            [
              "cancellationToken",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " parameter. This is needed so that the task transitions to the "
            ],
            [
              "Canceled",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " state, not to the "
            ],
            [
              "Faulted",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " state, when "
            ],
            [
              "ThrowIfCancellationRequested",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is invoked. Also, for the same reason, the cancellation token is explicitly supplied in the constructor of "
            ],
            [
              "OperationCanceledException",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the second case."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note how the cancellation token is passed to the task constructor in the "
          },
          {
            "Text": "cancellationToken",
            "AttrFlags": 2
          },
          {
            "Text": " parameter. This is needed so that the task transitions to the "
          },
          {
            "Text": "Canceled",
            "AttrFlags": 2
          },
          {
            "Text": " state, not to the "
          },
          {
            "Text": "Faulted",
            "AttrFlags": 2
          },
          {
            "Text": " state, when "
          },
          {
            "Text": "ThrowIfCancellationRequested",
            "AttrFlags": 2
          },
          {
            "Text": " is invoked. Also, for the same reason, the cancellation token is explicitly supplied in the constructor of "
          },
          {
            "Text": "OperationCanceledException",
            "AttrFlags": 2
          },
          {
            "Text": " in the second case."
          }
        ]
      }
    ],
    "title": "Task cancelling using CancellationToken",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}