{
  "ID": "2cc7fc6c-6b16-4d01-b91e-05bb8ad1782f",
  "Root": {
    "alive": true,
    "content": [
      "dc23e2d9-7a66-4ed6-85f6-f21ac1433a03",
      "59ef7d21-15c1-47ff-923e-510e7c1fe856",
      "dbde0561-f3f8-48fc-b21e-c18979c6b91f",
      "287e2ff7-39ab-455a-8f05-7d3f17b9ce33",
      "93d91c63-96a4-4f07-a7fd-e5fce581ce1e"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551951733625,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2cc7fc6c-6b16-4d01-b91e-05bb8ad1782f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551951733625,
    "parent_id": "4541582a-f233-40f5-8dc4-eb0d6c1eb10e",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Simple Progress reporting"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951733622,
        "id": "dc23e2d9-7a66-4ed6-85f6-f21ac1433a03",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951733622,
        "parent_id": "2cc7fc6c-6b16-4d01-b91e-05bb8ad1782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "IProgress\u003cT\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be used to report progress of some procedure to another procedure. This example shows how you can create a basic method that reports its progress."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "IProgress\u003cT\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " can be used to report progress of some procedure to another procedure. This example shows how you can create a basic method that reports its progress."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951733624,
        "id": "59ef7d21-15c1-47ff-923e-510e7c1fe856",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951733624,
        "parent_id": "2cc7fc6c-6b16-4d01-b91e-05bb8ad1782f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "void Main()\n{\n    IProgress\u003cint\u003e p = new Progress\u003cint\u003e(progress =\u003e\n    {\n        Console.WriteLine(\"Running Step: {0}\", progress);\n    });\n    LongJob(p);\n}\n\npublic void LongJob(IProgress\u003cint\u003e progress)\n{\n    var max = 10;\n    for (int i = 0; i \u003c max; i++)\n    {\n        progress.Report(i);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "void Main()\n{\n    IProgress\u003cint\u003e p = new Progress\u003cint\u003e(progress =\u003e\n    {\n        Console.WriteLine(\"Running Step: {0}\", progress);\n    });\n    LongJob(p);\n}\n\npublic void LongJob(IProgress\u003cint\u003e progress)\n{\n    var max = 10;\n    for (int i = 0; i \u003c max; i++)\n    {\n        progress.Report(i);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951733625,
        "id": "dbde0561-f3f8-48fc-b21e-c18979c6b91f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951733625,
        "parent_id": "2cc7fc6c-6b16-4d01-b91e-05bb8ad1782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Output:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Output:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951733625,
        "id": "287e2ff7-39ab-455a-8f05-7d3f17b9ce33",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951733625,
        "parent_id": "2cc7fc6c-6b16-4d01-b91e-05bb8ad1782f",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Running Step: 0\nRunning Step: 3\nRunning Step: 4\nRunning Step: 5\nRunning Step: 6\nRunning Step: 7\nRunning Step: 8\nRunning Step: 9\nRunning Step: 2\nRunning Step: 1"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Running Step: 0\nRunning Step: 3\nRunning Step: 4\nRunning Step: 5\nRunning Step: 6\nRunning Step: 7\nRunning Step: 8\nRunning Step: 9\nRunning Step: 2\nRunning Step: 1",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951733625,
        "id": "93d91c63-96a4-4f07-a7fd-e5fce581ce1e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951733625,
        "parent_id": "2cc7fc6c-6b16-4d01-b91e-05bb8ad1782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Note that when you this code runs, you may see numbers be output out of order. This is because the "
            ],
            [
              "IProgress\u003cT\u003e.Report()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method is run asynchronously, and is therefore not as suitable for situations where the progress must be reported in order."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Note that when you this code runs, you may see numbers be output out of order. This is because the "
          },
          {
            "Text": "IProgress\u003cT\u003e.Report()",
            "AttrFlags": 2
          },
          {
            "Text": " method is run asynchronously, and is therefore not as suitable for situations where the progress must be reported in order."
          }
        ]
      }
    ],
    "title": "Simple Progress reporting",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}