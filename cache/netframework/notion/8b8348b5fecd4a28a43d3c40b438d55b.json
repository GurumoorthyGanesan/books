{
  "ID": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
  "Root": {
    "alive": true,
    "content": [
      "d67bf8c1-f986-4449-90b2-59d1701189fd",
      "9580633f-72d3-4b40-aca5-853321cd74e6",
      "ceb1a5e1-bddc-47fe-ac73-8610b95e179d",
      "6333f034-db8d-4963-8960-c560fd57ff4a",
      "90049fb8-5bde-4b9f-a899-693e51d1652b",
      "e709230a-9c60-4c3c-a66f-c0cfbe66d560",
      "cf7a55ba-cc4f-4843-b91e-56ca3aa44ef7"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551951042924,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551951042924,
    "parent_id": "14c88a94-7b13-45dc-9cf2-d5a6b03bcf14",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "020 Unmanaged Resources"
        ]
      ]
    },
    "type": "page",
    "version": 2,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951042920,
        "id": "d67bf8c1-f986-4449-90b2-59d1701189fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951042920,
        "parent_id": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When we talk about the GC and the “heap”, we’re really talking about what’s called the "
            ],
            [
              "managed heap",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". Objects on the "
            ],
            [
              "managed heap",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " can access resources not on the managed heap, for example, when writing to or reading from a file. Unexpected behavior can occur when, a file is opened for reading and then an exception occurs, preventing the file handle from closing as it normally would. For this reason, .NET requires that unmanaged resources implement the "
            ],
            [
              "IDisposable",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface. This interface has a single method called "
            ],
            [
              "Dispose",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with no parameters:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When we talk about the GC and the “heap”, we’re really talking about what’s called the "
          },
          {
            "Text": "managed heap",
            "AttrFlags": 4
          },
          {
            "Text": ". Objects on the "
          },
          {
            "Text": "managed heap",
            "AttrFlags": 4
          },
          {
            "Text": " can access resources not on the managed heap, for example, when writing to or reading from a file. Unexpected behavior can occur when, a file is opened for reading and then an exception occurs, preventing the file handle from closing as it normally would. For this reason, .NET requires that unmanaged resources implement the "
          },
          {
            "Text": "IDisposable",
            "AttrFlags": 2
          },
          {
            "Text": " interface. This interface has a single method called "
          },
          {
            "Text": "Dispose",
            "AttrFlags": 2
          },
          {
            "Text": " with no parameters:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951042923,
        "id": "9580633f-72d3-4b40-aca5-853321cd74e6",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951042923,
        "parent_id": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "public interface IDisposable\n{\n    Dispose();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "public interface IDisposable\n{\n    Dispose();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951042923,
        "id": "ceb1a5e1-bddc-47fe-ac73-8610b95e179d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951042923,
        "parent_id": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When handling unmanaged resources, you should make sure that they are properly disposed. You can do this by explicitly calling "
            ],
            [
              "Dispose()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in a "
            ],
            [
              "finally",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " block, or with a "
            ],
            [
              "using",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " statement."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When handling unmanaged resources, you should make sure that they are properly disposed. You can do this by explicitly calling "
          },
          {
            "Text": "Dispose()",
            "AttrFlags": 2
          },
          {
            "Text": " in a "
          },
          {
            "Text": "finally",
            "AttrFlags": 2
          },
          {
            "Text": " block, or with a "
          },
          {
            "Text": "using",
            "AttrFlags": 2
          },
          {
            "Text": " statement."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951042923,
        "id": "6333f034-db8d-4963-8960-c560fd57ff4a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951042923,
        "parent_id": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "StreamReader sr; \nstring textFromFile;\nstring filename = \"SomeFile.txt\";\ntry \n{\n    sr = new StreamReader(filename);\n    textFromFile = sr.ReadToEnd();\n}\nfinally\n{\n    if (sr != null) sr.Dispose();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "StreamReader sr; \nstring textFromFile;\nstring filename = \"SomeFile.txt\";\ntry \n{\n    sr = new StreamReader(filename);\n    textFromFile = sr.ReadToEnd();\n}\nfinally\n{\n    if (sr != null) sr.Dispose();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951042923,
        "id": "90049fb8-5bde-4b9f-a899-693e51d1652b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951042923,
        "parent_id": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "or"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "or"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951042924,
        "id": "e709230a-9c60-4c3c-a66f-c0cfbe66d560",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951042924,
        "parent_id": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "string textFromFile;\nstring filename = \"SomeFile.txt\";\n\nusing (StreamReader sr = new Streamreader(filename))\n{\n    textFromFile = sr.ReadToEnd();\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "string textFromFile;\nstring filename = \"SomeFile.txt\";\n\nusing (StreamReader sr = new Streamreader(filename))\n{\n    textFromFile = sr.ReadToEnd();\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551951042924,
        "id": "cf7a55ba-cc4f-4843-b91e-56ca3aa44ef7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551951042924,
        "parent_id": "8b8348b5-fecd-4a28-a43d-3c40b438d55b",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The latter is the preferred method, and is automatically expanded to the former during compilation."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The latter is the preferred method, and is automatically expanded to the former during compilation."
          }
        ]
      }
    ],
    "title": "020 Unmanaged Resources",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}