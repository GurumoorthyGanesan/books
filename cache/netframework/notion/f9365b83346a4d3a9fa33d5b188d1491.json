{
  "ID": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
  "Root": {
    "alive": true,
    "content": [
      "c7e8ef27-4771-4be8-97bb-fce3df9e335c",
      "66cf8a23-c069-4cde-84fc-758eb3ae3623",
      "f77ad6bc-5356-43b7-b312-eac1f350de31",
      "befa4f3b-a7b9-4a11-97bc-4e4f3499a6c9",
      "87f25c91-a3ea-4730-8f59-5abf3766afd8",
      "63212637-1af9-439b-8a5a-98f3ee89fed7",
      "bbde7574-d8ed-456e-aef0-8afad7829355",
      "e344ba73-a2e6-4998-ad65-f1feb8dd1eca",
      "7511788f-9300-4488-973c-601cd72c3e14",
      "c58fbc2e-664d-499c-a4b8-434d3da5c381"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551952216809,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551952216809,
    "parent_id": "fc35a31f-b4a1-4387-bb6b-e20e80d8c4c4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Reference types in use"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216807,
        "id": "c7e8ef27-4771-4be8-97bb-fce3df9e335c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216807,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reference types are comprised of both a "
            ],
            [
              "reference",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " to a memory area, and a "
            ],
            [
              "value",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " stored within that area."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reference types are comprised of both a "
          },
          {
            "Text": "reference",
            "AttrFlags": 5
          },
          {
            "Text": " to a memory area, and a "
          },
          {
            "Text": "value",
            "AttrFlags": 5
          },
          {
            "Text": " stored within that area."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216807,
        "id": "66cf8a23-c069-4cde-84fc-758eb3ae3623",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216807,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is analogous to pointers in C/C++."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is analogous to pointers in C/C++."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216808,
        "id": "f77ad6bc-5356-43b7-b312-eac1f350de31",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216808,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All reference types are stored on what is known as "
            ],
            [
              "the heap",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All reference types are stored on what is known as "
          },
          {
            "Text": "the heap",
            "AttrFlags": 5
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216808,
        "id": "befa4f3b-a7b9-4a11-97bc-4e4f3499a6c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216808,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The heap is simply a managed area of memory where objects are stored. When a new object is instantiated, a part of the heap will be allocated for use by that object, and a reference to that location of the heap will be returned. The heap is managed and maintained by the "
            ],
            [
              "garbage collector",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", and does not allow for manual intervention."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The heap is simply a managed area of memory where objects are stored. When a new object is instantiated, a part of the heap will be allocated for use by that object, and a reference to that location of the heap will be returned. The heap is managed and maintained by the "
          },
          {
            "Text": "garbage collector",
            "AttrFlags": 4
          },
          {
            "Text": ", and does not allow for manual intervention."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216808,
        "id": "87f25c91-a3ea-4730-8f59-5abf3766afd8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216808,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In addition to the memory space required for the instance itself, additional space is required to store the reference itself, along with additional temporary information required by the .NET CLR."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In addition to the memory space required for the instance itself, additional space is required to store the reference itself, along with additional temporary information required by the .NET CLR."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216808,
        "id": "63212637-1af9-439b-8a5a-98f3ee89fed7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216808,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The code below demonstrates a reference type being assigned to a new variable. In this instance, we are using a class, all classes are reference types (even if static)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The code below demonstrates a reference type being assigned to a new variable. In this instance, we are using a class, all classes are reference types (even if static)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216808,
        "id": "bbde7574-d8ed-456e-aef0-8afad7829355",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216808,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When a reference type is assigned to another variable, it is the "
            ],
            [
              "reference",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " to the object that is copied over, "
            ],
            [
              "not",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " the value itself. This is an important distinction between value types and reference types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When a reference type is assigned to another variable, it is the "
          },
          {
            "Text": "reference",
            "AttrFlags": 5
          },
          {
            "Text": " to the object that is copied over, "
          },
          {
            "Text": "not",
            "AttrFlags": 1
          },
          {
            "Text": " the value itself. This is an important distinction between value types and reference types."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216808,
        "id": "e344ba73-a2e6-4998-ad65-f1feb8dd1eca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216808,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The implications of this are that we now have "
            ],
            [
              "two",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " references to the same object."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The implications of this are that we now have "
          },
          {
            "Text": "two",
            "AttrFlags": 4
          },
          {
            "Text": " references to the same object."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216808,
        "id": "7511788f-9300-4488-973c-601cd72c3e14",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216808,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Any changes to the values within that object will be reflected by both variables."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Any changes to the values within that object will be reflected by both variables."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952216809,
        "id": "c58fbc2e-664d-499c-a4b8-434d3da5c381",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952216809,
        "parent_id": "f9365b83-346a-4d3a-9fa3-3d5b188d1491",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "class PersonAsReferenceType\n{\n    public string Name;\n}\n\nclass Program\n{\n    static void Main()\n    {\n        PersonAsReferenceType personA;\n\n        personA = new PersonAsReferenceType { Name = \"Bob\" };\n\n        var personB = personA;\n\n        personA.Name = \"Linda\";\n\n        Console.WriteLine(               // Outputs 'True' - because\n            object.ReferenceEquals(      // personA and personB are referencing \n                personA,                 // the *same* memory location\n                personB));\n\n        Console.WriteLine(personA.Name); // Outputs 'Linda'\n        Console.WriteLine(personB.Name); // Outputs 'Linda'\n    }"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "class PersonAsReferenceType\n{\n    public string Name;\n}\n\nclass Program\n{\n    static void Main()\n    {\n        PersonAsReferenceType personA;\n\n        personA = new PersonAsReferenceType { Name = \"Bob\" };\n\n        var personB = personA;\n\n        personA.Name = \"Linda\";\n\n        Console.WriteLine(               // Outputs 'True' - because\n            object.ReferenceEquals(      // personA and personB are referencing \n                personA,                 // the *same* memory location\n                personB));\n\n        Console.WriteLine(personA.Name); // Outputs 'Linda'\n        Console.WriteLine(personB.Name); // Outputs 'Linda'\n    }",
        "code_language": "Plain Text"
      }
    ],
    "title": "Reference types in use",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}