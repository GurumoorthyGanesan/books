{
  "ID": "39da5113-0a37-4ee1-b322-5c0271b97e45",
  "Root": {
    "alive": true,
    "content": [
      "00868508-6cb5-4ee1-9c86-e24c58b44345",
      "67d790e3-2cb3-4095-b828-1232b3a9ed90",
      "7499e7f6-5054-4aff-8197-200d2df1b7bf",
      "dc9b5781-6505-495f-849d-565486f083dd",
      "6f852332-b9dd-4c4a-a7b6-b7ba8606f4e3",
      "d02c63ae-48f2-475f-83c8-7f7cfb266bec",
      "67a5f061-1e9b-46a6-bafb-2d07ddf380bb"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1551952215764,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "39da5113-0a37-4ee1-b322-5c0271b97e45",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1551952215764,
    "parent_id": "fc35a31f-b4a1-4387-bb6b-e20e80d8c4c4",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Value types in use"
        ]
      ]
    },
    "type": "page",
    "version": 3,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952215762,
        "id": "00868508-6cb5-4ee1-9c86-e24c58b44345",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952215762,
        "parent_id": "39da5113-0a37-4ee1-b322-5c0271b97e45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Value types simply contain a "
            ],
            [
              "value",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Value types simply contain a "
          },
          {
            "Text": "value",
            "AttrFlags": 5
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952215763,
        "id": "67d790e3-2cb3-4095-b828-1232b3a9ed90",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952215763,
        "parent_id": "39da5113-0a37-4ee1-b322-5c0271b97e45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All value types are derived from the "
            ],
            [
              "System.ValueType",
              [
                [
                  "a",
                  "https://msdn.microsoft.com/en-us/library/system.valuetype.aspx"
                ]
              ]
            ],
            [
              " class, and this includes most of the built in types."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All value types are derived from the "
          },
          {
            "Text": "System.ValueType",
            "Link": "https://msdn.microsoft.com/en-us/library/system.valuetype.aspx"
          },
          {
            "Text": " class, and this includes most of the built in types."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952215763,
        "id": "7499e7f6-5054-4aff-8197-200d2df1b7bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952215763,
        "parent_id": "39da5113-0a37-4ee1-b322-5c0271b97e45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When creating a new value type, the an area of memory called "
            ],
            [
              "the stack",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " is used."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When creating a new value type, the an area of memory called "
          },
          {
            "Text": "the stack",
            "AttrFlags": 5
          },
          {
            "Text": " is used."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952215763,
        "id": "dc9b5781-6505-495f-849d-565486f083dd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952215763,
        "parent_id": "39da5113-0a37-4ee1-b322-5c0271b97e45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The stack will grow accordingly, by the size the declared type. So for example, an int will always be allocated 32 bits of memory on the stack. When the value type is no longer in scope, the space on the stack will be deallocated."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The stack will grow accordingly, by the size the declared type. So for example, an int will always be allocated 32 bits of memory on the stack. When the value type is no longer in scope, the space on the stack will be deallocated."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952215764,
        "id": "6f852332-b9dd-4c4a-a7b6-b7ba8606f4e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952215764,
        "parent_id": "39da5113-0a37-4ee1-b322-5c0271b97e45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The code below demonstrates a value type being assigned to a new variable. A struct is being used as a convenient way to create a custom value type (the System.ValueType class cannot be otherwise extended)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The code below demonstrates a value type being assigned to a new variable. A struct is being used as a convenient way to create a custom value type (the System.ValueType class cannot be otherwise extended)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952215764,
        "id": "d02c63ae-48f2-475f-83c8-7f7cfb266bec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952215764,
        "parent_id": "39da5113-0a37-4ee1-b322-5c0271b97e45",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The important thing to understand is that when assigning a value type, the value itself "
            ],
            [
              "copied",
              [
                [
                  "b"
                ],
                [
                  "i"
                ]
              ]
            ],
            [
              " to the new variable, meaning we have two distinct instances of the object, that cannot affect each other."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The important thing to understand is that when assigning a value type, the value itself "
          },
          {
            "Text": "copied",
            "AttrFlags": 5
          },
          {
            "Text": " to the new variable, meaning we have two distinct instances of the object, that cannot affect each other."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551952215764,
        "id": "67a5f061-1e9b-46a6-bafb-2d07ddf380bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551952215764,
        "parent_id": "39da5113-0a37-4ee1-b322-5c0271b97e45",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "struct PersonAsValueType\n{\n    public string Name;\n}\n\nclass Program\n{\n    static void Main()\n    {\n        PersonAsValueType personA;\n\n        personA.Name = \"Bob\";\n\n        var personB = personA;\n\n        personA.Name = \"Linda\";\n\n        Console.WriteLine(                // Outputs 'False' - because \n            object.ReferenceEquals(       // personA and personB are referencing \n                personA,                  // different areas of memory\n                personB));                \n\n        Console.WriteLine(personA.Name);  // Outputs 'Linda'\n        Console.WriteLine(personB.Name);  // Outputs 'Bob'\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "struct PersonAsValueType\n{\n    public string Name;\n}\n\nclass Program\n{\n    static void Main()\n    {\n        PersonAsValueType personA;\n\n        personA.Name = \"Bob\";\n\n        var personB = personA;\n\n        personA.Name = \"Linda\";\n\n        Console.WriteLine(                // Outputs 'False' - because \n            object.ReferenceEquals(       // personA and personB are referencing \n                personA,                  // different areas of memory\n                personB));                \n\n        Console.WriteLine(personA.Name);  // Outputs 'Linda'\n        Console.WriteLine(personB.Name);  // Outputs 'Bob'\n    }\n}",
        "code_language": "Plain Text"
      }
    ],
    "title": "Value types in use",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}