{
  "ID": "4d0e2869-3dd0-4f54-9bf8-960e2ffeeff5",
  "Root": {
    "alive": true,
    "content": [
      "c091b9a9-846e-43ce-8322-3dd3842ca012",
      "f4443ec1-4926-4759-8832-558e8d72df8b",
      "6c6076d6-076e-4e3b-b0ba-ac138cb032fb",
      "71559e7d-6cb7-484d-b355-d4aec8190ca1",
      "cddfad2c-9dff-43b5-8c93-aea71a3d97c1",
      "2bb6607c-d4c4-44d3-8627-0f699bdec1c8"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550382638227,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "4d0e2869-3dd0-4f54-9bf8-960e2ffeeff5",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550568360000,
    "parent_id": "bb732350-3d32-483f-acfb-50caa85e7ba3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "RANGE Partitioning"
        ]
      ]
    },
    "type": "page",
    "version": 10,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550382638222,
        "id": "c091b9a9-846e-43ce-8322-3dd3842ca012",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550382638222,
        "parent_id": "4d0e2869-3dd0-4f54-9bf8-960e2ffeeff5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A table that is partitioned by range is partitioned in such a way that each partition contains rows for which the partitioning expression value lies within a given range. Ranges should be contiguous but not overlapping, and are defined using the "
            ],
            [
              "VALUES LESS THAN",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " operator. For the next few examples, suppose that you are creating a table such as the following to hold personnel records for a chain of 20 video stores, numbered 1 through 20:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "A table that is partitioned by range is partitioned in such a way that each partition contains rows for which the partitioning expression value lies within a given range. Ranges should be contiguous but not overlapping, and are defined using the "
          },
          {
            "Text": "VALUES LESS THAN",
            "AttrFlags": 2
          },
          {
            "Text": " operator. For the next few examples, suppose that you are creating a table such as the following to hold personnel records for a chain of 20 video stores, numbered 1 through 20:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550382638225,
        "id": "f4443ec1-4926-4759-8832-558e8d72df8b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550382638225,
        "parent_id": "4d0e2869-3dd0-4f54-9bf8-960e2ffeeff5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "CREATE TABLE employees (\n    id INT NOT NULL,\n    fname VARCHAR(30),\n    lname VARCHAR(30),\n    hired DATE NOT NULL DEFAULT '1970-01-01',\n    separated DATE NOT NULL DEFAULT '9999-12-31',\n    job_code INT NOT NULL,\n    store_id INT NOT NULL\n);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "CREATE TABLE employees (\n    id INT NOT NULL,\n    fname VARCHAR(30),\n    lname VARCHAR(30),\n    hired DATE NOT NULL DEFAULT '1970-01-01',\n    separated DATE NOT NULL DEFAULT '9999-12-31',\n    job_code INT NOT NULL,\n    store_id INT NOT NULL\n);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550382638225,
        "id": "6c6076d6-076e-4e3b-b0ba-ac138cb032fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550382638225,
        "parent_id": "4d0e2869-3dd0-4f54-9bf8-960e2ffeeff5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This table can be partitioned by range in a number of ways, depending on your needs. One way would be to use the "
            ],
            [
              "store_id",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " column. For instance, you might decide to partition the table 4 ways by adding a "
            ],
            [
              "PARTITION BY RANGE",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " clause as shown here:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This table can be partitioned by range in a number of ways, depending on your needs. One way would be to use the "
          },
          {
            "Text": "store_id",
            "AttrFlags": 2
          },
          {
            "Text": " column. For instance, you might decide to partition the table 4 ways by adding a "
          },
          {
            "Text": "PARTITION BY RANGE",
            "AttrFlags": 2
          },
          {
            "Text": " clause as shown here:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550382638225,
        "id": "71559e7d-6cb7-484d-b355-d4aec8190ca1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550382638225,
        "parent_id": "4d0e2869-3dd0-4f54-9bf8-960e2ffeeff5",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "ALTER TABLE employees PARTITION BY RANGE (store_id) (\n    PARTITION p0 VALUES LESS THAN (6),\n    PARTITION p1 VALUES LESS THAN (11),\n    PARTITION p2 VALUES LESS THAN (16),\n    PARTITION p3 VALUES LESS THAN MAXVALUE\n);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "ALTER TABLE employees PARTITION BY RANGE (store_id) (\n    PARTITION p0 VALUES LESS THAN (6),\n    PARTITION p1 VALUES LESS THAN (11),\n    PARTITION p2 VALUES LESS THAN (16),\n    PARTITION p3 VALUES LESS THAN MAXVALUE\n);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550382638226,
        "id": "cddfad2c-9dff-43b5-8c93-aea71a3d97c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550382638226,
        "parent_id": "4d0e2869-3dd0-4f54-9bf8-960e2ffeeff5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "MAXVALUE represents an integer value that is always greater than the largest possible integer value (in mathematical language, it serves as a least upper bound)."
            ]
          ]
        },
        "type": "quote",
        "version": 1,
        "inline_content": [
          {
            "Text": "MAXVALUE represents an integer value that is always greater than the largest possible integer value (in mathematical language, it serves as a least upper bound)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550382638227,
        "id": "2bb6607c-d4c4-44d3-8627-0f699bdec1c8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550382638227,
        "parent_id": "4d0e2869-3dd0-4f54-9bf8-960e2ffeeff5",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "based on "
            ],
            [
              "MySQL official document",
              [
                [
                  "a",
                  "http://dev.mysql.com/doc/refman/5.7/en/partitioning-range.html"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "based on "
          },
          {
            "Text": "MySQL official document",
            "Link": "http://dev.mysql.com/doc/refman/5.7/en/partitioning-range.html"
          },
          {
            "Text": "."
          }
        ]
      }
    ],
    "title": "RANGE Partitioning",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}