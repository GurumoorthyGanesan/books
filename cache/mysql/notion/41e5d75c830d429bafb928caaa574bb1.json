{
  "ID": "41e5d75c-830d-429b-afb9-28caaa574bb1",
  "Root": {
    "alive": true,
    "content": [
      "389f78fe-5b44-4663-91ec-8e5c07f93e9a",
      "16048d33-f3c1-4a30-94d3-de04a373a78c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550381382300,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "41e5d75c-830d-429b-afb9-28caaa574bb1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550563260000,
    "parent_id": "df3e984b-c17c-4ef4-bdc3-32de317ef279",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "String operations"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550381382299,
        "id": "389f78fe-5b44-4663-91ec-8e5c07f93e9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550381382299,
        "parent_id": "41e5d75c-830d-429b-afb9-28caaa574bb1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parameters"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parameters"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550381382300,
        "id": "16048d33-f3c1-4a30-94d3-de04a373a78c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550381382300,
        "parent_id": "41e5d75c-830d-429b-afb9-28caaa574bb1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "| Name | Description | |—––|–––––––| | ASCII() | Return numeric value of left-most character | | BIN() | Return a string containing binary representation of a number | | BIT_LENGTH() | Return length of argument in bits | | CHAR() | Return the character for each integer passed | | CHAR_LENGTH() | Return number of characters in argument | | CHARACTER_LENGTH() | Synonym for CHAR_LENGTH() | | CONCAT() | Return concatenated string | | CONCAT_WS() | Return concatenate with separator | | ELT() | Return string at index number | | EXPORT_SET() | Return a string such that for every bit set in the value bits, you get an on string and for every unset bit, you get an off string | | FIELD() | Return the index (position) of the first argument in the subsequent arguments | | FIND_IN_SET() | Return the index position of the first argument within the second argument | | FORMAT() | Return a number formatted to specified number of decimal places | | FROM_BASE64() | Decode to a base-64 string and return result | | HEX() | Return a hexadecimal representation of a decimal or string value | | INSERT() | Insert a substring at the specified position up to the specified number of characters | | INSTR() | Return the index of the first occurrence of substring | | LCASE() | Synonym for LOWER() | | LEFT() | Return the leftmost number of characters as specified | | LENGTH() | Return the length of a string in bytes | | LIKE | Simple pattern matching | | LOAD_FILE() | Load the named file | | LOCATE() | Return the position of the first occurrence of substring | | LOWER() | Return the argument in lowercase | | LPAD() | Return the string argument, left-padded with the specified string | | LTRIM() | Remove leading spaces | | MAKE_SET() | Return a set of comma-separated strings that have the corresponding bit in bits set | | MATCH | Perform full-text search | | MID() | Return a substring starting from the specified position | | NOT LIKE | Negation of simple pattern matching | | NOT REGEXP | Negation of REGEXP | | OCT() | Return a string containing octal representation of a number | | OCTET_LENGTH() | Synonym for LENGTH() | | ORD() | Return character code for leftmost character of the argument | | POSITION() | Synonym for LOCATE() | | QUOTE() | Escape the argument for use in an SQL statement | | REGEXP | Pattern matching using regular expressions | | REPEAT() | Repeat a string the specified number of times | | REPLACE() | Replace occurrences of a specified string | | REVERSE() | Reverse the characters in a string | | RIGHT() | Return the specified rightmost number of characters | | RLIKE | Synonym for REGEXP | | RPAD() | Append string the specified number of times | | RTRIM() | Remove trailing spaces | | SOUNDEX() | Return a soundex string | | SOUNDS LIKE | Compare sounds | | SPACE() | Return a string of the specified number of spaces | | STRCMP() | Compare two strings | | SUBSTR() | Return the substring as specified | | SUBSTRING() | Return the substring as specified | | SUBSTRING_INDEX() | Return a substring from a string before the specified number of occurrences of the delimiter | | TO_BASE64() | Return the argument converted to a base-64 string | | TRIM() | Remove leading and trailing spaces | | UCASE() | Synonym for UPPER() | | UNHEX() | Return a string containing hex representation of a number | | UPPER() | Convert to uppercase | | WEIGHT_STRING() | Return the weight string for a string |"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "| Name | Description | |—––|–––––––| | ASCII() | Return numeric value of left-most character | | BIN() | Return a string containing binary representation of a number | | BIT_LENGTH() | Return length of argument in bits | | CHAR() | Return the character for each integer passed | | CHAR_LENGTH() | Return number of characters in argument | | CHARACTER_LENGTH() | Synonym for CHAR_LENGTH() | | CONCAT() | Return concatenated string | | CONCAT_WS() | Return concatenate with separator | | ELT() | Return string at index number | | EXPORT_SET() | Return a string such that for every bit set in the value bits, you get an on string and for every unset bit, you get an off string | | FIELD() | Return the index (position) of the first argument in the subsequent arguments | | FIND_IN_SET() | Return the index position of the first argument within the second argument | | FORMAT() | Return a number formatted to specified number of decimal places | | FROM_BASE64() | Decode to a base-64 string and return result | | HEX() | Return a hexadecimal representation of a decimal or string value | | INSERT() | Insert a substring at the specified position up to the specified number of characters | | INSTR() | Return the index of the first occurrence of substring | | LCASE() | Synonym for LOWER() | | LEFT() | Return the leftmost number of characters as specified | | LENGTH() | Return the length of a string in bytes | | LIKE | Simple pattern matching | | LOAD_FILE() | Load the named file | | LOCATE() | Return the position of the first occurrence of substring | | LOWER() | Return the argument in lowercase | | LPAD() | Return the string argument, left-padded with the specified string | | LTRIM() | Remove leading spaces | | MAKE_SET() | Return a set of comma-separated strings that have the corresponding bit in bits set | | MATCH | Perform full-text search | | MID() | Return a substring starting from the specified position | | NOT LIKE | Negation of simple pattern matching | | NOT REGEXP | Negation of REGEXP | | OCT() | Return a string containing octal representation of a number | | OCTET_LENGTH() | Synonym for LENGTH() | | ORD() | Return character code for leftmost character of the argument | | POSITION() | Synonym for LOCATE() | | QUOTE() | Escape the argument for use in an SQL statement | | REGEXP | Pattern matching using regular expressions | | REPEAT() | Repeat a string the specified number of times | | REPLACE() | Replace occurrences of a specified string | | REVERSE() | Reverse the characters in a string | | RIGHT() | Return the specified rightmost number of characters | | RLIKE | Synonym for REGEXP | | RPAD() | Append string the specified number of times | | RTRIM() | Remove trailing spaces | | SOUNDEX() | Return a soundex string | | SOUNDS LIKE | Compare sounds | | SPACE() | Return a string of the specified number of spaces | | STRCMP() | Compare two strings | | SUBSTR() | Return the substring as specified | | SUBSTRING() | Return the substring as specified | | SUBSTRING_INDEX() | Return a substring from a string before the specified number of occurrences of the delimiter | | TO_BASE64() | Return the argument converted to a base-64 string | | TRIM() | Remove leading and trailing spaces | | UCASE() | Synonym for UPPER() | | UNHEX() | Return a string containing hex representation of a number | | UPPER() | Convert to uppercase | | WEIGHT_STRING() | Return the weight string for a string |"
          }
        ]
      }
    ],
    "title": "String operations",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}