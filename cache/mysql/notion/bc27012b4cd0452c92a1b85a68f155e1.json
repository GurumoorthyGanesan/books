{
  "ID": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
  "Root": {
    "alive": true,
    "content": [
      "61624f71-84b2-4489-9b66-77f08251b3f0",
      "657ce8ce-d048-4fc5-9861-30ede418dd1f",
      "5fd3640b-a74f-4db2-b074-181576e1406a",
      "99fc10d0-dc68-4031-a459-0924980eb2f7",
      "dada7f3f-4233-409e-bac6-fe1cba92b12d",
      "0d9a0660-e501-4eb4-a392-5df993d68406",
      "328aaf00-159a-4085-9c6b-ba2b121c25fb",
      "fabd4f96-9021-43ad-87fb-fd970d2df958",
      "de0e6b33-e270-4a4d-89d3-2e9c34c32ed8",
      "7c958bcd-9309-457e-8db5-569f9223c587",
      "cf66ddd2-8f94-48d4-ae6f-3768c1e109c1",
      "50cd4b63-e12f-4247-b96f-a587ee4c0c40",
      "98af4262-d375-442d-88b2-73a410a2f500",
      "b18add54-d808-4374-8d1c-ed3860570006",
      "823b4417-05b3-4520-8d52-5b5df5c71599"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1550383587152,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1550642820000,
    "parent_id": "0c249379-3ee3-4a2d-92d3-c1a4759c1ff3",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Transaction using JDBC Driver"
        ]
      ]
    },
    "type": "page",
    "version": 8,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587147,
        "id": "61624f71-84b2-4489-9b66-77f08251b3f0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587147,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Transaction using JDBC driver is used to control how and when a transaction should commit and rollback. Connection to MySQL server is created using JDBC driver"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Transaction using JDBC driver is used to control how and when a transaction should commit and rollback. Connection to MySQL server is created using JDBC driver"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587149,
        "id": "657ce8ce-d048-4fc5-9861-30ede418dd1f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587149,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JDBC driver for MySQL",
              [
                [
                  "a",
                  "https://dev.mysql.com/downloads/connector/j/5.0.html"
                ]
              ]
            ],
            [
              " can be downloaded here"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "JDBC driver for MySQL",
            "Link": "https://dev.mysql.com/downloads/connector/j/5.0.html"
          },
          {
            "Text": " can be downloaded here"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587150,
        "id": "5fd3640b-a74f-4db2-b074-181576e1406a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587150,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Lets start with getting a connection to database using JDBC driver"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Lets start with getting a connection to database using JDBC driver"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587150,
        "id": "99fc10d0-dc68-4031-a459-0924980eb2f7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587150,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "Class.forName(\"com.mysql.jdbc.Driver\");  \nConnection con = DriverManager.getConnection(DB_CONNECTION_URL,DB_USER,USER_PASSWORD);\n---\u003eExample for connection url \"jdbc:mysql://localhost:3306/testDB\");"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "Class.forName(\"com.mysql.jdbc.Driver\");  \nConnection con = DriverManager.getConnection(DB_CONNECTION_URL,DB_USER,USER_PASSWORD);\n---\u003eExample for connection url \"jdbc:mysql://localhost:3306/testDB\");",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587150,
        "id": "dada7f3f-4233-409e-bac6-fe1cba92b12d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587150,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Character Sets",
              [
                [
                  "b"
                ]
              ]
            ],
            [
              " : This indicates what character set the client will use to send SQL statements to the server. It also specifies the character set that the server should use for sending results back to the client."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Character Sets",
            "AttrFlags": 1
          },
          {
            "Text": " : This indicates what character set the client will use to send SQL statements to the server. It also specifies the character set that the server should use for sending results back to the client."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587150,
        "id": "0d9a0660-e501-4eb4-a392-5df993d68406",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587150,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This should be mentioned while creating connection to server. So the connection string should be like,"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This should be mentioned while creating connection to server. So the connection string should be like,"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587150,
        "id": "328aaf00-159a-4085-9c6b-ba2b121c25fb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587150,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "jdbc:mysql://localhost:3306/testDB?useUnicode=true\u0026amp;characterEncoding=utf8"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "jdbc:mysql://localhost:3306/testDB?useUnicode=true\u0026amp;characterEncoding=utf8",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587151,
        "id": "fabd4f96-9021-43ad-87fb-fd970d2df958",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587151,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See this for more details about "
            ],
            [
              "Character Sets and Collations",
              [
                [
                  "a",
                  "http://stackoverflow.com/documentation/mysql/4569/character-sets-and-collations#t=201609081237366802241"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "See this for more details about "
          },
          {
            "Text": "Character Sets and Collations",
            "Link": "http://stackoverflow.com/documentation/mysql/4569/character-sets-and-collations#t=201609081237366802241"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587151,
        "id": "de0e6b33-e270-4a4d-89d3-2e9c34c32ed8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587151,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you open connection, the "
            ],
            [
              "AUTOCOMMIT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " mode is set to "
            ],
            [
              "true",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " by default, that should be changed "
            ],
            [
              "false",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to start transaction."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you open connection, the "
          },
          {
            "Text": "AUTOCOMMIT",
            "AttrFlags": 2
          },
          {
            "Text": " mode is set to "
          },
          {
            "Text": "true",
            "AttrFlags": 4
          },
          {
            "Text": " by default, that should be changed "
          },
          {
            "Text": "false",
            "AttrFlags": 4
          },
          {
            "Text": " to start transaction."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587151,
        "id": "7c958bcd-9309-457e-8db5-569f9223c587",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587151,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "con.setAutoCommit(false);"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "con.setAutoCommit(false);",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587151,
        "id": "cf66ddd2-8f94-48d4-ae6f-3768c1e109c1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587151,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You should always call "
            ],
            [
              "setAutoCommit()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method right after you open a connection."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You should always call "
          },
          {
            "Text": "setAutoCommit()",
            "AttrFlags": 2
          },
          {
            "Text": " method right after you open a connection."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587152,
        "id": "50cd4b63-e12f-4247-b96f-a587ee4c0c40",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587152,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Otherwise use "
            ],
            [
              "START TRANSACTION",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "BEGIN WORK",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to start a new transaction. By using "
            ],
            [
              "START TRANSACTION",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "BEGIN WORK",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", no need to change "
            ],
            [
              "AUTOCOMMIT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " "
            ],
            [
              "false",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ". That will be automatically disabled."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Otherwise use "
          },
          {
            "Text": "START TRANSACTION",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "BEGIN WORK",
            "AttrFlags": 2
          },
          {
            "Text": " to start a new transaction. By using "
          },
          {
            "Text": "START TRANSACTION",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "BEGIN WORK",
            "AttrFlags": 2
          },
          {
            "Text": ", no need to change "
          },
          {
            "Text": "AUTOCOMMIT",
            "AttrFlags": 2
          },
          {
            "Text": " "
          },
          {
            "Text": "false",
            "AttrFlags": 4
          },
          {
            "Text": ". That will be automatically disabled."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587152,
        "id": "98af4262-d375-442d-88b2-73a410a2f500",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587152,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Now you can start transaction. See a complete JDBC transaction example below."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Now you can start transaction. See a complete JDBC transaction example below."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587152,
        "id": "b18add54-d808-4374-8d1c-ed3860570006",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587152,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "package jdbcTest;\n \nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\n\npublic class accTrans {\n\n    public static void doTransfer(double transAmount,int customerIdFrom,int customerIdTo) {\n\n        Connection con = null;\n        PreparedStatement pstmt = null;\n        ResultSet rs = null;\n \n        try {\n            String DB_CONNECTION_URL = \"jdbc:mysql://localhost:3306/testDB?useUnicode=true\u0026amp;characterEncoding=utf8\";\n\n            Class.forName(\"com.mysql.jdbc.Driver\");  \n            con = DriverManager.getConnection(DB_CONNECTION_URL,DB_USER,USER_PASSWORD);\n\n            ---\u003eset auto commit to false\n            con.setAutoCommit(false);\n            ---\u003e or use con.START TRANSACTION / con.BEGIN WORK\n\n            ---\u003eStart SQL Statements for transaction\n            ---\u003eChecking availability of amount\n            double availableAmt    = 0;\n            pstmt = con.prepareStatement(\"SELECT ledgerAmt FROM accTable WHERE customerId=? FOR UPDATE\");\n            pstmt.setInt(1, customerIdFrom);\n            rs = pstmt.executeQuery();\n            if(rs.next())\n                availableAmt    = rs.getDouble(1);\n\n            if(availableAmt \u003e= transAmount)\n            {\n                ---\u003e Do Transfer\n                ---\u003e taking amount from cutomerIdFrom\n                pstmt = con.prepareStatement(\"UPDATE accTable SET ledgerAmt=ledgerAmt-? WHERE customerId=?\");                        \n                pstmt.setDouble(1, transAmount);\n                pstmt.setInt(2, customerIdFrom);\n                pstmt.executeUpdate();\n\n                ---\u003e depositing amount in cutomerIdTo\n                pstmt = con.prepareStatement(\"UPDATE accTable SET ledgerAmt=ledgerAmt+? WHERE customerId=?\");                        \n                pstmt.setDouble(1, transAmount);\n                pstmt.setInt(2, customerIdTo);\n                pstmt.executeUpdate();\n\n                con.commit();\n            }\n            ---\u003eIf you performed any insert,update or delete operations before \n            ----\u003e this availability check, then include this else part\n            /*else { ---\u003eRollback the transaction if availability is less than required\n                con.rollback();\n            }*/\n\n        } catch (SQLException ex) {\n            ---\u003e Rollback the transaction in case of any error\n            con.rollback();\n        } finally {\n            try {\n                if(rs != null)  rs.close();\n                if(pstmt != null) pstmt.close();\n                if(con != null) con.close();\n            }\n        }\n    }\n \n    public static void main(String[] args) {\n        doTransfer(500, 1020, 1021);\n        --\u003edoTransfer(transAmount, customerIdFrom, customerIdTo);\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 1,
        "code": "package jdbcTest;\n \nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\n\npublic class accTrans {\n\n    public static void doTransfer(double transAmount,int customerIdFrom,int customerIdTo) {\n\n        Connection con = null;\n        PreparedStatement pstmt = null;\n        ResultSet rs = null;\n \n        try {\n            String DB_CONNECTION_URL = \"jdbc:mysql://localhost:3306/testDB?useUnicode=true\u0026amp;characterEncoding=utf8\";\n\n            Class.forName(\"com.mysql.jdbc.Driver\");  \n            con = DriverManager.getConnection(DB_CONNECTION_URL,DB_USER,USER_PASSWORD);\n\n            ---\u003eset auto commit to false\n            con.setAutoCommit(false);\n            ---\u003e or use con.START TRANSACTION / con.BEGIN WORK\n\n            ---\u003eStart SQL Statements for transaction\n            ---\u003eChecking availability of amount\n            double availableAmt    = 0;\n            pstmt = con.prepareStatement(\"SELECT ledgerAmt FROM accTable WHERE customerId=? FOR UPDATE\");\n            pstmt.setInt(1, customerIdFrom);\n            rs = pstmt.executeQuery();\n            if(rs.next())\n                availableAmt    = rs.getDouble(1);\n\n            if(availableAmt \u003e= transAmount)\n            {\n                ---\u003e Do Transfer\n                ---\u003e taking amount from cutomerIdFrom\n                pstmt = con.prepareStatement(\"UPDATE accTable SET ledgerAmt=ledgerAmt-? WHERE customerId=?\");                        \n                pstmt.setDouble(1, transAmount);\n                pstmt.setInt(2, customerIdFrom);\n                pstmt.executeUpdate();\n\n                ---\u003e depositing amount in cutomerIdTo\n                pstmt = con.prepareStatement(\"UPDATE accTable SET ledgerAmt=ledgerAmt+? WHERE customerId=?\");                        \n                pstmt.setDouble(1, transAmount);\n                pstmt.setInt(2, customerIdTo);\n                pstmt.executeUpdate();\n\n                con.commit();\n            }\n            ---\u003eIf you performed any insert,update or delete operations before \n            ----\u003e this availability check, then include this else part\n            /*else { ---\u003eRollback the transaction if availability is less than required\n                con.rollback();\n            }*/\n\n        } catch (SQLException ex) {\n            ---\u003e Rollback the transaction in case of any error\n            con.rollback();\n        } finally {\n            try {\n                if(rs != null)  rs.close();\n                if(pstmt != null) pstmt.close();\n                if(con != null) con.close();\n            }\n        }\n    }\n \n    public static void main(String[] args) {\n        doTransfer(500, 1020, 1021);\n        --\u003edoTransfer(transAmount, customerIdFrom, customerIdTo);\n    }\n}",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1550383587152,
        "id": "823b4417-05b3-4520-8d52-5b5df5c71599",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1550383587152,
        "parent_id": "bc27012b-4cd0-452c-92a1-b85a68f155e1",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JDBC transaction make sure of all SQL statements within a transaction block are executed successful, if either one of the SQL statement within transaction block is failed, abort and rollback everything within the transaction block."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "JDBC transaction make sure of all SQL statements within a transaction block are executed successful, if either one of the SQL statement within transaction block is failed, abort and rollback everything within the transaction block."
          }
        ]
      }
    ],
    "title": "Transaction using JDBC Driver",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}