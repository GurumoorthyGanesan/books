{
  "ID": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
  "Root": {
    "alive": true,
    "content": [
      "180250dc-6a99-412f-b0d5-6ac88a39c749",
      "4c590537-6653-4968-a784-1b4021089070",
      "ff3f321f-7c61-4a80-bf1f-683041d124bd",
      "1eae4059-dc23-417f-84a7-2f68a69bf76f",
      "a512d89b-7c5e-4e35-bdc6-ee16922867c2",
      "fe8da1c3-4565-46b4-a789-2d09c5f656ae",
      "b5a1079d-7efe-4d89-9113-956e7c88e15b",
      "83f79854-08e3-4910-aa3b-45544d9057eb",
      "fcb91573-1365-4174-922b-9009004f6cf0",
      "64eb3aa6-928e-4acd-bbff-fbcccba65587",
      "2a5d451f-b773-4e2d-938f-a936e877503d",
      "1a91c722-e399-4fca-955e-5f8ba8ba7f41",
      "57818a9f-e910-4c55-ab1f-045dc4d9e096",
      "583571ee-0e01-4032-96ca-6237c1200e9f",
      "6a6f0a0d-8886-4b83-9d88-d9ec6d3ce54b",
      "f3f8e026-e7ca-4485-8a8e-e6f0961b5871",
      "24cdc544-12d9-4704-a221-eb97628cc88d",
      "19453952-fee4-41c1-8f66-f4f0c64949ae",
      "75a1950d-14cf-43f5-86d2-71114b26994f",
      "df97d0df-9e36-4265-b8d4-b972fc18126a",
      "bbadca8b-35ac-4df1-91ae-f6e5570a46ce",
      "d238669c-3f94-443f-b22b-ebc54185afb3",
      "e8adfb2a-3a96-4c96-b0c1-6bdd7bb1193c",
      "8a04e02d-da7a-4c42-be9e-d209fb343199",
      "c6382889-7617-4d40-a844-05a85e8b5916",
      "56e390e8-f652-4fee-aae8-c0516d68f60f",
      "1b812ae8-e6da-499d-8bdb-32cad95a6a97",
      "b6290438-3dfb-4cb2-8c45-0b67ec0c6ae4",
      "b423b113-5fe3-43d6-b36a-ad285953a505",
      "78099ed0-590a-4cc7-9b8e-e8a9dfce7028",
      "29f95e1c-aaf9-412c-af55-b0ca5f565031",
      "0a75d219-3ba5-4559-a10e-20dde8d819a5",
      "78e313f7-b2d4-4de3-a80f-d48118003ccd",
      "993446f5-5d3c-44f2-90a6-a5dc9a844a9c",
      "d1b47805-7f53-4be7-8e6f-21d81fef773a",
      "698adf30-b5e5-4d2d-8e28-2053c556682a"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156230826,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1549869660000,
    "parent_id": "2cab1ed2-b7a4-4584-b56b-0d3ca9b80185",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Object oriented programming"
        ]
      ]
    },
    "type": "page",
    "version": 172,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532213571549,
        "id": "180250dc-6a99-412f-b0d5-6ac88a39c749",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532213598445,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 281"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 281"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532213574917,
        "id": "4c590537-6653-4968-a784-1b4021089070",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532213599340,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 8801"
            ]
          ]
        },
        "type": "text",
        "version": 14,
        "inline_content": [
          {
            "Text": "$SOId: 8801"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549865580000,
        "id": "ff3f321f-7c61-4a80-bf1f-683041d124bd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549865640000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@draft"
            ]
          ]
        },
        "type": "text",
        "version": 47,
        "inline_content": [
          {
            "Text": "@draft"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549865640000,
        "id": "1eae4059-dc23-417f-84a7-2f68a69bf76f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549865640000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532213576333,
        "id": "a512d89b-7c5e-4e35-bdc6-ee16922867c2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549865820000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go is not an object oriented programming language. If you're familiar with other OO languages (Python, C++, Java etc.) you'll notice some similarities but you should also understand differences."
            ]
          ]
        },
        "type": "text",
        "version": 411,
        "inline_content": [
          {
            "Text": "Go is not an object oriented programming language. If you're familiar with other OO languages (Python, C++, Java etc.) you'll notice some similarities but you should also understand differences."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549865820000,
        "id": "fe8da1c3-4565-46b4-a789-2d09c5f656ae",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867200000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Methods encapsulate logic"
            ]
          ]
        },
        "type": "header",
        "version": 49,
        "inline_content": [
          {
            "Text": "Methods encapsulate logic"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549867080000,
        "id": "b5a1079d-7efe-4d89-9113-956e7c88e15b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867140000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Structs are similar to classes in that you can define methods on them to encapsulate logic related to a type:"
            ]
          ]
        },
        "type": "text",
        "version": 231,
        "inline_content": [
          {
            "Text": "Structs are similar to classes in that you can define methods on them to encapsulate logic related to a type:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549866036770,
        "id": "83f79854-08e3-4910-aa3b-45544d9057eb",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549866240000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "type Person struct {\n\tfirstName string\n\tlastName string\n}\n\nfunc (p *Person) FullName() string {\n\tif p.firstName != \"\" \u0026\u0026 p.lastName != \"\" {\n\t\treturn p.firstName + \" \" + p.lastName\n\t}\n\treturn p.firstName + p.lastName\n}\n\nu := \u0026Person{firstName: \"Jon\", lastName: \"Snow\"}\nfmt.Printf(\"Full name: %s\\n\", u.FullName())"
            ]
          ]
        },
        "type": "code",
        "version": 479,
        "code": "type Person struct {\n\tfirstName string\n\tlastName string\n}\n\nfunc (p *Person) FullName() string {\n\tif p.firstName != \"\" \u0026\u0026 p.lastName != \"\" {\n\t\treturn p.firstName + \" \" + p.lastName\n\t}\n\treturn p.firstName + p.lastName\n}\n\nu := \u0026Person{firstName: \"Jon\", lastName: \"Snow\"}\nfmt.Printf(\"Full name: %s\\n\", u.FullName())",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549866720000,
        "id": "fcb91573-1365-4174-922b-9009004f6cf0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549866720000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We defined "
            ],
            [
              "FullName()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method on type "
            ],
            [
              "*Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 202,
        "inline_content": [
          {
            "Text": "We defined "
          },
          {
            "Text": "FullName()",
            "AttrFlags": 2
          },
          {
            "Text": " method on type "
          },
          {
            "Text": "*Person",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549866720000,
        "id": "64eb3aa6-928e-4acd-bbff-fbcccba65587",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549866780000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Variable "
            ],
            [
              "p",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that is a target of the method is called a receiver."
            ]
          ]
        },
        "type": "text",
        "version": 99,
        "inline_content": [
          {
            "Text": "Variable "
          },
          {
            "Text": "p",
            "AttrFlags": 2
          },
          {
            "Text": " that is a target of the method is called a receiver."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549866780000,
        "id": "2a5d451f-b773-4e2d-938f-a936e877503d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867020000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Idiomatic Go style is to use a short name for the receiver based on type name."
            ]
          ]
        },
        "type": "text",
        "version": 160,
        "inline_content": [
          {
            "Text": "Idiomatic Go style is to use a short name for the receiver based on type name."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549867020000,
        "id": "1a91c722-e399-4fca-955e-5f8ba8ba7f41",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867020000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A bad Go style is to call the receiver "
            ],
            [
              "this",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 53,
        "inline_content": [
          {
            "Text": "A bad Go style is to call the receiver "
          },
          {
            "Text": "this",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532213581613,
        "id": "57818a9f-e910-4c55-ab1f-045dc4d9e096",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867200000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unlike most languages, you can also implement methods on all types, not just structs."
            ]
          ]
        },
        "type": "text",
        "version": 46,
        "inline_content": [
          {
            "Text": "Unlike most languages, you can also implement methods on all types, not just structs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549866339542,
        "id": "583571ee-0e01-4032-96ca-6237c1200e9f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549866420000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "type myInt int\n\nfunc (i myInt) String() string {\n  return strconv.Atoi(int(i))\n}\n\nmyInt := 5\nfmt.Printf(\"myInt: %s\\n\", myInt.String())"
            ]
          ]
        },
        "type": "code",
        "version": 195,
        "code": "type myInt int\n\nfunc (i myInt) String() string {\n  return strconv.Atoi(int(i))\n}\n\nmyInt := 5\nfmt.Printf(\"myInt: %s\\n\", myInt.String())",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549866360000,
        "id": "6a6f0a0d-8886-4b83-9d88-d9ec6d3ce54b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867260000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can only implement methods on your own types (i.e. method must be defined in the same package as the type). That's why we had to introduce "
            ],
            [
              "myInt",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " alias for "
            ],
            [
              "int",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " type."
            ]
          ]
        },
        "type": "text",
        "version": 302,
        "inline_content": [
          {
            "Text": "You can only implement methods on your own types (i.e. method must be defined in the same package as the type). That's why we had to introduce "
          },
          {
            "Text": "myInt",
            "AttrFlags": 2
          },
          {
            "Text": " alias for "
          },
          {
            "Text": "int",
            "AttrFlags": 2
          },
          {
            "Text": " type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549866720000,
        "id": "f3f8e026-e7ca-4485-8a8e-e6f0961b5871",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867980000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Embedding "
            ]
          ]
        },
        "type": "header",
        "version": 75,
        "inline_content": [
          {
            "Text": "Embedding "
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549867319742,
        "id": "24cdc544-12d9-4704-a221-eb97628cc88d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867620000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "type BritishPerson struct {\n\tPerson\n  isKnight bool\n}\n\ntype (p *BritishPerson) IsKnight() bool {\n\treturn p.isKnight\n}\n\np := \u0026BritishPerson{Person: {firstName:\"Tim\", lastName: \"Berners-Lee\"}, isKnight: true}\nif p.IsKnight() {\n\tfmt.Printf(\"%s is a knight\\n\", p.FullName())\n}"
            ]
          ]
        },
        "type": "code",
        "version": 380,
        "code": "type BritishPerson struct {\n\tPerson\n  isKnight bool\n}\n\ntype (p *BritishPerson) IsKnight() bool {\n\treturn p.isKnight\n}\n\np := \u0026BritishPerson{Person: {firstName:\"Tim\", lastName: \"Berners-Lee\"}, isKnight: true}\nif p.IsKnight() {\n\tfmt.Printf(\"%s is a knight\\n\", p.FullName())\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549867620000,
        "id": "19453952-fee4-41c1-8f66-f4f0c64949ae",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867620000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "type": "text",
        "version": 9
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549867620000,
        "id": "75a1950d-14cf-43f5-86d2-71114b26994f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549868160000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "BritishPerson",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " embeds "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " anonymously and therefore you can call all  "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods on instances of "
            ],
            [
              "BritishPerson",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 221,
        "inline_content": [
          {
            "Text": "BritishPerson",
            "AttrFlags": 2
          },
          {
            "Text": " embeds "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " anonymously and therefore you can call all  "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " methods on instances of "
          },
          {
            "Text": "BritishPerson",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549868220000,
        "id": "df97d0df-9e36-4265-b8d4-b972fc18126a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549868220000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Embedding allows to share common functionality among multiple structs."
            ]
          ]
        },
        "type": "text",
        "version": 76,
        "inline_content": [
          {
            "Text": "Embedding allows to share common functionality among multiple structs."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549868220000,
        "id": "bbadca8b-35ac-4df1-91ae-f6e5570a46ce",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549868400000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Calling an embedded method is a syntactic sugar. "
            ],
            [
              "BritishPerson.FullName()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is simply "
            ],
            [
              "BritishPerson.Person.FullName()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 170,
        "inline_content": [
          {
            "Text": "Calling an embedded method is a syntactic sugar. "
          },
          {
            "Text": "BritishPerson.FullName()",
            "AttrFlags": 2
          },
          {
            "Text": " is simply "
          },
          {
            "Text": "BritishPerson.Person.FullName()",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549867680000,
        "id": "d238669c-3f94-443f-b22b-ebc54185afb3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549868520000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you're familiar with inheritance in languages like Python, Java, C# or C++, embedding is "
            ],
            [
              "slightly different",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/Object-oriented-programming-7ccfe1697c3149c383b68894ede37d84#56e390e8f6524feeaae8c0516d68f60f"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 141,
        "inline_content": [
          {
            "Text": "If you're familiar with inheritance in languages like Python, Java, C# or C++, embedding is "
          },
          {
            "Text": "slightly different",
            "Link": "https://www.notion.so/kjkpublic/Object-oriented-programming-7ccfe1697c3149c383b68894ede37d84#56e390e8f6524feeaae8c0516d68f60f"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549868400000,
        "id": "e8adfb2a-3a96-4c96-b0c1-6bdd7bb1193c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549868520000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pointer vs. value receiver"
            ]
          ]
        },
        "type": "header",
        "version": 80,
        "inline_content": [
          {
            "Text": "Pointer vs. value receiver"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549868460000,
        "id": "8a04e02d-da7a-4c42-be9e-d209fb343199",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549868640000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A method receiver can be a pointer and a value:"
            ]
          ]
        },
        "type": "text",
        "version": 173,
        "inline_content": [
          {
            "Text": "A method receiver can be a pointer and a value:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549868681950,
        "id": "c6382889-7617-4d40-a844-05a85e8b5916",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549868700000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func (p Person) HasLastName() bool {\n\treturn p.lastName != \"\"\n}"
            ]
          ]
        },
        "type": "code",
        "version": 107,
        "code": "func (p Person) HasLastName() bool {\n\treturn p.lastName != \"\"\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549868700000,
        "id": "56e390e8-f652-4fee-aae8-c0516d68f60f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549868820000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There are use cases for value receivers but most of the time it's a mistake."
            ]
          ]
        },
        "type": "text",
        "version": 188,
        "inline_content": [
          {
            "Text": "There are use cases for value receivers but most of the time it's a mistake."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549868820000,
        "id": "1b812ae8-e6da-499d-8bdb-32cad95a6a97",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549869000000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A value receiver works on a copy of the value. Making a copy is slow (relatively speaking) and changes made in the method don't persist:"
            ]
          ]
        },
        "type": "text",
        "version": 331,
        "inline_content": [
          {
            "Text": "A value receiver works on a copy of the value. Making a copy is slow (relatively speaking) and changes made in the method don't persist:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549869010968,
        "id": "b6290438-3dfb-4cb2-8c45-0b67ec0c6ae4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549869120000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func (p Person) SetFirstNameBuggy(s string) {\n\tp.firstName = s\n}\np := \u0026Person{firstName: \"Jon\"}\nfmt.Printf(\"First name: %s\\n\", p.firstName)\np.SetFirstNameBuggy(\"Alvin\")\nfmt.Printf(\"First name: %s\\n\", p.firstName)"
            ]
          ]
        },
        "type": "code",
        "version": 197,
        "code": "func (p Person) SetFirstNameBuggy(s string) {\n\tp.firstName = s\n}\np := \u0026Person{firstName: \"Jon\"}\nfmt.Printf(\"First name: %s\\n\", p.firstName)\np.SetFirstNameBuggy(\"Alvin\")\nfmt.Printf(\"First name: %s\\n\", p.firstName)",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549867740000,
        "id": "b423b113-5fe3-43d6-b36a-ad285953a505",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549869660000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Embedding is not inheritance or polymorphism"
            ]
          ]
        },
        "type": "header",
        "version": 22,
        "inline_content": [
          {
            "Text": "Embedding is not inheritance or polymorphism"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549867620000,
        "id": "78099ed0-590a-4cc7-9b8e-e8a9dfce7028",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549869360000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Embedding looks as if embedding struct inherits the methods of embedded struct."
            ]
          ]
        },
        "type": "text",
        "version": 183,
        "inline_content": [
          {
            "Text": "Embedding looks as if embedding struct inherits the methods of embedded struct."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549869360000,
        "id": "29f95e1c-aaf9-412c-af55-b0ca5f565031",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549869480000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Similarity to inheritance implemented via virtual methods in other languages is superficial."
            ]
          ]
        },
        "type": "text",
        "version": 196,
        "inline_content": [
          {
            "Text": "Similarity to inheritance implemented via virtual methods in other languages is superficial."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549869480000,
        "id": "0a75d219-3ba5-4559-a10e-20dde8d819a5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549869600000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Embedded methods are not virtual. A method implemented on "
            ],
            [
              "Person",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has no access to type "
            ],
            [
              "BritishPerson",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that embeds it. It can't access its data or call its methods."
            ]
          ]
        },
        "type": "text",
        "version": 222,
        "inline_content": [
          {
            "Text": "Embedded methods are not virtual. A method implemented on "
          },
          {
            "Text": "Person",
            "AttrFlags": 2
          },
          {
            "Text": " has no access to type "
          },
          {
            "Text": "BritishPerson",
            "AttrFlags": 2
          },
          {
            "Text": " that embeds it. It can't access its data or call its methods."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549869600000,
        "id": "78e313f7-b2d4-4de3-a80f-d48118003ccd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549869660000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interface for polymorhism"
            ]
          ]
        },
        "type": "header",
        "version": 46,
        "inline_content": [
          {
            "Text": "Interface for polymorhism"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1549869660000,
        "id": "993446f5-5d3c-44f2-90a6-a5dc9a844a9c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549869660000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532213565165,
        "id": "d1b47805-7f53-4be7-8e6f-21d81fef773a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1549867620000,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "type": "text",
        "version": 3
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156234149,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "698adf30-b5e5-4d2d-8e28-2053c556682a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539852453618,
        "parent_id": "7ccfe169-7c31-49c3-83b6-8894ede37d84",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Interface \u0026 polymorphism"
            ]
          ]
        },
        "type": "page",
        "version": 92,
        "title": "Interface \u0026 polymorphism",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      }
    ],
    "title": "Object oriented programming",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}