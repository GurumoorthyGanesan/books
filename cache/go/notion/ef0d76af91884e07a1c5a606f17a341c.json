{
  "ID": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
  "Root": {
    "alive": true,
    "content": [
      "81f95e32-0a39-4469-9f87-79d5ac406bb2",
      "1cd34474-80f0-4d83-9a4d-455dd94c11f6",
      "649a959f-a41d-463a-b64f-eb808738d0ba",
      "8cbb6295-1fff-4ce8-bcf3-dca778d08cb9",
      "08058994-782c-4b70-a001-4edb3a7d0274",
      "58e86edb-b2de-4a5a-9927-228895055b9b",
      "e29a3d4f-3934-4ac9-9cfc-d37a194d672e",
      "a6463436-1743-4870-bfaa-672e0437bccd",
      "4b1500b6-c6f9-43ae-8be4-6a21fc42aabc"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156002138,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552263540000,
    "parent_id": "80fb91dd-63d4-45e2-8010-b9f5e261da81",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Concurrent access of maps"
        ]
      ]
    },
    "type": "page",
    "version": 69,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532196742136,
        "id": "81f95e32-0a39-4469-9f87-79d5ac406bb2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532235264692,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 79"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 79"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532196744002,
        "id": "1cd34474-80f0-4d83-9a4d-455dd94c11f6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532235265453,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 3423"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 3423"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532196747159,
        "id": "649a959f-a41d-463a-b64f-eb808738d0ba",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532196747159,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532196745916,
        "id": "8cbb6295-1fff-4ce8-bcf3-dca778d08cb9",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552262880000,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Maps in Go are not safe for concurrency."
            ]
          ]
        },
        "type": "text",
        "version": 14,
        "inline_content": [
          {
            "Text": "Maps in Go are not safe for concurrency."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552262940000,
        "id": "08058994-782c-4b70-a001-4edb3a7d0274",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552263060000,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "One option to ensure safe concurrent access is to use "
            ],
            [
              "sync.Mutex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or "
            ],
            [
              "sync.RWMutex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and lock around all map reads and writes."
            ]
          ]
        },
        "type": "text",
        "version": 310,
        "inline_content": [
          {
            "Text": "One option to ensure safe concurrent access is to use "
          },
          {
            "Text": "sync.Mutex",
            "AttrFlags": 2
          },
          {
            "Text": " or "
          },
          {
            "Text": "sync.RWMutex",
            "AttrFlags": 2
          },
          {
            "Text": " and lock around all map reads and writes."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552263360000,
        "id": "58e86edb-b2de-4a5a-9927-228895055b9b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552263420000,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As an example, a simple wrapper around a "
            ],
            [
              "map",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " that is safe for concurrent use as long as it's done by "
            ],
            [
              "Get",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "Set",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "Add",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " methods:"
            ]
          ]
        },
        "type": "text",
        "version": 182,
        "inline_content": [
          {
            "Text": "As an example, a simple wrapper around a "
          },
          {
            "Text": "map",
            "AttrFlags": 2
          },
          {
            "Text": " that is safe for concurrent use as long as it's done by "
          },
          {
            "Text": "Get",
            "AttrFlags": 2
          },
          {
            "Text": ", "
          },
          {
            "Text": "Set",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "Add",
            "AttrFlags": 2
          },
          {
            "Text": " methods:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552262788153,
        "id": "e29a3d4f-3934-4ac9-9cfc-d37a194d672e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552263540000,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n)\n\n// ConcurrentMap is a wrapper around map that is safe for concurrent use\ntype ConcurrentMap struct {\n\tsync.RWMutex\n\tm map[string]int\n}\n\n// Get gets a value for a key\nfunc (r *ConcurrentMap) Get(key string) int {\n\tr.RLock()\n\tdefer r.RUnlock()\n\treturn r.m[key]\n}\n\n// Set sets a key to a given value\nfunc (r *ConcurrentMap) Set(key string, val int) {\n\tr.Lock()\n\tdefer r.Unlock()\n\tr.m[key] = val\n}\n\n// Add increases the value under a key by n\nfunc (r *ConcurrentMap) Add(key string, n int) int {\n\tr.Lock()\n\tdefer r.Unlock()\n\tr.m[key] += n\n\treturn r.m[key]\n}\n\nfunc main() {\n\tcounter := ConcurrentMap{m: make(map[string]int)}\n\n\tn := counter.Add(\"some_key\", 2)\n\tfmt.Printf(\"Final value is: %d\\n\", n)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 483,
        "code": "// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n)\n\n// ConcurrentMap is a wrapper around map that is safe for concurrent use\ntype ConcurrentMap struct {\n\tsync.RWMutex\n\tm map[string]int\n}\n\n// Get gets a value for a key\nfunc (r *ConcurrentMap) Get(key string) int {\n\tr.RLock()\n\tdefer r.RUnlock()\n\treturn r.m[key]\n}\n\n// Set sets a key to a given value\nfunc (r *ConcurrentMap) Set(key string, val int) {\n\tr.Lock()\n\tdefer r.Unlock()\n\tr.m[key] = val\n}\n\n// Add increases the value under a key by n\nfunc (r *ConcurrentMap) Add(key string, n int) int {\n\tr.Lock()\n\tdefer r.Unlock()\n\tr.m[key] += n\n\treturn r.m[key]\n}\n\nfunc main() {\n\tcounter := ConcurrentMap{m: make(map[string]int)}\n\n\tn := counter.Add(\"some_key\", 2)\n\tfmt.Printf(\"Final value is: %d\\n\", n)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "copied_from": "65272e42-8e7f-4237-a75d-3a56c9b23ec6",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552263471306,
        "id": "a6463436-1743-4870-bfaa-672e0437bccd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552263540000,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "sync.RWMutex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " can be faster because it allows multiple readers. On the downside you have to be more careful to ensure you're not writing under "
            ],
            [
              "RLock",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". The performance difference with "
            ],
            [
              "sync.Mutex",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will be negligible unless there's a high-contention on the lock or the locks are held for a long time."
            ]
          ]
        },
        "type": "text",
        "version": 284,
        "inline_content": [
          {
            "Text": "sync.RWMutex",
            "AttrFlags": 2
          },
          {
            "Text": " can be faster because it allows multiple readers. On the downside you have to be more careful to ensure you're not writing under "
          },
          {
            "Text": "RLock",
            "AttrFlags": 2
          },
          {
            "Text": ". The performance difference with "
          },
          {
            "Text": "sync.Mutex",
            "AttrFlags": 2
          },
          {
            "Text": " will be negligible unless there's a high-contention on the lock or the locks are held for a long time."
          }
        ]
      },
      {
        "alive": true,
        "copied_from": "2709acf3-ffd4-42f1-bb1b-e251932f8242",
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552263471307,
        "id": "4b1500b6-c6f9-43ae-8be4-6a21fc42aabc",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552263540000,
        "parent_id": "ef0d76af-9188-4e07-a1c5-a606f17a341c",
        "parent_table": "block",
        "type": "text",
        "version": 5
      }
    ],
    "title": "Concurrent access of maps",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}