{
  "ID": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
  "Root": {
    "alive": true,
    "content": [
      "778a9d16-0904-4adc-9bc7-0560d96d8f5f",
      "c39c5624-2515-4d3c-b82b-1df9e87c066c",
      "4abe81cd-d57a-47d3-93eb-0e6829619b67",
      "898acdc1-5dc3-43ee-bec7-1ade75a6c964",
      "09e4611c-3f56-4053-ab51-4a7a94f4615e",
      "dc7b625e-6454-4c17-8351-3ab56a384a80",
      "aee06b9d-56f7-412b-a498-b6092e29bcdf",
      "18c87db5-5a66-4cb9-b982-ebac34b44965",
      "0f48b336-ac9c-45c4-97ed-5dc631a68051",
      "98d90482-3418-4f51-aa18-3f85a8a77661",
      "166185fd-dbfa-4bd4-bac1-c6c6aa5295b5",
      "78becf11-d9dd-4d4d-b980-f9a6b50fcf02",
      "fbce80fb-4729-418b-986e-40d8baef2adc",
      "fe74a642-9b90-4ae8-8caf-d781af048c21",
      "33b94bc3-d4b0-47d4-912c-044e3212c5e8",
      "0f201a9d-30a8-41b8-a61e-c85e924b6778",
      "6d9599af-74fc-4575-9df4-8d984ce235af",
      "107ae945-2ef9-473e-b2a0-1ea0d6b0c709",
      "9e64676d-b1c2-45d2-a831-0b109d095f41",
      "bd9d81e1-ec76-40ce-88e1-67c81c9d874b",
      "380d2544-8fdf-4442-8bdc-24aded0f96f3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156121235,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552285260000,
    "parent_id": "6744c6d0-d620-448d-be66-e224f64b6f8b",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Configuring XML parsing and serialization"
        ]
      ]
    },
    "type": "page",
    "version": 185,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208038965,
        "id": "778a9d16-0904-4adc-9bc7-0560d96d8f5f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208043180,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 332"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 332"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208040968,
        "id": "c39c5624-2515-4d3c-b82b-1df9e87c066c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208041945,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "type": "text",
        "version": 10
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121231,
        "id": "4abe81cd-d57a-47d3-93eb-0e6829619b67",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156121231,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can modify how a struct is serialized to XML by annotating fields with tags."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can modify how a struct is serialized to XML by annotating fields with tags."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121231,
        "id": "898acdc1-5dc3-43ee-bec7-1ade75a6c964",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538795891723,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By providing "
            ],
            [
              "XMLName",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", this will be serialized as "
            ],
            [
              "\u003cdata\u003e...\u003c/data\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and not "
            ],
            [
              "\u003cShowXMLName\u003e..\u003c/ShowXMLName\u003e",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "By providing "
          },
          {
            "Text": "XMLName",
            "AttrFlags": 2
          },
          {
            "Text": ", this will be serialized as "
          },
          {
            "Text": "\u003cdata\u003e...\u003c/data\u003e",
            "AttrFlags": 2
          },
          {
            "Text": " and not "
          },
          {
            "Text": "\u003cShowXMLName\u003e..\u003c/ShowXMLName\u003e",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552284893551,
        "id": "09e4611c-3f56-4053-ab51-4a7a94f4615e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552284840000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowXMLName struct {\n\tXMLName xml.Name `xml:\"data\"`\n\tN       int      `xml:\"n\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowXMLName{\n\t\tN: 5,\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 14,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowXMLName struct {\n\tXMLName xml.Name `xml:\"data\"`\n\tN       int      `xml:\"n\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowXMLName{\n\t\tN: 5,\n\t}\n\tprintXML(v)\n\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121232,
        "id": "dc7b625e-6454-4c17-8351-3ab56a384a80",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538795909576,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Fields marked with "
            ],
            [
              "xml:\"-\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are not serialized."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Fields marked with "
          },
          {
            "Text": "xml:\"-\"",
            "AttrFlags": 2
          },
          {
            "Text": " are not serialized."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552284907207,
        "id": "aee06b9d-56f7-412b-a498-b6092e29bcdf",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552284900000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowOmit struct {\n\tName          string `xml:\"name\"`\n\tNotSerialized string `xml:\"-\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowOmit{\n\t\tName:          \"John\",\n\t\tNotSerialized: \"Connor\",\n\t}\n\tprintXML(v)\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowOmit struct {\n\tName          string `xml:\"name\"`\n\tNotSerialized string `xml:\"-\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowOmit{\n\t\tName:          \"John\",\n\t\tNotSerialized: \"Connor\",\n\t}\n\tprintXML(v)\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121232,
        "id": "18c87db5-5a66-4cb9-b982-ebac34b44965",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538795924839,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To skip serializing fields with empty values, use "
            ],
            [
              "xml:\",omitempty\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "To skip serializing fields with empty values, use "
          },
          {
            "Text": "xml:\",omitempty\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552284920409,
        "id": "0f48b336-ac9c-45c4-97ed-5dc631a68051",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552284900000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowOmitEmpty struct {\n\tNonEmpty string `xml:\",omitempty\"`\n\tEmpty    string `xml:\",omitempty\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowOmitEmpty{\n\t\tNonEmpty: \"non empty\",\n\t\tEmpty:    \"\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowOmitEmpty struct {\n\tNonEmpty string `xml:\",omitempty\"`\n\tEmpty    string `xml:\",omitempty\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowOmitEmpty{\n\t\tNonEmpty: \"non empty\",\n\t\tEmpty:    \"\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121233,
        "id": "98d90482-3418-4f51-aa18-3f85a8a77661",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538795944711,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To change serialization from XML element to XML attribute use "
            ],
            [
              "xml:\",attr\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "To change serialization from XML element to XML attribute use "
          },
          {
            "Text": "xml:\",attr\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552284932176,
        "id": "166185fd-dbfa-4bd4-bac1-c6c6aa5295b5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552284900000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowAttr struct {\n\tB bool `xml:\"n,attr\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowAttr{\n\t\tB: true,\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowAttr struct {\n\tB bool `xml:\"n,attr\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowAttr{\n\t\tB: true,\n\t}\n\tprintXML(v)\n\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121233,
        "id": "78becf11-d9dd-4d4d-b980-f9a6b50fcf02",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538795962765,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To change serialization from XML element to character data use "
            ],
            [
              "xml:\",chardata\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "To change serialization from XML element to character data use "
          },
          {
            "Text": "xml:\",chardata\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552284946739,
        "id": "fbce80fb-4729-418b-986e-40d8baef2adc",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552284900000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowCharData struct {\n\tS string `xml:\",chardata\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowCharData{\n\t\tS: \"str\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowCharData struct {\n\tS string `xml:\",chardata\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowCharData{\n\t\tS: \"str\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121233,
        "id": "fe74a642-9b90-4ae8-8caf-d781af048c21",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538795980702,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To change serialization from XML element to CDATA use "
            ],
            [
              "xml:\",cdata\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "To change serialization from XML element to CDATA use "
          },
          {
            "Text": "xml:\",cdata\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552285149660,
        "id": "33b94bc3-d4b0-47d4-912c-044e3212c5e8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552285140000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowCData struct {\n\tS string `xml:\",cdata\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowCData{\n\t\tS: \"cdata\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowCData struct {\n\tS string `xml:\",cdata\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowCData{\n\t\tS: \"cdata\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121234,
        "id": "0f201a9d-30a8-41b8-a61e-c85e924b6778",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538796005661,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To serialize the value verbatim, use "
            ],
            [
              "xml:\",innerxml\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "To serialize the value verbatim, use "
          },
          {
            "Text": "xml:\",innerxml\"",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552285172022,
        "id": "6d9599af-74fc-4575-9df4-8d984ce235af",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552285140000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowInnerXML struct {\n\tStr string `xml:\"s\"`\n\tRaw string `xml:\",innerxml\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowInnerXML{\n\t\tStr: \"\u003cfoo\u003e\u003c/foo\u003e\",\n\t\tRaw: \"\u003cfoo\u003e\u003c/foo\u003e\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowInnerXML struct {\n\tStr string `xml:\"s\"`\n\tRaw string `xml:\",innerxml\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowInnerXML{\n\t\tStr: \"\u003cfoo\u003e\u003c/foo\u003e\",\n\t\tRaw: \"\u003cfoo\u003e\u003c/foo\u003e\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121234,
        "id": "107ae945-2ef9-473e-b2a0-1ea0d6b0c709",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538796028060,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To serialize field as XML comment, use "
            ],
            [
              "xml:\",comment\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Value can’t contain "
            ],
            [
              "--",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "To serialize field as XML comment, use "
          },
          {
            "Text": "xml:\",comment\"",
            "AttrFlags": 2
          },
          {
            "Text": ". Value can’t contain "
          },
          {
            "Text": "--",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552285268999,
        "id": "9e64676d-b1c2-45d2-a831-0b109d095f41",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552285260000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowComment struct {\n\tStr string `xml:\",comment\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowComment{\n\t\tStr: \"comment\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype ShowComment struct {\n\tStr string `xml:\",comment\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowComment{\n\t\tStr: \"comment\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156121234,
        "id": "bd9d81e1-ec76-40ce-88e1-67c81c9d874b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538796046436,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "xml:\"a\u003eb\u003estr\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " nests XML element. This also influences parsing."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "xml:\"a\u003eb\u003estr\"",
            "AttrFlags": 2
          },
          {
            "Text": " nests XML element. This also influences parsing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552285281301,
        "id": "380d2544-8fdf-4442-8bdc-24aded0f96f3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552285260000,
        "parent_id": "7d0ad68b-65cd-4074-aa98-85b63da9e3b0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowNesting struct {\n\tStr string `xml:\"a\u003eb\u003estr\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowNesting{\n\t\tStr: \"str\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 15,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowNesting struct {\n\tStr string `xml:\"a\u003eb\u003estr\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := \u0026ShowNesting{\n\t\tStr: \"str\",\n\t}\n\tprintXML(v)\n\n\t// :show end\n}",
        "code_language": "Go"
      }
    ],
    "title": "Configuring XML parsing and serialization",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 29
    }
  ],
  "Tables": null
}