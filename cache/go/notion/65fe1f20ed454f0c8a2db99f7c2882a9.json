{
  "ID": "65fe1f20-ed45-4f0c-8a2d-b99f7c2882a9",
  "Root": {
    "alive": true,
    "content": [
      "77d5cdf7-e966-4ea3-941b-6aa70fd67c55",
      "8a485eaf-695e-416a-aa0f-bc6619ec53e6",
      "073af4ec-b787-489d-8304-785dc1cf8f9b",
      "4b1ac156-45dd-420e-a7ac-6a4aacc2cfec",
      "ebd2f6c7-06d4-4644-95ae-726db4fb10fb",
      "f63abe96-7330-4b31-ac3d-1fef7ae1bfc5"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156134162,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "65fe1f20-ed45-4f0c-8a2d-b99f7c2882a9",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1553321400000,
    "parent_id": "710edf91-b0f1-4662-9abb-fcd96aba4d80",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "PUT request of JSON object"
        ]
      ]
    },
    "type": "page",
    "version": 56,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208624474,
        "id": "77d5cdf7-e966-4ea3-941b-6aa70fd67c55",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208628614,
        "parent_id": "65fe1f20-ed45-4f0c-8a2d-b99f7c2882a9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 201"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 201"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208628614,
        "id": "8a485eaf-695e-416a-aa0f-bc6619ec53e6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208631076,
        "parent_id": "65fe1f20-ed45-4f0c-8a2d-b99f7c2882a9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 27703"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 27703"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208632498,
        "id": "073af4ec-b787-489d-8304-785dc1cf8f9b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208632498,
        "parent_id": "65fe1f20-ed45-4f0c-8a2d-b99f7c2882a9",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208631076,
        "id": "4b1ac156-45dd-420e-a7ac-6a4aacc2cfec",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538797176862,
        "parent_id": "65fe1f20-ed45-4f0c-8a2d-b99f7c2882a9",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http.Client",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " doesn’t have a convenience method for doing PUT requests, so we construct a "
            ],
            [
              "http.Request",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " object and use "
            ],
            [
              "http.Client.Do(req *http.Request)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to perform that request."
            ]
          ]
        },
        "type": "text",
        "version": 14,
        "inline_content": [
          {
            "Text": "http.Client",
            "AttrFlags": 2
          },
          {
            "Text": " doesn’t have a convenience method for doing PUT requests, so we construct a "
          },
          {
            "Text": "http.Request",
            "AttrFlags": 2
          },
          {
            "Text": " object and use "
          },
          {
            "Text": "http.Client.Do(req *http.Request)",
            "AttrFlags": 2
          },
          {
            "Text": " to perform that request."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1553321406495,
        "id": "ebd2f6c7-06d4-4644-95ae-726db4fb10fb",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1553321400000,
        "parent_id": "65fe1f20-ed45-4f0c-8a2d-b99f7c2882a9",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// no playground\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n\t\"time\"\n)\n\ntype User struct {\n\tName  string\n\tEmail string\n}\n\nfunc main() {\n\t// :show start\n\tuser := User{\n\t\tName:  \"John Doe\",\n\t\tEmail: \"johndoe@example.com\",\n\t}\n\n\td, err := json.Marshal(user)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Marshal() failed with '%s'\\n\", err)\n\t}\n\n\tclient := \u0026http.Client{}\n\tclient.Timeout = time.Second * 15\n\n\turi := \"https://httpbin.org/put\"\n\tbody := bytes.NewBuffer(d)\n\treq, err := http.NewRequest(http.MethodPut, uri, body)\n\tif err != nil {\n\t\tlog.Fatalf(\"http.NewRequest() failed with '%s'\\n\", err)\n\t}\n\n\treq.Header.Set(\"Content-Type\", \"application/json; charset=utf-8\")\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\tlog.Fatalf(\"client.Do() failed with '%s'\\n\", err)\n\t}\n\n\tdefer resp.Body.Close()\n\td, err = ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Fatalf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\n\tfmt.Printf(\"Response status code: %d, text:\\n%s\\n\", resp.StatusCode, string(d))\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "// no playground\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n\t\"time\"\n)\n\ntype User struct {\n\tName  string\n\tEmail string\n}\n\nfunc main() {\n\t// :show start\n\tuser := User{\n\t\tName:  \"John Doe\",\n\t\tEmail: \"johndoe@example.com\",\n\t}\n\n\td, err := json.Marshal(user)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Marshal() failed with '%s'\\n\", err)\n\t}\n\n\tclient := \u0026http.Client{}\n\tclient.Timeout = time.Second * 15\n\n\turi := \"https://httpbin.org/put\"\n\tbody := bytes.NewBuffer(d)\n\treq, err := http.NewRequest(http.MethodPut, uri, body)\n\tif err != nil {\n\t\tlog.Fatalf(\"http.NewRequest() failed with '%s'\\n\", err)\n\t}\n\n\treq.Header.Set(\"Content-Type\", \"application/json; charset=utf-8\")\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\tlog.Fatalf(\"client.Do() failed with '%s'\\n\", err)\n\t}\n\n\tdefer resp.Body.Close()\n\td, err = ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Fatalf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\n\tfmt.Printf(\"Response status code: %d, text:\\n%s\\n\", resp.StatusCode, string(d))\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208649869,
        "id": "f63abe96-7330-4b31-ac3d-1fef7ae1bfc5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208649869,
        "parent_id": "65fe1f20-ed45-4f0c-8a2d-b99f7c2882a9",
        "parent_table": "block",
        "type": "text",
        "version": 4
      }
    ],
    "title": "PUT request of JSON object",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 43
    }
  ],
  "Tables": null
}