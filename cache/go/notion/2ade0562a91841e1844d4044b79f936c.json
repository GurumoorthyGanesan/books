{
  "ID": "2ade0562-a918-41e1-844d-4044b79f936c",
  "Root": {
    "alive": true,
    "content": [
      "1806dec4-1811-4bdc-b207-1c1a71c2e632",
      "b8932b23-3419-4c4a-a238-b2fa6a17f079",
      "278d0331-6ae4-4bef-877c-df44ca46a44a",
      "decdd1c5-0827-4f3b-b68e-5c5f73b2eef1",
      "49e5eab4-982e-44bf-abc4-d97b522e26a8",
      "e0d79d00-5ccc-456b-ba45-aab2a71d73bb",
      "5d39c418-3ea8-45b5-a053-eddcd5676326",
      "e11c0e61-a032-44f0-b464-45f17a1d2544",
      "92bb38b4-b4a2-4bd9-9c75-9128b52b01d7",
      "6475efb5-12f9-4d14-9825-27424ee5c45f",
      "ea625119-331d-4d83-8ed6-a615d369d643",
      "a1fa3ade-8c43-4aa4-a38b-02200fcc29b6"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532155967169,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "2ade0562-a918-41e1-844d-4044b79f936c",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552256580000,
    "parent_id": "ccc8d069-58ae-4431-9b21-f9973716e3ca",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Replace strings"
        ]
      ]
    },
    "type": "page",
    "version": 82,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532195697236,
        "id": "1806dec4-1811-4bdc-b207-1c1a71c2e632",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532234409903,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Search: Replace substring"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Search: Replace substring"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532195699454,
        "id": "b8932b23-3419-4c4a-a238-b2fa6a17f079",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532234410612,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 48"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 48"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532195702549,
        "id": "278d0331-6ae4-4bef-877c-df44ca46a44a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552219140000,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 5eq100h1"
            ]
          ]
        },
        "type": "text",
        "version": 16,
        "inline_content": [
          {
            "Text": "$SOId: 5eq100h1"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1539754384315,
        "id": "decdd1c5-0827-4f3b-b68e-5c5f73b2eef1",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539754418671,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Replace string with "
            ],
            [
              "strings.Replace",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "header",
        "version": 93,
        "inline_content": [
          {
            "Text": "Replace string with "
          },
          {
            "Text": "strings.Replace",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552219150318,
        "id": "49e5eab4-982e-44bf-abc4-d97b522e26a8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552256580000,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"original string original\"\n\ts2 := strings.Replace(s, \"original\", \"replaced\", -1)\n\tfmt.Printf(\"s2: '%s'\\n\", s2)\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 31,
        "code": "// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"original string original\"\n\ts2 := strings.Replace(s, \"original\", \"replaced\", -1)\n\tfmt.Printf(\"s2: '%s'\\n\", s2)\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1538721247147,
        "id": "e0d79d00-5ccc-456b-ba45-aab2a71d73bb",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539754932386,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Last argument in "
            ],
            [
              "strings.Replace",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is max number of replacements. "
            ],
            [
              "-1",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means \"replace all\"."
            ]
          ]
        },
        "type": "text",
        "version": 206,
        "inline_content": [
          {
            "Text": "Last argument in "
          },
          {
            "Text": "strings.Replace",
            "AttrFlags": 2
          },
          {
            "Text": " is max number of replacements. "
          },
          {
            "Text": "-1",
            "AttrFlags": 2
          },
          {
            "Text": " means \"replace all\"."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1538721246735,
        "id": "5d39c418-3ea8-45b5-a053-eddcd5676326",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539757697043,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Replace string with a regular expression"
            ]
          ]
        },
        "type": "header",
        "version": 132,
        "inline_content": [
          {
            "Text": "Replace string with a regular expression"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552219167082,
        "id": "e11c0e61-a032-44f0-b464-45f17a1d2544",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552256580000,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"original string original\"\n\trx := regexp.MustCompile(\"(?U)or.*al\")\n\ts2 := rx.ReplaceAllString(s, \"replaced\")\n\tfmt.Printf(\"s2: '%s'\\n\", s2)\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 29,
        "code": "// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"original string original\"\n\trx := regexp.MustCompile(\"(?U)or.*al\")\n\ts2 := rx.ReplaceAllString(s, \"replaced\")\n\tfmt.Printf(\"s2: '%s'\\n\", s2)\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1539754896642,
        "id": "92bb38b4-b4a2-4bd9-9c75-9128b52b01d7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539757601704,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This shows how to do strings replacements with regular expressions. "
            ],
            [
              "(?U)or.*al",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a non-greedy ("
            ],
            [
              "(?U)",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " flag) regular expression that matches "
            ],
            [
              "original",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " string."
            ]
          ]
        },
        "type": "text",
        "version": 1060,
        "inline_content": [
          {
            "Text": "This shows how to do strings replacements with regular expressions. "
          },
          {
            "Text": "(?U)or.*al",
            "AttrFlags": 2
          },
          {
            "Text": " is a non-greedy ("
          },
          {
            "Text": "(?U)",
            "AttrFlags": 2
          },
          {
            "Text": " flag) regular expression that matches "
          },
          {
            "Text": "original",
            "AttrFlags": 2
          },
          {
            "Text": " string."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1539757474939,
        "id": "6475efb5-12f9-4d14-9825-27424ee5c45f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539757616313,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We replace all parts of the string matching the regex with a string "
            ],
            [
              "replaced",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 10,
        "inline_content": [
          {
            "Text": "We replace all parts of the string matching the regex with a string "
          },
          {
            "Text": "replaced",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1539757419439,
        "id": "ea625119-331d-4d83-8ed6-a615d369d643",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539757688243,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Regular expression is non-greedy, meaning it matches the shortest possible string as opposed to default greedy match which looks for longest possible match."
            ]
          ]
        },
        "type": "text",
        "version": 394,
        "inline_content": [
          {
            "Text": "Regular expression is non-greedy, meaning it matches the shortest possible string as opposed to default greedy match which looks for longest possible match."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1539757688555,
        "id": "a1fa3ade-8c43-4aa4-a38b-02200fcc29b6",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539757688579,
        "parent_id": "2ade0562-a918-41e1-844d-4044b79f936c",
        "parent_table": "block",
        "type": "text",
        "version": 6
      }
    ],
    "title": "Replace strings",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 19
    }
  ],
  "Tables": null
}