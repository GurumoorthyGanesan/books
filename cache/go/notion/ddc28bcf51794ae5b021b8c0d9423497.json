{
  "ID": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
  "Root": {
    "id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
    "alive": true,
    "content": [
      "aeaa6064-2e79-4b53-9850-f52e3e98e424",
      "5c5c29c2-d22e-4c3d-8eef-aa7ccd6c2e70",
      "a29ab764-0b4e-4c36-a81f-1f13533f5595",
      "b2fcdb63-320f-42e9-ab19-4bc940e59504",
      "61089f34-ef71-4279-b251-832cc08913dd",
      "e5157392-ea74-425d-acc6-8c8ae6880b43",
      "e5249c28-a314-456f-995b-05d776a42209",
      "0e990878-59a7-4d72-87cd-ce63f744f5b1",
      "3f7d4fbc-7afe-4468-a5f7-25a20f77d594",
      "b8eb5fcd-d7ed-4f92-bac1-3b47a330d9c0",
      "f1056025-02e1-433f-bde3-204fa0026724",
      "2adb299e-18ef-4305-a1ad-4410634fab52",
      "de351f2f-68f4-4f3d-91c5-b623485a33c7",
      "51e15af4-0230-4a06-a918-ba25ec7b47a7",
      "b6eee729-d815-4e7b-b48b-a27c4cc97326",
      "bb701833-60f4-402c-8275-b4547edbc69c",
      "7669dab6-c1ed-433e-bc2f-9aaa04779eae",
      "b244c4cc-c082-440e-8e85-ca287719a495",
      "1fcedb2e-0aee-4ac0-b2cb-577a00419eea",
      "f3c93068-81e3-412a-9a14-772b84ec9b08",
      "5b2cf30a-5bbe-42e1-9201-14d7b17cbc6d",
      "cf87c450-eb0f-45b4-9ae1-361bcd74b5b2",
      "b024c22d-efe0-4728-b314-d9cb75cdfaca",
      "242bb1d0-59c8-4446-8c79-9546d4e3990f",
      "95f48ef0-d428-4dd3-8d13-6437b9b1631b",
      "c3e26cf7-ad47-4571-83d7-cbc438816ad8",
      "e76a9fe1-2d33-46b1-b33a-1faf4d5b8377",
      "34394eb3-aee0-457c-8420-0e7631de095c"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156257146,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1560988860000,
    "parent_id": "2cab1ed2-b7a4-4584-b56b-0d3ca9b80185",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Console I/O"
        ]
      ]
    },
    "type": "page",
    "version": 131,
    "content_resolved": [
      {
        "id": "aeaa6064-2e79-4b53-9850-f52e3e98e424",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532214570454,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532214577950,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 304"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 304"
          }
        ]
      },
      {
        "id": "5c5c29c2-d22e-4c3d-8eef-aa7ccd6c2e70",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532214572781,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560986400000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 9741"
            ]
          ]
        },
        "type": "text",
        "version": 16,
        "inline_content": [
          {
            "Text": "$SOId: 9741"
          }
        ]
      },
      {
        "id": "a29ab764-0b4e-4c36-a81f-1f13533f5595",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560986760000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988620000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$search fmt.Fscanf"
            ]
          ]
        },
        "type": "text",
        "version": 35,
        "inline_content": [
          {
            "Text": "$search fmt.Fscanf"
          }
        ]
      },
      {
        "id": "b2fcdb63-320f-42e9-ab19-4bc940e59504",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988620000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988620000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "id": "61089f34-ef71-4279-b251-832cc08913dd",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560986880000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560986940000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When writing command-line programs, you can read user input from "
            ],
            [
              "os.Stdin",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " using any function that accepts "
            ],
            [
              "io.Reader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 268,
        "inline_content": [
          {
            "Text": "When writing command-line programs, you can read user input from "
          },
          {
            "Text": "os.Stdin",
            "AttrFlags": 2
          },
          {
            "Text": " using any function that accepts "
          },
          {
            "Text": "io.Reader",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "e5157392-ea74-425d-acc6-8c8ae6880b43",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988560000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988680000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fmt.Scanf to read from stdio"
            ]
          ]
        },
        "type": "header",
        "version": 40,
        "inline_content": [
          {
            "Text": "fmt.Scanf to read from stdio"
          }
        ]
      },
      {
        "id": "e5249c28-a314-456f-995b-05d776a42209",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560986940000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987000000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most convenient way is to use "
            ],
            [
              "fmt.Scanf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which is a mirror image of "
            ],
            [
              "fmt.Printf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 244,
        "inline_content": [
          {
            "Text": "Most convenient way is to use "
          },
          {
            "Text": "fmt.Scanf",
            "AttrFlags": 2
          },
          {
            "Text": " which is a mirror image of "
          },
          {
            "Text": "fmt.Printf",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "0e990878-59a7-4d72-87cd-ce63f744f5b1",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560987000000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987060000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here's how to read a string and an integer from the console (standard input)"
            ]
          ]
        },
        "type": "text",
        "version": 120,
        "inline_content": [
          {
            "Text": "Here's how to read a string and an integer from the console (standard input)"
          }
        ]
      },
      {
        "id": "3f7d4fbc-7afe-4468-a5f7-25a20f77d594",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560987084110,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987900000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot, no output\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    // :show start\n    fmt.Print(\"What is your name?\\n\")\n    var name string\n    if n, err := fmt.Scanf(\"%s\", \u0026name); err != nil {\n        fmt.Printf(\"fmt.Scanf failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"fmt.Scanf scanned %d item(s) and set name to '%s'\\n\", n, name)\n    }\n    fmt.Print(\"What is your age?\\n\")\n    var age int\n    if n, err :=  fmt.Scanf(\"%d\", \u0026age); err != nil {\n        fmt.Printf(\"fmt.Scanf failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"fmt.Scanf scanned %d item(s) and set age to '%d'\\n\", n, age)\n    }\n    // :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 12,
        "code": "// :glot, no output\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    // :show start\n    fmt.Print(\"What is your name?\\n\")\n    var name string\n    if n, err := fmt.Scanf(\"%s\", \u0026name); err != nil {\n        fmt.Printf(\"fmt.Scanf failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"fmt.Scanf scanned %d item(s) and set name to '%s'\\n\", n, name)\n    }\n    fmt.Print(\"What is your age?\\n\")\n    var age int\n    if n, err :=  fmt.Scanf(\"%d\", \u0026age); err != nil {\n        fmt.Printf(\"fmt.Scanf failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"fmt.Scanf scanned %d item(s) and set age to '%d'\\n\", n, age)\n    }\n    // :show end\n}",
        "code_language": "Go"
      },
      {
        "id": "b8eb5fcd-d7ed-4f92-bac1-3b47a330d9c0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560987060000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987600000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fmt.Scanf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " reads input from "
            ],
            [
              "os.Stdin",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and tries to set passed variables based on provided format."
            ]
          ]
        },
        "type": "text",
        "version": 160,
        "inline_content": [
          {
            "Text": "fmt.Scanf",
            "AttrFlags": 2
          },
          {
            "Text": " reads input from "
          },
          {
            "Text": "os.Stdin",
            "AttrFlags": 2
          },
          {
            "Text": " and tries to set passed variables based on provided format."
          }
        ]
      },
      {
        "id": "f1056025-02e1-433f-bde3-204fa0026724",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560987780000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987780000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "A space and newline are considered value separators."
            ]
          ]
        },
        "type": "text",
        "version": 68,
        "inline_content": [
          {
            "Text": "A space and newline are considered value separators."
          }
        ]
      },
      {
        "id": "2adb299e-18ef-4305-a1ad-4410634fab52",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560987540000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987660000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It returns number of successfully parsed items (in case it only matched first few variables)."
            ]
          ]
        },
        "type": "text",
        "version": 169,
        "inline_content": [
          {
            "Text": "It returns number of successfully parsed items (in case it only matched first few variables)."
          }
        ]
      },
      {
        "id": "de351f2f-68f4-4f3d-91c5-b623485a33c7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560987660000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987660000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To read from arbitrary "
            ],
            [
              "io.Reader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " use "
            ],
            [
              "fmt.Fscanf",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 66,
        "inline_content": [
          {
            "Text": "To read from arbitrary "
          },
          {
            "Text": "io.Reader",
            "AttrFlags": 2
          },
          {
            "Text": " use "
          },
          {
            "Text": "fmt.Fscanf",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "51e15af4-0230-4a06-a918-ba25ec7b47a7",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988560000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988740000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "fmt.Scanln to read a line from stdin"
            ]
          ]
        },
        "type": "header",
        "version": 49,
        "inline_content": [
          {
            "Text": "fmt.Scanln to read a line from stdin"
          }
        ]
      },
      {
        "id": "b6eee729-d815-4e7b-b48b-a27c4cc97326",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560987780000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987960000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To read a full line (until newline or "
            ],
            [
              "io.EOF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", use "
            ],
            [
              "fmt.Scanln",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 101,
        "inline_content": [
          {
            "Text": "To read a full line (until newline or "
          },
          {
            "Text": "io.EOF",
            "AttrFlags": 2
          },
          {
            "Text": ", use "
          },
          {
            "Text": "fmt.Scanln",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "bb701833-60f4-402c-8275-b4547edbc69c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156258127,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560987960000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot, no output\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    // :show start\n    var line string\n    fmt.Scanln(\u0026line)\n    fmt.Printf(\"Entered line: '%s'\\n\", line)\n    // :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 24,
        "code": "// :glot, no output\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    // :show start\n    var line string\n    fmt.Scanln(\u0026line)\n    fmt.Printf(\"Entered line: '%s'\\n\", line)\n    // :show end\n}",
        "code_language": "Go"
      },
      {
        "id": "7669dab6-c1ed-433e-bc2f-9aaa04779eae",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988620000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988740000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bufio.Reader to read a line from stdin"
            ]
          ]
        },
        "type": "header",
        "version": 95,
        "inline_content": [
          {
            "Text": "bufio.Reader to read a line from stdin"
          }
        ]
      },
      {
        "id": "b244c4cc-c082-440e-8e85-ca287719a495",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988200000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988620000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also use "
            ],
            [
              "bufio.Reader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "You can also use "
          },
          {
            "Text": "bufio.Reader",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "1fcedb2e-0aee-4ac0-b2cb-577a00419eea",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988217871,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988500000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot, no output\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    reader := bufio.NewReader(os.Stdin)\n    if line, err := reader.ReadString('\\n'); err != nil {\n        fmt.Printf(\"ReadString failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    \n    // :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 9,
        "code": "// :glot, no output\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    reader := bufio.NewReader(os.Stdin)\n    if line, err := reader.ReadString('\\n'); err != nil {\n        fmt.Printf(\"ReadString failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    \n    // :show end\n}",
        "code_language": "Go"
      },
      {
        "id": "f3c93068-81e3-412a-9a14-772b84ec9b08",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988200000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988260000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "ReadString",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " reads from the reader until it reads a given character. We specified newline "
            ],
            [
              "\\n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character so it'll read a full line."
            ]
          ]
        },
        "type": "text",
        "version": 205,
        "inline_content": [
          {
            "Text": "ReadString",
            "AttrFlags": 2
          },
          {
            "Text": " reads from the reader until it reads a given character. We specified newline "
          },
          {
            "Text": "\\n",
            "AttrFlags": 2
          },
          {
            "Text": " character so it'll read a full line."
          }
        ]
      },
      {
        "id": "5b2cf30a-5bbe-42e1-9201-14d7b17cbc6d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988320000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988380000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The value returned by "
            ],
            [
              "ReadString",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " includes the terminating character ("
            ],
            [
              "\\n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") so often you'll want to strip it with e.g. "
            ],
            [
              "strings.TrimSpace",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 183,
        "inline_content": [
          {
            "Text": "The value returned by "
          },
          {
            "Text": "ReadString",
            "AttrFlags": 2
          },
          {
            "Text": " includes the terminating character ("
          },
          {
            "Text": "\\n",
            "AttrFlags": 2
          },
          {
            "Text": ") so often you'll want to strip it with e.g. "
          },
          {
            "Text": "strings.TrimSpace",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "cf87c450-eb0f-45b4-9ae1-361bcd74b5b2",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988380000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988620000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Character "
            ],
            [
              "\\n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is a line terminator on Unix. On Windows it's more common to see "
            ],
            [
              "\\r\\n",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as a line terminator. If you expect to be run on Windows, make sure to handle this (e.g. by trimming "
            ],
            [
              "\\r",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " character from returned string)."
            ]
          ]
        },
        "type": "text",
        "version": 361,
        "inline_content": [
          {
            "Text": "Character "
          },
          {
            "Text": "\\n",
            "AttrFlags": 2
          },
          {
            "Text": " is a line terminator on Unix. On Windows it's more common to see "
          },
          {
            "Text": "\\r\\n",
            "AttrFlags": 2
          },
          {
            "Text": " as a line terminator. If you expect to be run on Windows, make sure to handle this (e.g. by trimming "
          },
          {
            "Text": "\\r",
            "AttrFlags": 2
          },
          {
            "Text": " character from returned string)."
          }
        ]
      },
      {
        "id": "b024c22d-efe0-4728-b314-d9cb75cdfaca",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988500000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988740000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bufio.Scanner to read a line from stdi"
            ]
          ]
        },
        "type": "header",
        "version": 52,
        "inline_content": [
          {
            "Text": "bufio.Scanner to read a line from stdi"
          }
        ]
      },
      {
        "id": "242bb1d0-59c8-4446-8c79-9546d4e3990f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156258128,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988680000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can also use  "
            ],
            [
              "bufio.Scanner",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to read lines from stdin"
            ]
          ]
        },
        "type": "text",
        "version": 77,
        "inline_content": [
          {
            "Text": "You can also use  "
          },
          {
            "Text": "bufio.Scanner",
            "AttrFlags": 2
          },
          {
            "Text": " to read lines from stdin"
          }
        ]
      },
      {
        "id": "95f48ef0-d428-4dd3-8d13-6437b9b1631b",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156258128,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988680000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot, no output\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 12,
        "code": "// :glot, no output\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}",
        "code_language": "Go"
      },
      {
        "id": "c3e26cf7-ad47-4571-83d7-cbc438816ad8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988680000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988860000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "bufio.Scanner",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " allows for more complicated use where you specify a function to split input in chunks with "
            ],
            [
              "Scanner.Split",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 181,
        "inline_content": [
          {
            "Text": "bufio.Scanner",
            "AttrFlags": 2
          },
          {
            "Text": " allows for more complicated use where you specify a function to split input in chunks with "
          },
          {
            "Text": "Scanner.Split",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "id": "e76a9fe1-2d33-46b1-b33a-1faf4d5b8377",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988860000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988860000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "id": "34394eb3-aee0-457c-8420-0e7631de095c",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1560988800000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1560988800000,
        "parent_id": "ddc28bcf-5179-4ae5-b021-b8c0d9423497",
        "parent_table": "block",
        "type": "text",
        "version": 4
      }
    ],
    "title": "Console I/O",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 154
    }
  ],
  "Tables": null
}