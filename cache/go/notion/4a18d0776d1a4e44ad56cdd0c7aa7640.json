{
  "ID": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
  "Root": {
    "id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
    "alive": true,
    "content": [
      "850d522a-e12e-4837-a3bb-da78996cd9f0",
      "87d37d74-0e17-4ce1-b2b4-72affdae791f",
      "6bcbf2b0-9715-42d9-9fc1-49ebc2d99535",
      "2588591c-de5a-492b-bd68-662ebf5405f8",
      "78bfa892-73f7-42f3-8a87-77801619a31d",
      "ec6c6983-5100-4824-aa00-8c0fdf343d24",
      "82e9b131-fceb-41d6-b54b-e354986d5d4e",
      "c36aa41e-354a-4244-b148-3181550b32a8",
      "8252875d-74b4-4b82-9f94-84116d5163b8",
      "6f83c9b3-97a5-4469-a45d-07e73e5aea98",
      "69e2db8b-539c-4bf4-9e4f-fb56c8731f48",
      "44a0045f-b151-4156-9d57-5bb9f7513d2d",
      "a7b456b0-9af9-4152-933e-8d36c24016be"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532155982022,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1555607640000,
    "parent_id": "f4005538-90d3-4185-ba79-5870807c2615",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Length and capacity"
        ]
      ]
    },
    "type": "page",
    "version": 56,
    "content_resolved": [
      {
        "id": "850d522a-e12e-4837-a3bb-da78996cd9f0",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532196102096,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532234734344,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 61"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 61"
          }
        ]
      },
      {
        "id": "87d37d74-0e17-4ce1-b2b4-72affdae791f",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532196104479,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532234735051,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 3561"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 3561"
          }
        ]
      },
      {
        "id": "6bcbf2b0-9715-42d9-9fc1-49ebc2d99535",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532196107539,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532196107539,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "id": "2588591c-de5a-492b-bd68-662ebf5405f8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532196106013,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532196107332,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Slices have both length and capacity. The length of a slice is the number of elements "
            ],
            [
              "currently",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " in the slice, while the capacity is the number of elements the slice "
            ],
            [
              "can hold",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " before needing to be reallocated."
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "Slices have both length and capacity. The length of a slice is the number of elements "
          },
          {
            "Text": "currently",
            "AttrFlags": 4
          },
          {
            "Text": " in the slice, while the capacity is the number of elements the slice "
          },
          {
            "Text": "can hold",
            "AttrFlags": 4
          },
          {
            "Text": " before needing to be reallocated."
          }
        ]
      },
      {
        "id": "78bfa892-73f7-42f3-8a87-77801619a31d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532155982018,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1555604640000,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When creating a slice using the built-in "
            ],
            [
              "make()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function, you can specify its length, and optionally its capacity. You can check capacity and length with "
            ],
            [
              "len()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "cap()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 107,
        "inline_content": [
          {
            "Text": "When creating a slice using the built-in "
          },
          {
            "Text": "make()",
            "AttrFlags": 2
          },
          {
            "Text": " function, you can specify its length, and optionally its capacity. You can check capacity and length with "
          },
          {
            "Text": "len()",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "cap()",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "id": "ec6c6983-5100-4824-aa00-8c0fdf343d24",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532155982018,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1555607580000,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s = make([]int, 3, 5)\n\tfmt.Printf(\"Length:   %d\\n\", len(s))\n\tfmt.Printf(\"Capacity: %d\\n\", cap(s))\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 27,
        "code": "// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s = make([]int, 3, 5)\n\tfmt.Printf(\"Length:   %d\\n\", len(s))\n\tfmt.Printf(\"Capacity: %d\\n\", cap(s))\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "id": "82e9b131-fceb-41d6-b54b-e354986d5d4e",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1555604580000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1555604700000,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If the capacity is not explicitly specified, it will default to the value of the specified length."
            ]
          ]
        },
        "type": "text",
        "version": 9,
        "inline_content": [
          {
            "Text": "If the capacity is not explicitly specified, it will default to the value of the specified length."
          }
        ]
      },
      {
        "id": "c36aa41e-354a-4244-b148-3181550b32a8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532155982019,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1555607640000,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s = make([]int, 4)\n\tfmt.Printf(\"Length:   %d\\n\", len(s))\n\tfmt.Printf(\"Capacity: %d\\n\", cap(s))\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 12,
        "code": "// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s = make([]int, 4)\n\tfmt.Printf(\"Length:   %d\\n\", len(s))\n\tfmt.Printf(\"Capacity: %d\\n\", cap(s))\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "id": "8252875d-74b4-4b82-9f94-84116d5163b8",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532155982020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532155982020,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Elements created by "
            ],
            [
              "make()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are set to the zero value for the element type of the slice:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Elements created by "
          },
          {
            "Text": "make()",
            "AttrFlags": 2
          },
          {
            "Text": " are set to the zero value for the element type of the slice:"
          }
        ]
      },
      {
        "id": "6f83c9b3-97a5-4469-a45d-07e73e5aea98",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532155982020,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1555604700000,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s = make([]int, 3)\n\tfor idx, val := range s {\n\t\tfmt.Println(idx, val)\n\t}\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 6,
        "code": "// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s = make([]int, 3)\n\tfor idx, val := range s {\n\t\tfmt.Println(idx, val)\n\t}\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "id": "69e2db8b-539c-4bf4-9e4f-fb56c8731f48",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532155982021,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532155982021,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You cannot access elements beyond the length of a slice, even if the index is within capacity:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You cannot access elements beyond the length of a slice, even if the index is within capacity:"
          }
        ]
      },
      {
        "id": "44a0045f-b151-4156-9d57-5bb9f7513d2d",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532155982021,
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1555607460000,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot, allow error\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := make([]int, 3, 20)\n\tfmt.Println(s[5])\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 11,
        "code": "// :glot, allow error\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := make([]int, 3, 20)\n\tfmt.Println(s[5])\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "id": "a7b456b0-9af9-4152-933e-8d36c24016be",
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1555604820000,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1555605960000,
        "parent_id": "4a18d077-6d1a-4e44-ad56-cdd0c7aa7640",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capacity allow us to "
            ],
            [
              "optimize performance",
              [
                [
                  "a",
                  "https://www.notion.so/essentialbooks/Optimize-by-pre-allocating-slice-ee6501b596c9446da8b82e4ed35454a6"
                ]
              ]
            ],
            [
              ". "
            ]
          ]
        },
        "type": "text",
        "version": 140,
        "inline_content": [
          {
            "Text": "Capacity allow us to "
          },
          {
            "Text": "optimize performance",
            "Link": "https://www.notion.so/essentialbooks/Optimize-by-pre-allocating-slice-ee6501b596c9446da8b82e4ed35454a6"
          },
          {
            "Text": ". "
          }
        ]
      }
    ],
    "title": "Length and capacity",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 103
    }
  ],
  "Tables": null
}