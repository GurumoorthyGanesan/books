{
  "ID": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
  "Root": {
    "alive": true,
    "content": [
      "2ab7c2ff-b0b4-41dc-b9d0-37fecd35f9c7",
      "957ead7a-b176-4c29-a94c-f6ec4342b0e9",
      "d560be09-b358-49f3-ad4f-47a8f288740e",
      "dc903045-52a6-4960-8d61-bd4c3a99a9be",
      "262584b6-042c-44df-936c-0357f2d79088",
      "78c1d642-bb9a-49d1-8bc7-2c127407c277",
      "7061c5b6-9a3f-4cd4-ad38-721f081b6358"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156112223,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1552284660000,
    "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Decoding JSON from a file"
        ]
      ]
    },
    "type": "page",
    "version": 51,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532207628841,
        "id": "2ab7c2ff-b0b4-41dc-b9d0-37fecd35f9c7",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207631062,
        "parent_id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 185"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 185"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532207631062,
        "id": "957ead7a-b176-4c29-a94c-f6ec4342b0e9",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207633244,
        "parent_id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 6628"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 6628"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532207633244,
        "id": "d560be09-b358-49f3-ad4f-47a8f288740e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207633685,
        "parent_id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
        "parent_table": "block",
        "type": "text",
        "version": 10
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156112222,
        "id": "dc903045-52a6-4960-8d61-bd4c3a99a9be",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1539843988145,
        "parent_id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can decode JSON data from a file on disk or, more broadly, any "
            ],
            [
              "io.Reader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", like a network connection."
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "We can decode JSON data from a file on disk or, more broadly, any "
          },
          {
            "Text": "io.Reader",
            "AttrFlags": 2
          },
          {
            "Text": ", like a network connection."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156112223,
        "id": "262584b6-042c-44df-936c-0357f2d79088",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538795223119,
        "parent_id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The following example reads the file and decodes the content:"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "The following example reads the file and decodes the content:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552284671702,
        "id": "78c1d642-bb9a-49d1-8bc7-2c127407c277",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552284660000,
        "parent_id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\n// :show start\ntype Student struct {\n\tName     string\n\tStandard int `json:\"Standard\"`\n}\n\nfunc decodeFromReader(r io.Reader) ([]*Student, error) {\n\tvar res []*Student\n\n\tdec := json.NewDecoder(r)\n\terr := dec.Decode(\u0026res)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn res, nil\n}\n\nfunc decodeFromString(s string) ([]*Student, error) {\n\tr := bytes.NewBufferString(s)\n\treturn decodeFromReader(r)\n}\n\nfunc decodeFromFile(path string) ([]*Student, error) {\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer f.Close()\n\treturn decodeFromReader(f)\n}\n\n// :show end\n\nconst jsonStr = `\n[\n    {\n        \"Name\" : \"John Doe\",\n        \"Standard\" : 4\n    },\n    {\n        \"Name\" : \"Peter Parker\",\n        \"Standard\" : 11\n    },\n    {\n        \"Name\" : \"Bilbo Baggins\",\n        \"Standard\" : 150\n    }\n]\n`\n\nfunc main() {\n\t// studentList, err := decodeFromFile(\"data.json\")\n\tstudentList, err := decodeFromString(jsonStr)\n\tif err != nil {\n\t\tlog.Fatalf(\"decodeFromString() failed with '%s'\\n\", err)\n\t}\n\tfor _, student := range studentList {\n\t\tfmt.Printf(\"Student: %s, standard: %d\\n\", student.Name, student.Standard)\n\t}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 17,
        "code": "// :glot\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\n// :show start\ntype Student struct {\n\tName     string\n\tStandard int `json:\"Standard\"`\n}\n\nfunc decodeFromReader(r io.Reader) ([]*Student, error) {\n\tvar res []*Student\n\n\tdec := json.NewDecoder(r)\n\terr := dec.Decode(\u0026res)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn res, nil\n}\n\nfunc decodeFromString(s string) ([]*Student, error) {\n\tr := bytes.NewBufferString(s)\n\treturn decodeFromReader(r)\n}\n\nfunc decodeFromFile(path string) ([]*Student, error) {\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer f.Close()\n\treturn decodeFromReader(f)\n}\n\n// :show end\n\nconst jsonStr = `\n[\n    {\n        \"Name\" : \"John Doe\",\n        \"Standard\" : 4\n    },\n    {\n        \"Name\" : \"Peter Parker\",\n        \"Standard\" : 11\n    },\n    {\n        \"Name\" : \"Bilbo Baggins\",\n        \"Standard\" : 150\n    }\n]\n`\n\nfunc main() {\n\t// studentList, err := decodeFromFile(\"data.json\")\n\tstudentList, err := decodeFromString(jsonStr)\n\tif err != nil {\n\t\tlog.Fatalf(\"decodeFromString() failed with '%s'\\n\", err)\n\t}\n\tfor _, student := range studentList {\n\t\tfmt.Printf(\"Student: %s, standard: %d\\n\", student.Name, student.Standard)\n\t}\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156112223,
        "id": "7061c5b6-9a3f-4cd4-ad38-721f081b6358",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156112223,
        "parent_id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By writing a helper function "
            ],
            [
              "decodeFromReader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we can easily write wrappers that will work on files, strings or network connections."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By writing a helper function "
          },
          {
            "Text": "decodeFromReader",
            "AttrFlags": 2
          },
          {
            "Text": ", we can easily write wrappers that will work on files, strings or network connections."
          }
        ]
      }
    ],
    "title": "Decoding JSON from a file",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 29
    }
  ],
  "Tables": null
}