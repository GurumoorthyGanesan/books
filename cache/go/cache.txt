2385 1553594963206 glotoutput
Sha1: dccdc6ad6352880c659a5498f9109cb7380c24eb
Lang: Go
FileName: main.go
CodeFull:+1138
// :glot
package main

import (
	"bytes"
	"fmt"
	"io"
)

// :show start
// declaration of a single top-level variable
var topLevel int64 = 5

// grouping of multiple top-level declarations
var (
	intVal int            // value is initialized with zero-value
	str    string = "str" // assigning

	// functions are first-class values so can be assigned to variables
	// fn is variable of type func(a int) string
	// it's uninitialized so is nil (zero-value for function variables)
	fn func(a int) string
)

func f() {
	// shorthand using local type inference
	// type of `i` is int and is inferred from the value
	// note: this is not allowed at top-level
	i := 4

	// grouping inside a function
	var (
		i2 int
		s  string
	)

	// _ is like a variable whose value is discarded. It's called blank identifier.
	// Useful when we don't care about one of the values returned by a function
	_, err := io.Copy(dst, src) // don't care how many bytes were written
	// ...

	fmt.Printf("i: %d, i2: %d, s: %s, err: %v\n", i, i2, s, err)
}

// :show end

var (
	dst io.Writer = &bytes.Buffer{}
	src io.Reader = &bytes.Buffer{}
)

func main() {
	f()
}
CodeToRun:+1100
package main

import (
	"bytes"
	"fmt"
	"io"
)

// declaration of a single top-level variable
var topLevel int64 = 5

// grouping of multiple top-level declarations
var (
	intVal int            // value is initialized with zero-value
	str    string = "str" // assigning

	// functions are first-class values so can be assigned to variables
	// fn is variable of type func(a int) string
	// it's uninitialized so is nil (zero-value for function variables)
	fn func(a int) string
)

func f() {
	// shorthand using local type inference
	// type of `i` is int and is inferred from the value
	// note: this is not allowed at top-level
	i := 4

	// grouping inside a function
	var (
		i2 int
		s  string
	)

	// _ is like a variable whose value is discarded. It's called blank identifier.
	// Useful when we don't care about one of the values returned by a function
	_, err := io.Copy(dst, src) // don't care how many bytes were written
	// ...

	fmt.Printf("i: %d, i2: %d, s: %s, err: %v\n", i, i2, s, err)
}

var (
	dst io.Writer = &bytes.Buffer{}
	src io.Reader = &bytes.Buffer{}
)

func main() {
	f()
}
Output:+29
i: 4, i2: 0, s: , err: <nil>
66 1553594964048 glotid
Sha1: dccdc6ad6352880c659a5498f9109cb7380c24eb
GlotID: fapbo8wmdy
716 1553594965208 glotoutput
Sha1: 1de57d5bf41a1266d052e985e79814f4b73919e9
Lang: Go
FileName: main.go
CodeFull:+325
// :glot, no output
package main

// :show start
// Greeting is an exported (public) string constant
const Greeting string = "Hello World"

// we can group const declarations
const (
	// years is an unexported (package private) int constant
	years int  = 10
	truth bool = true
)

// :show end

func main() {
	// do  nothing
}
CodeToRun:+276
package main

// Greeting is an exported (public) string constant
const Greeting string = "Hello World"

// we can group const declarations
const (
	// years is an unexported (package private) int constant
	years int  = 10
	truth bool = true
)

func main() {
	// do  nothing
}
Output:+0
66 1553594965395 glotid
Sha1: 1de57d5bf41a1266d052e985e79814f4b73919e9
GlotID: fapbo9pg2w
1251 1553594966687 glotoutput
Sha1: 3e6ac778427fe13fd6c9d7a7f5d30405f6d33702
Lang: Go
FileName: main.go
CodeFull:+544
// :glot
package main

import (
	"fmt"
	"math"
)

const s string = "constant"

func main() {
	fmt.Println(s) // constant

	// A `const` statement can appear anywhere a `var` statement can.
	const n = 10
	fmt.Println(n)                           // 10
	fmt.Printf("n=%d is of type %T\n", n, n) // n=10 is of type int

	const m float64 = 4.3
	fmt.Println(m) // 4.3

	// An untyped constant takes the type needed by its context.
	// For example, here `math.Sin` expects a `float64`.
	const x = 10
	fmt.Println(math.Sin(x)) // -0.5440211108893699
}
CodeToRun:+535
package main

import (
	"fmt"
	"math"
)

const s string = "constant"

func main() {
	fmt.Println(s) // constant

	// A `const` statement can appear anywhere a `var` statement can.
	const n = 10
	fmt.Println(n)                           // 10
	fmt.Printf("n=%d is of type %T\n", n, n) // n=10 is of type int

	const m float64 = 4.3
	fmt.Println(m) // 4.3

	// An untyped constant takes the type needed by its context.
	// For example, here `math.Sin` expects a `float64`.
	const x = 10
	fmt.Println(math.Sin(x)) // -0.5440211108893699
}
Output:+56
constant
10
n=10 is of type int
4.3
-0.5440211108893699
66 1553594966870 glotid
Sha1: 3e6ac778427fe13fd6c9d7a7f5d30405f6d33702
GlotID: fapboal1q2
1676 1553594968019 glotoutput
Sha1: 6bd3d1fb0b4bf577aeb0992e557c2e87467fd7f4
Lang: Go
FileName: main.go
CodeFull:+685
// :glot
package main

import "fmt"

func main() {
	// :show start
	var s string // empty string ""
	s1 := "string\nliteral\nwith\tescape characters"
	s2 := `raw string literal
	which doesn't recgonize escape characters like \n
	`

	// you can add strings with +
	fmt.Printf("sum of string: %s\n", s+s1+s2)

	// you can compare strings with ==
	if s1 == s2 {
		fmt.Printf("s1 is equal to s2\n")
	} else {
		fmt.Printf("s1 is not equal to s2\n")
	}

	fmt.Printf("substring of s1: %s\n", s1[3:5])
	fmt.Printf("byte (character) at position 3 in s1: %d\n", s1[3])

	// C-style string formatting
	s = fmt.Sprintf("%d + %f = %s", 1, float64(3), "4")
	fmt.Printf("s: %s\n", s)
	// :show end
}
CodeToRun:+646
package main

import "fmt"

func main() {
	var s string // empty string ""
	s1 := "string\nliteral\nwith\tescape characters"
	s2 := `raw string literal
	which doesn't recgonize escape characters like \n
	`

	// you can add strings with +
	fmt.Printf("sum of string: %s\n", s+s1+s2)

	// you can compare strings with ==
	if s1 == s2 {
		fmt.Printf("s1 is equal to s2\n")
	} else {
		fmt.Printf("s1 is not equal to s2\n")
	}

	fmt.Printf("substring of s1: %s\n", s1[3:5])
	fmt.Printf("byte (character) at position 3 in s1: %d\n", s1[3])

	// C-style string formatting
	s = fmt.Sprintf("%d + %f = %s", 1, float64(3), "4")
	fmt.Printf("s: %s\n", s)
}
Output:+228
sum of string: string
literal
with	escape charactersraw string literal
	which doesn't recgonize escape characters like \n
	
s1 is not equal to s2
substring of s1: in
byte (character) at position 3 in s1: 105
s: 1 + 3.000000 = 4
66 1553594968197 glotid
Sha1: 6bd3d1fb0b4bf577aeb0992e557c2e87467fd7f4
GlotID: fapbobdjp5
835 1553594969488 glotoutput
Sha1: e56c30b1c1fc3d54fcd267d9b33d7e628b07271d
Lang: Go
FileName: main.go
CodeFull:+347
// :glot
package main

import "fmt"

func main() {
	// :show start
	v := 5

	// pv is a pointer to v
	pv := &v
	fmt.Printf("v: %d, pv: %p\n", v, pv)

	// we change the value of v via pv
	*pv = 4
	fmt.Printf("v: %d\n", v)

	// two pointers to the same value have the same address
	pv2 := &v
	fmt.Printf("pv: %p, pv2: %p\n", pv, pv2)
	// :show end
}
CodeToRun:+308
package main

import "fmt"

func main() {
	v := 5

	// pv is a pointer to v
	pv := &v
	fmt.Printf("v: %d, pv: %p\n", v, pv)

	// we change the value of v via pv
	*pv = 4
	fmt.Printf("v: %d\n", v)

	// two pointers to the same value have the same address
	pv2 := &v
	fmt.Printf("pv: %p, pv2: %p\n", pv, pv2)
}
Output:+64
v: 5, pv: 0xc420016028
v: 4
pv: 0xc420016028, pv2: 0xc420016028
66 1553594969665 glotid
Sha1: e56c30b1c1fc3d54fcd267d9b33d7e628b07271d
GlotID: fapboc91ua
1001 1553594971113 glotoutput
Sha1: 0dd384865767d3b99acdf1c8d940988997706815
Lang: Go
FileName: main.go
CodeFull:+438
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := [2]int{4, 5} // array of 2 ints

	// access element of array
	fmt.Printf("a[1]: %d\n", a[1])

	// set element of array
	a[1] = 3

	// get size of array
	fmt.Printf("size of array  a: %d\n", len(a))

	// when using [...] size will be deduced from { ... }
	a2 := [...]int{4, 8, -1} // array of 3 integers
	fmt.Printf("size of array a2: %d\n", len(a2))
	// :show end
}
CodeToRun:+399
package main

import "fmt"

func main() {
	a := [2]int{4, 5} // array of 2 ints

	// access element of array
	fmt.Printf("a[1]: %d\n", a[1])

	// set element of array
	a[1] = 3

	// get size of array
	fmt.Printf("size of array  a: %d\n", len(a))

	// when using [...] size will be deduced from { ... }
	a2 := [...]int{4, 8, -1} // array of 3 integers
	fmt.Printf("size of array a2: %d\n", len(a2))
}
Output:+48
a[1]: 5
size of array  a: 2
size of array a2: 3
66 1553594971289 glotid
Sha1: 0dd384865767d3b99acdf1c8d940988997706815
GlotID: fapbod7up2
807 1553594972319 glotoutput
Sha1: ae767301ddee3aea794a8cc51abd5dbbedc5e44b
Lang: Go
FileName: main.go
CodeFull:+342
// :glot
package main

import "fmt"

func main() {
	// :show start
	slice := make([]int, 0, 5)
	// append element to end of slice
	slice = append(slice, 5)
	// append multiple elements to end
	slice = append(slice, 3, 4)
	fmt.Printf("length of slice is: %d\n", len(slice))
	fmt.Printf("capacity of slice is: %d\n", cap(slice))
	// :show end
}
CodeToRun:+303
package main

import "fmt"

func main() {
	slice := make([]int, 0, 5)
	// append element to end of slice
	slice = append(slice, 5)
	// append multiple elements to end
	slice = append(slice, 3, 4)
	fmt.Printf("length of slice is: %d\n", len(slice))
	fmt.Printf("capacity of slice is: %d\n", cap(slice))
}
Output:+46
length of slice is: 3
capacity of slice is: 5
66 1553594972498 glotid
Sha1: ae767301ddee3aea794a8cc51abd5dbbedc5e44b
GlotID: fapbodxr68
2239 1553594973857 glotoutput
Sha1: 3037a202bf1b79c2edb456550701c91595aa2a15
Lang: Go
FileName: main.go
CodeFull:+985
// :glot
package main

import "fmt"

func main() {
	// :show start
	m := make(map[string]int)

	// set the value
	m["three"] = 3
	m["four"] = 4

	// get the value and see if the value exists
	key := "four"
	if value, ok := m[key]; ok {
		fmt.Printf("Key '%s' exists and maps to %d\n", key, value)
	} else {
		fmt.Printf("Key '%s' doesn't exists\n", key)
	}

	key = "five"
	if value, ok := m[key]; ok {
		fmt.Printf("Key '%s' exists and maps to %d\n", key, value)
	} else {
		fmt.Printf("Key '%s' doesn't exists\n", key)
	}

	// if value doesn't exist, the result of lookup is zero value. In this case zero value of int is 0
	fmt.Printf("\nValue for non-existing key: %d\n\n", m["not-exists"])

	// iterating over keys and values
	fmt.Printf("All keys and their values:\n")
	for key, value := range m {
		fmt.Printf("%s => %d\n", key, value)
	}

	fmt.Printf("\nBefore deletion: len(m)=%d\n", len(m))
	delete(m, "four")
	fmt.Printf("After deletion : len(m)=%d\n", len(m))
	// :show end
}
CodeToRun:+946
package main

import "fmt"

func main() {
	m := make(map[string]int)

	// set the value
	m["three"] = 3
	m["four"] = 4

	// get the value and see if the value exists
	key := "four"
	if value, ok := m[key]; ok {
		fmt.Printf("Key '%s' exists and maps to %d\n", key, value)
	} else {
		fmt.Printf("Key '%s' doesn't exists\n", key)
	}

	key = "five"
	if value, ok := m[key]; ok {
		fmt.Printf("Key '%s' exists and maps to %d\n", key, value)
	} else {
		fmt.Printf("Key '%s' doesn't exists\n", key)
	}

	// if value doesn't exist, the result of lookup is zero value. In this case zero value of int is 0
	fmt.Printf("\nValue for non-existing key: %d\n\n", m["not-exists"])

	// iterating over keys and values
	fmt.Printf("All keys and their values:\n")
	for key, value := range m {
		fmt.Printf("%s => %d\n", key, value)
	}

	fmt.Printf("\nBefore deletion: len(m)=%d\n", len(m))
	delete(m, "four")
	fmt.Printf("After deletion : len(m)=%d\n", len(m))
}
Output:+191
Key 'four' exists and maps to 4
Key 'five' doesn't exists

Value for non-existing key: 0

All keys and their values:
three => 3
four => 4

Before deletion: len(m)=2
After deletion : len(m)=1
66 1553594974076 glotid
Sha1: 3037a202bf1b79c2edb456550701c91595aa2a15
GlotID: fapboevj61
1210 1553594977850 glotoutput
Sha1: 37c9014ba3b2bb12503199dc89c3b6896d9c5d3a
Lang: Go
FileName: main.go
CodeFull:+543
// :glot
package main

import (
	"fmt"
)

// :show start
// Person describes a person
type Person struct {
	FirstName string
	LastName  string
}

// FullName returns full name of a person
func (p *Person) FullName() string {
	return fmt.Sprintf("%s %s", p.FirstName, p.LastName)
}

func main() {
	// zero value of struct
	var p Person
	fmt.Printf("p: %v\n\n", p)

	p = Person{
		FirstName: "John",
		LastName:  "Doe",
	}
	fmt.Printf("p: %v\n\n", p)

	// call a method on a struct
	fmt.Printf("p.FullName(): %s\n", p.FullName())
}

// :show end
CodeToRun:+506
package main

import (
	"fmt"
)

// Person describes a person
type Person struct {
	FirstName string
	LastName  string
}

// FullName returns full name of a person
func (p *Person) FullName() string {
	return fmt.Sprintf("%s %s", p.FirstName, p.LastName)
}

func main() {
	// zero value of struct
	var p Person
	fmt.Printf("p: %v\n\n", p)

	p = Person{
		FirstName: "John",
		LastName:  "Doe",
	}
	fmt.Printf("p: %v\n\n", p)

	// call a method on a struct
	fmt.Printf("p.FullName(): %s\n", p.FullName())
}
Output:+46
p: { }

p: {John Doe}

p.FullName(): John Doe
66 1553594978026 glotid
Sha1: 37c9014ba3b2bb12503199dc89c3b6896d9c5d3a
GlotID: fapboh89e0
1679 1553594980102 glotoutput
Sha1: 4a2b493e7ae12a1d29b90aaff9b4199a3c076631
Lang: Go
FileName: main.go
CodeFull:+785
// :glot
package main

import (
	"fmt"
	"strconv"
)

// :show start
// Stringer is an interface with a single method
type Stringer interface {
	String() string
}

// User struct that implements Stringer interface
type User struct {
	Name string
}

func (u *User) String() string {
	return u.Name
}

// Any type can implement an interface. Here we create
// an alias of int type an implement Stringer interface

type MyInt int

func (mi MyInt) String() string {
	return strconv.Itoa(int(mi))
}

// printTypeAndString accepts an interface. 's' can be any value
// that implements Stringer interface
func printTypeAndString(s Stringer) {
	fmt.Printf("%T: %s\n", s, s)
}

func main() {
	u := &User{Name: "John"}
	printTypeAndString(u)

	n := MyInt(5)
	printTypeAndString(n)
}

// :show end
CodeToRun:+748
package main

import (
	"fmt"
	"strconv"
)

// Stringer is an interface with a single method
type Stringer interface {
	String() string
}

// User struct that implements Stringer interface
type User struct {
	Name string
}

func (u *User) String() string {
	return u.Name
}

// Any type can implement an interface. Here we create
// an alias of int type an implement Stringer interface

type MyInt int

func (mi MyInt) String() string {
	return strconv.Itoa(int(mi))
}

// printTypeAndString accepts an interface. 's' can be any value
// that implements Stringer interface
func printTypeAndString(s Stringer) {
	fmt.Printf("%T: %s\n", s, s)
}

func main() {
	u := &User{Name: "John"}
	printTypeAndString(u)

	n := MyInt(5)
	printTypeAndString(n)
}
Output:+31
*main.User: John
main.MyInt: 5
66 1553594980279 glotid
Sha1: 4a2b493e7ae12a1d29b90aaff9b4199a3c076631
GlotID: fapboikj7m
1014 1553594982049 glotoutput
Sha1: 1626c9aae89e13e23ae9e3f43aafe887503eaef0
Lang: Go
FileName: main.go
CodeFull:+437
// :glot
package main

import (
	"fmt"
)

// :show start
func printVariableType(v interface{}) {
	switch v.(type) {
	case string:
		fmt.Printf("v is of type 'string'\n")
	case int:
		fmt.Printf("v is of type 'int'\n")
	default:
		// generic fallback
		fmt.Printf("v is of type '%T'\n", v)
	}
}

func main() {
	printVariableType("string") // string
	printVariableType(5)        // int
	printVariableType(int32(5)) // int32
}

// :show end
CodeToRun:+400
package main

import (
	"fmt"
)

func printVariableType(v interface{}) {
	switch v.(type) {
	case string:
		fmt.Printf("v is of type 'string'\n")
	case int:
		fmt.Printf("v is of type 'int'\n")
	default:
		// generic fallback
		fmt.Printf("v is of type '%T'\n", v)
	}
}

func main() {
	printVariableType("string") // string
	printVariableType(5)        // int
	printVariableType(int32(5)) // int32
}
Output:+62
v is of type 'string'
v is of type 'int'
v is of type 'int32'
66 1553594982275 glotid
Sha1: 1626c9aae89e13e23ae9e3f43aafe887503eaef0
GlotID: fapbojr9zz
1917 1553594983381 glotoutput
Sha1: 1fbd5b428167eb0c1a18a729b87f8c5c9d363b11
Lang: Go
FileName: main.go
CodeFull:+752
// :glot, allow error
package main

import (
	"fmt"
)

// :show start
func printTypeAndValue(iv interface{}) {
	if v, ok := iv.(string); ok {
		fmt.Printf("iv is of type string and has value '%s'\n", v)
		return
	}
	if v, ok := iv.(int); ok {
		fmt.Printf("iv is of type int and has value '%d'\n", v)
		return
	}
	if v, ok := iv.(*int); ok {
		fmt.Printf("iv is of type *int and has value '%s'\n", v)
		return
	}
}

func panicOnInvalidConversion() {
	var iv interface{} = "string"

	v := iv.(int)
	fmt.Printf("v is int of value: %d\n", v)
}

func main() {
	// pass a string
	printTypeAndValue("string")
	i := 5
	// pass an int
	printTypeAndValue(i)
	// pass a pointer to int i.e. *int
	printTypeAndValue(&i)

	panicOnInvalidConversion()
}

// :show end
CodeToRun:+702
package main

import (
	"fmt"
)

func printTypeAndValue(iv interface{}) {
	if v, ok := iv.(string); ok {
		fmt.Printf("iv is of type string and has value '%s'\n", v)
		return
	}
	if v, ok := iv.(int); ok {
		fmt.Printf("iv is of type int and has value '%d'\n", v)
		return
	}
	if v, ok := iv.(*int); ok {
		fmt.Printf("iv is of type *int and has value '%s'\n", v)
		return
	}
}

func panicOnInvalidConversion() {
	var iv interface{} = "string"

	v := iv.(int)
	fmt.Printf("v is int of value: %d\n", v)
}

func main() {
	// pass a string
	printTypeAndValue("string")
	i := 5
	// pass an int
	printTypeAndValue(i)
	// pass a pointer to int i.e. *int
	printTypeAndValue(&i)

	panicOnInvalidConversion()
}
Output:+347
iv is of type string and has value 'string'
iv is of type int and has value '5'
iv is of type *int and has value '%!s(*int=0xc420016028)'
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion()
	/tmp/375769756/main.go:25 +0x45
main.main()
	/tmp/375769756/main.go:38 +0xb8
exit status 2
66 1553594984562 glotid
Sha1: 1fbd5b428167eb0c1a18a729b87f8c5c9d363b11
GlotID: fapbokiv5t
778 1553594986145 glotoutput
Sha1: 9e7f8cc2026a463c2c8fae34822dc4f8a0825d5b
Lang: Go
FileName: main.go
CodeFull:+243
// :glot, allow error
package main

import (
	"fmt"
)

// :show start
func panicOnInvalidConversion(iv interface{}) {
	v := iv.(int)
	fmt.Printf("v is int of value: %d\n", v)
}

func main() {
	panicOnInvalidConversion("string")
}

// :show end
CodeToRun:+193
package main

import (
	"fmt"
)

func panicOnInvalidConversion(iv interface{}) {
	v := iv.(int)
	fmt.Printf("v is int of value: %d\n", v)
}

func main() {
	panicOnInvalidConversion("string")
}
Output:+226
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion(0x493920, 0x4c4410)
	/tmp/013892416/main.go:8 +0xc7
main.main()
	/tmp/013892416/main.go:13 +0x39
exit status 2
66 1553594986323 glotid
Sha1: 9e7f8cc2026a463c2c8fae34822dc4f8a0825d5b
GlotID: fapbom61v4
1724 1553594987600 glotoutput
Sha1: 4c64010a7031bba8d9e3260ac6ddc1af7f697a52
Lang: Go
FileName: main.go
CodeFull:+757
// :glot
package main

import (
	"fmt"
	"strconv"
)

// :show start
func smartConvertToInt(iv interface{}) (int, error) {
	// inside case statements, v is of type matching case type
	switch v := iv.(type) {
	case int:
		return v, nil
	case string:
		return strconv.Atoi(v)
	case float64:
		return int(v), nil
	default:
		return 0, fmt.Errorf("unsupported type: %T", iv)
	}
}

func printSmartConvertToInt(iv interface{}) {
	i, err := smartConvertToInt(iv)
	if err != nil {
		fmt.Printf("Failed to convert %#v to int\n", iv)
		return
	}
	fmt.Printf("%#v of type %T converted to %d\n", iv, iv, i)
}

func main() {
	printSmartConvertToInt("5")
	printSmartConvertToInt(4)
	printSmartConvertToInt(int32(8))
	printSmartConvertToInt("not valid int")
}

// :show end
CodeToRun:+720
package main

import (
	"fmt"
	"strconv"
)

func smartConvertToInt(iv interface{}) (int, error) {
	// inside case statements, v is of type matching case type
	switch v := iv.(type) {
	case int:
		return v, nil
	case string:
		return strconv.Atoi(v)
	case float64:
		return int(v), nil
	default:
		return 0, fmt.Errorf("unsupported type: %T", iv)
	}
}

func printSmartConvertToInt(iv interface{}) {
	i, err := smartConvertToInt(iv)
	if err != nil {
		fmt.Printf("Failed to convert %#v to int\n", iv)
		return
	}
	fmt.Printf("%#v of type %T converted to %d\n", iv, iv, i)
}

func main() {
	printSmartConvertToInt("5")
	printSmartConvertToInt(4)
	printSmartConvertToInt(int32(8))
	printSmartConvertToInt("not valid int")
}
Output:+131
"5" of type string converted to 5
4 of type int converted to 4
Failed to convert 8 to int
Failed to convert "not valid int" to int
66 1553594987779 glotid
Sha1: 4c64010a7031bba8d9e3260ac6ddc1af7f697a52
GlotID: fapbon199g
485 1553594989463 glotoutput
Sha1: 5fd4f16af6a785d6422a2712e1933f6de95e751c
Lang: Go
FileName: main.go
CodeFull:+194
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := 5
	b := 6
	if a == b {
		fmt.Print("a is equal to b\n")
	} else {
		fmt.Print("a is not equal to b\n")
	}
}

// :show end
CodeToRun:+156
package main

import "fmt"

func main() {
	a := 5
	b := 6
	if a == b {
		fmt.Print("a is equal to b\n")
	} else {
		fmt.Print("a is not equal to b\n")
	}
}
Output:+20
a is not equal to b
66 1553594989641 glotid
Sha1: 5fd4f16af6a785d6422a2712e1933f6de95e751c
GlotID: fapboo56jy
687 1553594992597 glotoutput
Sha1: d597dd57fbf2925c3e36dbccc420a77041a73a2a
Lang: Go
FileName: main.go
CodeFull:+287
// :glot
package main

import "fmt"

func main() {
	// :show start
	stmt := "if"
	switch stmt {
	case "if", "for":
		fmt.Printf("stmt ('%s') is either 'if' or 'for'\n", stmt)
	case "else":
		fmt.Printf("stmt is 'else'\n")
	default:
		fmt.Printf("stmt is '%s'\n", stmt)
	}
	// :show end
}
CodeToRun:+248
package main

import "fmt"

func main() {
	stmt := "if"
	switch stmt {
	case "if", "for":
		fmt.Printf("stmt ('%s') is either 'if' or 'for'\n", stmt)
	case "else":
		fmt.Printf("stmt is 'else'\n")
	default:
		fmt.Printf("stmt is '%s'\n", stmt)
	}
}
Output:+36
stmt ('if') is either 'if' or 'for'
66 1553594992773 glotid
Sha1: d597dd57fbf2925c3e36dbccc420a77041a73a2a
GlotID: fapboq0bf9
374 1553594994542 glotoutput
Sha1: 950fe1a8d427999410302dc159c3a0e4a62d5a8a
Lang: Go
FileName: main.go
CodeFull:+141
// :glot
package main

import "fmt"

func main() {
	// :show start
	for i := 0; i < 5; i += 2 {
		fmt.Printf("i: %d\n", i)
	}
	// :show end
}
CodeToRun:+102
package main

import "fmt"

func main() {
	for i := 0; i < 5; i += 2 {
		fmt.Printf("i: %d\n", i)
	}
}
Output:+15
i: 0
i: 2
i: 4
66 1553594994719 glotid
Sha1: 950fe1a8d427999410302dc159c3a0e4a62d5a8a
GlotID: fapbor61p1
378 1553594995944 glotoutput
Sha1: 68b25b5196aa5676307346c888654c2ed240bfdb
Lang: Go
FileName: main.go
CodeFull:+143
// :glot
package main

import "fmt"

func main() {
	// :show start
	i := 0
	for ; i < 5; i += 2 {
		fmt.Printf("i: %d\n", i)
	}
	// :show end
}
CodeToRun:+104
package main

import "fmt"

func main() {
	i := 0
	for ; i < 5; i += 2 {
		fmt.Printf("i: %d\n", i)
	}
}
Output:+15
i: 0
i: 2
i: 4
66 1553594996122 glotid
Sha1: 68b25b5196aa5676307346c888654c2ed240bfdb
GlotID: fapbos017b
427 1553594998228 glotoutput
Sha1: 88f82cfc8d541d3c50aef15c2a74e96135e417b9
Lang: Go
FileName: main.go
CodeFull:+165
// :glot
package main

import "fmt"

func main() {
	// :show start
	i := 0
	for ; ; i += 2 {
		fmt.Printf("i: %d\n", i)
		if i >= 5 {
			break
		}
	}
	// :show end
}
CodeToRun:+126
package main

import "fmt"

func main() {
	i := 0
	for ; ; i += 2 {
		fmt.Printf("i: %d\n", i)
		if i >= 5 {
			break
		}
	}
}
Output:+20
i: 0
i: 2
i: 4
i: 6
66 1553594998535 glotid
Sha1: 88f82cfc8d541d3c50aef15c2a74e96135e417b9
GlotID: fapbotd6sq
378 1553595000378 glotoutput
Sha1: 5e4a0bcf8baa33bd838b7313dd8ad9b221e10ac2
Lang: Go
FileName: main.go
CodeFull:+143
// :glot
package main

import "fmt"

func main() {
	// :show start
	for i := 0; i < 5; {
		fmt.Printf("i: %d\n", i)
		i += 2
	}
	// :show end
}
CodeToRun:+104
package main

import "fmt"

func main() {
	for i := 0; i < 5; {
		fmt.Printf("i: %d\n", i)
		i += 2
	}
}
Output:+15
i: 0
i: 2
i: 4
66 1553595000564 glotid
Sha1: 5e4a0bcf8baa33bd838b7313dd8ad9b221e10ac2
GlotID: fapbounb4z
420 1553595001814 glotoutput
Sha1: 4d79f8d0e7d9f77d2f106543d64bf1fa5d852d52
Lang: Go
FileName: main.go
CodeFull:+164
// :glot
package main

import "fmt"

func main() {
	// :show start
	i := 0
	for {
		fmt.Printf("i: %d\n", i)
		i += 2
		if i >= 5 {
			break
		}
	}

	// :show end
}
CodeToRun:+125
package main

import "fmt"

func main() {
	i := 0
	for {
		fmt.Printf("i: %d\n", i)
		i += 2
		if i >= 5 {
			break
		}
	}

}
Output:+15
i: 0
i: 2
i: 4
66 1553595001993 glotid
Sha1: 4d79f8d0e7d9f77d2f106543d64bf1fa5d852d52
GlotID: fapbovhxfz
496 1553595003273 glotoutput
Sha1: fbf5261f6537304d0087b68f835ea82cf3b646fa
Lang: Go
FileName: main.go
CodeFull:+184
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := []int{1, 3, 5}
	for idx, value := range a {
		fmt.Printf("idx: %d, value: %d\n", idx, value)
	}
	// :show end
}
CodeToRun:+145
package main

import "fmt"

func main() {
	a := []int{1, 3, 5}
	for idx, value := range a {
		fmt.Printf("idx: %d, value: %d\n", idx, value)
	}
}
Output:+51
idx: 0, value: 1
idx: 1, value: 3
idx: 2, value: 5
66 1553595003458 glotid
Sha1: fbf5261f6537304d0087b68f835ea82cf3b646fa
GlotID: fapbowd7c0
526 1553595005089 glotoutput
Sha1: b4b3a1eff48a41353ee83f827146591277686b93
Lang: Go
FileName: main.go
CodeFull:+169
// :glot
package main

import "fmt"

func main() {
	// :show start
	s := "Hey 世界"
	for i, r := range s {
		fmt.Printf("idx: %d, rune: %d\n", i, r)
	}
	// :show end
}
CodeToRun:+130
package main

import "fmt"

func main() {
	s := "Hey 世界"
	for i, r := range s {
		fmt.Printf("idx: %d, rune: %d\n", i, r)
	}
}
Output:+110
idx: 0, rune: 72
idx: 1, rune: 101
idx: 2, rune: 121
idx: 3, rune: 32
idx: 4, rune: 19990
idx: 7, rune: 30028
66 1553595005267 glotid
Sha1: b4b3a1eff48a41353ee83f827146591277686b93
GlotID: fapboxg3an
533 1553595006786 glotoutput
Sha1: 2442221713d54359783857c35db3fcbd66d0abec
Lang: Go
FileName: main.go
CodeFull:+184
// :glot
package main

import "fmt"

func main() {
	// :show start
	s := "a 世"
	for i := 0; i < len(s); i++ {
		c := s[i]
		fmt.Printf("idx: %d, byte: %d\n", i, c)
	}
	// :show end
}
CodeToRun:+145
package main

import "fmt"

func main() {
	s := "a 世"
	for i := 0; i < len(s); i++ {
		c := s[i]
		fmt.Printf("idx: %d, byte: %d\n", i, c)
	}
}
Output:+88
idx: 0, byte: 97
idx: 1, byte: 32
idx: 2, byte: 228
idx: 3, byte: 184
idx: 4, byte: 150
66 1553595006967 glotid
Sha1: 2442221713d54359783857c35db3fcbd66d0abec
GlotID: fapboygif1
489 1553595008263 glotoutput
Sha1: ab74504de7191041a4b3a95cb8d5208e47a6a4a4
Lang: Go
FileName: main.go
CodeFull:+177
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := []int{3, 15, 8}
	for i, el := range a {
		fmt.Printf("idx: %d, element: %d\n", i, el)
	}
	// :show end
}
CodeToRun:+138
package main

import "fmt"

func main() {
	a := []int{3, 15, 8}
	for i, el := range a {
		fmt.Printf("idx: %d, element: %d\n", i, el)
	}
}
Output:+58
idx: 0, element: 3
idx: 1, element: 15
idx: 2, element: 8
66 1553595008820 glotid
Sha1: ab74504de7191041a4b3a95cb8d5208e47a6a4a4
GlotID: fapbozk9es
550 1553595010209 glotoutput
Sha1: ff62d02a0583fcf0f5fd3e7c585e419c2b4e9417
Lang: Go
FileName: main.go
CodeFull:+216
// :glot
package main

import "fmt"

func main() {
	// :show start
	m := map[string]int{
		"three": 3,
		"five":  5,
	}
	for key, value := range m {
		fmt.Printf("key: %s, value: %d\n", key, value)
	}
	// :show end
}
CodeToRun:+177
package main

import "fmt"

func main() {
	m := map[string]int{
		"three": 3,
		"five":  5,
	}
	for key, value := range m {
		fmt.Printf("key: %s, value: %d\n", key, value)
	}
}
Output:+41
key: five, value: 5
key: three, value: 3
66 1553595010386 glotid
Sha1: ff62d02a0583fcf0f5fd3e7c585e419c2b4e9417
GlotID: fapbp0htfu
1282 1553595011447 glotoutput
Sha1: 2a30cc2d3dcf3aca30245f416f1e75e09d0959b8
Lang: Go
FileName: main.go
CodeFull:+561
// :glot
package main

import (
	"fmt"
)

// :show start
// addCheckOverflow adds two int16 numbers and additionally
// returns true if the result overflowed
func addCheckOverflow(a, b uint16) (uint16, bool) {
	res := a + b
	overflowed := res < a || res < b
	return res, overflowed
}

func main() {
	res, overflowed := addCheckOverflow(1, 3)
	fmt.Printf("%5d + %5d = %5d, overflowed: %v\n\n", 1, 3, res, overflowed)
	res, overflowed = addCheckOverflow(65520, 10000)
	fmt.Printf("%5d + %5d = %5d, overflowed: %v\n", 65550, 10000, res, overflowed)
}

// :show end
CodeToRun:+524
package main

import (
	"fmt"
)

// addCheckOverflow adds two int16 numbers and additionally
// returns true if the result overflowed
func addCheckOverflow(a, b uint16) (uint16, bool) {
	res := a + b
	overflowed := res < a || res < b
	return res, overflowed
}

func main() {
	res, overflowed := addCheckOverflow(1, 3)
	fmt.Printf("%5d + %5d = %5d, overflowed: %v\n\n", 1, 3, res, overflowed)
	res, overflowed = addCheckOverflow(65520, 10000)
	fmt.Printf("%5d + %5d = %5d, overflowed: %v\n", 65550, 10000, res, overflowed)
}
Output:+82
    1 +     3 =     4, overflowed: false

65550 + 10000 =  9984, overflowed: true
66 1553595011631 glotid
Sha1: 2a30cc2d3dcf3aca30245f416f1e75e09d0959b8
GlotID: fapbp18bvs
652 1553595012939 glotoutput
Sha1: f5d0835a5833e824853289ead2984686f429aac7
Lang: Go
FileName: main.go
CodeFull:+283
// :glot
package main

import "fmt"

// :show start
type Person struct {
	FirstName string
	LastName  string
}

func (p *Person) PrintFullName() {
	fmt.Printf("%s %s\n", p.FirstName, p.LastName)
}

func main() {
	p := &Person{
		"John",
		"Doe",
	}
	p.PrintFullName()
}

// :show end
CodeToRun:+246
package main

import "fmt"

type Person struct {
	FirstName string
	LastName  string
}

func (p *Person) PrintFullName() {
	fmt.Printf("%s %s\n", p.FirstName, p.LastName)
}

func main() {
	p := &Person{
		"John",
		"Doe",
	}
	p.PrintFullName()
}
Output:+9
John Doe
66 1553595013115 glotid
Sha1: f5d0835a5833e824853289ead2984686f429aac7
GlotID: fapbp24bdn
1230 1553595015554 glotoutput
Sha1: cad570f7ef10fb514fc42ea34e83dd7f9eef3209
Lang: Go
FileName: main.go
CodeFull:+499
// :glot
package main

import "fmt"

// :show start
type Person struct {
	FirstName string
	LastName  string
}

func (p Person) PrintFullNameValue() {
	fmt.Printf("PrintFullNameValue:   address of p is %p\n", &p)
}

func (p *Person) PrintFullNamePointer() {
	fmt.Printf("PrintFullNamePointer: p is            %p\n", p)
}

func main() {
	p := Person{
		"John",
		"Doe",
	}
	fmt.Printf("address of p:                         %p\n", &p)
	p.PrintFullNamePointer()
	p.PrintFullNameValue()
}

// :show end
CodeToRun:+462
package main

import "fmt"

type Person struct {
	FirstName string
	LastName  string
}

func (p Person) PrintFullNameValue() {
	fmt.Printf("PrintFullNameValue:   address of p is %p\n", &p)
}

func (p *Person) PrintFullNamePointer() {
	fmt.Printf("PrintFullNamePointer: p is            %p\n", p)
}

func main() {
	p := Person{
		"John",
		"Doe",
	}
	fmt.Printf("address of p:                         %p\n", &p)
	p.PrintFullNamePointer()
	p.PrintFullNameValue()
}
Output:+153
address of p:                         0xc42000a060
PrintFullNamePointer: p is            0xc42000a060
PrintFullNameValue:   address of p is 0xc42000a080
66 1553595015750 glotid
Sha1: cad570f7ef10fb514fc42ea34e83dd7f9eef3209
GlotID: fapbp3oewn
1103 1553595016968 glotoutput
Sha1: 446ae4f5ae2495e0d962fb5dd9f7e1554ae85dd3
Lang: Go
FileName: main.go
CodeFull:+457
// :glot
package main

import (
	"fmt"
	"math"
)

// :show start
func sqrt(n float64) (float64, error) {
	if n < 0 {
		return 0, fmt.Errorf("invalid argument '%f', must be >= 0", n)
	}
	return math.Sqrt(n), nil
}

func printSqrt(n float64) {
	if res, err := sqrt(n); err == nil {
		fmt.Printf("sqrt of %f is %f\n", n, res)
	} else {
		fmt.Printf("sqrt of %f returned error '%s'\n", n, err)
	}

}

func main() {
	printSqrt(16)
	printSqrt(-16)
}

// :show end
CodeToRun:+420
package main

import (
	"fmt"
	"math"
)

func sqrt(n float64) (float64, error) {
	if n < 0 {
		return 0, fmt.Errorf("invalid argument '%f', must be >= 0", n)
	}
	return math.Sqrt(n), nil
}

func printSqrt(n float64) {
	if res, err := sqrt(n); err == nil {
		fmt.Printf("sqrt of %f is %f\n", n, res)
	} else {
		fmt.Printf("sqrt of %f returned error '%s'\n", n, err)
	}

}

func main() {
	printSqrt(16)
	printSqrt(-16)
}
Output:+110
sqrt of 16.000000 is 4.000000
sqrt of -16.000000 returned error 'invalid argument '-16.000000', must be >= 0'
66 1553595017150 glotid
Sha1: 446ae4f5ae2495e0d962fb5dd9f7e1554ae85dd3
GlotID: fapbp4ipz0
1384 1553595018553 glotoutput
Sha1: b5dae3b5bd8c6c843e1d3fd91071bc86324cbe9d
Lang: Go
FileName: main.go
CodeFull:+601
// :glot
package main

import (
	"fmt"
	"sync"
)

// :show start
var wg sync.WaitGroup

func pow2Worker(chIn chan int, chOut chan int) {
	fmt.Printf("sqrtWorker started\n")
	for i := range chIn {
		sqrt := i * i
		chOut <- sqrt
	}
	fmt.Printf("sqrtWorker finished\n")
	wg.Done()
}

func main() {
	chIn := make(chan int)
	chOut := make(chan int)
	for i := 0; i < 2; i++ {
		wg.Add(1)
		go pow2Worker(chIn, chOut)
	}

	go func() {
		chIn <- 2
		chIn <- 4
		close(chIn)
	}()

	go func() {
		wg.Wait()
		close(chOut)
	}()

	for sqrt := range chOut {
		fmt.Printf("Got sqrt: %d\n", sqrt)
	}
}

// :show end
CodeToRun:+564
package main

import (
	"fmt"
	"sync"
)

var wg sync.WaitGroup

func pow2Worker(chIn chan int, chOut chan int) {
	fmt.Printf("sqrtWorker started\n")
	for i := range chIn {
		sqrt := i * i
		chOut <- sqrt
	}
	fmt.Printf("sqrtWorker finished\n")
	wg.Done()
}

func main() {
	chIn := make(chan int)
	chOut := make(chan int)
	for i := 0; i < 2; i++ {
		wg.Add(1)
		go pow2Worker(chIn, chOut)
	}

	go func() {
		chIn <- 2
		chIn <- 4
		close(chIn)
	}()

	go func() {
		wg.Wait()
		close(chOut)
	}()

	for sqrt := range chOut {
		fmt.Printf("Got sqrt: %d\n", sqrt)
	}
}
Output:+103
sqrtWorker started
Got sqrt: 4
sqrtWorker started
sqrtWorker finished
sqrtWorker finished
Got sqrt: 16
66 1553595018767 glotid
Sha1: b5dae3b5bd8c6c843e1d3fd91071bc86324cbe9d
GlotID: fapbp5hfdy
772 1553595019938 glotoutput
Sha1: cc73429dcea528efa58bd0d73b1a908f2cadb14f
Lang: Go
FileName: main.go
CodeFull:+341
// :glot
package main

import (
	"fmt"
	"math/rand"
)

// :show start

func genInts(chInts chan int) {
	chInts <- rand.Intn(1000)
}

func main() {
	chInts := make(chan int)
	for i := 0; i < 2; i++ {
		go genInts(chInts)
	}
	n := <-chInts
	fmt.Printf("n: %d\n", n)

	select {
	case n := <-chInts:
		fmt.Printf("n: %d\n", n)
	}
}

// :show end
CodeToRun:+303
package main

import (
	"fmt"
	"math/rand"
)

func genInts(chInts chan int) {
	chInts <- rand.Intn(1000)
}

func main() {
	chInts := make(chan int)
	for i := 0; i < 2; i++ {
		go genInts(chInts)
	}
	n := <-chInts
	fmt.Printf("n: %d\n", n)

	select {
	case n := <-chInts:
		fmt.Printf("n: %d\n", n)
	}
}
Output:+13
n: 81
n: 887
66 1553595020117 glotid
Sha1: cc73429dcea528efa58bd0d73b1a908f2cadb14f
GlotID: fapbp6ad52
1682 1553595021365 glotoutput
Sha1: bcdef3e77d37f654eb1c1a849926e845eb4a06e0
Lang: Go
FileName: main.go
CodeFull:+807
// :glot
package main

import (
	"fmt"
	"sync"
	"time"
)

// :show start
var cache map[int]int
var mu sync.Mutex

func expensiveOperation(n int) int {
	// in real code this operation would be very expensive
	return n * n
}

func getCached(n int) int {
	mu.Lock()
	v, isCached := cache[n]
	mu.Unlock()
	if isCached {
		return v
	}

	v = expensiveOperation(n)

	mu.Lock()
	cache[n] = v
	mu.Unlock()
	return v
}

func accessCache() {
	total := 0
	for i := 0; i < 5; i++ {
		n := getCached(i)
		total += n
	}
	fmt.Printf("total: %d\n", total)
}

// :show end

func main() {
	// :show start
	cache = make(map[int]int)
	go accessCache()
	accessCache()
	// :show end

	// for simplicity of the example
	// don't use time.Sleep() to coordinate goroutines
	// in production code
	time.Sleep(100 * time.Millisecond)
}
CodeToRun:+739
package main

import (
	"fmt"
	"sync"
	"time"
)

var cache map[int]int
var mu sync.Mutex

func expensiveOperation(n int) int {
	// in real code this operation would be very expensive
	return n * n
}

func getCached(n int) int {
	mu.Lock()
	v, isCached := cache[n]
	mu.Unlock()
	if isCached {
		return v
	}

	v = expensiveOperation(n)

	mu.Lock()
	cache[n] = v
	mu.Unlock()
	return v
}

func accessCache() {
	total := 0
	for i := 0; i < 5; i++ {
		n := getCached(i)
		total += n
	}
	fmt.Printf("total: %d\n", total)
}

func main() {
	cache = make(map[int]int)
	go accessCache()
	accessCache()

	// for simplicity of the example
	// don't use time.Sleep() to coordinate goroutines
	// in production code
	time.Sleep(100 * time.Millisecond)
}
Output:+20
total: 30
total: 30
66 1553595021548 glotid
Sha1: bcdef3e77d37f654eb1c1a849926e845eb4a06e0
GlotID: fapbp74zwd
1030 1553595024422 glotoutput
Sha1: 7b88e295c0c00dd4a275de52bde2cde9aaa25fe3
Lang: Go
FileName: main.go
CodeFull:+471
// :glot, :name main.go
package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"os"
)

func main() {
	// :show start
	path := "main.go"
	f, err := os.Open(path)
	if err != nil {
		log.Fatalf("os.Open() failed with '%s'\n", err)
	}
	defer f.Close()

	d, err := ioutil.ReadAll(f)
	if err != nil {
		log.Fatalf("ioutil.ReadAll() failed with '%s'\n", err)
	}

	lines := bytes.Split(d, []byte{'\n'})
	fmt.Printf("File %s has %d lines\n", path, len(lines))
	// :show end
}
CodeToRun:+417
package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"os"
)

func main() {
	path := "main.go"
	f, err := os.Open(path)
	if err != nil {
		log.Fatalf("os.Open() failed with '%s'\n", err)
	}
	defer f.Close()

	d, err := ioutil.ReadAll(f)
	if err != nil {
		log.Fatalf("ioutil.ReadAll() failed with '%s'\n", err)
	}

	lines := bytes.Split(d, []byte{'\n'})
	fmt.Printf("File %s has %d lines\n", path, len(lines))
}
Output:+26
File main.go has 26 lines
66 1553595024598 glotid
Sha1: 7b88e295c0c00dd4a275de52bde2cde9aaa25fe3
GlotID: fapbp8yf81
1333 1553595027618 glotoutput
Sha1: 5896cb339eb26e54317385994aa602f6113cdcf7
Lang: Go
FileName: main.go
CodeFull:+600
// :glot, :name main.go
// :run go run main.go -echo echo-arg additional arg
package main

import (
	"flag"
	"fmt"
	"os"
)

// :show start
var (
	flgHelp bool
	flgEcho string
)

func parseCmdLineFlags() {
	flag.BoolVar(&flgHelp, "help", false, "if true, show help")
	flag.StringVar(&flgEcho, "echo", "", "")
	flag.Parse()
}

func main() {
	parseCmdLineFlags()
	if flgHelp {
		flag.Usage()
		os.Exit(0)
	}
	if flgEcho != "" {
		fmt.Printf("flag -echo: '%s'\n", flgEcho)
	}

	remainingArgs := flag.Args()
	for _, arg := range remainingArgs {
		fmt.Printf("Remainig arg: '%s'\n", arg)
	}
}

// :show end
CodeToRun:+495
package main

import (
	"flag"
	"fmt"
	"os"
)

var (
	flgHelp bool
	flgEcho string
)

func parseCmdLineFlags() {
	flag.BoolVar(&flgHelp, "help", false, "if true, show help")
	flag.StringVar(&flgEcho, "echo", "", "")
	flag.Parse()
}

func main() {
	parseCmdLineFlags()
	if flgHelp {
		flag.Usage()
		os.Exit(0)
	}
	if flgEcho != "" {
		fmt.Printf("flag -echo: '%s'\n", flgEcho)
	}

	remainingArgs := flag.Args()
	for _, arg := range remainingArgs {
		fmt.Printf("Remainig arg: '%s'\n", arg)
	}
}
RunCmd: go run main.go -echo echo-arg additional arg
Output:+70
flag -echo: 'echo-arg'
Remainig arg: 'additional'
Remainig arg: 'arg'
66 1553595027803 glotid
Sha1: 5896cb339eb26e54317385994aa602f6113cdcf7
GlotID: fapbpauzmo
418 1553595029359 glotoutput
Sha1: e51db797da3ed280b8b4feb1bac21efc1a0e0d46
Lang: Go
FileName: main.go
CodeFull:+148
// :glot, :allow error
package main

import "log"

func main() {
	// :show start
	log.Printf("Logging")
	log.Printf("Second line\n")
	// :show end
}
CodeToRun:+95
package main

import "log"

func main() {
	log.Printf("Logging")
	log.Printf("Second line\n")
}
Output:+60
2019/03/26 10:07:11 Logging
2019/03/26 10:07:11 Second line
66 1553595029535 glotid
Sha1: e51db797da3ed280b8b4feb1bac21efc1a0e0d46
GlotID: fapbpbw944
779 1553595031409 glotoutput
Sha1: 78505c3eefba58977b81d80c99761228204852c6
Lang: Go
FileName: main.go
CodeFull:+358
// :glot
// no output
package main

import (
	"log"
	"os"
)

func main() {
	// :show start
	logfile, err := os.OpenFile("test.log", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)
	if err != nil {
		log.Fatalf("os.OpenFile() failed with '%s\n", err)
	}
	defer logfile.Close()

	log.SetOutput(logfile)
	log.Println("Log entry")
	// :show end
	os.Remove("test.log")
}
CodeToRun:+306
package main

import (
	"log"
	"os"
)

func main() {
	logfile, err := os.OpenFile("test.log", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)
	if err != nil {
		log.Fatalf("os.OpenFile() failed with '%s\n", err)
	}
	defer logfile.Close()

	log.SetOutput(logfile)
	log.Println("Log entry")
	os.Remove("test.log")
}
Output:+0
66 1553595031587 glotid
Sha1: 78505c3eefba58977b81d80c99761228204852c6
GlotID: fapbpd484e
718 1553595032805 glotoutput
Sha1: b3aebb6fdba37f3473fb8c0753e0a33c9f7c29b9
Lang: Go
FileName: main.go
CodeFull:+300
// :glot
package main

import (
	"fmt"
	"log"
	"os/exec"
)

func main() {
	// :show start
	cmd := exec.Command("go", "version")
	out, err := cmd.CombinedOutput()
	if err != nil {
		log.Fatalf("cmd.CombinedOutput() failed with '%s'\n", err)
	}
	fmt.Printf("Output:\n%s\n", string(out))
	// :show end
}
CodeToRun:+261
package main

import (
	"fmt"
	"log"
	"os/exec"
)

func main() {
	cmd := exec.Command("go", "version")
	out, err := cmd.CombinedOutput()
	if err != nil {
		log.Fatalf("cmd.CombinedOutput() failed with '%s'\n", err)
	}
	fmt.Printf("Output:\n%s\n", string(out))
}
Output:+41
Output:
go version go1.10.3 linux/amd64

66 1553595032984 glotid
Sha1: b3aebb6fdba37f3473fb8c0753e0a33c9f7c29b9
GlotID: fapbpdy4cb
1126 1553595034149 glotoutput
Sha1: e9b3bc2f728da183252482dd9c63283d0fe4cbff
Lang: Go
FileName: main.go
CodeFull:+504
// :glot
package main

import (
	"bytes"
	"fmt"
	"log"
	"os/exec"
)

func main() {
	// :show start
	var stdout, stderr bytes.Buffer
	cmd := exec.Command("go", "version")
	cmd.Stdout = &stdout
	cmd.Stderr = &stderr

	err := cmd.Start()
	if err != nil {
		log.Fatalf("cmd.Start() failed with '%s'\n", err)
	}

	err = cmd.Wait()
	if err != nil {
		log.Fatalf("cmd.Wait() failed with '%s'\n", err)
	}
	out := append(stdout.Bytes(), stderr.Bytes()...)
	fmt.Printf("Output:\n%s\n", string(out))
	// :show end
}
CodeToRun:+465
package main

import (
	"bytes"
	"fmt"
	"log"
	"os/exec"
)

func main() {
	var stdout, stderr bytes.Buffer
	cmd := exec.Command("go", "version")
	cmd.Stdout = &stdout
	cmd.Stderr = &stderr

	err := cmd.Start()
	if err != nil {
		log.Fatalf("cmd.Start() failed with '%s'\n", err)
	}

	err = cmd.Wait()
	if err != nil {
		log.Fatalf("cmd.Wait() failed with '%s'\n", err)
	}
	out := append(stdout.Bytes(), stderr.Bytes()...)
	fmt.Printf("Output:\n%s\n", string(out))
}
Output:+41
Output:
go version go1.10.3 linux/amd64

66 1553595034327 glotid
Sha1: e9b3bc2f728da183252482dd9c63283d0fe4cbff
GlotID: fapbpeqxv5
915 1553595035886 glotoutput
Sha1: a0771de26cc07adc3eb0743d548ff0a7e91ee317
Lang: Go
FileName: main.go
CodeFull:+412
// :glot
package main

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"log"
)

func main() {
	// :show start
	d := []byte{0x01, 0xff, 0x3a, 0xcd}
	s := hex.EncodeToString(d)
	fmt.Printf("Hex: %s\n", s)

	d2, err := hex.DecodeString(s)
	if err != nil {
		log.Fatalf("hex.DecodeString() failed with '%s'\n", err)
	}
	if !bytes.Equal(d, d2) {
		log.Fatalf("decoded version is different than original")
	}
	// :show end
}
CodeToRun:+373
package main

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"log"
)

func main() {
	d := []byte{0x01, 0xff, 0x3a, 0xcd}
	s := hex.EncodeToString(d)
	fmt.Printf("Hex: %s\n", s)

	d2, err := hex.DecodeString(s)
	if err != nil {
		log.Fatalf("hex.DecodeString() failed with '%s'\n", err)
	}
	if !bytes.Equal(d, d2) {
		log.Fatalf("decoded version is different than original")
	}
}
Output:+14
Hex: 01ff3acd
66 1553595036062 glotid
Sha1: a0771de26cc07adc3eb0743d548ff0a7e91ee317
GlotID: fapbpfs55c
1064 1553595037141 glotoutput
Sha1: 9161e69f65831e2f52916432cac4c1f29f96de1d
Lang: Go
FileName: main.go
CodeFull:+476
// :glot
package main

import (
	"bytes"
	"fmt"
	"log"
)

func main() {
	// :show start
	d := []byte{0x01, 0xff, 0x3a, 0xcd}
	s := fmt.Sprintf("%x", d)
	fmt.Printf("Hex: %s\n", s)

	var decoded []byte
	_, err := fmt.Sscanf(s, "%x", &decoded)
	if err != nil {
		log.Fatalf("fmt.Sscanf() failed with '%s'\n", err)
	}
	if !bytes.Equal(d, decoded) {
		log.Fatalf("decoded version is different than original")
	}

	n := 3824
	fmt.Printf("%d in hex is 0x%x\n", n, n)
	// :show end
}
CodeToRun:+437
package main

import (
	"bytes"
	"fmt"
	"log"
)

func main() {
	d := []byte{0x01, 0xff, 0x3a, 0xcd}
	s := fmt.Sprintf("%x", d)
	fmt.Printf("Hex: %s\n", s)

	var decoded []byte
	_, err := fmt.Sscanf(s, "%x", &decoded)
	if err != nil {
		log.Fatalf("fmt.Sscanf() failed with '%s'\n", err)
	}
	if !bytes.Equal(d, decoded) {
		log.Fatalf("decoded version is different than original")
	}

	n := 3824
	fmt.Printf("%d in hex is 0x%x\n", n, n)
}
Output:+35
Hex: 01ff3acd
3824 in hex is 0xef0
66 1553595037320 glotid
Sha1: 9161e69f65831e2f52916432cac4c1f29f96de1d
GlotID: fapbpgj2n6
1495 1553595038477 glotoutput
Sha1: 100f5cb94a3784426b9f1e02cb5660492f64ad03
Lang: Go
FileName: main.go
CodeFull:+702
// :glot
package main

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"io/ioutil"
	"log"
)

func main() {
	// :show start
	d := []byte{0x01, 0xff, 0x3a, 0xcd}

	writer := &bytes.Buffer{}
	hexWriter := hex.NewEncoder(writer)

	_, err := hexWriter.Write(d)
	if err != nil {
		log.Fatalf("hexWriter.Write() failed with '%s'\n", err)
	}

	encoded := writer.Bytes()
	fmt.Printf("Hex: %s\n", string(encoded))

	reader := bytes.NewBuffer(encoded)
	hexReader := hex.NewDecoder(reader)

	decoded, err := ioutil.ReadAll(hexReader)
	if err != nil {
		fmt.Printf("ioutil.ReadAll() failed with '%s'\n", err)
	}

	if !bytes.Equal(d, decoded) {
		log.Fatalf("decoded version is different than original")
	}
	// :show end
}
CodeToRun:+663
package main

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"io/ioutil"
	"log"
)

func main() {
	d := []byte{0x01, 0xff, 0x3a, 0xcd}

	writer := &bytes.Buffer{}
	hexWriter := hex.NewEncoder(writer)

	_, err := hexWriter.Write(d)
	if err != nil {
		log.Fatalf("hexWriter.Write() failed with '%s'\n", err)
	}

	encoded := writer.Bytes()
	fmt.Printf("Hex: %s\n", string(encoded))

	reader := bytes.NewBuffer(encoded)
	hexReader := hex.NewDecoder(reader)

	decoded, err := ioutil.ReadAll(hexReader)
	if err != nil {
		fmt.Printf("ioutil.ReadAll() failed with '%s'\n", err)
	}

	if !bytes.Equal(d, decoded) {
		log.Fatalf("decoded version is different than original")
	}
}
Output:+14
Hex: 01ff3acd
66 1553595038678 glotid
Sha1: 100f5cb94a3784426b9f1e02cb5660492f64ad03
GlotID: fapbphbrym
990 1553595066555 glotoutput
Sha1: b085a8c7274c1c103789ebe8283506dfc628f450
Lang: Go
FileName: main.go
CodeFull:+448
// :glot
package main

import (
	"bytes"
	"encoding/base64"
	"fmt"
	"log"
)

func main() {
	// :show start
	d := []byte{0x01, 0xff, 0x3a, 0xcd}
	s := base64.StdEncoding.EncodeToString(d)
	fmt.Printf("base64: %s\n", s)

	d2, err := base64.StdEncoding.DecodeString(s)
	if err != nil {
		log.Fatalf("hex.DecodeString() failed with '%s'\n", err)
	}
	if !bytes.Equal(d, d2) {
		log.Fatalf("decoded version is different than original")
	}
	// :show end
}
CodeToRun:+409
package main

import (
	"bytes"
	"encoding/base64"
	"fmt"
	"log"
)

func main() {
	d := []byte{0x01, 0xff, 0x3a, 0xcd}
	s := base64.StdEncoding.EncodeToString(d)
	fmt.Printf("base64: %s\n", s)

	d2, err := base64.StdEncoding.DecodeString(s)
	if err != nil {
		log.Fatalf("hex.DecodeString() failed with '%s'\n", err)
	}
	if !bytes.Equal(d, d2) {
		log.Fatalf("decoded version is different than original")
	}
}
Output:+17
base64: Af86zQ==
66 1553595067214 glotid
Sha1: b085a8c7274c1c103789ebe8283506dfc628f450
GlotID: fapbpybtjc
990 1553595068638 glotoutput
Sha1: 251bcbaa4380e1d44981ff78ed27ad9233ebce67
Lang: Go
FileName: main.go
CodeFull:+448
// :glot
package main

import (
	"bytes"
	"encoding/base64"
	"fmt"
	"log"
)

func main() {
	// :show start
	d := []byte{0x01, 0xff, 0x3a, 0xcd}
	s := base64.URLEncoding.EncodeToString(d)
	fmt.Printf("base64: %s\n", s)

	d2, err := base64.URLEncoding.DecodeString(s)
	if err != nil {
		log.Fatalf("hex.DecodeString() failed with '%s'\n", err)
	}
	if !bytes.Equal(d, d2) {
		log.Fatalf("decoded version is different than original")
	}
	// :show end
}
CodeToRun:+409
package main

import (
	"bytes"
	"encoding/base64"
	"fmt"
	"log"
)

func main() {
	d := []byte{0x01, 0xff, 0x3a, 0xcd}
	s := base64.URLEncoding.EncodeToString(d)
	fmt.Printf("base64: %s\n", s)

	d2, err := base64.URLEncoding.DecodeString(s)
	if err != nil {
		log.Fatalf("hex.DecodeString() failed with '%s'\n", err)
	}
	if !bytes.Equal(d, d2) {
		log.Fatalf("decoded version is different than original")
	}
}
Output:+17
base64: Af86zQ==
66 1553595068818 glotid
Sha1: 251bcbaa4380e1d44981ff78ed27ad9233ebce67
GlotID: fapbpza6wc
1850 1553595070297 glotoutput
Sha1: 46c96fbc97915538acfc058d761dd5afa20f60a5
Lang: Go
FileName: main.go
CodeFull:+878
// :glot
package main

import (
	"bytes"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"log"
)

func main() {
	// :show start
	d := []byte{0x01, 0xff, 0x3a, 0xcd}

	writer := &bytes.Buffer{}
	base64Writer := base64.NewEncoder(base64.StdEncoding, writer)

	_, err := base64Writer.Write(d)
	if err != nil {
		log.Fatalf("base64Writer.Write() failed with '%s'\n", err)
	}
	err = base64Writer.Close()
	if err != nil {
		log.Fatalf("base64Writer.Close() failed with '%s'\n", err)
	}

	encoded := writer.Bytes()
	fmt.Printf("Base64: %s\n", string(encoded))

	reader := bytes.NewBuffer(encoded)
	base64Reader := base64.NewDecoder(base64.StdEncoding, reader)

	decoded, err := ioutil.ReadAll(base64Reader)
	if err != nil {
		fmt.Printf("ioutil.ReadAll() failed with '%s'\n", err)
	}

	if !bytes.Equal(d, decoded) {
		log.Fatalf("decoded version is different than original")
	}
	// :show end
}
CodeToRun:+839
package main

import (
	"bytes"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"log"
)

func main() {
	d := []byte{0x01, 0xff, 0x3a, 0xcd}

	writer := &bytes.Buffer{}
	base64Writer := base64.NewEncoder(base64.StdEncoding, writer)

	_, err := base64Writer.Write(d)
	if err != nil {
		log.Fatalf("base64Writer.Write() failed with '%s'\n", err)
	}
	err = base64Writer.Close()
	if err != nil {
		log.Fatalf("base64Writer.Close() failed with '%s'\n", err)
	}

	encoded := writer.Bytes()
	fmt.Printf("Base64: %s\n", string(encoded))

	reader := bytes.NewBuffer(encoded)
	base64Reader := base64.NewDecoder(base64.StdEncoding, reader)

	decoded, err := ioutil.ReadAll(base64Reader)
	if err != nil {
		fmt.Printf("ioutil.ReadAll() failed with '%s'\n", err)
	}

	if !bytes.Equal(d, decoded) {
		log.Fatalf("decoded version is different than original")
	}
}
Output:+17
Base64: Af86zQ==
66 1553595070472 glotid
Sha1: 46c96fbc97915538acfc058d761dd5afa20f60a5
GlotID: fapbq09nc4
1521 1553595071845 glotoutput
Sha1: 5e917843d3ba654fcaac242f3de70aead9f5b35c
Lang: Go
FileName: main.go
CodeFull:+665
// :glot
package main

import (
	"encoding/json"
	"fmt"
	"log"
)

// :show start
type Person struct {
	fullName string
	Name     string
	Age      int    `json:"age"`
	City     string `json:"city"`
}

// :show end

func main() {
	// :show start
	p := Person{
		Name: "John",
		Age:  37,
		City: "SF",
	}
	d, err := json.Marshal(&p)
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Person in compact JSON: %s\n", string(d))

	d, err = json.MarshalIndent(p, "", "  ")
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Person in pretty-printed JSON:\n%s\n", string(d))
	// :show end
}
CodeToRun:+597
package main

import (
	"encoding/json"
	"fmt"
	"log"
)

type Person struct {
	fullName string
	Name     string
	Age      int    `json:"age"`
	City     string `json:"city"`
}

func main() {
	p := Person{
		Name: "John",
		Age:  37,
		City: "SF",
	}
	d, err := json.Marshal(&p)
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Person in compact JSON: %s\n", string(d))

	d, err = json.MarshalIndent(p, "", "  ")
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Person in pretty-printed JSON:\n%s\n", string(d))
}
Output:+142
Person in compact JSON: {"Name":"John","age":37,"city":"SF"}
Person in pretty-printed JSON:
{
  "Name": "John",
  "age": 37,
  "city": "SF"
}
66 1553595072017 glotid
Sha1: 5e917843d3ba654fcaac242f3de70aead9f5b35c
GlotID: fapbq16s73
1286 1553595074825 glotoutput
Sha1: 0a94dffc763ec9b6d0f6be4281115d724781b99a
Lang: Go
FileName: main.go
CodeFull:+558
// :glot
package main

import (
	"encoding/json"
	"fmt"
	"log"
)

// :show start
type Person struct {
	Name       *string `json:"name"`
	Age        int     `json:"age"`
	City       string
	Occupation string
}

var jsonStr = `{
	"name": "Jane",
	"age": 24,
	"city": "ny"
}`

// :show end

func main() {
	// :show start
	var p Person
	err := json.Unmarshal([]byte(jsonStr), &p)
	if err != nil {
		log.Fatalf("json.Unmarshal failed with '%s'\n", err)
	}
	fmt.Printf("Person struct parsed from JSON: %#v\n", p)
	fmt.Printf("Name: %#v\n", *p.Name)
	// :show end
}
CodeToRun:+490
package main

import (
	"encoding/json"
	"fmt"
	"log"
)

type Person struct {
	Name       *string `json:"name"`
	Age        int     `json:"age"`
	City       string
	Occupation string
}

var jsonStr = `{
	"name": "Jane",
	"age": 24,
	"city": "ny"
}`

func main() {
	var p Person
	err := json.Unmarshal([]byte(jsonStr), &p)
	if err != nil {
		log.Fatalf("json.Unmarshal failed with '%s'\n", err)
	}
	fmt.Printf("Person struct parsed from JSON: %#v\n", p)
	fmt.Printf("Name: %#v\n", *p.Name)
}
Output:+121
Person struct parsed from JSON: main.Person{Name:(*string)(0xc42000e260), Age:24, City:"ny", Occupation:""}
Name: "Jane"
66 1553595074997 glotid
Sha1: 0a94dffc763ec9b6d0f6be4281115d724781b99a
GlotID: fapbq2ync1
1946 1553595076464 glotoutput
Sha1: 364c3f5d9c4ed4ef1ace1da699b96685da593c5f
Lang: Go
FileName: main.go
CodeFull:+833
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start
var xmlStr = `
<people>
	<person age="34">
		<first-name>John</first-name>
		<address>
			<city>San Francisco</city>
			<state>CA</state>
		</address>
	</person>

	<person age="23">
		<first-name>Julia</first-name>
	</person>
</people>`

type People struct {
	Person []Person `xml:"person"`
}

type Person struct {
	Age       int     `xml:"age,attr"`
	FirstName string  `xml:"first-name"`
	Address   Address `xml:"address"`
}

type Address struct {
	City  *string `xml:"city"`
	State string  `xml:"state"`
}

// :show end

func main() {
	// :show start
	var people People
	data := []byte(xmlStr)
	err := xml.Unmarshal(data, &people)
	if err != nil {
		log.Fatalf("xml.Unmarshal failed with '%s'\n", err)
	}
	fmt.Printf("%#v\n\n", people)
	// :show end
}
CodeToRun:+765
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

var xmlStr = `
<people>
	<person age="34">
		<first-name>John</first-name>
		<address>
			<city>San Francisco</city>
			<state>CA</state>
		</address>
	</person>

	<person age="23">
		<first-name>Julia</first-name>
	</person>
</people>`

type People struct {
	Person []Person `xml:"person"`
}

type Person struct {
	Age       int     `xml:"age,attr"`
	FirstName string  `xml:"first-name"`
	Address   Address `xml:"address"`
}

type Address struct {
	City  *string `xml:"city"`
	State string  `xml:"state"`
}

func main() {
	var people People
	data := []byte(xmlStr)
	err := xml.Unmarshal(data, &people)
	if err != nil {
		log.Fatalf("xml.Unmarshal failed with '%s'\n", err)
	}
	fmt.Printf("%#v\n\n", people)
}
Output:+231
main.People{Person:[]main.Person{main.Person{Age:34, FirstName:"John", Address:main.Address{City:(*string)(0xc42000e400), State:"CA"}}, main.Person{Age:23, FirstName:"Julia", Address:main.Address{City:(*string)(nil), State:""}}}}

66 1553595076674 glotid
Sha1: 364c3f5d9c4ed4ef1ace1da699b96685da593c5f
GlotID: fapbq3ylp1
2373 1553595077972 glotoutput
Sha1: eda75a326ee389e05a531bbaf1cd320062148a61
Lang: Go
FileName: main.go
CodeFull:+992
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start
type People struct {
	XMLName        xml.Name `xml:"people"`
	Person         []Person `xml:"person"`
	noteSerialized int
}

type Person struct {
	Age       int     `xml:"age,attr"`
	FirstName string  `xml:"first-name"`
	Address   Address `xml:"address"`
}

type Address struct {
	City  string `xml:"city"`
	State string `xml:"state"`
}

// :show end

func main() {
	// :show start
	people := People{
		Person: []Person{
			Person{
				Age:       34,
				FirstName: "John",
				Address:   Address{City: "San Francisco", State: "CA"},
			},
		},
		noteSerialized: 8,
	}
	d, err := xml.Marshal(&people)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("Compact XML: %s\n\n", string(d))

	d, err = xml.MarshalIndent(&people, "", "  ")
	if err != nil {
		log.Fatalf("xml.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Pretty printed XML:\n%s\n", string(d))

	// :show end
}
CodeToRun:+924
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type People struct {
	XMLName        xml.Name `xml:"people"`
	Person         []Person `xml:"person"`
	noteSerialized int
}

type Person struct {
	Age       int     `xml:"age,attr"`
	FirstName string  `xml:"first-name"`
	Address   Address `xml:"address"`
}

type Address struct {
	City  string `xml:"city"`
	State string `xml:"state"`
}

func main() {
	people := People{
		Person: []Person{
			Person{
				Age:       34,
				FirstName: "John",
				Address:   Address{City: "San Francisco", State: "CA"},
			},
		},
		noteSerialized: 8,
	}
	d, err := xml.Marshal(&people)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("Compact XML: %s\n\n", string(d))

	d, err = xml.MarshalIndent(&people, "", "  ")
	if err != nil {
		log.Fatalf("xml.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Pretty printed XML:\n%s\n", string(d))

}
Output:+340
Compact XML: <people><person age="34"><first-name>John</first-name><address><city>San Francisco</city><state>CA</state></address></person></people>

Pretty printed XML:
<people>
  <person age="34">
    <first-name>John</first-name>
    <address>
      <city>San Francisco</city>
      <state>CA</state>
    </address>
  </person>
</people>
66 1553595078538 glotid
Sha1: eda75a326ee389e05a531bbaf1cd320062148a61
GlotID: fapbq52amb
2261 1553595081584 glotoutput
Sha1: ec402f97e3654701c0e401df305fae4a2b7e0498
Lang: Go
FileName: main.go
CodeFull:+1058
// :glot
package main

import (
	"encoding/csv"
	"fmt"
	"io/ioutil"
	"log"
	"os"
)

// :show start
func writeCSV() error {
	f, err := os.Create("stocks_tmp.csv")
	if err != nil {
		return err
	}

	w := csv.NewWriter(f)
	records := [][]string{
		{"date", "price", "name"},
		{"2013-02-08", "15,07", "GOOG"},
		{"2013-02-09", "15,09", "GOOG"},
	}
	for _, rec := range records {
		err = w.Write(rec)
		if err != nil {
			f.Close()
			return err
		}
	}

	// csv.Writer might buffer writes for performance so we must
	// Flush to ensure all data has been written to underlying
	// writer
	w.Flush()

	// Flush doesn't return an error. If it failed to write, we
	// can get the error with Error()
	err = w.Error()
	if err != nil {
		return err
	}
	// Close might also fail due to flushing out buffered writes
	err = f.Close()
	return err
}

// :show end

func main() {
	writeCSV()
	d, err := ioutil.ReadFile("stocks_tmp.csv")
	if err != nil {
		log.Fatalf("ioutil.ReadAll() failed with '%s'\n", err)
	}
	fmt.Printf("%s\n", string(d))
	os.Remove("stocks_tmp.csv")
}
CodeToRun:+1020
package main

import (
	"encoding/csv"
	"fmt"
	"io/ioutil"
	"log"
	"os"
)

func writeCSV() error {
	f, err := os.Create("stocks_tmp.csv")
	if err != nil {
		return err
	}

	w := csv.NewWriter(f)
	records := [][]string{
		{"date", "price", "name"},
		{"2013-02-08", "15,07", "GOOG"},
		{"2013-02-09", "15,09", "GOOG"},
	}
	for _, rec := range records {
		err = w.Write(rec)
		if err != nil {
			f.Close()
			return err
		}
	}

	// csv.Writer might buffer writes for performance so we must
	// Flush to ensure all data has been written to underlying
	// writer
	w.Flush()

	// Flush doesn't return an error. If it failed to write, we
	// can get the error with Error()
	err = w.Error()
	if err != nil {
		return err
	}
	// Close might also fail due to flushing out buffered writes
	err = f.Close()
	return err
}

func main() {
	writeCSV()
	d, err := ioutil.ReadFile("stocks_tmp.csv")
	if err != nil {
		log.Fatalf("ioutil.ReadAll() failed with '%s'\n", err)
	}
	fmt.Printf("%s\n", string(d))
	os.Remove("stocks_tmp.csv")
}
Output:+65
date,price,name
2013-02-08,"15,07",GOOG
2013-02-09,"15,09",GOOG

66 1553595081756 glotid
Sha1: ec402f97e3654701c0e401df305fae4a2b7e0498
GlotID: fapbq6zier
1786 1553595084567 glotoutput
Sha1: 1323be3e780ec8e9f9b6b9a957a610f235986dc0
Lang: Go
FileName: main.go
CodeFull:+813
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
var tmplStr = `User {{.User}} has {{.TotalTweets}} tweets.
{{- $tweetCount := len .RecentTweets }}
Recent tweets:
{{range $idx, $tweet := .RecentTweets}}Tweet {{$idx}} of {{$tweetCount}}: '{{.}}'
{{end -}}
Most recent tweet: '{{index .RecentTweets 0}}'
`

// :show end

func main() {
	// :show start
	t := template.New("tweets")
	t, err := t.Parse(tmplStr)
	if err != nil {
		log.Fatalf("template.Parse() failed with '%s'\n", err)
	}
	data := struct {
		User         string
		TotalTweets  int
		RecentTweets []string
	}{
		User:         "kjk",
		TotalTweets:  124,
		RecentTweets: []string{"hello", "there"},
	}
	err = t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+745
package main

import (
	"log"
	"os"
	"text/template"
)

var tmplStr = `User {{.User}} has {{.TotalTweets}} tweets.
{{- $tweetCount := len .RecentTweets }}
Recent tweets:
{{range $idx, $tweet := .RecentTweets}}Tweet {{$idx}} of {{$tweetCount}}: '{{.}}'
{{end -}}
Most recent tweet: '{{index .RecentTweets 0}}'
`

func main() {
	t := template.New("tweets")
	t, err := t.Parse(tmplStr)
	if err != nil {
		log.Fatalf("template.Parse() failed with '%s'\n", err)
	}
	data := struct {
		User         string
		TotalTweets  int
		RecentTweets []string
	}{
		User:         "kjk",
		TotalTweets:  124,
		RecentTweets: []string{"hello", "there"},
	}
	err = t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+111
User kjk has 124 tweets.
Recent tweets:
Tweet 0 of 2: 'hello'
Tweet 1 of 2: 'there'
Most recent tweet: 'hello'
66 1553595084750 glotid
Sha1: 1323be3e780ec8e9f9b6b9a957a610f235986dc0
GlotID: fapbq8ridf
1099 1553595086602 glotoutput
Sha1: ab17bc21d0da5d0e609ff3070b5dec64a8da0ccb
Lang: Go
FileName: main.go
CodeFull:+494
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

func main() {
	// :show start
	tmplStr := "Data: {{.}}\n"
	t := template.Must(template.New("simple").Parse(tmplStr))
	execWithData := func(data interface{}) {
		err := t.Execute(os.Stdout, data)
		if err != nil {
			log.Fatalf("t.Execute() failed with '%s'\n", err)
		}
	}

	execWithData(5)
	execWithData("foo")
	st := struct {
		Number int
		Str    string
	}{
		Number: 3,
		Str:    "hello",
	}
	execWithData(st)
	// :show end
}
CodeToRun:+455
package main

import (
	"log"
	"os"
	"text/template"
)

func main() {
	tmplStr := "Data: {{.}}\n"
	t := template.Must(template.New("simple").Parse(tmplStr))
	execWithData := func(data interface{}) {
		err := t.Execute(os.Stdout, data)
		if err != nil {
			log.Fatalf("t.Execute() failed with '%s'\n", err)
		}
	}

	execWithData(5)
	execWithData("foo")
	st := struct {
		Number int
		Str    string
	}{
		Number: 3,
		Str:    "hello",
	}
	execWithData(st)
}
Output:+34
Data: 5
Data: foo
Data: {3 hello}
66 1553595086774 glotid
Sha1: ab17bc21d0da5d0e609ff3070b5dec64a8da0ccb
GlotID: fapbq9z1vt
866 1553595088508 glotoutput
Sha1: c991c9f35843f50e115ace9c62fe696e47a24412
Lang: Go
FileName: main.go
CodeFull:+366
// :glot
package main

import (
	"fmt"
	"reflect"
)

func main() {
	// :show start
	var v interface{} = 4
	var reflectVal reflect.Value = reflect.ValueOf(v)

	var typ reflect.Type = reflectVal.Type()
	fmt.Printf("Type '%s' of size: %d bytes\n", typ.Name(), typ.Size())
	if typ.Kind() == reflect.Int {
		fmt.Printf("v contains value of type int\n")
	}
	// :show end
}
CodeToRun:+327
package main

import (
	"fmt"
	"reflect"
)

func main() {
	var v interface{} = 4
	var reflectVal reflect.Value = reflect.ValueOf(v)

	var typ reflect.Type = reflectVal.Type()
	fmt.Printf("Type '%s' of size: %d bytes\n", typ.Name(), typ.Size())
	if typ.Kind() == reflect.Int {
		fmt.Printf("v contains value of type int\n")
	}
}
Output:+57
Type 'int' of size: 8 bytes
v contains value of type int
66 1553595088681 glotid
Sha1: c991c9f35843f50e115ace9c62fe696e47a24412
GlotID: fapbqb3y1t
2772 1553595089770 glotoutput
Sha1: a4f1ae95fb32fa0340c56be0d57e0682defa5363
Lang: Go
FileName: main.go
CodeFull:+1322
// :glot
package main

import (
    "bytes"
    "fmt"
    "sync"
)

var pool = sync.Pool{
    // New creates an object when the pool has nothing available to return.
    // New must return an interface{} to make it flexible. You have to cast
    // your type after getting it.
    New: func() interface{} {
        // Pools often contain things like *bytes.Buffer, which are
        // temporary and re-usable.
        return &bytes.Buffer{}
    },
}

func main() {
    // When getting from a Pool, you need to cast
    s := pool.Get().(*bytes.Buffer)
    // We write to the object
    s.Write([]byte("dirty"))
    // Then put it back
    pool.Put(s)

    // Pools can return dirty results

    // Get 'another' buffer
    s = pool.Get().(*bytes.Buffer)
    // Write to it
    s.Write([]byte("append"))
    // At this point, if GC ran, this buffer *might* exist already, in
    // which case it will contain the bytes of the string "dirtyappend"
    fmt.Println(s)
    // So use pools wisely, and clean up after yourself
    s.Reset()
    pool.Put(s)

    // When you clean up, your buffer should be empty
    s = pool.Get().(*bytes.Buffer)
    // Defer your Puts to make sure you don't leak!
    defer pool.Put(s)
    s.Write([]byte("reset!"))
    // This prints "reset!", and not "dirtyappendreset!"
    fmt.Println(s)
}
CodeToRun:+1313
package main

import (
    "bytes"
    "fmt"
    "sync"
)

var pool = sync.Pool{
    // New creates an object when the pool has nothing available to return.
    // New must return an interface{} to make it flexible. You have to cast
    // your type after getting it.
    New: func() interface{} {
        // Pools often contain things like *bytes.Buffer, which are
        // temporary and re-usable.
        return &bytes.Buffer{}
    },
}

func main() {
    // When getting from a Pool, you need to cast
    s := pool.Get().(*bytes.Buffer)
    // We write to the object
    s.Write([]byte("dirty"))
    // Then put it back
    pool.Put(s)

    // Pools can return dirty results

    // Get 'another' buffer
    s = pool.Get().(*bytes.Buffer)
    // Write to it
    s.Write([]byte("append"))
    // At this point, if GC ran, this buffer *might* exist already, in
    // which case it will contain the bytes of the string "dirtyappend"
    fmt.Println(s)
    // So use pools wisely, and clean up after yourself
    s.Reset()
    pool.Put(s)

    // When you clean up, your buffer should be empty
    s = pool.Get().(*bytes.Buffer)
    // Defer your Puts to make sure you don't leak!
    defer pool.Put(s)
    s.Write([]byte("reset!"))
    // This prints "reset!", and not "dirtyappendreset!"
    fmt.Println(s)
}
Output:+19
dirtyappend
reset!
66 1553595089943 glotid
Sha1: a4f1ae95fb32fa0340c56be0d57e0682defa5363
GlotID: fapbqbuzpo
283 1553595091517 glotoutput
Sha1: 12375e0adc65593165a0b11fe569da80952cb9b2
Lang: Go
FileName: main.go
CodeFull:+82
// :glot
package main

import "fmt"

func main() {
	fmt.Println("Hello, 世界")
}
CodeToRun:+73
package main

import "fmt"

func main() {
	fmt.Println("Hello, 世界")
}
Output:+14
Hello, 世界
66 1553595091690 glotid
Sha1: 12375e0adc65593165a0b11fe569da80952cb9b2
GlotID: fapbqcwf1b
607 1553595092708 glotoutput
Sha1: 22e8cb51268849b89e5a102319541b49fbe22427
Lang: Go
FileName: main.go
CodeFull:+236
// :glot
package main

import "fmt"

func main() {
	// :show start
	var b bool = true
	fmt.Printf("b is: '%v'\n", b)
	b = false
	fmt.Printf("b is: '%v'\n", b)
	var b2 bool
	fmt.Printf("zero value of bool is: '%v'\n", b2)
	// :show end
}
CodeToRun:+197
package main

import "fmt"

func main() {
	var b bool = true
	fmt.Printf("b is: '%v'\n", b)
	b = false
	fmt.Printf("b is: '%v'\n", b)
	var b2 bool
	fmt.Printf("zero value of bool is: '%v'\n", b2)
}
Output:+58
b is: 'true'
b is: 'false'
zero value of bool is: 'false'
66 1553595092882 glotid
Sha1: 22e8cb51268849b89e5a102319541b49fbe22427
GlotID: fapbqdlyqx
422 1553595094385 glotoutput
Sha1: edfb56fb113b26f74499648bda4c73c8fbf8d7b5
Lang: Go
FileName: main.go
CodeFull:+163
// :glot
package main

import (
	"fmt"
	"unsafe"
)

func main() {
	// :show start
	b := true
	fmt.Printf("size of bool is: %d\n", unsafe.Sizeof(b))
	// :show end
}
CodeToRun:+124
package main

import (
	"fmt"
	"unsafe"
)

func main() {
	b := true
	fmt.Printf("size of bool is: %d\n", unsafe.Sizeof(b))
}
Output:+19
size of bool is: 1
66 1553595094560 glotid
Sha1: edfb56fb113b26f74499648bda4c73c8fbf8d7b5
GlotID: fapbqelw7z
545 1553595095977 glotoutput
Sha1: 529223a1c751db6a7e9099dd2074c818a68267d7
Lang: Go
FileName: main.go
CodeFull:+226
// :glot
package main

import (
	"fmt"
	"strconv"
)

func main() {
	// :show start
	var i1 int = -38
	fmt.Printf("i1: %s\n", strconv.Itoa(i1))

	var i2 int32 = 148
	fmt.Printf("i2: %s\n", strconv.Itoa(int(i2)))
	// :show end
}
CodeToRun:+187
package main

import (
	"fmt"
	"strconv"
)

func main() {
	var i1 int = -38
	fmt.Printf("i1: %s\n", strconv.Itoa(i1))

	var i2 int32 = 148
	fmt.Printf("i2: %s\n", strconv.Itoa(int(i2)))
}
Output:+16
i1: -38
i2: 148
66 1553595096149 glotid
Sha1: 529223a1c751db6a7e9099dd2074c818a68267d7
GlotID: fapbqfjz1h
573 1553595098183 glotoutput
Sha1: 013a8788bafeefbf719911a0deb7a4fe65fa03fd
Lang: Go
FileName: main.go
CodeFull:+240
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	var i1 int = -38
	s1 := fmt.Sprintf("%d", i1)
	fmt.Printf("i1: %s\n", s1)

	var i2 int32 = 148
	s2 := fmt.Sprintf("%d", i2)
	fmt.Printf("i2: %s\n", s2)
	// :show end
}
CodeToRun:+201
package main

import (
	"fmt"
)

func main() {
	var i1 int = -38
	s1 := fmt.Sprintf("%d", i1)
	fmt.Printf("i1: %s\n", s1)

	var i2 int32 = 148
	s2 := fmt.Sprintf("%d", i2)
	fmt.Printf("i2: %s\n", s2)
}
Output:+16
i1: -38
i2: 148
66 1553595098353 glotid
Sha1: 013a8788bafeefbf719911a0deb7a4fe65fa03fd
GlotID: fapbqgv98f
576 1553595100025 glotoutput
Sha1: 43999c7ab1380a34213942f6ba39266928f8f738
Lang: Go
FileName: main.go
CodeFull:+246
// :glot
package main

import (
	"fmt"
	"log"
	"strconv"
)

func main() {
	// :show start
	s := "-48"
	i1, err := strconv.Atoi(s)
	if err != nil {
		log.Fatalf("strconv.Atoi() failed with %s\n", err)
	}
	fmt.Printf("i1: %d\n", i1)
	// :show end
}
CodeToRun:+207
package main

import (
	"fmt"
	"log"
	"strconv"
)

func main() {
	s := "-48"
	i1, err := strconv.Atoi(s)
	if err != nil {
		log.Fatalf("strconv.Atoi() failed with %s\n", err)
	}
	fmt.Printf("i1: %d\n", i1)
}
Output:+8
i1: -48
66 1553595100199 glotid
Sha1: 43999c7ab1380a34213942f6ba39266928f8f738
GlotID: fapbqhys3m
584 1553595101656 glotoutput
Sha1: d4c5251caf2fbd4d82397316a9bfb80fea6b89e0
Lang: Go
FileName: main.go
CodeFull:+250
// :glot
package main

import (
	"fmt"
	"log"
)

func main() {
	// :show start
	s := "348"
	var i int
	_, err := fmt.Sscanf(s, "%d", &i)
	if err != nil {
		log.Fatalf("fmt.Sscanf failed with '%s'\n", err)
	}
	fmt.Printf("i1: %d\n", i)
	// :show end
}
CodeToRun:+211
package main

import (
	"fmt"
	"log"
)

func main() {
	s := "348"
	var i int
	_, err := fmt.Sscanf(s, "%d", &i)
	if err != nil {
		log.Fatalf("fmt.Sscanf failed with '%s'\n", err)
	}
	fmt.Printf("i1: %d\n", i)
}
Output:+8
i1: 348
66 1553595101828 glotid
Sha1: d4c5251caf2fbd4d82397316a9bfb80fea6b89e0
GlotID: fapbqixpvy
794 1553595103089 glotoutput
Sha1: 1aa0a0835b798707a20473b31dbf429c97a0c139
Lang: Go
FileName: main.go
CodeFull:+344
// :glot
package main

import (
	"fmt"
	"strconv"
)

func main() {
	// :show start
	var f32 float32 = 1.3
	bitSize := 32
	s1 := strconv.FormatFloat(float64(f32), 'E', -1, bitSize)
	fmt.Printf("f32: %s\n", s1)

	var f64 float64 = 8.1234
	bitSize = 64
	s2 := strconv.FormatFloat(f64, 'e', -1, bitSize)
	fmt.Printf("f64: %s\n", s2)
	// :show end
}
CodeToRun:+305
package main

import (
	"fmt"
	"strconv"
)

func main() {
	var f32 float32 = 1.3
	bitSize := 32
	s1 := strconv.FormatFloat(float64(f32), 'E', -1, bitSize)
	fmt.Printf("f32: %s\n", s1)

	var f64 float64 = 8.1234
	bitSize = 64
	s2 := strconv.FormatFloat(f64, 'e', -1, bitSize)
	fmt.Printf("f64: %s\n", s2)
}
Output:+29
f32: 1.3E+00
f64: 8.1234e+00
66 1553595103265 glotid
Sha1: 1aa0a0835b798707a20473b31dbf429c97a0c139
GlotID: fapbqjsht0
426 1553595105674 glotoutput
Sha1: a5c90bf0e77b04d1e589a1c8e2dadc5e9d3a5a23
Lang: Go
FileName: main.go
CodeFull:+166
// :glot
package main

import "fmt"

func main() {
	// :show start
	var f64 float64 = 1.54
	s := fmt.Sprintf("%f", f64)
	fmt.Printf("f is: '%s'\n", s)
	// :show end
}
CodeToRun:+127
package main

import "fmt"

func main() {
	var f64 float64 = 1.54
	s := fmt.Sprintf("%f", f64)
	fmt.Printf("f is: '%s'\n", s)
}
Output:+17
f is: '1.540000'
66 1553595105847 glotid
Sha1: a5c90bf0e77b04d1e589a1c8e2dadc5e9d3a5a23
GlotID: fapbqlbua1
642 1553595107399 glotoutput
Sha1: 450dbea877416d69b9b2114b7e9490b1448fa278
Lang: Go
FileName: main.go
CodeFull:+271
// :glot,
package main

import (
	"fmt"
	"log"
	"strconv"
)

func main() {
	// :show start
	s := "1.2341"
	f64, err := strconv.ParseFloat(s, 64)
	if err != nil {
		log.Fatalf("strconv.ParseFloat() failed with '%s'\n", err)
	}
	fmt.Printf("f64: %f\n", f64)
	// :show end
}
CodeToRun:+241
// :glot,
package main

import (
	"fmt"
	"log"
	"strconv"
)

func main() {
	s := "1.2341"
	f64, err := strconv.ParseFloat(s, 64)
	if err != nil {
		log.Fatalf("strconv.ParseFloat() failed with '%s'\n", err)
	}
	fmt.Printf("f64: %f\n", f64)
}
Output:+14
f64: 1.234100
66 1553595107573 glotid
Sha1: 450dbea877416d69b9b2114b7e9490b1448fa278
GlotID: fapbqmctgl
601 1553595108719 glotoutput
Sha1: 6760c02fb721ce79f372fbb5758bfb198169bd3e
Lang: Go
FileName: main.go
CodeFull:+256
// :glot
package main

import (
	"fmt"
	"log"
)

func main() {
	// :show start
	s := "1.2341"
	var f float64
	_, err := fmt.Sscanf(s, "%f", &f)
	if err != nil {
		log.Fatalf("fmt.Sscanf failed with '%s'\n", err)
	}
	fmt.Printf("f: %f\n", f)
	// :show end
}
CodeToRun:+217
package main

import (
	"fmt"
	"log"
)

func main() {
	s := "1.2341"
	var f float64
	_, err := fmt.Sscanf(s, "%f", &f)
	if err != nil {
		log.Fatalf("fmt.Sscanf failed with '%s'\n", err)
	}
	fmt.Printf("f: %f\n", f)
}
Output:+12
f: 1.234100
66 1553595108896 glotid
Sha1: 6760c02fb721ce79f372fbb5758bfb198169bd3e
GlotID: fapbqn55tw
565 1553595110770 glotoutput
Sha1: 3cbd441e99ca1d157c7d9e9aa719d7a6086ecf6c
Lang: Go
FileName: main.go
CodeFull:+199
// :glot
package main

import "fmt"

func main() {
	// :show start
	s := "str"
	for i := 0; i < len(s); i++ {
		c := s[i]
		fmt.Printf("Byte at index %d is '%c' (0x%x)\n", i, c, c)
	}
	// :show end
}
CodeToRun:+160
package main

import "fmt"

func main() {
	s := "str"
	for i := 0; i < len(s); i++ {
		c := s[i]
		fmt.Printf("Byte at index %d is '%c' (0x%x)\n", i, c, c)
	}
}
Output:+90
Byte at index 0 is 's' (0x73)
Byte at index 1 is 't' (0x74)
Byte at index 2 is 'r' (0x72)
66 1553595110943 glotid
Sha1: 3cbd441e99ca1d157c7d9e9aa719d7a6086ecf6c
GlotID: fapbqod2xr
590 1553595111999 glotoutput
Sha1: c1a81386de20109aa644aab3fd11dd1f892d6f67
Lang: Go
FileName: main.go
CodeFull:+196
// :glot
package main

import "fmt"

func main() {
	// :show start
	s := "日本語"
	for i, runeChar := range s {
		fmt.Printf("Rune at byte position %d is %#U\n", i, runeChar)
	}
	// :show end
}
CodeToRun:+157
package main

import "fmt"

func main() {
	s := "日本語"
	for i, runeChar := range s {
		fmt.Printf("Rune at byte position %d is %#U\n", i, runeChar)
	}
}
Output:+120
Rune at byte position 0 is U+65E5 '日'
Rune at byte position 3 is U+672C '本'
Rune at byte position 6 is U+8A9E '語'
66 1553595112173 glotid
Sha1: c1a81386de20109aa644aab3fd11dd1f892d6f67
GlotID: fapbqp3ez8
792 1553595113539 glotoutput
Sha1: 8e0e4a6590b2b620c652a817d4d2b4e9ac87188e
Lang: Go
FileName: main.go
CodeFull:+294
// :glot
package main

import "fmt"

func main() {
	// :show start
	var s string // empty string ""
	s1 := "string\nliteral\nwith\tescape characters\n"
	s2 := `raw string literal
which doesnt't recgonize escape characters like \n
`
	fmt.Printf("sum of strings\n'%s'\n", s+s1+s2)
	// :show end
}
CodeToRun:+255
package main

import "fmt"

func main() {
	var s string // empty string ""
	s1 := "string\nliteral\nwith\tescape characters\n"
	s2 := `raw string literal
which doesnt't recgonize escape characters like \n
`
	fmt.Printf("sum of strings\n'%s'\n", s+s1+s2)
}
Output:+126
sum of strings
'string
literal
with	escape characters
raw string literal
which doesnt't recgonize escape characters like \n
'
66 1553595113713 glotid
Sha1: 8e0e4a6590b2b620c652a817d4d2b4e9ac87188e
GlotID: fapbqq0fo1
906 1553595114575 glotoutput
Sha1: a398c7af3255b466d5cbbe0c28f6104eab6f1c51
Lang: Go
FileName: main.go
CodeFull:+420
// :glot, no output
package main

// :show start
const (
	i  int = 32       // int constant
	s      = "string" // string constant
	i2     = 33       // untyped number constant
)

var (
	// values that are not read-only (like slices or maps or structs) cannot be
	// constants
	// we can declare them as top-level variables
	b = []byte{3, 4} // this could not be a constant
)

// :show end

func main() {
	// do nothing
}
CodeToRun:+371
package main

const (
	i  int = 32       // int constant
	s      = "string" // string constant
	i2     = 33       // untyped number constant
)

var (
	// values that are not read-only (like slices or maps or structs) cannot be
	// constants
	// we can declare them as top-level variables
	b = []byte{3, 4} // this could not be a constant
)

func main() {
	// do nothing
}
Output:+0
66 1553595114753 glotid
Sha1: a398c7af3255b466d5cbbe0c28f6104eab6f1c51
GlotID: fapbqqmogo
711 1553595116019 glotoutput
Sha1: f5f192a2ec03805e3db1f6cbd99499de64ffbed0
Lang: Go
FileName: main.go
CodeFull:+298
// :glot,
package main

import "fmt"

func main() {
	// :show start
	var a1 = [2]byte{3, 8} // array of 2 bytes
	// when using [...] size will be deduced from { ... }
	a2 := [...]int{1, 2, 3} // array of 3 integers

	fmt.Printf("Size of a1: %d.\nSize of a2: %d\n", len(a1), len(a2))
	// :show end
}
CodeToRun:+268
// :glot,
package main

import "fmt"

func main() {
	var a1 = [2]byte{3, 8} // array of 2 bytes
	// when using [...] size will be deduced from { ... }
	a2 := [...]int{1, 2, 3} // array of 3 integers

	fmt.Printf("Size of a1: %d.\nSize of a2: %d\n", len(a1), len(a2))
}
Output:+29
Size of a1: 2.
Size of a2: 3
66 1553595116191 glotid
Sha1: f5f192a2ec03805e3db1f6cbd99499de64ffbed0
GlotID: fapbqrhj07
1304 1553595117644 glotoutput
Sha1: fa54357fd561e85809bbc02f7156d027720c3b24
Lang: Go
FileName: main.go
CodeFull:+553
// :glot
package main

import "fmt"

func main() {
	// :show start
	m := make(map[string]int)
	m["number3"] = 3

	checkKey := func(k string) {
		if n, ok := m[k]; ok {
			fmt.Printf("value for key '%s' is %d\n", k, n)
		} else {
			fmt.Printf("key '%s' doesn't exist in map\n", k)
		}
	}

	// get value for a key that exists
	checkKey("number3")

	// get value for a key that doesn't exist
	checkKey("number4")

	// remove a key
	delete(m, "number3")
	fmt.Printf("deleted key 'number3\n")
	checkKey("number3") // and now it doesn't exist
	// :show end
}
CodeToRun:+514
package main

import "fmt"

func main() {
	m := make(map[string]int)
	m["number3"] = 3

	checkKey := func(k string) {
		if n, ok := m[k]; ok {
			fmt.Printf("value for key '%s' is %d\n", k, n)
		} else {
			fmt.Printf("key '%s' doesn't exist in map\n", k)
		}
	}

	// get value for a key that exists
	checkKey("number3")

	// get value for a key that doesn't exist
	checkKey("number4")

	// remove a key
	delete(m, "number3")
	fmt.Printf("deleted key 'number3\n")
	checkKey("number3") // and now it doesn't exist
}
Output:+120
value for key 'number3' is 3
key 'number4' doesn't exist in map
deleted key 'number3
key 'number3' doesn't exist in map
66 1553595117819 glotid
Sha1: fa54357fd561e85809bbc02f7156d027720c3b24
GlotID: fapbqsgf26
442 1553595120088 glotoutput
Sha1: 23f6131e28ef365551ffb219a7ec8b0b25811bd6
Lang: Go
FileName: main.go
CodeFull:+188
// :glot, no output
package main

// :show start
type MyStruct struct {
	IntVal           int
	StringVal        string
	unexportedIntVal int
}

// :show end

func main() {
	// do nothing
}
CodeToRun:+139
package main

type MyStruct struct {
	IntVal           int
	StringVal        string
	unexportedIntVal int
}

func main() {
	// do nothing
}
Output:+0
66 1553595120265 glotid
Sha1: 23f6131e28ef365551ffb219a7ec8b0b25811bd6
GlotID: fapbqtwsbj
520 1553595122179 glotoutput
Sha1: 55dcdfb2a56707748923a24c4a98c5bcf42b43d2
Lang: Go
FileName: main.go
CodeFull:+189
// :glot
package main

import "fmt"

func main() {
	// :show start
	var a int = 4
	pa := &a
	fmt.Printf("Address of a variable in memory is %p. Its value is: %d\n", pa, *pa)
	// :show end
}
CodeToRun:+150
package main

import "fmt"

func main() {
	var a int = 4
	pa := &a
	fmt.Printf("Address of a variable in memory is %p. Its value is: %d\n", pa, *pa)
}
Output:+65
Address of a variable in memory is 0xc42006c010. Its value is: 4
66 1553595122362 glotid
Sha1: 55dcdfb2a56707748923a24c4a98c5bcf42b43d2
GlotID: fapbqv5kuz
825 1553595123776 glotoutput
Sha1: 65917487e32af83d83a19c1d7cbcf0e86c00bcbd
Lang: Go
FileName: main.go
CodeFull:+372
// :glot
package main

import "fmt"

func main() {
	// :show start
	// create unbuffered channel of int values with capacity of 1
	ch := make(chan int)
	// start a new goroutine that sends value 3 over a channel
	go func() { ch <- 3 }()
	// read the value from a channel
	// it waits until goroutine above sends a value
	n := <-ch
	fmt.Printf("n: %d\n", n)
	// :show end
}
CodeToRun:+333
package main

import "fmt"

func main() {
	// create unbuffered channel of int values with capacity of 1
	ch := make(chan int)
	// start a new goroutine that sends value 3 over a channel
	go func() { ch <- 3 }()
	// read the value from a channel
	// it waits until goroutine above sends a value
	n := <-ch
	fmt.Printf("n: %d\n", n)
}
Output:+5
n: 3
66 1553595123949 glotid
Sha1: 65917487e32af83d83a19c1d7cbcf0e86c00bcbd
GlotID: fapbqw3tnd
2416 1553595125438 glotoutput
Sha1: 3b58865c58f1398700e9a0e9fd8edf508f5fdf34
Lang: Go
FileName: main.go
CodeFull:+1028
// :glot
package main

import "fmt"

func main() {
	// :show start
  fmt.Println("zero values for basic types:")

	var zeroBool bool
	fmt.Printf("bool:       %v\n", zeroBool)

	var zeroInt int
	fmt.Printf("int:        %v\n", zeroInt)

	var zeroF32 float32
	fmt.Printf("float32:    %v\n", zeroF32)

	var zeroF64 float64
	fmt.Printf("float64:    %v\n", zeroF64)

	var zeroStr string
	fmt.Printf("string:     %#v\n", zeroStr)

	var zeroPtr *int
	fmt.Printf("pointer:    %v\n", zeroPtr)

	var zeroSlice []uint32
	fmt.Printf("slice:      %v\n", zeroSlice)

	var zeroMap map[string]int
	fmt.Printf("map:        %#v\n", zeroMap)

	var zeroInterface interface{}
	fmt.Printf("interface:  %v\n", zeroInterface)

	var zeroChan chan bool
	fmt.Printf("channel:    %v\n", zeroChan)

	var zeroArray [5]int
	fmt.Printf("array:      %v\n", zeroArray)

	type struc struct {
		a int
		b string
	}
	var zeroStruct struc
	fmt.Printf("struct:     %#v\n", zeroStruct)

	var zeroFunc func(bool)
	fmt.Printf("function:   %v\n", zeroFunc)
	// :show end
}
CodeToRun:+989
package main

import "fmt"

func main() {
  fmt.Println("zero values for basic types:")

	var zeroBool bool
	fmt.Printf("bool:       %v\n", zeroBool)

	var zeroInt int
	fmt.Printf("int:        %v\n", zeroInt)

	var zeroF32 float32
	fmt.Printf("float32:    %v\n", zeroF32)

	var zeroF64 float64
	fmt.Printf("float64:    %v\n", zeroF64)

	var zeroStr string
	fmt.Printf("string:     %#v\n", zeroStr)

	var zeroPtr *int
	fmt.Printf("pointer:    %v\n", zeroPtr)

	var zeroSlice []uint32
	fmt.Printf("slice:      %v\n", zeroSlice)

	var zeroMap map[string]int
	fmt.Printf("map:        %#v\n", zeroMap)

	var zeroInterface interface{}
	fmt.Printf("interface:  %v\n", zeroInterface)

	var zeroChan chan bool
	fmt.Printf("channel:    %v\n", zeroChan)

	var zeroArray [5]int
	fmt.Printf("array:      %v\n", zeroArray)

	type struc struct {
		a int
		b string
	}
	var zeroStruct struc
	fmt.Printf("struct:     %#v\n", zeroStruct)

	var zeroFunc func(bool)
	fmt.Printf("function:   %v\n", zeroFunc)
}
Output:+281
zero values for basic types:
bool:       false
int:        0
float32:    0
float64:    0
string:     ""
pointer:    <nil>
slice:      []
map:        map[string]int(nil)
interface:  <nil>
channel:    <nil>
array:      [0 0 0 0 0]
struct:     main.struc{a:0, b:""}
function:   <nil>
66 1553595125611 glotid
Sha1: 3b58865c58f1398700e9a0e9fd8edf508f5fdf34
GlotID: fapbqx3gzc
1119 1553595126504 glotoutput
Sha1: 5e2075441bcce0bd59b1f50b3aa14d25d18a31b7
Lang: Go
FileName: main.go
CodeFull:+527
// :glot, no output
package main

func main() {
	// :show start
	// you can cast between numbers i.e. integers of various sizes and floating point numbers
	var i1 int32 = 3
	var i2 int = int(i1) // we must explicitly cast from int32 to int
	var f float64 = float64(i1)

	s := "string"
	// we can cast between string and []byte and vice-versa
	// note that unless optimizted by the compiler, this involves allocation
	var d []byte = []byte(s)
	// :show end

	_, _, _ = i2, f, d // silence compiler error about unused variables
}
CodeToRun:+477
package main

func main() {
	// you can cast between numbers i.e. integers of various sizes and floating point numbers
	var i1 int32 = 3
	var i2 int = int(i1) // we must explicitly cast from int32 to int
	var f float64 = float64(i1)

	s := "string"
	// we can cast between string and []byte and vice-versa
	// note that unless optimizted by the compiler, this involves allocation
	var d []byte = []byte(s)

	_, _, _ = i2, f, d // silence compiler error about unused variables
}
Output:+0
66 1553595126675 glotid
Sha1: 5e2075441bcce0bd59b1f50b3aa14d25d18a31b7
GlotID: fapbqxqae9
1481 1553595127627 glotoutput
Sha1: a1943efafdc94576101b04d4e7f7df42233b83ae
Lang: Go
FileName: main.go
CodeFull:+708
// :glot, no output
package main

type Person struct {
	FirstName string
	LastName  string
}

func main() {
	// :show start
	// Basic variable declaration. Declares a variable of type specified on the right.
	// The variable is initialized to the zero value of the respective type.
	var x int
	var s string
	var p Person // Assuming type Person struct {}

	// Assignment of a value to a variable
	x = 3

	// Short declaration using := infers the type
	y := 4

	u := int64(100)    // declare variable of type int64 and init with 100
	var u2 int64 = 100 // declare variable of type int64 and init with 100
	// :show end

	// silence compiler error about unused variables
	_, _, _, _, _, _ = x, s, p, y, u, u2
}
CodeToRun:+658
package main

type Person struct {
	FirstName string
	LastName  string
}

func main() {
	// Basic variable declaration. Declares a variable of type specified on the right.
	// The variable is initialized to the zero value of the respective type.
	var x int
	var s string
	var p Person // Assuming type Person struct {}

	// Assignment of a value to a variable
	x = 3

	// Short declaration using := infers the type
	y := 4

	u := int64(100)    // declare variable of type int64 and init with 100
	var u2 int64 = 100 // declare variable of type int64 and init with 100

	// silence compiler error about unused variables
	_, _, _, _, _, _ = x, s, p, y, u, u2
}
Output:+0
66 1553595127803 glotid
Sha1: a1943efafdc94576101b04d4e7f7df42233b83ae
GlotID: fapbqyefx8
1029 1553595128886 glotoutput
Sha1: 13101e39a354cc0f1dd6579311fee334edfc42f7
Lang: Go
FileName: main.go
CodeFull:+482
// :glot, no output
package main

func main() {
	// :show start
	// You can declare multiple variables of the same type in one line
	var a, b, c string

	var d, e string = "Hello", "world!"

	// You can also use short declaration to assign multiple variables
	x, y, z := 1, 2, 3

	foo, bar := 4, "stack" // `foo` is type `int`, `bar` is type `string`
	// :show end

	// silence compiler error about unused variables
	_, _, _, _, _, _, _, _, _, _ = a, b, c, d, e, x, y, z, foo, bar
}
CodeToRun:+432
package main

func main() {
	// You can declare multiple variables of the same type in one line
	var a, b, c string

	var d, e string = "Hello", "world!"

	// You can also use short declaration to assign multiple variables
	x, y, z := 1, 2, 3

	foo, bar := 4, "stack" // `foo` is type `int`, `bar` is type `string`

	// silence compiler error about unused variables
	_, _, _, _, _, _, _, _, _, _ = a, b, c, d, e, x, y, z, foo, bar
}
Output:+0
66 1553595129056 glotid
Sha1: 13101e39a354cc0f1dd6579311fee334edfc42f7
GlotID: fapbqz5c1v
778 1553595130531 glotoutput
Sha1: e03c08fd09c5e2e757a7733e0679c25aee1cc619
Lang: Go
FileName: main.go
CodeFull:+339
// :glot
package main

import "fmt"

// :show start
func multipleReturn() (int, int) {
	return 1, 2
}

func multipleReturn2() (a int, b int) {
	a = 3
	b = 4
	return
}

func main() {
	x, y := multipleReturn()  // x = 1, y = 2
	w, z := multipleReturn2() // w = 3, z = 4
	fmt.Printf("x: %d, y: %d\nw: %d, z: %d\n", x, y, w, z)
	// :show end
}
CodeToRun:+301
package main

import "fmt"

func multipleReturn() (int, int) {
	return 1, 2
}

func multipleReturn2() (a int, b int) {
	a = 3
	b = 4
	return
}

func main() {
	x, y := multipleReturn()  // x = 1, y = 2
	w, z := multipleReturn2() // w = 3, z = 4
	fmt.Printf("x: %d, y: %d\nw: %d, z: %d\n", x, y, w, z)
}
Output:+22
x: 1, y: 2
w: 3, z: 4
66 1553595130703 glotid
Sha1: e03c08fd09c5e2e757a7733e0679c25aee1cc619
GlotID: fapbr04njv
599 1553595131759 glotoutput
Sha1: ef42399d54d601274d779745bacfb6d74cccdb84
Lang: Go
FileName: main.go
CodeFull:+260
// :glot
package main

import "fmt"

// :show start
func SumProduct(a, b int) (int, int) {
	return a + b, a * b
}

func main() {
	// only need the sum
	sum, _ := SumProduct(1, 2) // the product gets discarded
	fmt.Println(sum)           // -> 3
}

// :show end
CodeToRun:+223
package main

import "fmt"

func SumProduct(a, b int) (int, int) {
	return a + b, a * b
}

func main() {
	// only need the sum
	sum, _ := SumProduct(1, 2) // the product gets discarded
	fmt.Println(sum)           // -> 3
}
Output:+2
3
66 1553595131930 glotid
Sha1: ef42399d54d601274d779745bacfb6d74cccdb84
GlotID: fapbr0uzd6
633 1553595133764 glotoutput
Sha1: 4669fa1dbdf2d335b500505d9d91de552a52bf99
Lang: Go
FileName: main.go
CodeFull:+271
// :glot
package main

import "fmt"

// :show start
func main() {
	pets := []string{"dog", "cat", "fish"}

	// range returns both the current index and value
	// but sometimes we only need one or the other
	for _, pet := range pets {
		fmt.Println(pet)
	}
}

// :show end
CodeToRun:+234
package main

import "fmt"

func main() {
	pets := []string{"dog", "cat", "fish"}

	// range returns both the current index and value
	// but sometimes we only need one or the other
	for _, pet := range pets {
		fmt.Println(pet)
	}
}
Output:+13
dog
cat
fish
66 1553595133937 glotid
Sha1: 4669fa1dbdf2d335b500505d9d91de552a52bf99
GlotID: fapbr21zvl
1519 1553595134933 glotoutput
Sha1: 92d4cb28095371083b8074c16deb0ea9f290841a
Lang: Go
FileName: main.go
CodeFull:+694
// :glot, :allow error
package main

func main() {
	// :show start
	const untypedNumber = 345

	// if this was a variable declaration, untypedNumber would have its type
	// inferred as int.
	// since it's a const, it remains untyped until it's e.g. assigned to a variable
	var i int = untypedNumber      // no need to cast to int
	var u16 uint16 = untypedNumber // no need to cast to uint16
	var f float64 = untypedNumber  // no need to cast to float64

	// incompatible assignments are detected by the compiler
	// 345 is too big to fit in int8 and compiler detects that
	var b int8 = untypedNumber

	// :show end

	// silence compiler error about unused variables
	_, _, _, _ = i, u16, f, b
}
CodeToRun:+640
package main

func main() {
	const untypedNumber = 345

	// if this was a variable declaration, untypedNumber would have its type
	// inferred as int.
	// since it's a const, it remains untyped until it's e.g. assigned to a variable
	var i int = untypedNumber      // no need to cast to int
	var u16 uint16 = untypedNumber // no need to cast to uint16
	var f float64 = untypedNumber  // no need to cast to float64

	// incompatible assignments are detected by the compiler
	// 345 is too big to fit in int8 and compiler detects that
	var b int8 = untypedNumber

	// silence compiler error about unused variables
	_, _, _, _ = i, u16, f, b
}
Output:+69
# command-line-arguments
./main.go:15:6: constant 345 overflows int8
66 1553595135105 glotid
Sha1: 92d4cb28095371083b8074c16deb0ea9f290841a
GlotID: fapbr2r0vg
482 1553595136552 glotoutput
Sha1: 93542d33fa00f5f67f71601d392051ad67c56dbf
Lang: Go
FileName: main.go
CodeFull:+190
// :glot
package main

import "fmt"

func main() {
	// :show start
	const (
		Low = iota
		Medium
		High
	)
	fmt.Printf("Low: %d\nMedium: %d\nHigh: %d\n", Low, Medium, High)

	// :show end
}
CodeToRun:+151
package main

import "fmt"

func main() {
	const (
		Low = iota
		Medium
		High
	)
	fmt.Printf("Low: %d\nMedium: %d\nHigh: %d\n", Low, Medium, High)

}
Output:+25
Low: 0
Medium: 1
High: 2
66 1553595136723 glotid
Sha1: 93542d33fa00f5f67f71601d392051ad67c56dbf
GlotID: fapbr3pqvb
998 1553595138113 glotoutput
Sha1: f957e69e7d4a573fc605611959931313c3edb709
Lang: Go
FileName: main.go
CodeFull:+426
// :glot
package main

import "fmt"

func main() {
	// :show start
	const (
		Secure = 1 << iota // 0b001
		Authn              // 0b010
		Ready              // 0b100
	)

	ConnState := Secure | Authn // 0b011: Connection is secure and authenticated, but not yet Ready

	fmt.Printf(`Secure:    0x%x (0b%03b)
Authn:     0x%x (0b%03b)
ConnState: 0x%x (0b%03b)
`, Secure, Secure, Authn, Authn, ConnState, ConnState)
	// :show end
}
CodeToRun:+387
package main

import "fmt"

func main() {
	const (
		Secure = 1 << iota // 0b001
		Authn              // 0b010
		Ready              // 0b100
	)

	ConnState := Secure | Authn // 0b011: Connection is secure and authenticated, but not yet Ready

	fmt.Printf(`Secure:    0x%x (0b%03b)
Authn:     0x%x (0b%03b)
ConnState: 0x%x (0b%03b)
`, Secure, Secure, Authn, Authn, ConnState, ConnState)
}
Output:+69
Secure:    0x1 (0b001)
Authn:     0x2 (0b010)
ConnState: 0x3 (0b011)
66 1553595138286 glotid
Sha1: f957e69e7d4a573fc605611959931313c3edb709
GlotID: fapbr4n82t
736 1553595139685 glotoutput
Sha1: 9e25edcd534ff4f76131be006a03c658ac909e57
Lang: Go
FileName: main.go
CodeFull:+318
// :glot
package main

import "fmt"

func main() {
	// :show start
	const ( // iota is reset to 0
		a = 1 << iota // a == 1
		b = 1 << iota // b == 2
		c = 3         // c == 3  (iota is not used but still incremented)
		d = 1 << iota // d == 8
	)
	fmt.Printf("a: %d, b: %d, c: %d, d: %d\n", a, b, c, d)
	// :show end
}
CodeToRun:+279
package main

import "fmt"

func main() {
	const ( // iota is reset to 0
		a = 1 << iota // a == 1
		b = 1 << iota // b == 2
		c = 3         // c == 3  (iota is not used but still incremented)
		d = 1 << iota // d == 8
	)
	fmt.Printf("a: %d, b: %d, c: %d, d: %d\n", a, b, c, d)
}
Output:+23
a: 1, b: 2, c: 3, d: 8
66 1553595139865 glotid
Sha1: 9e25edcd534ff4f76131be006a03c658ac909e57
GlotID: fapbr5l3e6
498 1553595141075 glotoutput
Sha1: c5461f8fb6ac5a639af293015a5d5cdaebe1d898
Lang: Go
FileName: main.go
CodeFull:+205
// :glot
package main

import "fmt"

func main() {
	// :show start
	const (
		a = iota // a = 0
		_        // iota is incremented
		b        // b = 2a
	)
	fmt.Printf("a: %d, b: %d\n", a, b)
	// :show end
}
CodeToRun:+166
package main

import "fmt"

func main() {
	const (
		a = iota // a = 0
		_        // iota is incremented
		b        // b = 2a
	)
	fmt.Printf("a: %d, b: %d\n", a, b)
}
Output:+11
a: 0, b: 2
66 1553595141279 glotid
Sha1: c5461f8fb6ac5a639af293015a5d5cdaebe1d898
GlotID: fapbr6eqpo
1013 1553595142769 glotoutput
Sha1: b5f001783b61983333b8b96e409c8c59900fd966
Lang: Go
FileName: main.go
CodeFull:+448
// :glot
package main

import "fmt"

func main() {
	// :show start
	const (
		bit0, mask0 = 1 << iota, 1<<iota - 1 // bit0 == 1, mask0 == 0
		bit1, mask1                          // bit1 == 2, mask1 == 1
		_, _                                 // skips iota == 2
		bit3, mask3                          // bit3 == 8, mask3 == 7
	)
	fmt.Printf("bit0: %d, mask0: 0x%x\n", bit0, mask0)
	fmt.Printf("bit3: %d, mask3: 0x%x\n", bit3, mask3)
	// :show end
}
CodeToRun:+409
package main

import "fmt"

func main() {
	const (
		bit0, mask0 = 1 << iota, 1<<iota - 1 // bit0 == 1, mask0 == 0
		bit1, mask1                          // bit1 == 2, mask1 == 1
		_, _                                 // skips iota == 2
		bit3, mask3                          // bit3 == 8, mask3 == 7
	)
	fmt.Printf("bit0: %d, mask0: 0x%x\n", bit0, mask0)
	fmt.Printf("bit3: %d, mask3: 0x%x\n", bit3, mask3)
}
Output:+40
bit0: 1, mask0: 0x0
bit3: 8, mask3: 0x7
66 1553595142943 glotid
Sha1: b5f001783b61983333b8b96e409c8c59900fd966
GlotID: fapbr7f2e7
627 1553595143941 glotoutput
Sha1: 5aae5c5fb5a4e6341ccabf9f506439c514dee1dc
Lang: Go
FileName: main.go
CodeFull:+271
// :glot
package main

import "fmt"

func main() {
	// :show start
	type ByteSize int

	const (
		_           = iota // ignore first value by assigning to blank identifier
		KB ByteSize = 1 << (10 * iota)
		MB
		GB
		TB
		PB
	)
	fmt.Printf("KB: %d\n", KB)
	// :show end
}
CodeToRun:+232
package main

import "fmt"

func main() {
	type ByteSize int

	const (
		_           = iota // ignore first value by assigning to blank identifier
		KB ByteSize = 1 << (10 * iota)
		MB
		GB
		TB
		PB
	)
	fmt.Printf("KB: %d\n", KB)
}
Output:+9
KB: 1024
66 1553595144112 glotid
Sha1: 5aae5c5fb5a4e6341ccabf9f506439c514dee1dc
GlotID: fapbr846fm
925 1553595145375 glotoutput
Sha1: c64e87c1f9fb0bda74531b22ef528fd874061af0
Lang: Go
FileName: main.go
CodeFull:+385
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "where hello is?"
	toFind := "hello"
	idx := strings.Index(s, toFind)
	fmt.Printf("'%s' is in s starting at position %d\n", toFind, idx)

	// when string is not found, result is -1
	idx = strings.Index(s, "not present")
	fmt.Printf("Index of non-existent substring is: %d\n", idx)
	// :show end
}
CodeToRun:+346
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "where hello is?"
	toFind := "hello"
	idx := strings.Index(s, toFind)
	fmt.Printf("'%s' is in s starting at position %d\n", toFind, idx)

	// when string is not found, result is -1
	idx = strings.Index(s, "not present")
	fmt.Printf("Index of non-existent substring is: %d\n", idx)
}
Output:+78
'hello' is in s starting at position 6
Index of non-existent substring is: -1
66 1553595145549 glotid
Sha1: c64e87c1f9fb0bda74531b22ef528fd874061af0
GlotID: fapbr8ywxz
669 1553595146911 glotoutput
Sha1: 430a7678584716e8c6a18c7942610aa1fc64d2c1
Lang: Go
FileName: main.go
CodeFull:+268
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "hello and second hello"
	toFind := "hello"
	idx := strings.LastIndex(s, toFind)
	fmt.Printf("when searching from end, '%s' is in s at position %d\n", toFind, idx)
	// :show end
}
CodeToRun:+229
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "hello and second hello"
	toFind := "hello"
	idx := strings.LastIndex(s, toFind)
	fmt.Printf("when searching from end, '%s' is in s at position %d\n", toFind, idx)
}
Output:+56
when searching from end, 'hello' is in s at position 17
66 1553595147086 glotid
Sha1: 430a7678584716e8c6a18c7942610aa1fc64d2c1
GlotID: fapbr9vv72
890 1553595148164 glotoutput
Sha1: 85c817a6388349fc708ad8dd295991501cc99afe
Lang: Go
FileName: main.go
CodeFull:+368
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "first is, second is, third is"
	toFind := "is"
	currStart := 0
	for {
		idx := strings.Index(s, toFind)
		if idx == -1 {
			break
		}
		fmt.Printf("found '%s' at position %d\n", toFind, currStart+idx)
		currStart += idx + len(toFind)
		s = s[idx+len(toFind):]
	}
	// :show end
}
CodeToRun:+329
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "first is, second is, third is"
	toFind := "is"
	currStart := 0
	for {
		idx := strings.Index(s, toFind)
		if idx == -1 {
			break
		}
		fmt.Printf("found '%s' at position %d\n", toFind, currStart+idx)
		currStart += idx + len(toFind)
		s = s[idx+len(toFind):]
	}
}
Output:+77
found 'is' at position 6
found 'is' at position 17
found 'is' at position 27
66 1553595148339 glotid
Sha1: 85c817a6388349fc708ad8dd295991501cc99afe
GlotID: fapbramq4y
694 1553595149408 glotoutput
Sha1: 06a4a67d4688d8677c68fcca39d1ee4744f8ca13
Lang: Go
FileName: main.go
CodeFull:+291
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "is hello there?"
	toFind := "hello"
	if strings.Contains(s, toFind) {
		fmt.Printf("'%s' contains '%s'\n", s, toFind)
	} else {
		fmt.Printf("'%s' doesn't contain '%s'\n", s, toFind)
	}
	// :show end
}
CodeToRun:+252
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "is hello there?"
	toFind := "hello"
	if strings.Contains(s, toFind) {
		fmt.Printf("'%s' contains '%s'\n", s, toFind)
	} else {
		fmt.Printf("'%s' doesn't contain '%s'\n", s, toFind)
	}
}
Output:+35
'is hello there?' contains 'hello'
66 1553595149582 glotid
Sha1: 06a4a67d4688d8677c68fcca39d1ee4744f8ca13
GlotID: fapbrbdfjh
705 1553595150597 glotoutput
Sha1: 22d8e3e2774cd4f1698335e67bfabfb07b481b7a
Lang: Go
FileName: main.go
CodeFull:+296
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "this is string"
	toFind := "this"
	if strings.HasPrefix(s, toFind) {
		fmt.Printf("'%s' starts with '%s'\n", s, toFind)
	} else {
		fmt.Printf("'%s' doesn't start with '%s'\n", s, toFind)
	}
	// :show end
}
CodeToRun:+257
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "this is string"
	toFind := "this"
	if strings.HasPrefix(s, toFind) {
		fmt.Printf("'%s' starts with '%s'\n", s, toFind)
	} else {
		fmt.Printf("'%s' doesn't start with '%s'\n", s, toFind)
	}
}
Output:+36
'this is string' starts with 'this'
66 1553595150769 glotid
Sha1: 22d8e3e2774cd4f1698335e67bfabfb07b481b7a
GlotID: fapbrc2v4p
701 1553595151825 glotoutput
Sha1: 3dc9572b703ec6964918fa3d3a80cdee91706256
Lang: Go
FileName: main.go
CodeFull:+294
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "this is string"
	toFind := "string"
	if strings.HasSuffix(s, toFind) {
		fmt.Printf("'%s' ends with '%s'\n", s, toFind)
	} else {
		fmt.Printf("'%s' doesn't end with '%s'\n", s, toFind)
	}
	// :show end
}
CodeToRun:+255
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "this is string"
	toFind := "string"
	if strings.HasSuffix(s, toFind) {
		fmt.Printf("'%s' ends with '%s'\n", s, toFind)
	} else {
		fmt.Printf("'%s' doesn't end with '%s'\n", s, toFind)
	}
}
Output:+36
'this is string' ends with 'string'
66 1553595151995 glotid
Sha1: 3dc9572b703ec6964918fa3d3a80cdee91706256
GlotID: fapbrct58f
725 1553595153054 glotoutput
Sha1: c5743d21ed1f110ac003f047850d43b068e5dabe
Lang: Go
FileName: main.go
CodeFull:+303
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s1 := "gone"
	s2 := "GoNe"
	if strings.EqualFold(s1, s2) {
		fmt.Printf("'%s' is equal '%s' when ignoring case\n", s1, s2)
	} else {
		fmt.Printf("'%s' is not equal '%s' when ignoring case\n", s1, s2)
	}
	// :show end
}
CodeToRun:+264
package main

import (
	"fmt"
	"strings"
)

func main() {
	s1 := "gone"
	s2 := "GoNe"
	if strings.EqualFold(s1, s2) {
		fmt.Printf("'%s' is equal '%s' when ignoring case\n", s1, s2)
	} else {
		fmt.Printf("'%s' is not equal '%s' when ignoring case\n", s1, s2)
	}
}
Output:+42
'gone' is equal 'GoNe' when ignoring case
66 1553595153225 glotid
Sha1: c5743d21ed1f110ac003f047850d43b068e5dabe
GlotID: fapbrdjibu
1263 1553595154497 glotoutput
Sha1: 8536b7224b8c7c3853c636ac1c14ba34ece99b13
Lang: Go
FileName: main.go
CodeFull:+555
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	s1 := "string one"
	s2 := "string two"

	if s1 == s2 {
		fmt.Printf("s1 is equal to s2\n")
	} else {
		fmt.Printf("s1 is not equal to s2\n")
	}

	if s1 == s1 {
		fmt.Printf("s1 is equal to s1\n")
	} else {
		fmt.Printf("inconcivable! s1 is not equal to itself\n")
	}

	if s1 > s2 {
		fmt.Printf("s1 is > than s2\n")
	} else {
		fmt.Printf("s1 is not > than s2\n")
	}

	if s1 < s2 {
		fmt.Printf("s1 is < than s2\n")
	} else {
		fmt.Printf("s1 is not < than s2\n")
	}
	// :show end
}
CodeToRun:+516
package main

import (
	"fmt"
)

func main() {
	s1 := "string one"
	s2 := "string two"

	if s1 == s2 {
		fmt.Printf("s1 is equal to s2\n")
	} else {
		fmt.Printf("s1 is not equal to s2\n")
	}

	if s1 == s1 {
		fmt.Printf("s1 is equal to s1\n")
	} else {
		fmt.Printf("inconcivable! s1 is not equal to itself\n")
	}

	if s1 > s2 {
		fmt.Printf("s1 is > than s2\n")
	} else {
		fmt.Printf("s1 is not > than s2\n")
	}

	if s1 < s2 {
		fmt.Printf("s1 is < than s2\n")
	} else {
		fmt.Printf("s1 is not < than s2\n")
	}
}
Output:+76
s1 is not equal to s2
s1 is equal to s1
s1 is not > than s2
s1 is < than s2
66 1553595154668 glotid
Sha1: 8536b7224b8c7c3853c636ac1c14ba34ece99b13
GlotID: fapbreeg4h
710 1553595155818 glotoutput
Sha1: 99cfeac8925ef1c4ac2baeb788ca909b28ff6e9c
Lang: Go
FileName: main.go
CodeFull:+279
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "Mixed Case"
	fmt.Printf("ToLower(s): '%s'\n", strings.ToLower(s))
	fmt.Printf("ToUpper(s): '%s'\n", strings.ToUpper(s))
	fmt.Printf("ToTitle(s): '%s'\n", strings.ToTitle(s))
	// :show end
}
CodeToRun:+240
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "Mixed Case"
	fmt.Printf("ToLower(s): '%s'\n", strings.ToLower(s))
	fmt.Printf("ToUpper(s): '%s'\n", strings.ToUpper(s))
	fmt.Printf("ToTitle(s): '%s'\n", strings.ToTitle(s))
}
Output:+75
ToLower(s): 'mixed case'
ToUpper(s): 'MIXED CASE'
ToTitle(s): 'MIXED CASE'
66 1553595155990 glotid
Sha1: 99cfeac8925ef1c4ac2baeb788ca909b28ff6e9c
GlotID: fapbrf6rai
2145 1553595157246 glotoutput
Sha1: 9a45537f8a22d70f2fdb398221ac44061d6c3ee2
Lang: Go
FileName: main.go
CodeFull:+925
// :glot
package main

import (
	"fmt"
	"strconv"
)

func main() {
	// :show start
	s := "234"
	i, err := strconv.Atoi(s)
	if err != nil {
		fmt.Printf("strconv.Atoi() failed with: '%s'\n", err)
	}
	fmt.Printf("strconv.Atoi('%s'): %d\n", s, i)

	i, err = strconv.Atoi("not a number")
	if err != nil {
		fmt.Printf("strconv.Atoi('not a number') failed with: '%s'\n", err)
	}

	i64, err := strconv.ParseInt(s, 10, 64)
	if err != nil {
		fmt.Printf("strconv.ParseInt() failed with: '%s'\n", err)
	}
	fmt.Printf("strconv.ParseInt('%s', 64): %d\n", s, i64)

	s = "-3.234"
	f64, err := strconv.ParseFloat(s, 64)
	if err != nil {
		fmt.Printf("strconv.ParseFloat() failed with: '%s'\n", err)
	}
	fmt.Printf("strconv.ParseFloat('%s', 64): %g\n", s, f64)

	var f2 float64
	_, err = fmt.Sscanf(s, "%f", &f2)
	if err != nil {
		fmt.Printf("fmt.Sscanf() failed with: '%s'\n", err)
	}
	fmt.Printf("fmt.Sscanf(): %g\n", f2)
	// :show end
}
CodeToRun:+886
package main

import (
	"fmt"
	"strconv"
)

func main() {
	s := "234"
	i, err := strconv.Atoi(s)
	if err != nil {
		fmt.Printf("strconv.Atoi() failed with: '%s'\n", err)
	}
	fmt.Printf("strconv.Atoi('%s'): %d\n", s, i)

	i, err = strconv.Atoi("not a number")
	if err != nil {
		fmt.Printf("strconv.Atoi('not a number') failed with: '%s'\n", err)
	}

	i64, err := strconv.ParseInt(s, 10, 64)
	if err != nil {
		fmt.Printf("strconv.ParseInt() failed with: '%s'\n", err)
	}
	fmt.Printf("strconv.ParseInt('%s', 64): %d\n", s, i64)

	s = "-3.234"
	f64, err := strconv.ParseFloat(s, 64)
	if err != nil {
		fmt.Printf("strconv.ParseFloat() failed with: '%s'\n", err)
	}
	fmt.Printf("strconv.ParseFloat('%s', 64): %g\n", s, f64)

	var f2 float64
	_, err = fmt.Sscanf(s, "%f", &f2)
	if err != nil {
		fmt.Printf("fmt.Sscanf() failed with: '%s'\n", err)
	}
	fmt.Printf("fmt.Sscanf(): %g\n", f2)
}
Output:+217
strconv.Atoi('234'): 234
strconv.Atoi('not a number') failed with: 'strconv.Atoi: parsing "not a number": invalid syntax'
strconv.ParseInt('234', 64): 234
strconv.ParseFloat('-3.234', 64): -3.234
fmt.Sscanf(): -3.234
66 1553595157419 glotid
Sha1: 9a45537f8a22d70f2fdb398221ac44061d6c3ee2
GlotID: fapbrg1dlz
1648 1553595158427 glotoutput
Sha1: 035ee6001d16c52073f189307a33ada12e1d9b0c
Lang: Go
FileName: main.go
CodeFull:+680
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "  str  "
	fmt.Printf("TrimSpace('%s'): '%s'\n\n", s, strings.TrimSpace(s))

	s = "abacdda"
	cutset := "ab"
	fmt.Printf("Trim('%s', '%s'): '%s'\n\n", s, cutset, strings.Trim(s, cutset))

	fmt.Printf("TrimLeft('%s', '%s'): '%s'\n\n", s, cutset, strings.TrimLeft(s, cutset))

	fmt.Printf("TrimRight('%s', '%s'): '%s'\n\n", s, cutset, strings.TrimRight(s, cutset))

	suffix := "ab"
	fmt.Printf("TrimSuffix('%s', '%s'): '%s'\n\n", s, suffix, strings.TrimSuffix(s, suffix))

	prefix := "ab"
	fmt.Printf("TrimPrefix('%s', '%s'): '%s'\n\n", s, prefix, strings.TrimPrefix(s, prefix))
	// :show end
}
CodeToRun:+641
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "  str  "
	fmt.Printf("TrimSpace('%s'): '%s'\n\n", s, strings.TrimSpace(s))

	s = "abacdda"
	cutset := "ab"
	fmt.Printf("Trim('%s', '%s'): '%s'\n\n", s, cutset, strings.Trim(s, cutset))

	fmt.Printf("TrimLeft('%s', '%s'): '%s'\n\n", s, cutset, strings.TrimLeft(s, cutset))

	fmt.Printf("TrimRight('%s', '%s'): '%s'\n\n", s, cutset, strings.TrimRight(s, cutset))

	suffix := "ab"
	fmt.Printf("TrimSuffix('%s', '%s'): '%s'\n\n", s, suffix, strings.TrimSuffix(s, suffix))

	prefix := "ab"
	fmt.Printf("TrimPrefix('%s', '%s'): '%s'\n\n", s, prefix, strings.TrimPrefix(s, prefix))
}
Output:+210
TrimSpace('  str  '): 'str'

Trim('abacdda', 'ab'): 'cdd'

TrimLeft('abacdda', 'ab'): 'cdda'

TrimRight('abacdda', 'ab'): 'abacdd'

TrimSuffix('abacdda', 'ab'): 'abacdda'

TrimPrefix('abacdda', 'ab'): 'acdda'

66 1553595158718 glotid
Sha1: 035ee6001d16c52073f189307a33ada12e1d9b0c
GlotID: fapbrgqno7
613 1553595159905 glotoutput
Sha1: 5c6bc8cc4b09b7564398fd2d42522a2dd0260898
Lang: Go
FileName: main.go
CodeFull:+236
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "this is a string"
	a := strings.Split(s, " ")
	fmt.Printf("a: %#v\n", a)

	s2 := strings.Join(a, ",")
	fmt.Printf("s2: %#v\n", s2)
	// :show end
}
CodeToRun:+197
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "this is a string"
	a := strings.Split(s, " ")
	fmt.Printf("a: %#v\n", a)

	s2 := strings.Join(a, ",")
	fmt.Printf("s2: %#v\n", s2)
}
Output:+64
a: []string{"this", "is", "a", "string"}
s2: "this,is,a,string"
66 1553595160086 glotid
Sha1: 5c6bc8cc4b09b7564398fd2d42522a2dd0260898
GlotID: fapbrhmk71
553 1553595161286 glotoutput
Sha1: 179105e3e31b8eeaf8bea81e0bb4fd9677a6a253
Lang: Go
FileName: main.go
CodeFull:+221
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	s := fmt.Sprintf("Hello %s", "World")
	fmt.Printf("s: '%s'\n", s)
	s = fmt.Sprintf("%d + %f = %d", 2, float64(3), 5)
	fmt.Println(s)
	// :show end
}
CodeToRun:+182
package main

import (
	"fmt"
)

func main() {
	s := fmt.Sprintf("Hello %s", "World")
	fmt.Printf("s: '%s'\n", s)
	s = fmt.Sprintf("%d + %f = %d", 2, float64(3), 5)
	fmt.Println(s)
}
Output:+34
s: 'Hello World'
2 + 3.000000 = 5
66 1553595161466 glotid
Sha1: 179105e3e31b8eeaf8bea81e0bb4fd9677a6a253
GlotID: fapbrig1s5
1164 1553595162610 glotoutput
Sha1: 5f51ce0fa44948759f808c7586bdf5b65c12afe0
Lang: Go
FileName: main.go
CodeFull:+506
// :glot
package main

import (
	"fmt"
	"log"
)

func main() {
	// :show start
	// extract int and float from a string
	s := "48 123.45"
	var f float64
	var i int
	nParsed, err := fmt.Sscanf(s, "%d %f", &i, &f)
	if err != nil {
		log.Fatalf("first fmt.Sscanf failed with %s\n", err)
	}
	fmt.Printf("i: %d, f: %f, extracted %d values\n", i, f, nParsed)

	var i2 int
	_, err = fmt.Sscanf(s, "%d %f %d", &i, &f, &i2)
	if err != nil {
		fmt.Printf("second fmt.Sscanf failed with %s\n", err)
	}

	// :show end
}
CodeToRun:+467
package main

import (
	"fmt"
	"log"
)

func main() {
	// extract int and float from a string
	s := "48 123.45"
	var f float64
	var i int
	nParsed, err := fmt.Sscanf(s, "%d %f", &i, &f)
	if err != nil {
		log.Fatalf("first fmt.Sscanf failed with %s\n", err)
	}
	fmt.Printf("i: %d, f: %f, extracted %d values\n", i, f, nParsed)

	var i2 int
	_, err = fmt.Sscanf(s, "%d %f %d", &i, &f, &i2)
	if err != nil {
		fmt.Printf("second fmt.Sscanf failed with %s\n", err)
	}

}
Output:+75
i: 48, f: 123.450000, extracted 2 values
second fmt.Sscanf failed with EOF
66 1553595162782 glotid
Sha1: 5f51ce0fa44948759f808c7586bdf5b65c12afe0
GlotID: fapbrj8c72
491 1553595164012 glotoutput
Sha1: 6573072b34e5789fbf91cbcf7efc992de527e765
Lang: Go
FileName: main.go
CodeFull:+185
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "this,. is,. a,. string"
	a := strings.Split(s, ",.")
	fmt.Printf("a: %#v\n", a)
	// :show end
}
CodeToRun:+146
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "this,. is,. a,. string"
	a := strings.Split(s, ",.")
	fmt.Printf("a: %#v\n", a)
}
Output:+44
a: []string{"this", " is", " a", " string"}
66 1553595164184 glotid
Sha1: 6573072b34e5789fbf91cbcf7efc992de527e765
GlotID: fapbrk2eq3
538 1553595165525 glotoutput
Sha1: 925255597c5f757db4e473781cb796c9641f57a6
Lang: Go
FileName: main.go
CodeFull:+215
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "original string original"
	s2 := strings.Replace(s, "original", "replaced", -1)
	fmt.Printf("s2: '%s'\n", s2)
	// :show end
}
CodeToRun:+176
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "original string original"
	s2 := strings.Replace(s, "original", "replaced", -1)
	fmt.Printf("s2: '%s'\n", s2)
}
Output:+31
s2: 'replaced string replaced'
66 1553595165697 glotid
Sha1: 925255597c5f757db4e473781cb796c9641f57a6
GlotID: fapbrkytgx
592 1553595167285 glotoutput
Sha1: 80f9f63400d0835d5ff8a3a4987360f41f92cb47
Lang: Go
FileName: main.go
CodeFull:+242
// :glot
package main

import (
	"fmt"
	"regexp"
)

func main() {
	// :show start
	s := "original string original"
	rx := regexp.MustCompile("(?U)or.*al")
	s2 := rx.ReplaceAllString(s, "replaced")
	fmt.Printf("s2: '%s'\n", s2)
	// :show end
}
CodeToRun:+203
package main

import (
	"fmt"
	"regexp"
)

func main() {
	s := "original string original"
	rx := regexp.MustCompile("(?U)or.*al")
	s2 := rx.ReplaceAllString(s, "replaced")
	fmt.Printf("s2: '%s'\n", s2)
}
Output:+31
s2: 'replaced string replaced'
66 1553595167460 glotid
Sha1: 80f9f63400d0835d5ff8a3a4987360f41f92cb47
GlotID: fapbrm0mbq
1257 1553595168927 glotoutput
Sha1: 8c348b8c1d7b961723a893c4fdda63b5bddd47fc
Lang: Go
FileName: main.go
CodeFull:+581
// :glot, :name main.go
package main

import (
	"fmt"
	"io/ioutil"
	"log"
	"strings"
)

// :show start
// ReadFileAsLines reads a file and splits it into lines
func ReadFileAsLines(path string) ([]string, error) {
	d, err := ioutil.ReadFile(path)
	if err != nil {
		return nil, err
	}
	s := string(d)
	lines := strings.Split(s, "\n")
	return lines, nil
}

// :show end

func main() {
	path := "main.go"
	lines, err := ReadFileAsLines(path)
	if err != nil {
		log.Fatalf("ReadFileAsLines() failed with '%s'\n", err)
	}
	fmt.Printf("There are %d lines in '%s'\n", len(lines), path)
}
CodeToRun:+528
package main

import (
	"fmt"
	"io/ioutil"
	"log"
	"strings"
)

// ReadFileAsLines reads a file and splits it into lines
func ReadFileAsLines(path string) ([]string, error) {
	d, err := ioutil.ReadFile(path)
	if err != nil {
		return nil, err
	}
	s := string(d)
	lines := strings.Split(s, "\n")
	return lines, nil
}

func main() {
	path := "main.go"
	lines, err := ReadFileAsLines(path)
	if err != nil {
		log.Fatalf("ReadFileAsLines() failed with '%s'\n", err)
	}
	fmt.Printf("There are %d lines in '%s'\n", len(lines), path)
}
Output:+32
There are 28 lines in 'main.go'
66 1553595169113 glotid
Sha1: 8c348b8c1d7b961723a893c4fdda63b5bddd47fc
GlotID: fapbrmzq2d
1718 1553595170235 glotoutput
Sha1: b123889da54e42b9e103e88004c2422ea9d2d963
Lang: Go
FileName: main.go
CodeFull:+816
// :glot, :file main.go
package main

import (
  "fmt"
  "os"
  "bufio"
)

// :show start
func IterLinesInFile(filePath string, process func (s string) bool) error {
    file, err := os.Open(filePath)
    if err != nil {
        return err
    }
    defer file.Close()
    scanner := bufio.NewScanner(file)
    // Scan() reads next line and returns false when reached end or error
    for scanner.Scan() {
        line := scanner.Text()
        if !process(line) {
          return nil
        }
        // process the line
    }
    // check if Scan() finished because of error or because it reached end of file
    return scanner.Err()
}
// :show end

func main() {
  nLines := 0
  IterLinesInFile("main.go", func(s string) bool {
    nLines++
    return true
  })
  fmt.Printf("%d lines in 'main.go'\n", nLines)
}
CodeToRun:+764
package main

import (
  "fmt"
  "os"
  "bufio"
)

func IterLinesInFile(filePath string, process func (s string) bool) error {
    file, err := os.Open(filePath)
    if err != nil {
        return err
    }
    defer file.Close()
    scanner := bufio.NewScanner(file)
    // Scan() reads next line and returns false when reached end or error
    for scanner.Scan() {
        line := scanner.Text()
        if !process(line) {
          return nil
        }
        // process the line
    }
    // check if Scan() finished because of error or because it reached end of file
    return scanner.Err()
}

func main() {
  nLines := 0
  IterLinesInFile("main.go", func(s string) bool {
    nLines++
    return true
  })
  fmt.Printf("%d lines in 'main.go'\n", nLines)
}
Output:+22
35 lines in 'main.go'
66 1553595170406 glotid
Sha1: b123889da54e42b9e103e88004c2422ea9d2d963
GlotID: fapbrnrquw
1112 1553595171691 glotoutput
Sha1: 6aa09cf12a1f4c21b089711b10ee896b9bb208b3
Lang: Go
FileName: main.go
CodeFull:+511
// :glot
package main

import (
	"bytes"
	"fmt"
)

// :show start
// NormalizeNewlines normalizes \r\n (windows) and \r (mac)
// into \n (unix)
func NormalizeNewlines(d []byte) []byte {
	// replace CR LF \r\n (windows) with LF \n (unix)
	d = bytes.Replace(d, []byte{13, 10}, []byte{10}, -1)
	// replace CF \r (mac) with LF \n (unix)
	d = bytes.Replace(d, []byte{13}, []byte{10}, -1)
	return d
}

// :show end

func main() {
	d := []byte("new\r\nline")
	d = NormalizeNewlines(d)
	fmt.Printf("%#v\n", string(d))
}
CodeToRun:+473
package main

import (
	"bytes"
	"fmt"
)

// NormalizeNewlines normalizes \r\n (windows) and \r (mac)
// into \n (unix)
func NormalizeNewlines(d []byte) []byte {
	// replace CR LF \r\n (windows) with LF \n (unix)
	d = bytes.Replace(d, []byte{13, 10}, []byte{10}, -1)
	// replace CF \r (mac) with LF \n (unix)
	d = bytes.Replace(d, []byte{13}, []byte{10}, -1)
	return d
}

func main() {
	d := []byte("new\r\nline")
	d = NormalizeNewlines(d)
	fmt.Printf("%#v\n", string(d))
}
Output:+12
"new\nline"
66 1553595171896 glotid
Sha1: 6aa09cf12a1f4c21b089711b10ee896b9bb208b3
GlotID: fapbromzz7
1571 1553595173228 glotoutput
Sha1: d9c6cd9f911cdb122c85d9a2d9f9b7162498f3f4
Lang: Go
FileName: main.go
CodeFull:+753
// :glot, no output
package main

// :show start

// We'll show how pointers work in contrast to values with
// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an
// `int` parameter, so arguments will be passed to it by
// value. `zeroval` will get a copy of `ival` distinct
// from the one in the calling function.
func zeroval(ival int) {
	ival = 0
}

// `zeroptr` in contrast has an `*int` parameter, meaning
// that it takes an `int` pointer. The `*iptr` code in the
// function body then _dereferences_ the pointer from its
// memory address to the current value at that address.
// Assigning a value to a dereferenced pointer changes the
// value at the referenced address.
func zeroptr(iptr *int) {
	*iptr = 0
}

// :show end

func main() {
}
CodeToRun:+703
package main

// We'll show how pointers work in contrast to values with
// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an
// `int` parameter, so arguments will be passed to it by
// value. `zeroval` will get a copy of `ival` distinct
// from the one in the calling function.
func zeroval(ival int) {
	ival = 0
}

// `zeroptr` in contrast has an `*int` parameter, meaning
// that it takes an `int` pointer. The `*iptr` code in the
// function body then _dereferences_ the pointer from its
// memory address to the current value at that address.
// Assigning a value to a dereferenced pointer changes the
// value at the referenced address.
func zeroptr(iptr *int) {
	*iptr = 0
}

func main() {
}
Output:+0
66 1553595173402 glotid
Sha1: d9c6cd9f911cdb122c85d9a2d9f9b7162498f3f4
GlotID: fapbrpjz8l
2476 1553595174864 glotoutput
Sha1: eeb99816cfe57bd74a378a399eed694a8c9ef061
Lang: Go
FileName: main.go
CodeFull:+1171
// :glot
package main

import "fmt"

// We'll show how pointers work in contrast to values with
// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an
// `int` parameter, so arguments will be passed to it by
// value. `zeroval` will get a copy of `ival` distinct
// from the one in the calling function.
func zeroval(ival int) {
	ival = 0
}

// `zeroptr` in contrast has an `*int` parameter, meaning
// that it takes an `int` pointer. The `*iptr` code in the
// function body then _dereferences_ the pointer from its
// memory address to the current value at that address.
// Assigning a value to a dereferenced pointer changes the
// value at the referenced address.
func zeroptr(iptr *int) {
	*iptr = 0
}

func main() {
	// :show start
	i := 1
	fmt.Println("initial:", i)

	zeroval(i)
	fmt.Println("zeroval:", i)
	// `i` is still equal to 1 because `zeroval` edited
	// a "copy" of `i`, not the original.

	// The `&i` syntax gives the memory address of `i`,
	// i.e. a pointer to `i`. When calling `zeroptr`,
	// it will edit the "original" `i`.
	zeroptr(&i)
	fmt.Println("zeroptr:", i)

	// Pointers can be printed too.
	fmt.Println("pointer:", &i)
	// :show end
}
CodeToRun:+1132
package main

import "fmt"

// We'll show how pointers work in contrast to values with
// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an
// `int` parameter, so arguments will be passed to it by
// value. `zeroval` will get a copy of `ival` distinct
// from the one in the calling function.
func zeroval(ival int) {
	ival = 0
}

// `zeroptr` in contrast has an `*int` parameter, meaning
// that it takes an `int` pointer. The `*iptr` code in the
// function body then _dereferences_ the pointer from its
// memory address to the current value at that address.
// Assigning a value to a dereferenced pointer changes the
// value at the referenced address.
func zeroptr(iptr *int) {
	*iptr = 0
}

func main() {
	i := 1
	fmt.Println("initial:", i)

	zeroval(i)
	fmt.Println("zeroval:", i)
	// `i` is still equal to 1 because `zeroval` edited
	// a "copy" of `i`, not the original.

	// The `&i` syntax gives the memory address of `i`,
	// i.e. a pointer to `i`. When calling `zeroptr`,
	// it will edit the "original" `i`.
	zeroptr(&i)
	fmt.Println("zeroptr:", i)

	// Pointers can be printed too.
	fmt.Println("pointer:", &i)
}
Output:+55
initial: 1
zeroval: 1
zeroptr: 0
pointer: 0xc42006c010
66 1553595175038 glotid
Sha1: eeb99816cfe57bd74a378a399eed694a8c9ef061
GlotID: fapbrqj27s
1094 1553595176913 glotoutput
Sha1: a10a0a690ada4f1eaaa35ffae6b782ded38b9a36
Lang: Go
FileName: main.go
CodeFull:+490
// :glot
package main

import "fmt"

// :show start
type Person struct {
	Name string
}

func main() {
	c := new(Person) // returns pointer
	c.Name = "Catherine"
	fmt.Println(c.Name) // prints: Catherine
	d := c
	d.Name = "Daniel"
	fmt.Println(c.Name) // prints: Daniel
	// Adding an Asterix before a pointer dereferences the pointer
	i := *d
	i.Name = "Ines"
	fmt.Println(c.Name) // prints: Daniel
	fmt.Println(d.Name) // prints: Daniel
	fmt.Println(i.Name) // prints: Ines
	// :show end
}
CodeToRun:+452
package main

import "fmt"

type Person struct {
	Name string
}

func main() {
	c := new(Person) // returns pointer
	c.Name = "Catherine"
	fmt.Println(c.Name) // prints: Catherine
	d := c
	d.Name = "Daniel"
	fmt.Println(c.Name) // prints: Daniel
	// Adding an Asterix before a pointer dereferences the pointer
	i := *d
	i.Name = "Ines"
	fmt.Println(c.Name) // prints: Daniel
	fmt.Println(d.Name) // prints: Daniel
	fmt.Println(i.Name) // prints: Ines
}
Output:+36
Catherine
Daniel
Daniel
Daniel
Ines
66 1553595177086 glotid
Sha1: a10a0a690ada4f1eaaa35ffae6b782ded38b9a36
GlotID: fapbrrqy1n
1174 1553595178551 glotoutput
Sha1: 5a827f2536ee8f3bb1be5b955dde6de7eb440cd2
Lang: Go
FileName: main.go
CodeFull:+526
// :glot
package main

import "fmt"

// :show start
type Foo struct {
	Bar int
}

func (f *Foo) Increment() {
	f.Bar++
}

func main() {
	var f Foo

	// Calling `f.Increment` is automatically changed to `(&f).Increment` by the compiler.
	f = Foo{}
	fmt.Printf("f.Bar is %d\n", f.Bar)
	f.Increment()
	fmt.Printf("f.Bar is %d\n", f.Bar)

	// As you can see, calling `(&f).Increment` directly does the same thing.
	f = Foo{}
	fmt.Printf("f.Bar is %d\n", f.Bar)
	(&f).Increment()
	fmt.Printf("f.Bar is %d\n", f.Bar)
}

// :show end
CodeToRun:+489
package main

import "fmt"

type Foo struct {
	Bar int
}

func (f *Foo) Increment() {
	f.Bar++
}

func main() {
	var f Foo

	// Calling `f.Increment` is automatically changed to `(&f).Increment` by the compiler.
	f = Foo{}
	fmt.Printf("f.Bar is %d\n", f.Bar)
	f.Increment()
	fmt.Printf("f.Bar is %d\n", f.Bar)

	// As you can see, calling `(&f).Increment` directly does the same thing.
	f = Foo{}
	fmt.Printf("f.Bar is %d\n", f.Bar)
	(&f).Increment()
	fmt.Printf("f.Bar is %d\n", f.Bar)
}
Output:+44
f.Bar is 0
f.Bar is 1
f.Bar is 0
f.Bar is 1
66 1553595178724 glotid
Sha1: 5a827f2536ee8f3bb1be5b955dde6de7eb440cd2
GlotID: fapbrsq1dk
1462 1553595179985 glotoutput
Sha1: 1a6590b3dcee095a2b31c9d04370acb3a3cd2a8f
Lang: Go
FileName: main.go
CodeFull:+664
// :glot
package main

import "fmt"

// :show start
type Foo struct {
	Bar int
}

func (f Foo) Increment() {
	f.Bar++
}

func main() {
	var p *Foo

	// Calling `p.Increment` is automatically changed to `(*p).Increment` by the compiler.
	// (Note that `*p` is going to remain at 0 because a copy of `*p`, and not the original `*p` are being edited)
	p = &Foo{}
	fmt.Printf("(*p).Bar is %d\n", (*p).Bar)
	p.Increment()
	fmt.Printf("(*p).Bar is %d\n", (*p).Bar)

	// As you can see, calling `(*p).Increment` directly does the same thing.
	p = &Foo{}
	fmt.Printf("(*p).Bar is %d\n", (*p).Bar)
	(*p).Increment()
	fmt.Printf("(*p).Bar is %d\n", (*p).Bar)
}

// :show end
CodeToRun:+627
package main

import "fmt"

type Foo struct {
	Bar int
}

func (f Foo) Increment() {
	f.Bar++
}

func main() {
	var p *Foo

	// Calling `p.Increment` is automatically changed to `(*p).Increment` by the compiler.
	// (Note that `*p` is going to remain at 0 because a copy of `*p`, and not the original `*p` are being edited)
	p = &Foo{}
	fmt.Printf("(*p).Bar is %d\n", (*p).Bar)
	p.Increment()
	fmt.Printf("(*p).Bar is %d\n", (*p).Bar)

	// As you can see, calling `(*p).Increment` directly does the same thing.
	p = &Foo{}
	fmt.Printf("(*p).Bar is %d\n", (*p).Bar)
	(*p).Increment()
	fmt.Printf("(*p).Bar is %d\n", (*p).Bar)
}
Output:+56
(*p).Bar is 0
(*p).Bar is 0
(*p).Bar is 0
(*p).Bar is 0
66 1553595180165 glotid
Sha1: 1a6590b3dcee095a2b31c9d04370acb3a3cd2a8f
GlotID: fapbrtkseg
3385 1553595181747 glotoutput
Sha1: 5d9cd0c6b04f137c78238d0df8a42bde253ff1db
Lang: Go
FileName: main.go
CodeFull:+1543
// :glot
package main

import "fmt"

func main() {
	// :show start
	// Creating arrays of 6 elements of type int,
	// and put elements 1, 2, 3, 4, 5 and 6 inside it, in this exact order:
	var array1 = [6]int{1, 2, 3, 4, 5, 6}   // classical way
	var array2 = [6]int{1, 2, 3, 4, 5, 6}   // a less verbose way
	var array3 = [...]int{1, 2, 3, 4, 5, 6} // the compiler will count the array elements by itself

	fmt.Println("array1:", array1) // > [1 2 3 4 5 6]
	fmt.Println("array2:", array2) // > [1 2 3 4 5 6]
	fmt.Println("array3:", array3) // > [1 2 3 4 5 6]

	// Creating arrays with default values inside:
	zeros := [8]int{}       // Create a list of 8 int filled with 0
	ptrs := [8]*int{}       // a list of int pointers, filled with 8 nil references ( <nil> )
	emptystr := [8]string{} // a list of string filled with 8 times ""

	fmt.Println("zeroes:", zeros)      // > [0 0 0 0 0 0 0 0]
	fmt.Println("ptrs:", ptrs)         // > [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
	fmt.Println("emptystr:", emptystr) // > [       ]
	// values are empty strings, separated by spaces,
	// so we can just see separating spaces

	// Arrays are also working with a personalized type
	type Data struct {
		Number int
		Text   string
	}

	// Creating an array with 8 'Data' elements
	// All the 8 elements will be like {0, ""} (Number = 0, Text = "")
	structs := [8]Data{}

	fmt.Println("structs:", structs) // > [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]
	// prints {0 } because Number are 0 and Text are empty; separated by a space
	// :show end
}
CodeToRun:+1504
package main

import "fmt"

func main() {
	// Creating arrays of 6 elements of type int,
	// and put elements 1, 2, 3, 4, 5 and 6 inside it, in this exact order:
	var array1 = [6]int{1, 2, 3, 4, 5, 6}   // classical way
	var array2 = [6]int{1, 2, 3, 4, 5, 6}   // a less verbose way
	var array3 = [...]int{1, 2, 3, 4, 5, 6} // the compiler will count the array elements by itself

	fmt.Println("array1:", array1) // > [1 2 3 4 5 6]
	fmt.Println("array2:", array2) // > [1 2 3 4 5 6]
	fmt.Println("array3:", array3) // > [1 2 3 4 5 6]

	// Creating arrays with default values inside:
	zeros := [8]int{}       // Create a list of 8 int filled with 0
	ptrs := [8]*int{}       // a list of int pointers, filled with 8 nil references ( <nil> )
	emptystr := [8]string{} // a list of string filled with 8 times ""

	fmt.Println("zeroes:", zeros)      // > [0 0 0 0 0 0 0 0]
	fmt.Println("ptrs:", ptrs)         // > [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
	fmt.Println("emptystr:", emptystr) // > [       ]
	// values are empty strings, separated by spaces,
	// so we can just see separating spaces

	// Arrays are also working with a personalized type
	type Data struct {
		Number int
		Text   string
	}

	// Creating an array with 8 'Data' elements
	// All the 8 elements will be like {0, ""} (Number = 0, Text = "")
	structs := [8]Data{}

	fmt.Println("structs:", structs) // > [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]
	// prints {0 } because Number are 0 and Text are empty; separated by a space
}
Output:+219
array1: [1 2 3 4 5 6]
array2: [1 2 3 4 5 6]
array3: [1 2 3 4 5 6]
zeroes: [0 0 0 0 0 0 0 0]
ptrs: [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
emptystr: [       ]
structs: [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]
66 1553595181920 glotid
Sha1: 5d9cd0c6b04f137c78238d0df8a42bde253ff1db
GlotID: fapbrumjoa
1089 1553595183057 glotoutput
Sha1: 5949d44325e71f97ca0e5d9f730208966687c2c2
Lang: Go
FileName: main.go
CodeFull:+500
// :glot
package main

import "fmt"

func main() {
	// :show start
	var array = [6]int{1, 2, 3, 4, 5, 6}

	// doesn't work: invalid array index -1 (index must be non-negative)
	// fmt.Println(array[-42])
	fmt.Println(array[0]) // > 1
	fmt.Println(array[1]) // > 2
	fmt.Println(array[2]) // > 3
	fmt.Println(array[3]) // > 4
	fmt.Println(array[4]) // > 5
	fmt.Println(array[5]) // > 6
	// doesn't work: invalid array index 6 (out of bounds for 6-element array)
	//fmt.Println(array[6])
	// :show end
}
CodeToRun:+461
package main

import "fmt"

func main() {
	var array = [6]int{1, 2, 3, 4, 5, 6}

	// doesn't work: invalid array index -1 (index must be non-negative)
	// fmt.Println(array[-42])
	fmt.Println(array[0]) // > 1
	fmt.Println(array[1]) // > 2
	fmt.Println(array[2]) // > 3
	fmt.Println(array[3]) // > 4
	fmt.Println(array[4]) // > 5
	fmt.Println(array[5]) // > 6
	// doesn't work: invalid array index 6 (out of bounds for 6-element array)
	//fmt.Println(array[6])
}
Output:+12
1
2
3
4
5
6
66 1553595183231 glotid
Sha1: 5949d44325e71f97ca0e5d9f730208966687c2c2
GlotID: fapbrvemrf
1143 1553595184490 glotoutput
Sha1: 5890bf4420630d402384957d295212509bdbd1a5
Lang: Go
FileName: main.go
CodeFull:+484
// :glot
package main

import "fmt"

func main() {
	// :show start
	var array = [6]int{1, 2, 3, 4, 5, 6}

	fmt.Println(array) // > [1 2 3 4 5 6]

	array[0] = 6
	fmt.Println(array) // > [6 2 3 4 5 6]

	array[1] = 5
	fmt.Println(array) // > [6 5 3 4 5 6]

	array[2] = 4
	fmt.Println(array) // > [6 5 4 4 5 6]

	array[3] = 3
	fmt.Println(array) // > [6 5 4 3 5 6]

	array[4] = 2
	fmt.Println(array) // > [6 5 4 3 2 6]

	array[5] = 1
	fmt.Println(array) // > [6 5 4 3 2 1]
	// :show end
}
CodeToRun:+445
package main

import "fmt"

func main() {
	var array = [6]int{1, 2, 3, 4, 5, 6}

	fmt.Println(array) // > [1 2 3 4 5 6]

	array[0] = 6
	fmt.Println(array) // > [6 2 3 4 5 6]

	array[1] = 5
	fmt.Println(array) // > [6 5 3 4 5 6]

	array[2] = 4
	fmt.Println(array) // > [6 5 4 4 5 6]

	array[3] = 3
	fmt.Println(array) // > [6 5 4 3 5 6]

	array[4] = 2
	fmt.Println(array) // > [6 5 4 3 2 6]

	array[5] = 1
	fmt.Println(array) // > [6 5 4 3 2 1]
}
Output:+98
[1 2 3 4 5 6]
[6 2 3 4 5 6]
[6 5 3 4 5 6]
[6 5 4 4 5 6]
[6 5 4 3 5 6]
[6 5 4 3 2 6]
[6 5 4 3 2 1]
66 1553595184665 glotid
Sha1: 5890bf4420630d402384957d295212509bdbd1a5
GlotID: fapbrw9cmh
1498 1553595185872 glotoutput
Sha1: 038f882ccc81cfd8c6124571b82ccf29a08a4fc3
Lang: Go
FileName: main.go
CodeFull:+697
// :glot
package main

import "fmt"

func main() {
	// :show start
	// Defining a 2d Array to represent a matrix like
	// 1 2 3     So with 2 lines and 3 columns;
	// 4 5 6
	multiDimArray := [2] /*lines*/ [3] /*columns*/ int{[3]int{1, 2, 3}, [3]int{4, 5, 6}}

	// That can be simplified like this:
	var simplified = [2][3]int{{1, 2, 3}, {4, 5, 6}}

	// What does it looks like ?
	fmt.Println(multiDimArray)
	// > [[1 2 3] [4 5 6]]

	fmt.Println(multiDimArray[0])
	// > [1 2 3]    (first line of the array)

	fmt.Println(multiDimArray[0][1])
	// > 2          (cell of line 0 (the first one), column 1 (the 2nd one))

	// :show end

	// silence compiler error about unused variable
	_ = simplified
}
CodeToRun:+657
package main

import "fmt"

func main() {
	// Defining a 2d Array to represent a matrix like
	// 1 2 3     So with 2 lines and 3 columns;
	// 4 5 6
	multiDimArray := [2] /*lines*/ [3] /*columns*/ int{[3]int{1, 2, 3}, [3]int{4, 5, 6}}

	// That can be simplified like this:
	var simplified = [2][3]int{{1, 2, 3}, {4, 5, 6}}

	// What does it looks like ?
	fmt.Println(multiDimArray)
	// > [[1 2 3] [4 5 6]]

	fmt.Println(multiDimArray[0])
	// > [1 2 3]    (first line of the array)

	fmt.Println(multiDimArray[0][1])
	// > 2          (cell of line 0 (the first one), column 1 (the 2nd one))

	// silence compiler error about unused variable
	_ = simplified
}
Output:+28
[[1 2 3] [4 5 6]]
[1 2 3]
2
66 1553595186046 glotid
Sha1: 038f882ccc81cfd8c6124571b82ccf29a08a4fc3
GlotID: fapbrx2z3w
2271 1553595187192 glotoutput
Sha1: 08a7f089c440aceb621bc227b5584b26a1d95227
Lang: Go
FileName: main.go
CodeFull:+786
// :glot
package main

import "fmt"

func main() {
	// :show start
	// We can also define array with as much dimensions as we need
	// here, initialized with all zeros
	var multiDimArray = [2][4][3][2]string{}

	// the data is:
	// > [[[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]]
	//   [[[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]]
	// :show end

	fmt.Printf("%#v\n", multiDimArray)
}
CodeToRun:+747
package main

import "fmt"

func main() {
	// We can also define array with as much dimensions as we need
	// here, initialized with all zeros
	var multiDimArray = [2][4][3][2]string{}

	// the data is:
	// > [[[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]]
	//   [[[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]]

	fmt.Printf("%#v\n", multiDimArray)
}
Output:+621
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}}
66 1553595187460 glotid
Sha1: 08a7f089c440aceb621bc227b5584b26a1d95227
GlotID: fapbrxv8tu
2624 1553595188587 glotoutput
Sha1: fae1c2df264ccbb25d9fdf9b29452d993ac38aac
Lang: Go
FileName: main.go
CodeFull:+946
// :glot
package main

import "fmt"

func main() {
	// :show start

	var multiDimArray = [2][4][3][2]string{}

	// We can set some values in the array's cells
	multiDimArray[0][0][0][0] = "All zero indexes"   // Setting the first value
	multiDimArray[1][3][2][1] = "All indexes to max" // Setting the value at extreme location

	// The data looks like:
	// > [[[["All zero indexes" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]]
	//   [[[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" "All indexes to max"]]]]

	// :show end

	fmt.Printf("%#v\n", multiDimArray)
}
CodeToRun:+906
package main

import "fmt"

func main() {

	var multiDimArray = [2][4][3][2]string{}

	// We can set some values in the array's cells
	multiDimArray[0][0][0][0] = "All zero indexes"   // Setting the first value
	multiDimArray[1][3][2][1] = "All indexes to max" // Setting the value at extreme location

	// The data looks like:
	// > [[[["All zero indexes" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]]
	//   [[[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" ""]]]
	//    [[["" ""] ["" ""]] [["" ""] ["" ""]] [["" ""] ["" "All indexes to max"]]]]

	fmt.Printf("%#v\n", multiDimArray)
}
Output:+655
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"All zero indexes", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", "All indexes to max"}}}}
66 1553595188764 glotid
Sha1: fae1c2df264ccbb25d9fdf9b29452d993ac38aac
GlotID: fapbryp7kr
421 1553595190470 glotoutput
Sha1: 23274a5a11cc7195952199791285b6327218bde6
Lang: Go
FileName: main.go
CodeFull:+157
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := []string{"hello"}
	a = append(a, "world")
	fmt.Printf("a: %#v\n", a)
	// :show end
}
CodeToRun:+118
package main

import "fmt"

func main() {
	a := []string{"hello"}
	a = append(a, "world")
	fmt.Printf("a: %#v\n", a)
}
Output:+30
a: []string{"hello", "world"}
66 1553595190649 glotid
Sha1: 23274a5a11cc7195952199791285b6327218bde6
GlotID: fapbrztgif
442 1553595192888 glotoutput
Sha1: dcc82bc30eaadc807c3b068297151af2bc39637a
Lang: Go
FileName: main.go
CodeFull:+164
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := []string{"hello"}
	a = append(a, "world", "now")
	fmt.Printf("a: %#v\n", a)
	// :show end
}
CodeToRun:+125
package main

import "fmt"

func main() {
	a := []string{"hello"}
	a = append(a, "world", "now")
	fmt.Printf("a: %#v\n", a)
}
Output:+37
a: []string{"hello", "world", "now"}
66 1553595193062 glotid
Sha1: dcc82bc30eaadc807c3b068297151af2bc39637a
GlotID: fapbs19bdo
482 1553595195561 glotoutput
Sha1: c535f97b5c54a156428140000e3875591bf6f01e
Lang: Go
FileName: main.go
CodeFull:+185
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := []string{"!"}
	a2 := []string{"Hello", "world"}
	a = append(a, a2...)
	fmt.Printf("a: %#v\n", a)
	// :show end
}
CodeToRun:+146
package main

import "fmt"

func main() {
	a := []string{"!"}
	a2 := []string{"Hello", "world"}
	a = append(a, a2...)
	fmt.Printf("a: %#v\n", a)
}
Output:+35
a: []string{"!", "Hello", "world"}
66 1553595195744 glotid
Sha1: c535f97b5c54a156428140000e3875591bf6f01e
GlotID: fapbs2umgu
1088 1553595196983 glotoutput
Sha1: c2389421f29e5357ccce1dfd53d85e086bf90855
Lang: Go
FileName: main.go
CodeFull:+388
// :glot
package main

import "fmt"

func main() {
	// :show start
	var a []int
	ptr := fmt.Sprintf("%p", a)
	n := 0
	nAppends := 0
	for {
		a = append(a, 1)
		nAppends++
		currPtr := fmt.Sprintf("%p", a)
		if currPtr != ptr {
			fmt.Printf("Appends needed to re-allocate slice: %d\n", nAppends)
			nAppends = 0
			ptr = currPtr
			n++
			if n == 6 {
				break
			}
		}
	}
	// :show end
}
CodeToRun:+349
package main

import "fmt"

func main() {
	var a []int
	ptr := fmt.Sprintf("%p", a)
	n := 0
	nAppends := 0
	for {
		a = append(a, 1)
		nAppends++
		currPtr := fmt.Sprintf("%p", a)
		if currPtr != ptr {
			fmt.Printf("Appends needed to re-allocate slice: %d\n", nAppends)
			nAppends = 0
			ptr = currPtr
			n++
			if n == 6 {
				break
			}
		}
	}
}
Output:+234
Appends needed to re-allocate slice: 1
Appends needed to re-allocate slice: 1
Appends needed to re-allocate slice: 1
Appends needed to re-allocate slice: 2
Appends needed to re-allocate slice: 4
Appends needed to re-allocate slice: 8
66 1553595197162 glotid
Sha1: c2389421f29e5357ccce1dfd53d85e086bf90855
GlotID: fapbs3p3l7
744 1553595199033 glotoutput
Sha1: 89b5c936a554e2e5658f0de4bb6008582d4c518d
Lang: Go
FileName: main.go
CodeFull:+342
// :glot
package main

import "fmt"

// :show start
func filterEvenValues(a []int) []int {
	var res []int
	for _, el := range a {
		if el%2 == 0 {
			continue
		}
		res = append(res, el)
	}
	return res
}

// :show end

func main() {
	// :show start
	a := []int{1, 2, 3, 4}
	res := filterEvenValues(a)
	fmt.Printf("%#v\n", res)
	// :show end
}
CodeToRun:+274
package main

import "fmt"

func filterEvenValues(a []int) []int {
	var res []int
	for _, el := range a {
		if el%2 == 0 {
			continue
		}
		res = append(res, el)
	}
	return res
}

func main() {
	a := []int{1, 2, 3, 4}
	res := filterEvenValues(a)
	fmt.Printf("%#v\n", res)
}
Output:+12
[]int{1, 3}
66 1553595199233 glotid
Sha1: 89b5c936a554e2e5658f0de4bb6008582d4c518d
GlotID: fapbs4x1wq
905 1553595200465 glotoutput
Sha1: d35317b9e8d10fae4021ed4b71b5465597461b0c
Lang: Go
FileName: main.go
CodeFull:+408
// :glot
package main

import "fmt"

func filterEvenValuesInPlace(a []int) []int {
	// create a zero-length slice with the same underlying array
	res := a[:0]

	for _, v := range a {
		if v%2 == 0 {
			// collect only wanted values
			res = append(res, v)
		}
	}
	return res
}

func main() {
	// :show start
	a := []int{1, 2, 3, 4}
	res := filterEvenValuesInPlace(a)
	fmt.Printf("%#v\n", res)
	// :show end
}
CodeToRun:+369
package main

import "fmt"

func filterEvenValuesInPlace(a []int) []int {
	// create a zero-length slice with the same underlying array
	res := a[:0]

	for _, v := range a {
		if v%2 == 0 {
			// collect only wanted values
			res = append(res, v)
		}
	}
	return res
}

func main() {
	a := []int{1, 2, 3, 4}
	res := filterEvenValuesInPlace(a)
	fmt.Printf("%#v\n", res)
}
Output:+12
[]int{2, 4}
66 1553595200641 glotid
Sha1: d35317b9e8d10fae4021ed4b71b5465597461b0c
GlotID: fapbs5rraw
543 1553595202144 glotoutput
Sha1: 7dd6db8f1e69a4e0c6eee1a0040f2437e47277b6
Lang: Go
FileName: main.go
CodeFull:+213
// :glot
package main

import "fmt"

func main() {
	// :show start
	src := []int{1, 2, 3}
	dst := make([]int, len(src))
	copy(dst, src)
	fmt.Printf("src: %#v\n", src)
	fmt.Printf("dst: %#v\n", dst)
	// :show end
}
CodeToRun:+174
package main

import "fmt"

func main() {
	src := []int{1, 2, 3}
	dst := make([]int, len(src))
	copy(dst, src)
	fmt.Printf("src: %#v\n", src)
	fmt.Printf("dst: %#v\n", dst)
}
Output:+40
src: []int{1, 2, 3}
dst: []int{1, 2, 3}
66 1553595202318 glotid
Sha1: 7dd6db8f1e69a4e0c6eee1a0040f2437e47277b6
GlotID: fapbs6rr2v
1055 1553595203642 glotoutput
Sha1: 56b0fc1e961d92909a09a639f2a21da73db8ec6e
Lang: Go
FileName: main.go
CodeFull:+427
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	s := []byte("123456")
	var d []byte
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	// :show end
}
CodeToRun:+388
package main

import (
	"fmt"
)

func main() {
	s := []byte("123456")
	var d []byte
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
}
Output:+123
d: 0x0, len: 0, cap: 0
d: 0xc42006c018, len: 6, cap: 8
d: 0xc42006c040, len: 12, cap: 16
d: 0xc420080020, len: 18, cap: 32
66 1553595203813 glotid
Sha1: 56b0fc1e961d92909a09a639f2a21da73db8ec6e
GlotID: fapbs7nsvp
1144 1553595205210 glotoutput
Sha1: 48fdb3ee60fa07cf3b685d1922ae9662a2062674
Lang: Go
FileName: main.go
CodeFull:+466
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	s := []byte("123456")
	d := make([]byte, 0, len(s)*4)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	// :show end
}
CodeToRun:+427
package main

import (
	"fmt"
)

func main() {
	s := []byte("123456")
	d := make([]byte, 0, len(s)*4)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
	d = append(d, s...)
	d = append(d, s...)
	fmt.Printf("d: %p, len: %d, cap: %d\n", d, len(d), cap(d))
}
Output:+134
d: 0xc42007a000, len: 0, cap: 24
d: 0xc42007a000, len: 6, cap: 24
d: 0xc42007a000, len: 12, cap: 24
d: 0xc42007a000, len: 24, cap: 24
66 1553595205381 glotid
Sha1: 48fdb3ee60fa07cf3b685d1922ae9662a2062674
GlotID: fapbs8leq6
515 1553595206405 glotoutput
Sha1: 77602ae8e4f7b3a50460442f601cc9d0de1b8540
Lang: Go
FileName: main.go
CodeFull:+225
// :glot, no output
package main

func main() {
	// :show start
	src := make(map[string]int)
	src["one"] = 1
	src["two"] = 2

	dst := make(map[string]int)

	for key, value := range src {
		dst[key] = value
	}

	// :show end
}
CodeToRun:+175
package main

func main() {
	src := make(map[string]int)
	src["one"] = 1
	src["two"] = 2

	dst := make(map[string]int)

	for key, value := range src {
		dst[key] = value
	}

}
Output:+0
66 1553595206577 glotid
Sha1: 77602ae8e4f7b3a50460442f601cc9d0de1b8540
GlotID: fapbs9b1vf
622 1553595208044 glotoutput
Sha1: 56c562e02cc1602cf9603f9088928c4deb11b30d
Lang: Go
FileName: main.go
CodeFull:+241
// :glot
package main

import "fmt"

func main() {
	// :show start
	people := map[string]int{
		"john": 30,
		"jane": 29,
		"mark": 11,
	}

	for key, value := range people {
		fmt.Printf("key: %s, value: %d\n", key, value)
	}
	// :show end
}
CodeToRun:+202
package main

import "fmt"

func main() {
	people := map[string]int{
		"john": 30,
		"jane": 29,
		"mark": 11,
	}

	for key, value := range people {
		fmt.Printf("key: %s, value: %d\n", key, value)
	}
}
Output:+63
key: john, value: 30
key: jane, value: 29
key: mark, value: 11
66 1553595208215 glotid
Sha1: 56c562e02cc1602cf9603f9088928c4deb11b30d
GlotID: fapbsaa5ep
539 1553595209579 glotoutput
Sha1: 7753237be2d38854896a252f6f58c2dfea1101b5
Lang: Go
FileName: main.go
CodeFull:+216
// :glot
package main

import "fmt"

func main() {
	// :show start
	people := map[string]int{
		"john": 30,
		"jane": 29,
		"mark": 11,
	}

	for key := range people {
		fmt.Printf("key: %s\n", key)
	}
	// :show end
}
CodeToRun:+177
package main

import "fmt"

func main() {
	people := map[string]int{
		"john": 30,
		"jane": 29,
		"mark": 11,
	}

	for key := range people {
		fmt.Printf("key: %s\n", key)
	}
}
Output:+30
key: john
key: jane
key: mark
66 1553595209752 glotid
Sha1: 7753237be2d38854896a252f6f58c2dfea1101b5
GlotID: fapbsb72vo
557 1553595211218 glotoutput
Sha1: d80047d5ec01ba1dd1224ad8c8f8fe748acfff0b
Lang: Go
FileName: main.go
CodeFull:+225
// :glot
package main

import "fmt"

func main() {
	// :show start
	people := map[string]int{
		"john": 30,
		"jane": 29,
		"mark": 11,
	}

	for _, value := range people {
		fmt.Printf("value: %d\n", value)
	}
	// :show end
}
CodeToRun:+186
package main

import "fmt"

func main() {
	people := map[string]int{
		"john": 30,
		"jane": 29,
		"mark": 11,
	}

	for _, value := range people {
		fmt.Printf("value: %d\n", value)
	}
}
Output:+30
value: 30
value: 29
value: 11
66 1553595211390 glotid
Sha1: d80047d5ec01ba1dd1224ad8c8f8fe748acfff0b
GlotID: fapbsc66pp
547 1553595212951 glotoutput
Sha1: 1a32406ec71020e717fe094f71ef6b52e3f8b96a
Lang: Go
FileName: main.go
CodeFull:+218
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	people := map[string]int{"john": 30, "jane": 29}
	fmt.Printf("%v\n", people)

	delete(people, "john")
	fmt.Printf("%v\n", people)
	// :show end
}
CodeToRun:+179
package main

import (
	"fmt"
)

func main() {
	people := map[string]int{"john": 30, "jane": 29}
	fmt.Printf("%v\n", people)

	delete(people, "john")
	fmt.Printf("%v\n", people)
}
Output:+34
map[jane:29 john:30]
map[jane:29]
66 1553595213128 glotid
Sha1: 1a32406ec71020e717fe094f71ef6b52e3f8b96a
GlotID: fapbsd7evd
867 1553595214791 glotoutput
Sha1: 4eaadb170249d44d0a430112f7eb92667353315a
Lang: Go
FileName: main.go
CodeFull:+374
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	people := map[string]int{"john": 30, "jane": 29}
	fmt.Printf("%v\n", people)

	// deleting a key that doesn't exist is a no-op
	delete(people, "notfound")
	fmt.Printf("%v\n", people)

	// deleting a key in nil map is a no-op
	var something map[string]int
	delete(something, "notfound")
	// :show end
}
CodeToRun:+335
package main

import (
	"fmt"
)

func main() {
	people := map[string]int{"john": 30, "jane": 29}
	fmt.Printf("%v\n", people)

	// deleting a key that doesn't exist is a no-op
	delete(people, "notfound")
	fmt.Printf("%v\n", people)

	// deleting a key in nil map is a no-op
	var something map[string]int
	delete(something, "notfound")
}
Output:+42
map[john:30 jane:29]
map[john:30 jane:29]
66 1553595215005 glotid
Sha1: 4eaadb170249d44d0a430112f7eb92667353315a
GlotID: fapbsebmah
3260 1553595216850 glotoutput
Sha1: 7f134ff7596d222d7657aa751f8eca5fa0e2aa80
Lang: Go
FileName: main.go
CodeFull:+1511
// :glot
package main

import "fmt"

// StringSet is a set of unique strings
type StringSet struct {
	m map[string]struct{}
}

func NewStringSet(strings ...string) *StringSet {
	res := &StringSet{
		m: map[string]struct{}{},
	}
	for _, s := range strings {
		res.Add(s)
	}
	return res
}

// Add adds a string to the set. If string is already in the set, it has no effect
func (s *StringSet) Add(str string) {
	s.m[str] = struct{}{}
}

// Exists checks if string exists in the set
func (s *StringSet) Exists(str string) bool {
	_, exists := s.m[str]
	return exists
}

// Delete removes a string from the set
func (s *StringSet) Delete(str string) {
	delete(s.m, str)
}

// Strings returns strings in the set
func (s *StringSet) Strings() []string {
	n := len(s.m)
	if n == 0 {
		return nil
	}
	// for efficiency, pre-allocate the array with known, final capacity
	// this avoids re-allocating underlying array in append
	res := make([]string, 0, n)
	for str := range s.m {
		res = append(res, str)
	}
	return res
}

func printExists(set *StringSet, str string) {
	if set.Exists(str) {
		fmt.Printf("'%s' exists in set\n", str)
	} else {
		fmt.Printf("'%s' doesn't exist in set\n", str)
	}
}

func main() {
	// :show start
	set := NewStringSet("hi", "hello")
	fmt.Printf("Original set: %#v\n", set.Strings())

	set.Delete("hi")
	fmt.Printf("After delete: %#v\n", set.Strings())

	set.Add("hey")
	fmt.Printf("After add   : %#v\n", set.Strings())

	printExists(set, "hello")
	printExists(set, "ola")
	// :show end
}
CodeToRun:+1472
package main

import "fmt"

// StringSet is a set of unique strings
type StringSet struct {
	m map[string]struct{}
}

func NewStringSet(strings ...string) *StringSet {
	res := &StringSet{
		m: map[string]struct{}{},
	}
	for _, s := range strings {
		res.Add(s)
	}
	return res
}

// Add adds a string to the set. If string is already in the set, it has no effect
func (s *StringSet) Add(str string) {
	s.m[str] = struct{}{}
}

// Exists checks if string exists in the set
func (s *StringSet) Exists(str string) bool {
	_, exists := s.m[str]
	return exists
}

// Delete removes a string from the set
func (s *StringSet) Delete(str string) {
	delete(s.m, str)
}

// Strings returns strings in the set
func (s *StringSet) Strings() []string {
	n := len(s.m)
	if n == 0 {
		return nil
	}
	// for efficiency, pre-allocate the array with known, final capacity
	// this avoids re-allocating underlying array in append
	res := make([]string, 0, n)
	for str := range s.m {
		res = append(res, str)
	}
	return res
}

func printExists(set *StringSet, str string) {
	if set.Exists(str) {
		fmt.Printf("'%s' exists in set\n", str)
	} else {
		fmt.Printf("'%s' doesn't exist in set\n", str)
	}
}

func main() {
	set := NewStringSet("hi", "hello")
	fmt.Printf("Original set: %#v\n", set.Strings())

	set.Delete("hi")
	fmt.Printf("After delete: %#v\n", set.Strings())

	set.Add("hey")
	fmt.Printf("After add   : %#v\n", set.Strings())

	printExists(set, "hello")
	printExists(set, "ola")
}
Output:+158
Original set: []string{"hi", "hello"}
After delete: []string{"hello"}
After add   : []string{"hey", "hello"}
'hello' exists in set
'ola' doesn't exist in set
66 1553595217026 glotid
Sha1: 7f134ff7596d222d7657aa751f8eca5fa0e2aa80
GlotID: fapbsfizqk
1071 1553595218385 glotoutput
Sha1: 01f69fe2d3bb957658901593db206f256c3b654a
Lang: Go
FileName: main.go
CodeFull:+421
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	m := make(map[string][]int)
	fmt.Printf("Non-existing key returns zero value of []int, i.e. nil: %#v\n", m["key1"])

	m["key1"] = append(m["key1"], 8)
	m["key1"] = append(m["key1"], 3)
	fmt.Printf("\nAfter appending to slice: %#v\n", m["key1"])

	delete(m, "key1")
	fmt.Printf("\ndelete() sets back to nil slice: %#v\n", m["key1"])

	// :show end
}
CodeToRun:+382
package main

import (
	"fmt"
)

func main() {
	m := make(map[string][]int)
	fmt.Printf("Non-existing key returns zero value of []int, i.e. nil: %#v\n", m["key1"])

	m["key1"] = append(m["key1"], 8)
	m["key1"] = append(m["key1"], 3)
	fmt.Printf("\nAfter appending to slice: %#v\n", m["key1"])

	delete(m, "key1")
	fmt.Printf("\ndelete() sets back to nil slice: %#v\n", m["key1"])

}
Output:+151
Non-existing key returns zero value of []int, i.e. nil: []int(nil)

After appending to slice: []int{8, 3}

delete() sets back to nil slice: []int(nil)
66 1553595218560 glotid
Sha1: 01f69fe2d3bb957658901593db206f256c3b654a
GlotID: fapbsgfv9v
1613 1553595219922 glotoutput
Sha1: e0ffcce831ade59731a2b2b9eaacbb127f718ada
Lang: Go
FileName: main.go
CodeFull:+744
// :glot
package main

import (
	"fmt"
	"sync"
)

// ConcurrentMap is a wrapper around map that is safe for concurrent use
type ConcurrentMap struct {
	sync.RWMutex
	m map[string]int
}

// Get gets a value for a key
func (r *ConcurrentMap) Get(key string) int {
	r.RLock()
	defer r.RUnlock()
	return r.m[key]
}

// Set sets a key to a given value
func (r *ConcurrentMap) Set(key string, val int) {
	r.Lock()
	defer r.Unlock()
	r.m[key] = val
}

// Add increases the value under a key by n
func (r *ConcurrentMap) Add(key string, n int) int {
	r.Lock()
	defer r.Unlock()
	r.m[key] += n
	return r.m[key]
}

func main() {
	counter := ConcurrentMap{m: make(map[string]int)}

	n := counter.Add("some_key", 2)
	fmt.Printf("Final value is: %d\n", n)
}
CodeToRun:+735
package main

import (
	"fmt"
	"sync"
)

// ConcurrentMap is a wrapper around map that is safe for concurrent use
type ConcurrentMap struct {
	sync.RWMutex
	m map[string]int
}

// Get gets a value for a key
func (r *ConcurrentMap) Get(key string) int {
	r.RLock()
	defer r.RUnlock()
	return r.m[key]
}

// Set sets a key to a given value
func (r *ConcurrentMap) Set(key string, val int) {
	r.Lock()
	defer r.Unlock()
	r.m[key] = val
}

// Add increases the value under a key by n
func (r *ConcurrentMap) Add(key string, n int) int {
	r.Lock()
	defer r.Unlock()
	r.m[key] += n
	return r.m[key]
}

func main() {
	counter := ConcurrentMap{m: make(map[string]int)}

	n := counter.Add("some_key", 2)
	fmt.Printf("Final value is: %d\n", n)
}
Output:+18
Final value is: 2
66 1553595220096 glotid
Sha1: e0ffcce831ade59731a2b2b9eaacbb127f718ada
GlotID: fapbshcs5m
474 1553595222482 glotoutput
Sha1: d99a6d99c3a17da84aa8b9fc0643947aa3fe44ab
Lang: Go
FileName: main.go
CodeFull:+185
// :glot
package main

import "fmt"

func main() {
	// :show start
	var m map[string]string
	fmt.Printf("m == nil ? %v\n", m == nil)
	fmt.Printf("len(m) = %d\n", len(m))
	// :show end
}
CodeToRun:+146
package main

import "fmt"

func main() {
	var m map[string]string
	fmt.Printf("m == nil ? %v\n", m == nil)
	fmt.Printf("len(m) = %d\n", len(m))
}
Output:+27
m == nil ? true
len(m) = 0
66 1553595222656 glotid
Sha1: d99a6d99c3a17da84aa8b9fc0643947aa3fe44ab
GlotID: fapbsivo02
843 1553595224632 glotoutput
Sha1: 9748c898800861ab18733d3228b84c280cbea873
Lang: Go
FileName: main.go
CodeFull:+317
// :glot, allow error
package main

import "fmt"

func main() {
	// :show start
	var m map[string]string

	// you can read read from un-initialized map
	fmt.Printf(`m["foo"] = %s`+"\n", m["foo"])
	_, ok := m["foo"]
	fmt.Printf("ok: %v\n", ok)

	// writing to uninitialized map panics
	m["foo"] = "bar"
	// :show end
}
CodeToRun:+265
package main

import "fmt"

func main() {
	var m map[string]string

	// you can read read from un-initialized map
	fmt.Printf(`m["foo"] = %s`+"\n", m["foo"])
	_, ok := m["foo"]
	fmt.Printf("ok: %v\n", ok)

	// writing to uninitialized map panics
	m["foo"] = "bar"
}
Output:+144
m["foo"] = 
ok: false
panic: assignment to entry in nil map

goroutine 1 [running]:
main.main()
	/tmp/042344720/main.go:14 +0x189
exit status 2
66 1553595224837 glotid
Sha1: 9748c898800861ab18733d3228b84c280cbea873
GlotID: fapbsk5ocf
1781 1553595226886 glotoutput
Sha1: c0b9e086702af42fb47f2497343110e1a488a95a
Lang: Go
FileName: main.go
CodeFull:+735
// :glot
package main

import (
	"fmt"
)

// :show start
// User describes a user
type User struct {
	FirstName, LastName string
	Email               string
	Age                 int
	userID              int
}

// FullName returns full name of a user
func (u *User) FullName() string {
	return fmt.Sprintf("%s %s", u.FirstName, u.LastName)
}

func main() {
	// zero value of struct
	var u User
	fmt.Printf("u: %#v\n\n", u)

	// pu is *User i.e. a pointer to User struct
	pu := new(User)
	pu.Age = 33
	fmt.Printf("*pu: %#v\n", *pu)

	// &User{} is the same as new(User)
	pu = &User{}
	pu.Age = 18
	fmt.Printf("*pu: %#v\n", *pu)

	pu.FirstName, pu.LastName = "Jane", "Doe"
	fmt.Printf("pu.FullName(): %s\n", pu.FullName())
}

// :show end
CodeToRun:+698
package main

import (
	"fmt"
)

// User describes a user
type User struct {
	FirstName, LastName string
	Email               string
	Age                 int
	userID              int
}

// FullName returns full name of a user
func (u *User) FullName() string {
	return fmt.Sprintf("%s %s", u.FirstName, u.LastName)
}

func main() {
	// zero value of struct
	var u User
	fmt.Printf("u: %#v\n\n", u)

	// pu is *User i.e. a pointer to User struct
	pu := new(User)
	pu.Age = 33
	fmt.Printf("*pu: %#v\n", *pu)

	// &User{} is the same as new(User)
	pu = &User{}
	pu.Age = 18
	fmt.Printf("*pu: %#v\n", *pu)

	pu.FirstName, pu.LastName = "Jane", "Doe"
	fmt.Printf("pu.FullName(): %s\n", pu.FullName())
}
Output:+232
u: main.User{FirstName:"", LastName:"", Email:"", Age:0, userID:0}

*pu: main.User{FirstName:"", LastName:"", Email:"", Age:33, userID:0}
*pu: main.User{FirstName:"", LastName:"", Email:"", Age:18, userID:0}
pu.FullName(): Jane Doe
66 1553595227056 glotid
Sha1: c0b9e086702af42fb47f2497343110e1a488a95a
GlotID: fapbslhzqs
501 1553595229037 glotoutput
Sha1: 183cd366bc7f05f9bbfd14c683180a6312ed60ae
Lang: Go
FileName: main.go
CodeFull:+194
// :glot
package main

import "fmt"

func main() {
	// :show start
	data := struct {
		Number int
		Text   string
	}{
		42,
		"Hello world!",
	}

	fmt.Printf("data: %+v\n", data)
	// :show end
}
CodeToRun:+155
package main

import "fmt"

func main() {
	data := struct {
		Number int
		Text   string
	}{
		42,
		"Hello world!",
	}

	fmt.Printf("data: %+v\n", data)
}
Output:+36
data: {Number:42 Text:Hello world!}
66 1553595229210 glotid
Sha1: 183cd366bc7f05f9bbfd14c683180a6312ed60ae
GlotID: fapbsms46i
709 1553595233484 glotoutput
Sha1: 229fe847f2f25646d2e2dca64ccc98c0a8948027
Lang: Go
FileName: main.go
CodeFull:+305
// :glot
package main

import "fmt"

// :show start

type User struct {
	name string
}

func (u User) Name() string {
	return u.name
}

func (u *User) SetName(newName string) {
	u.name = newName
}

func main() {
	var me User

	me.SetName("Slim Shady")
	fmt.Println("My name is", me.Name())
}

// :show end
CodeToRun:+267
package main

import "fmt"

type User struct {
	name string
}

func (u User) Name() string {
	return u.name
}

func (u *User) SetName(newName string) {
	u.name = newName
}

func main() {
	var me User

	me.SetName("Slim Shady")
	fmt.Println("My name is", me.Name())
}
Output:+22
My name is Slim Shady
66 1553595234010 glotid
Sha1: 229fe847f2f25646d2e2dca64ccc98c0a8948027
GlotID: fapbspmzn8
738 1553595236717 glotoutput
Sha1: 8f8335e55ada31cf0f3d25f292145f48320515aa
Lang: Go
FileName: main.go
CodeFull:+236
// :glot
// allow error
package main

import "io"

// :show start
type MyReadCloser struct {
}

func (rc *MyReadCloser) Read(d []byte) (int, error) {
	return 0, nil
}

var _ io.ReadCloser = &MyReadCloser{}

// :show end

func main() {
}
CodeToRun:+183
package main

import "io"

type MyReadCloser struct {
}

func (rc *MyReadCloser) Read(d []byte) (int, error) {
	return 0, nil
}

var _ io.ReadCloser = &MyReadCloser{}

func main() {
}
Output:+202
# command-line-arguments
./main.go:12:5: cannot use MyReadCloser literal (type *MyReadCloser) as type io.ReadCloser in assignment:
	*MyReadCloser does not implement io.ReadCloser (missing Close method)
66 1553595237389 glotid
Sha1: 8f8335e55ada31cf0f3d25f292145f48320515aa
GlotID: fapbsrndxi
1052 1553595239181 glotoutput
Sha1: 704ba0ca1885937698cfcfde209fffda215acc18
Lang: Go
FileName: main.go
CodeFull:+469
// :glot
package main

import "fmt"

// :show start
func retVals(ok bool) (int, bool) {
	return 5, ok
}

func main() {
	a := 5
	b := 5
	if a == b {
		fmt.Print("a is equal to b\n")
	} else {
		fmt.Print("a is not equal to b\n")
	}

	if n, ok := retVals(true); ok {
		fmt.Print("ok is true, n: %d\n", n)
	} else {
		fmt.Print("ok is false, n: %d\n", n)
	}

	// n is only visible within if loop, so this would fail compilation
	// fmt.Printf("n: %d\n", n)
}

// :show end
CodeToRun:+432
package main

import "fmt"

func retVals(ok bool) (int, bool) {
	return 5, ok
}

func main() {
	a := 5
	b := 5
	if a == b {
		fmt.Print("a is equal to b\n")
	} else {
		fmt.Print("a is not equal to b\n")
	}

	if n, ok := retVals(true); ok {
		fmt.Print("ok is true, n: %d\n", n)
	} else {
		fmt.Print("ok is false, n: %d\n", n)
	}

	// n is only visible within if loop, so this would fail compilation
	// fmt.Printf("n: %d\n", n)
}
Output:+35
a is equal to b
ok is true, n: %d
5
66 1553595239394 glotid
Sha1: 704ba0ca1885937698cfcfde209fffda215acc18
GlotID: fapbsstqfg
547 1553595240915 glotoutput
Sha1: 342f97c96379568049bce74eb32e20cf7381a0b5
Lang: Go
FileName: main.go
CodeFull:+229
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := 1
	switch a {
	case 1, 3:
		fmt.Printf("a is 1 or 3\n")
	case 2:
		fmt.Printf("a is 2\n")
	default:
		fmt.Printf("default: a is %d\n", a)
	}
	// :show end
}
CodeToRun:+190
package main

import "fmt"

func main() {
	a := 1
	switch a {
	case 1, 3:
		fmt.Printf("a is 1 or 3\n")
	case 2:
		fmt.Printf("a is 2\n")
	default:
		fmt.Printf("default: a is %d\n", a)
	}
}
Output:+12
a is 1 or 3
66 1553595241090 glotid
Sha1: 342f97c96379568049bce74eb32e20cf7381a0b5
GlotID: fapbstukyv
465 1553595242963 glotoutput
Sha1: a28b97ba99b1c5e331c847515c051c1ecbb18e93
Lang: Go
FileName: main.go
CodeFull:+187
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := 1
	switch a {
	case 1:
		fmt.Printf("case 1\n")
		fallthrough
	case 2:
		fmt.Printf("caes 2\n")
	}
	// :show end
}
CodeToRun:+148
package main

import "fmt"

func main() {
	a := 1
	switch a {
	case 1:
		fmt.Printf("case 1\n")
		fallthrough
	case 2:
		fmt.Printf("caes 2\n")
	}
}
Output:+14
case 1
caes 2
66 1553595243131 glotid
Sha1: a28b97ba99b1c5e331c847515c051c1ecbb18e93
GlotID: fapbsv2hrn
474 1553595244537 glotoutput
Sha1: 8222f2f428d66f922bfbca9ca4f8ff683057c13c
Lang: Go
FileName: main.go
CodeFull:+193
// :glot
package main

import "fmt"

func main() {
	// :show start
	s := "foo"
	switch s {
	case "foo":
		fmt.Printf("s is 'foo'\n")
	case "bar":
		fmt.Printf("s is 'bar'\n")
	}
	// :show end
}
CodeToRun:+154
package main

import "fmt"

func main() {
	s := "foo"
	switch s {
	case "foo":
		fmt.Printf("s is 'foo'\n")
	case "bar":
		fmt.Printf("s is 'bar'\n")
	}
}
Output:+11
s is 'foo'
66 1553595244710 glotid
Sha1: 8222f2f428d66f922bfbca9ca4f8ff683057c13c
GlotID: fapbsw0cji
843 1553595246174 glotoutput
Sha1: 5b7e2a3eed9166e09ceb9ca27ae895c76e48ffe4
Lang: Go
FileName: main.go
CodeFull:+359
// :glot
package main

import (
	"fmt"
)

// :show start
func check(n int) {
	switch {
	case n > 0 && n%3 == 0:
		fmt.Printf("n is %d, divisible by 3\n", n)
	case n >= 4:
		fmt.Printf("n is %d (>= 4)\n", n)
	default:
		fmt.Printf("default: n is %d\n", n)
	}
}

// :show end
func main() {
	// :show start
	check(3)
	check(4)
	check(6)
	check(1)
	// :show end
}
CodeToRun:+292
package main

import (
	"fmt"
)

func check(n int) {
	switch {
	case n > 0 && n%3 == 0:
		fmt.Printf("n is %d, divisible by 3\n", n)
	case n >= 4:
		fmt.Printf("n is %d (>= 4)\n", n)
	default:
		fmt.Printf("default: n is %d\n", n)
	}
}

func main() {
	check(3)
	check(4)
	check(6)
	check(1)
}
Output:+76
n is 3, divisible by 3
n is 4 (>= 4)
n is 6, divisible by 3
default: n is 1
66 1553595246342 glotid
Sha1: 5b7e2a3eed9166e09ceb9ca27ae895c76e48ffe4
GlotID: fapbswzbls
900 1553595247878 glotoutput
Sha1: ee3ded7c20d615ecdb38a2fa6d3fff93f1ff2588
Lang: Go
FileName: main.go
CodeFull:+401
// :glot
package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	// without seeding rand.Intn will always return the same sequence
	rand.Seed(time.Now().UnixNano())
	// :show start
	switch n := rand.Intn(9); n {
	case 1, 2, 3:
		fmt.Printf("case 1, 2, 3: n is %d\n", n)
	case 4, 5:
		fmt.Printf("case 4, 5: n is %d\n", n)
	default:
		fmt.Printf("default: n is %d\n", n)
	}
	// :show end
}
CodeToRun:+362
package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	// without seeding rand.Intn will always return the same sequence
	rand.Seed(time.Now().UnixNano())
	switch n := rand.Intn(9); n {
	case 1, 2, 3:
		fmt.Printf("case 1, 2, 3: n is %d\n", n)
	case 4, 5:
		fmt.Printf("case 4, 5: n is %d\n", n)
	default:
		fmt.Printf("default: n is %d\n", n)
	}
}
Output:+21
case 1, 2, 3: n is 3
66 1553595248047 glotid
Sha1: ee3ded7c20d615ecdb38a2fa6d3fff93f1ff2588
GlotID: fapbsxzuen
1118 1553595249824 glotoutput
Sha1: 13a945490d681f1f62c8db21d4403658961851e6
Lang: Go
FileName: main.go
CodeFull:+485
// :glot
package main

import (
	"fmt"
)

// :show start
func printType(iv interface{}) {
	// inside case statements, v is of type matching case type
	switch v := iv.(type) {
	case int:
		fmt.Printf("'%d' is of type int\n", v)
	case string:
		fmt.Printf("'%s' is of type string\n", v)
	case float64:
		fmt.Printf("'%f' is of type float64\n", v)
	default:
		fmt.Printf("We don't support type '%T'\n", v)
	}
}

func main() {
	printType("5")
	printType(4)
	printType(true)
}

// :show end
CodeToRun:+448
package main

import (
	"fmt"
)

func printType(iv interface{}) {
	// inside case statements, v is of type matching case type
	switch v := iv.(type) {
	case int:
		fmt.Printf("'%d' is of type int\n", v)
	case string:
		fmt.Printf("'%s' is of type string\n", v)
	case float64:
		fmt.Printf("'%f' is of type float64\n", v)
	default:
		fmt.Printf("We don't support type '%T'\n", v)
	}
}

func main() {
	printType("5")
	printType(4)
	printType(true)
}
Output:+70
'5' is of type string
'4' is of type int
We don't support type 'bool'
66 1553595249994 glotid
Sha1: 13a945490d681f1f62c8db21d4403658961851e6
GlotID: fapbsz5ln8
624 1553595251300 glotoutput
Sha1: 35f54f50401d2162121b854790ed8e8d310a09cc
Lang: Go
FileName: main.go
CodeFull:+278
// :glot
package main

import "fmt"

// :show start
func printIsOdd(n int) {
	if n%2 == 1 {
		goto isOdd
	}
	fmt.Printf("%d is even\n", n)
	return

isOdd:
	fmt.Printf("%d is odd\n", n)
}

// :show end

func main() {
	// :show start
	printIsOdd(5)
	printIsOdd(18)
	// :show end
}
CodeToRun:+210
package main

import "fmt"

func printIsOdd(n int) {
	if n%2 == 1 {
		goto isOdd
	}
	fmt.Printf("%d is even\n", n)
	return

isOdd:
	fmt.Printf("%d is odd\n", n)
}

func main() {
	printIsOdd(5)
	printIsOdd(18)
}
Output:+20
5 is odd
18 is even
66 1553595251469 glotid
Sha1: 35f54f50401d2162121b854790ed8e8d310a09cc
GlotID: fapbt016s7
447 1553595252487 glotoutput
Sha1: 4edb4f4f14fb62c7fa86b53bd186310b92d1fe3e
Lang: Go
FileName: main.go
CodeFull:+146
// :glot
// allow error
package main

import "fmt"

func main() {
	// :show start
	goto end
	a := 3
	fmt.Printf("a: %d\n", a)
end:
	// :show end
}
CodeToRun:+92
package main

import "fmt"

func main() {
	goto end
	a := 3
	fmt.Printf("a: %d\n", a)
end:
}
Output:+94
# command-line-arguments
./main.go:6:7: goto end jumps over declaration of a at ./main.go:7:4
66 1553595252655 glotid
Sha1: 4edb4f4f14fb62c7fa86b53bd186310b92d1fe3e
GlotID: fapbt0qldw
405 1553595254020 glotoutput
Sha1: b12b78fbf064124f0e65137dd6e5e3630f612796
Lang: Go
FileName: main.go
CodeFull:+159
// :glot
package main

import "fmt"

func main() {
	// :show start
	i := 0
	for {
		i++
		if i > 2 {
			break
		}
		fmt.Printf("i: %d\n", i)
	}
	// :show end
}
CodeToRun:+120
package main

import "fmt"

func main() {
	i := 0
	for {
		i++
		if i > 2 {
			break
		}
		fmt.Printf("i: %d\n", i)
	}
}
Output:+10
i: 1
i: 2
66 1553595254330 glotid
Sha1: b12b78fbf064124f0e65137dd6e5e3630f612796
GlotID: fapbt1obmf
423 1553595255607 glotoutput
Sha1: b7465098a88942276113022aa9d4e4fa84e5695b
Lang: Go
FileName: main.go
CodeFull:+168
// :glot
package main

import "fmt"

func main() {
	// :show start
	for i := 0; i < 3; i++ {
		if i == 1 {
			continue
		}
		fmt.Printf("i: %d\n", i)
	}
	// :show end
}
CodeToRun:+129
package main

import "fmt"

func main() {
	for i := 0; i < 3; i++ {
		if i == 1 {
			continue
		}
		fmt.Printf("i: %d\n", i)
	}
}
Output:+10
i: 0
i: 2
66 1553595255777 glotid
Sha1: b7465098a88942276113022aa9d4e4fa84e5695b
GlotID: fapbt2lif3
506 1553595257008 glotoutput
Sha1: cd76f02b76ee5b9ce608d908b7b5828c7dcec746
Lang: Go
FileName: main.go
CodeFull:+194
// :glot
package main

import "fmt"

func main() {
	j := 100

loop:
	for j < 110 {
		j++

		switch j % 3 {
		case 0:
			continue loop
		case 1:
			break loop
		}

		fmt.Println("Var : ", j)
	}
}
CodeToRun:+185
package main

import "fmt"

func main() {
	j := 100

loop:
	for j < 110 {
		j++

		switch j % 3 {
		case 0:
			continue loop
		case 1:
			break loop
		}

		fmt.Println("Var : ", j)
	}
}
Output:+11
Var :  101
66 1553595257176 glotid
Sha1: cd76f02b76ee5b9ce608d908b7b5828c7dcec746
GlotID: fapbt3fitu
367 1553595258323 glotoutput
Sha1: 6df50012c77d3d2defa40b61bf398cb8ccb49ba5
Lang: Go
FileName: main.go
CodeFull:+138
// :glot
package main

import "fmt"

func main() {
	// :show start
	for n := 0; n < 3; n++ {
		fmt.Printf("n: %d\n", n)
	}
	// :show end
}
CodeToRun:+99
package main

import "fmt"

func main() {
	for n := 0; n < 3; n++ {
		fmt.Printf("n: %d\n", n)
	}
}
Output:+15
n: 0
n: 1
n: 2
66 1553595258492 glotid
Sha1: 6df50012c77d3d2defa40b61bf398cb8ccb49ba5
GlotID: fapbt47pag
475 1553595259758 glotoutput
Sha1: 62cecc89cb16552ae5cf80a5c12db1940d06172e
Lang: Go
FileName: main.go
CodeFull:+173
// :glot
package main

import "fmt"

func main() {
	// :show start
	s := "a 世"
	for i := range s {
		b := s[i]
		fmt.Printf("idx: %d, byte: %d\n", i, b)
	}
	// :show end
}
CodeToRun:+134
package main

import "fmt"

func main() {
	s := "a 世"
	for i := range s {
		b := s[i]
		fmt.Printf("idx: %d, byte: %d\n", i, b)
	}
}
Output:+52
idx: 0, byte: 97
idx: 1, byte: 32
idx: 2, byte: 228
66 1553595259925 glotid
Sha1: 62cecc89cb16552ae5cf80a5c12db1940d06172e
GlotID: fapbt52fxx
538 1553595261187 glotoutput
Sha1: 06dfe793c8fe0812f64a0f9d06e999edb103ddb2
Lang: Go
FileName: main.go
CodeFull:+175
// :glot
package main

import "fmt"

func main() {
	// :show start
	s := "Hey 世界"
	for i, rune := range s {
		fmt.Printf("idx: %d, rune: %d\n", i, rune)
	}
	// :show end
}
CodeToRun:+136
package main

import "fmt"

func main() {
	s := "Hey 世界"
	for i, rune := range s {
		fmt.Printf("idx: %d, rune: %d\n", i, rune)
	}
}
Output:+110
idx: 0, rune: 72
idx: 1, rune: 101
idx: 2, rune: 121
idx: 3, rune: 32
idx: 4, rune: 19990
idx: 7, rune: 30028
66 1553595261356 glotid
Sha1: 06dfe793c8fe0812f64a0f9d06e999edb103ddb2
GlotID: fapbt5x42q
410 1553595262627 glotoutput
Sha1: e75fb6fcd637b3423214dddfa1bfd8ff7cb72a0f
Lang: Go
FileName: main.go
CodeFull:+156
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := []int{3, 15, 8}
	for i := range a {
		fmt.Printf("idx: %d\n", i)
	}
	// :show end
}
CodeToRun:+117
package main

import "fmt"

func main() {
	a := []int{3, 15, 8}
	for i := range a {
		fmt.Printf("idx: %d\n", i)
	}
}
Output:+21
idx: 0
idx: 1
idx: 2
66 1553595262794 glotid
Sha1: e75fb6fcd637b3423214dddfa1bfd8ff7cb72a0f
GlotID: fapbt6ry11
441 1553595263939 glotoutput
Sha1: 1e6b50c581f3fba7d8e5d116e40ed59a3b95f123
Lang: Go
FileName: main.go
CodeFull:+165
// :glot
package main

import "fmt"

func main() {
	// :show start
	a := []int{3, 15, 8}
	for _, el := range a {
		fmt.Printf("element: %d\n", el)
	}
	// :show end
}
CodeToRun:+126
package main

import "fmt"

func main() {
	a := []int{3, 15, 8}
	for _, el := range a {
		fmt.Printf("element: %d\n", el)
	}
}
Output:+34
element: 3
element: 15
element: 8
66 1553595264106 glotid
Sha1: 1e6b50c581f3fba7d8e5d116e40ed59a3b95f123
GlotID: fapbt7k1wm
480 1553595265492 glotoutput
Sha1: 72a2efe44f0023782f12769dceeeab9d931f66a6
Lang: Go
FileName: main.go
CodeFull:+191
// :glot
package main

import "fmt"

func main() {
	// :show start
	m := map[string]int{
		"three": 3,
		"five":  5,
	}
	for key := range m {
		fmt.Printf("key: %s\n", key)
	}
	// :show end
}
CodeToRun:+152
package main

import "fmt"

func main() {
	m := map[string]int{
		"three": 3,
		"five":  5,
	}
	for key := range m {
		fmt.Printf("key: %s\n", key)
	}
}
Output:+21
key: three
key: five
66 1553595265660 glotid
Sha1: 72a2efe44f0023782f12769dceeeab9d931f66a6
GlotID: fapbt8hd0y
495 1553595266925 glotoutput
Sha1: 4f4e823180dff51092763272f75678fcb01cba17
Lang: Go
FileName: main.go
CodeFull:+200
// :glot
package main

import "fmt"

func main() {
	// :show start
	m := map[string]int{
		"three": 3,
		"five":  5,
	}
	for _, value := range m {
		fmt.Printf("value: %d\n", value)
	}
	// :show end
}
CodeToRun:+161
package main

import "fmt"

func main() {
	m := map[string]int{
		"three": 3,
		"five":  5,
	}
	for _, value := range m {
		fmt.Printf("value: %d\n", value)
	}
}
Output:+18
value: 3
value: 5
66 1553595267094 glotid
Sha1: 4f4e823180dff51092763272f75678fcb01cba17
GlotID: fapbt9c3ti
683 1553595268540 glotoutput
Sha1: ff998a064344be257aa220e6f24c289f8177ae85
Lang: Go
FileName: main.go
CodeFull:+310
// :glot
package main

import "fmt"

// :show start
func fillAndCloseChannel(ch chan int) {
	for i := 0; i < 3; i++ {
		ch <- i + 3
	}
	close(ch)
}

// :show end

func main() {
	// :show start
	ch := make(chan int)
	go fillAndCloseChannel(ch)

	for v := range ch {
		fmt.Printf("v: %d\n", v)
	}
	// :show end
}
CodeToRun:+242
package main

import "fmt"

func fillAndCloseChannel(ch chan int) {
	for i := 0; i < 3; i++ {
		ch <- i + 3
	}
	close(ch)
}

func main() {
	ch := make(chan int)
	go fillAndCloseChannel(ch)

	for v := range ch {
		fmt.Printf("v: %d\n", v)
	}
}
Output:+15
v: 3
v: 4
v: 5
66 1553595268707 glotid
Sha1: ff998a064344be257aa220e6f24c289f8177ae85
GlotID: fapbtaaot9
634 1553595270085 glotoutput
Sha1: 6cb56341c8bd61af8421da0a61fefbe23670abc3
Lang: Go
FileName: main.go
CodeFull:+264
// :glot
package main

import (
	"fmt"
)

// :show start
func SayHelloToMe(firstName, lastName string, age int) {
	fmt.Printf("Hello, %s %s!\n", firstName, lastName)
	fmt.Printf("You are %d\n", age)
}

func main() {
	SayHelloToMe("John", "Doe", 35)
}

// :show end
CodeToRun:+227
package main

import (
	"fmt"
)

func SayHelloToMe(firstName, lastName string, age int) {
	fmt.Printf("Hello, %s %s!\n", firstName, lastName)
	fmt.Printf("You are %d\n", age)
}

func main() {
	SayHelloToMe("John", "Doe", 35)
}
Output:+28
Hello, John Doe!
You are 35
66 1553595270254 glotid
Sha1: 6cb56341c8bd61af8421da0a61fefbe23670abc3
GlotID: fapbtb7s7z
733 1553595271841 glotoutput
Sha1: c9a24c48c6d9195872be6683811e12149e30a655
Lang: Go
FileName: main.go
CodeFull:+316
// :glot
package main

import "fmt"

// :show start
func Add(a, b int) int {
	return a + b
}

func AddAndMultiply(a, b int) (int, int) {
	return a + b, a * b
}

func main() {
	sum, mult := AddAndMultiply(5, 8)
	fmt.Printf("5+8=%d, 5*8=%d\n", sum, mult)
	sum = Add(6, 12)
	fmt.Printf("6+12=%d\n", sum)
}

// :show end
CodeToRun:+279
package main

import "fmt"

func Add(a, b int) int {
	return a + b
}

func AddAndMultiply(a, b int) (int, int) {
	return a + b, a * b
}

func main() {
	sum, mult := AddAndMultiply(5, 8)
	fmt.Printf("5+8=%d, 5*8=%d\n", sum, mult)
	sum = Add(6, 12)
	fmt.Printf("6+12=%d\n", sum)
}
Output:+23
5+8=13, 5*8=40
6+12=18
66 1553595272009 glotid
Sha1: c9a24c48c6d9195872be6683811e12149e30a655
GlotID: fapbtc9fz6
778 1553595273399 glotoutput
Sha1: f1d2c33f76c58834569a520c2f55d040d39e4c1f
Lang: Go
FileName: main.go
CodeFull:+342
// :glot
package main

import "fmt"

// :show start
func inverse(v float32) (reciprocal float32) {
	if v == 0 {
		return
	}
	reciprocal = 1 / v
	return
}

// function can return multiple values
func split(sum int) (x, y int) {
	x = sum * 4 / 9
	y = sum - x
	return
}

func main() {
	fmt.Printf("inverse(5)=%.2f\n", inverse(5))
}

// :show end
CodeToRun:+305
package main

import "fmt"

func inverse(v float32) (reciprocal float32) {
	if v == 0 {
		return
	}
	reciprocal = 1 / v
	return
}

// function can return multiple values
func split(sum int) (x, y int) {
	x = sum * 4 / 9
	y = sum - x
	return
}

func main() {
	fmt.Printf("inverse(5)=%.2f\n", inverse(5))
}
Output:+16
inverse(5)=0.20
66 1553595273565 glotid
Sha1: f1d2c33f76c58834569a520c2f55d040d39e4c1f
GlotID: fapbtd6tao
955 1553595274693 glotoutput
Sha1: 5d913901bb94de6e5bffc6162668c1c3c5a2cf23
Lang: Go
FileName: main.go
CodeFull:+410
// :glot
package main

import (
	"fmt"
)

// :show start
func variadic(strs ...string) {
	// strs is a slice of string
	for i, str := range strs {
		fmt.Printf("%d: %s\n", i, str)
	}
	fmt.Print("\n")
}

func main() {
	variadic("Hello", "Goodbye")
	variadic("Str1", "Str2", "Str3")

	// you can also give a slice to a variadic function, with `...`:
	strs := []string{"a", "b"}
	variadic(strs...)
}

// :show end
CodeToRun:+373
package main

import (
	"fmt"
)

func variadic(strs ...string) {
	// strs is a slice of string
	for i, str := range strs {
		fmt.Printf("%d: %s\n", i, str)
	}
	fmt.Print("\n")
}

func main() {
	variadic("Hello", "Goodbye")
	variadic("Str1", "Str2", "Str3")

	// you can also give a slice to a variadic function, with `...`:
	strs := []string{"a", "b"}
	variadic(strs...)
}
Output:+57
0: Hello
1: Goodbye

0: Str1
1: Str2
2: Str3

0: a
1: b

66 1553595274860 glotid
Sha1: 5d913901bb94de6e5bffc6162668c1c3c5a2cf23
GlotID: fapbtdyk1r
323 1553595276245 glotoutput
Sha1: 0d76c8baf40f3a0a9d1ff6aea74f1b5918469dce
Lang: Go
FileName: main.go
CodeFull:+120
// :glot
package main

import "fmt"

// :show start
func main() {
	func() {
		fmt.Println("Hello!")
	}()
}

// :show end
CodeToRun:+83
package main

import "fmt"

func main() {
	func() {
		fmt.Println("Hello!")
	}()
}
Output:+7
Hello!
66 1553595276411 glotid
Sha1: 0d76c8baf40f3a0a9d1ff6aea74f1b5918469dce
GlotID: fapbtevt1x
349 1553595277576 glotoutput
Sha1: 942beb94ef5ac966956b559673631ae065d379ab
Lang: Go
FileName: main.go
CodeFull:+133
// :glot
package main

import "fmt"

// :show start
func main() {
	func(str string) {
		fmt.Println(str)
	}("Hello!")
}

// :show end
CodeToRun:+96
package main

import "fmt"

func main() {
	func(str string) {
		fmt.Println(str)
	}("Hello!")
}
Output:+7
Hello!
66 1553595277744 glotid
Sha1: 942beb94ef5ac966956b559673631ae065d379ab
GlotID: fapbtfocqv
347 1553595278795 glotoutput
Sha1: e9adc102fdac5ab042b9fd4adade18528f31c81c
Lang: Go
FileName: main.go
CodeFull:+132
// :glot
package main

import "fmt"

// :show start
func main() {
	str := "Hello!"
	func() {
		fmt.Println(str)
	}()
}

// :show end
CodeToRun:+95
package main

import "fmt"

func main() {
	str := "Hello!"
	func() {
		fmt.Println(str)
	}()
}
Output:+7
Hello!
66 1553595279002 glotid
Sha1: e9adc102fdac5ab042b9fd4adade18528f31c81c
GlotID: fapbtgf9sv
1042 1553595280145 glotoutput
Sha1: e2a4c9b47b3040bd87cb988b1fd2404eb004e390
Lang: Go
FileName: main.go
CodeFull:+466
// :glot
package main

import "fmt"

// :show start
// intOp is a variable whose type is function that takes
// 2 integers as arguments and returns an integer
var intOp func(int, int) int

func intAdd(a, b int) int {
	return a + b
}

func main() {
	intOp = intAdd
	fmt.Printf("intOp(2, 3) = %d\n", intOp(2, 3))

	// we can assign literal functions as well
	intOp = func(a, b int) int {
		return a * b
	}
	fmt.Printf("intOp(2, 3) = %d\n", intOp(2, 3))
}

// :show end
CodeToRun:+429
package main

import "fmt"

// intOp is a variable whose type is function that takes
// 2 integers as arguments and returns an integer
var intOp func(int, int) int

func intAdd(a, b int) int {
	return a + b
}

func main() {
	intOp = intAdd
	fmt.Printf("intOp(2, 3) = %d\n", intOp(2, 3))

	// we can assign literal functions as well
	intOp = func(a, b int) int {
		return a * b
	}
	fmt.Printf("intOp(2, 3) = %d\n", intOp(2, 3))
}
Output:+32
intOp(2, 3) = 5
intOp(2, 3) = 6
66 1553595280311 glotid
Sha1: e2a4c9b47b3040bd87cb988b1fd2404eb004e390
GlotID: fapbth7eto
826 1553595281421 glotoutput
Sha1: a8a2cf44b25aabddb19813ffef1bc141118bf315
Lang: Go
FileName: main.go
CodeFull:+358
// :glot
package main

import "fmt"

// :show start
func funcAdd(a, b int) int {
	return a + b
}

func runFunc(a, b int, intOp func(int, int) int) {
	fmt.Printf("intOp(%d, %d) = %d\n", a, b, intOp(a, b))
}

func main() {
	runFunc(2, 3, funcAdd)

	// we can pass literal functions as well
	runFunc(2, 3, func(a, b int) int {
		return a * b
	})
}

// :show end
CodeToRun:+321
package main

import "fmt"

func funcAdd(a, b int) int {
	return a + b
}

func runFunc(a, b int, intOp func(int, int) int) {
	fmt.Printf("intOp(%d, %d) = %d\n", a, b, intOp(a, b))
}

func main() {
	runFunc(2, 3, funcAdd)

	// we can pass literal functions as well
	runFunc(2, 3, func(a, b int) int {
		return a * b
	})
}
Output:+32
intOp(2, 3) = 5
intOp(2, 3) = 6
66 1553595281589 glotid
Sha1: a8a2cf44b25aabddb19813ffef1bc141118bf315
GlotID: fapbthyrwm
738 1553595282799 glotoutput
Sha1: 448b8cb13af14429843725c0d5b3d22cd65b2828
Lang: Go
FileName: main.go
CodeFull:+330
// :glot
package main

import (
	"fmt"
)

// :show start

// MyError is a custom error type
type MyError struct {
	msg string
}

func (e *MyError) Error() string {
	return e.msg
}

// :show end

func main() {
	// :show start
	var err error = &MyError{msg: "This is custom error type"}
	fmt.Printf("err: %s\n", err)
	// :show end
}
CodeToRun:+261
package main

import (
	"fmt"
)

// MyError is a custom error type
type MyError struct {
	msg string
}

func (e *MyError) Error() string {
	return e.msg
}

func main() {
	var err error = &MyError{msg: "This is custom error type"}
	fmt.Printf("err: %s\n", err)
}
Output:+31
err: This is custom error type
66 1553595282966 glotid
Sha1: 448b8cb13af14429843725c0d5b3d22cd65b2828
GlotID: fapbtisaqr
2398 1553595284200 glotoutput
Sha1: f52024f519749cee055bced69feac30ec2843adb
Lang: Go
FileName: main.go
CodeFull:+1017
// :glot
// allow error
package main

import (
	"errors"
	"fmt"
)

// :show start
// FmtArgs formats args as a string. First argument should be format string
// and the rest are arguments to the format
func FmtArgs(args ...interface{}) string {
	if len(args) == 0 {
		return ""
	}
	format := args[0].(string)
	if len(args) == 1 {
		return format
	}
	return fmt.Sprintf(format, args[1:]...)
}

func panicWithMsg(defaultMsg string, args ...interface{}) {
	s := FmtArgs(args...)
	if s == "" {
		s = defaultMsg
	}
	fmt.Printf("%s\n", s)
	panic(s)
}

// PanicIf panics if cond is true
func PanicIf(cond bool, args ...interface{}) {
	if !cond {
		return
	}
	panicWithMsg("PanicIf: condition failed", args...)
}

// PanicIfErr panics if err is not nil
func PanicIfErr(err error, args ...interface{}) {
	if err == nil {
		return
	}
	panicWithMsg(err.Error(), args...)
}

func main() {
	PanicIfErr(nil)                              // nothing happens
	PanicIfErr(errors.New("there was an error")) // will panic
}

// :show end
CodeToRun:+965
package main

import (
	"errors"
	"fmt"
)

// FmtArgs formats args as a string. First argument should be format string
// and the rest are arguments to the format
func FmtArgs(args ...interface{}) string {
	if len(args) == 0 {
		return ""
	}
	format := args[0].(string)
	if len(args) == 1 {
		return format
	}
	return fmt.Sprintf(format, args[1:]...)
}

func panicWithMsg(defaultMsg string, args ...interface{}) {
	s := FmtArgs(args...)
	if s == "" {
		s = defaultMsg
	}
	fmt.Printf("%s\n", s)
	panic(s)
}

// PanicIf panics if cond is true
func PanicIf(cond bool, args ...interface{}) {
	if !cond {
		return
	}
	panicWithMsg("PanicIf: condition failed", args...)
}

// PanicIfErr panics if err is not nil
func PanicIfErr(err error, args ...interface{}) {
	if err == nil {
		return
	}
	panicWithMsg(err.Error(), args...)
}

func main() {
	PanicIfErr(nil)                              // nothing happens
	PanicIfErr(errors.New("there was an error")) // will panic
}
Output:+299
there was an error
panic: there was an error

goroutine 1 [running]:
main.panicWithMsg(0x4b4db2, 0x12, 0x0, 0x0, 0x0)
	/tmp/325991207/main.go:27 +0x13e
main.PanicIfErr(0x4c48e0, 0xc42000e1f0, 0x0, 0x0, 0x0)
	/tmp/325991207/main.go:43 +0x6c
main.main()
	/tmp/325991207/main.go:48 +0x92
exit status 2
66 1553595284369 glotid
Sha1: f52024f519749cee055bced69feac30ec2843adb
GlotID: fapbtjmcxc
750 1553595285473 glotoutput
Sha1: 9e9c2b5370ec29df42ca1c4902fb2e68fab05493
Lang: Go
FileName: main.go
CodeFull:+304
// :glot
package main

import "fmt"

// :show start
func logExit(name string) {
	fmt.Printf("Function %s returned\n", name)
}

func main() {
	fmt.Println("First main statement")
	defer logExit("main") // position of defer statement here does not matter
	fmt.Println("Last main statement")
}

// :show end
CodeToRun:+267
package main

import "fmt"

func logExit(name string) {
	fmt.Printf("Function %s returned\n", name)
}

func main() {
	fmt.Println("First main statement")
	defer logExit("main") // position of defer statement here does not matter
	fmt.Println("Last main statement")
}
Output:+64
First main statement
Last main statement
Function main returned
66 1553595285642 glotid
Sha1: 9e9c2b5370ec29df42ca1c4902fb2e68fab05493
GlotID: fapbtkdm2t
992 1553595286894 glotoutput
Sha1: 16d959a51afdf61ca4dc11fc8a8e2eaa0d3293e8
Lang: Go
FileName: main.go
CodeFull:+392
// :glot
// allow error
package main

import "fmt"

// :show start
func logNum(i int) {
	fmt.Printf("Num %d\n", i)
}

func main() {
	defer logNum(1)
	fmt.Println("First main statement")
	defer logNum(2)
	defer logNum(3)
	panic("panic occurred")

	fmt.Println("Last main statement") // not printed

	// not deferred since execution flow never reaches this line
	defer logNum(3)
}

// :show end
CodeToRun:+340
package main

import "fmt"

func logNum(i int) {
	fmt.Printf("Num %d\n", i)
}

func main() {
	defer logNum(1)
	fmt.Println("First main statement")
	defer logNum(2)
	defer logNum(3)
	panic("panic occurred")

	fmt.Println("Last main statement") // not printed

	// not deferred since execution flow never reaches this line
	defer logNum(3)
}
Output:+144
First main statement
Num 3
Num 2
Num 1
panic: panic occurred

goroutine 1 [running]:
main.main()
	/tmp/541521614/main.go:14 +0xf0
exit status 2
66 1553595287071 glotid
Sha1: 16d959a51afdf61ca4dc11fc8a8e2eaa0d3293e8
GlotID: fapbtl83oz
822 1553595288430 glotoutput
Sha1: a2fca1ed8ac800ef241c67e38629b41a14f8f9a7
Lang: Go
FileName: main.go
CodeFull:+353
// :glot
package main

import "fmt"

// :show start

func logNum(i int) {
	fmt.Printf("Num %d\n", i)
}

func main() {
	i := 1
	defer logNum(i) // deferred function call: logNum(1)
	fmt.Println("First main statement")
	i++
	defer logNum(i)     // deferred function call: logNum(2)
	defer logNum(i * i) // deferred function call: logNum(4)
}

// :show end
CodeToRun:+315
package main

import "fmt"

func logNum(i int) {
	fmt.Printf("Num %d\n", i)
}

func main() {
	i := 1
	defer logNum(i) // deferred function call: logNum(1)
	fmt.Println("First main statement")
	i++
	defer logNum(i)     // deferred function call: logNum(2)
	defer logNum(i * i) // deferred function call: logNum(4)
}
Output:+39
First main statement
Num 4
Num 2
Num 1
66 1553595288614 glotid
Sha1: a2fca1ed8ac800ef241c67e38629b41a14f8f9a7
GlotID: fapbtm59m5
778 1553595289680 glotoutput
Sha1: 7cb4c7c516268e692428fa7666b5f7b33ab76fae
Lang: Go
FileName: main.go
CodeFull:+350
// :glot
package main

import "fmt"

// :show start

func plusOne(i int) (result int) {
	// anonymous function must be called by adding ()
	defer func() { result++ }()

	// i is returned as result, which is updated by deferred function above
	// after execution of below return
	return i
}

func main() {
	fmt.Println(plusOne(1)) // 2
}

// :show end
CodeToRun:+312
package main

import "fmt"

func plusOne(i int) (result int) {
	// anonymous function must be called by adding ()
	defer func() { result++ }()

	// i is returned as result, which is updated by deferred function above
	// after execution of below return
	return i
}

func main() {
	fmt.Println(plusOne(1)) // 2
}
Output:+2
2
66 1553595289851 glotid
Sha1: 7cb4c7c516268e692428fa7666b5f7b33ab76fae
GlotID: fapbtmvunh
465 1553595291195 glotoutput
Sha1: e5635947de2f9aa63ccaef38a7867baf08bb599b
Lang: Go
FileName: main.go
CodeFull:+180
// :glot
package main

import "fmt"

// :show start

func main() {
	fmt.Print("Before if\n")
	if true {
		defer fmt.Print("inside if\n")
	}

	fmt.Print("Ater if\n")
}

// :show end
CodeToRun:+142
package main

import "fmt"

func main() {
	fmt.Print("Before if\n")
	if true {
		defer fmt.Print("inside if\n")
	}

	fmt.Print("Ater if\n")
}
Output:+28
Before if
Ater if
inside if
66 1553595291367 glotid
Sha1: e5635947de2f9aa63ccaef38a7867baf08bb599b
GlotID: fapbtnscer
398 1553595292526 glotoutput
Sha1: 6e5dcbc1c9c8fbf64e572d5a5559b99a2042f825
Lang: Go
FileName: main.go
CodeFull:+159
// :glot
package main

import "fmt"

// :show start

func main() {
	for i := 0; i < 2; i++ {
		defer func() {
			fmt.Printf("%d\n", i)
		}()
	}
}

// :show end
CodeToRun:+121
package main

import "fmt"

func main() {
	for i := 0; i < 2; i++ {
		defer func() {
			fmt.Printf("%d\n", i)
		}()
	}
}
Output:+4
2
2
66 1553595292695 glotid
Sha1: 6e5dcbc1c9c8fbf64e572d5a5559b99a2042f825
GlotID: fapbtoksrn
414 1553595294267 glotoutput
Sha1: a48844bc100dbc50c459ffd0389201be9a6dadc2
Lang: Go
FileName: main.go
CodeFull:+167
// :glot
package main

import "fmt"

// :show start

func main() {
	for i := 0; i < 2; i++ {
		defer func(i2 int) {
			fmt.Printf("%d\n", i2)
		}(i)
	}
}

// :show end
CodeToRun:+129
package main

import "fmt"

func main() {
	for i := 0; i < 2; i++ {
		defer func(i2 int) {
			fmt.Printf("%d\n", i2)
		}(i)
	}
}
Output:+4
1
0
66 1553595294442 glotid
Sha1: a48844bc100dbc50c459ffd0389201be9a6dadc2
GlotID: fapbtpm9k5
630 1553595295528 glotoutput
Sha1: 1e256e65a1277d4f935c8bc31116095f298447cd
Lang: Go
FileName: main.go
CodeFull:+202
// :glot
// allow error
package main

import "fmt"

// :show start
func foo() {
	defer fmt.Println("Exiting foo")
	panic("bar")
}

func main() {
	defer fmt.Println("Exiting main")
	foo()
}

// :show end
CodeToRun:+150
package main

import "fmt"

func foo() {
	defer fmt.Println("Exiting foo")
	panic("bar")
}

func main() {
	defer fmt.Println("Exiting main")
	foo()
}
Output:+162
Exiting foo
Exiting main
panic: bar

goroutine 1 [running]:
main.foo()
	/tmp/768337092/main.go:7 +0x95
main.main()
	/tmp/768337092/main.go:12 +0x7e
exit status 2
66 1553595295701 glotid
Sha1: 1e256e65a1277d4f935c8bc31116095f298447cd
GlotID: fapbtqd5c9
886 1553595296828 glotoutput
Sha1: 64fc9f4d528e40141968f786a7fed2ecf3c5300f
Lang: Go
FileName: main.go
CodeFull:+377
// :glot
// allow error
package main

import "fmt"

// :show start
func foo() {
	panic("bar")
}

func bar() {
	defer func() {
		if msg := recover(); msg != nil {
			fmt.Printf("Recovered with message %s\n", msg)
		}
	}()
	foo()
	fmt.Println("Never gets executed")
}

func main() {
	fmt.Println("Entering main")
	bar()
	fmt.Println("Exiting main the normal way")
}

// :show end
CodeToRun:+325
package main

import "fmt"

func foo() {
	panic("bar")
}

func bar() {
	defer func() {
		if msg := recover(); msg != nil {
			fmt.Printf("Recovered with message %s\n", msg)
		}
	}()
	foo()
	fmt.Println("Never gets executed")
}

func main() {
	fmt.Println("Entering main")
	bar()
	fmt.Println("Exiting main the normal way")
}
Output:+69
Entering main
Recovered with message bar
Exiting main the normal way
66 1553595296996 glotid
Sha1: 64fc9f4d528e40141968f786a7fed2ecf3c5300f
GlotID: fapbtr4z6x
1188 1553595298773 glotoutput
Sha1: 70c274c74c35d553eb3299db24ef84068cb26f3c
Lang: Go
FileName: main.go
CodeFull:+533
// :glot
package main

import (
	"fmt"
	"runtime"
)

// :show start
type Foo struct {
	Is []int
}

func (fp *Foo) Panic() (err error) {
	defer PanicRecovery(&err)
	fp.Is[0] = 5
	return nil
}

func PanicRecovery(err *error) {

	if r := recover(); r != nil {
		if _, ok := r.(runtime.Error); ok {
			//fmt.Println("Panicing")
			//panic(r)
			*err = r.(error)
		} else {
			*err = r.(error)
		}
	}
}

func main() {
	fp := &Foo{}
	if err := fp.Panic(); err != nil {
		fmt.Printf("Error: %v\n", err)
	}
	fmt.Println("ok")
}

// :show end
CodeToRun:+496
package main

import (
	"fmt"
	"runtime"
)

type Foo struct {
	Is []int
}

func (fp *Foo) Panic() (err error) {
	defer PanicRecovery(&err)
	fp.Is[0] = 5
	return nil
}

func PanicRecovery(err *error) {

	if r := recover(); r != nil {
		if _, ok := r.(runtime.Error); ok {
			//fmt.Println("Panicing")
			//panic(r)
			*err = r.(error)
		} else {
			*err = r.(error)
		}
	}
}

func main() {
	fp := &Foo{}
	if err := fp.Panic(); err != nil {
		fmt.Printf("Error: %v\n", err)
	}
	fmt.Println("ok")
}
Output:+44
Error: runtime error: index out of range
ok
66 1553595298972 glotid
Sha1: 70c274c74c35d553eb3299db24ef84068cb26f3c
GlotID: fapbtsaq7a
859 1553595301743 glotoutput
Sha1: a3f8167a088d85d0e0a4deb1d52ffb78d220f018
Lang: Go
FileName: main.go
CodeFull:+376
// :glot
package main

import (
	"fmt"
	"time"
)

// :show start
func main() {
	// create new channel of type string
	ch := make(chan string)

	// start new anonymous goroutine
	go func() {
		time.Sleep(time.Second)
		// send "Hello World" to channel
		ch <- "Hello World"
	}()
	// read from channel
	msg, ok := <-ch
	fmt.Printf("msg='%s', ok='%v'\n", msg, ok)
}

// :show end
CodeToRun:+339
package main

import (
	"fmt"
	"time"
)

func main() {
	// create new channel of type string
	ch := make(chan string)

	// start new anonymous goroutine
	go func() {
		time.Sleep(time.Second)
		// send "Hello World" to channel
		ch <- "Hello World"
	}()
	// read from channel
	msg, ok := <-ch
	fmt.Printf("msg='%s', ok='%v'\n", msg, ok)
}
Output:+29
msg='Hello World', ok='true'
66 1553595301917 glotid
Sha1: a3f8167a088d85d0e0a4deb1d52ffb78d220f018
GlotID: fapbtu2ewk
811 1553595303791 glotoutput
Sha1: 6b628f63aef51bdda23d821182c22fbe5c6e9486
Lang: Go
FileName: main.go
CodeFull:+371
// :glot
package main

import (
	"fmt"
	"time"
)

// :show start
func mult(x, y int) {
	fmt.Printf("%d * %d = %d\n", x, y, x*y)
}

// :show end

func main() {
	// :show start
	go mult(1, 2) // first execution, non-blocking
	go mult(3, 4) // second execution, also non-blocking
	// :show end

	// that's not how you do it in real code
	time.Sleep(200 * time.Millisecond)
}
CodeToRun:+303
package main

import (
	"fmt"
	"time"
)

func mult(x, y int) {
	fmt.Printf("%d * %d = %d\n", x, y, x*y)
}

func main() {
	go mult(1, 2) // first execution, non-blocking
	go mult(3, 4) // second execution, also non-blocking

	// that's not how you do it in real code
	time.Sleep(200 * time.Millisecond)
}
Output:+21
1 * 2 = 2
3 * 4 = 12
66 1553595303959 glotid
Sha1: 6b628f63aef51bdda23d821182c22fbe5c6e9486
GlotID: fapbtva8di
929 1553595305327 glotoutput
Sha1: b95c2782ec2b174c0b25f5e16b9a099713c40deb
Lang: Go
FileName: main.go
CodeFull:+323
// :glot
package main

import (
	"fmt"
	"sync"
)

// :show start
var wg sync.WaitGroup // 1

func routine(i int) {
	defer wg.Done() // 3
	fmt.Printf("routine %v finished\n", i)
}

func main() {
	wg.Add(10) // 2
	for i := 0; i < 10; i++ {
		go routine(i) // *
	}
	wg.Wait() // 4
	fmt.Println("main finished")
}

// :show end
CodeToRun:+286
package main

import (
	"fmt"
	"sync"
)

var wg sync.WaitGroup // 1

func routine(i int) {
	defer wg.Done() // 3
	fmt.Printf("routine %v finished\n", i)
}

func main() {
	wg.Add(10) // 2
	for i := 0; i < 10; i++ {
		go routine(i) // *
	}
	wg.Wait() // 4
	fmt.Println("main finished")
}
Output:+204
routine 9 finished
routine 0 finished
routine 1 finished
routine 2 finished
routine 3 finished
routine 4 finished
routine 5 finished
routine 6 finished
routine 7 finished
routine 8 finished
main finished
66 1553595305497 glotid
Sha1: b95c2782ec2b174c0b25f5e16b9a099713c40deb
GlotID: fapbtw769r
2046 1553595306863 glotoutput
Sha1: 2deea8bacdd5cf6f5b65656ed42cdac027f0436c
Lang: Go
FileName: main.go
CodeFull:+960
// :glot
package main

import (
	"fmt"
	"sync"
	"time"
)

// :show start

var (
	semaphoreSize = 4

	mu                 sync.Mutex
	totalTasks         int
	curConcurrentTasks int
	maxConcurrentTasks int
)

func timeConsumingTask() {
	mu.Lock()
	totalTasks++
	curConcurrentTasks++
	if curConcurrentTasks > maxConcurrentTasks {
		maxConcurrentTasks = curConcurrentTasks
	}
	mu.Unlock()

	// in real system this would be a CPU intensive operation
	time.Sleep(10 * time.Millisecond)

	mu.Lock()
	curConcurrentTasks--
	mu.Unlock()
}

func main() {
	sem := make(chan struct{}, semaphoreSize)
	var wg sync.WaitGroup
	for i := 0; i < 32; i++ {
		// acquire semaphore
		sem <- struct{}{}
		wg.Add(1)

		go func() {
			timeConsumingTask()
			// release semaphore
			<-sem
			wg.Done()
		}()
	}

	// wait for all task to finish
	wg.Wait()

	fmt.Printf("total tasks         : %d\n", totalTasks)
	fmt.Printf("max concurrent tasks: %d\n", maxConcurrentTasks)
}

// :show end
CodeToRun:+922
package main

import (
	"fmt"
	"sync"
	"time"
)

var (
	semaphoreSize = 4

	mu                 sync.Mutex
	totalTasks         int
	curConcurrentTasks int
	maxConcurrentTasks int
)

func timeConsumingTask() {
	mu.Lock()
	totalTasks++
	curConcurrentTasks++
	if curConcurrentTasks > maxConcurrentTasks {
		maxConcurrentTasks = curConcurrentTasks
	}
	mu.Unlock()

	// in real system this would be a CPU intensive operation
	time.Sleep(10 * time.Millisecond)

	mu.Lock()
	curConcurrentTasks--
	mu.Unlock()
}

func main() {
	sem := make(chan struct{}, semaphoreSize)
	var wg sync.WaitGroup
	for i := 0; i < 32; i++ {
		// acquire semaphore
		sem <- struct{}{}
		wg.Add(1)

		go func() {
			timeConsumingTask()
			// release semaphore
			<-sem
			wg.Done()
		}()
	}

	// wait for all task to finish
	wg.Wait()

	fmt.Printf("total tasks         : %d\n", totalTasks)
	fmt.Printf("max concurrent tasks: %d\n", maxConcurrentTasks)
}
Output:+49
total tasks         : 32
max concurrent tasks: 4
66 1553595307567 glotid
Sha1: 2deea8bacdd5cf6f5b65656ed42cdac027f0436c
GlotID: fapbtxeykh
615 1553595308730 glotoutput
Sha1: dbe2d98ae7dc4d5dfbeed0b715f43dd031256f90
Lang: Go
FileName: main.go
CodeFull:+256
// :glot
package main

import (
	"fmt"
)

// :show start

func foo(ch chan int) {
	ch <- 1
	ch <- 2
	close(ch)
}

func main() {
	ch := make(chan int)
	go foo(ch)
	for n := range ch {
		fmt.Println(n)
	}
	fmt.Println("channel is now closed")
}

// :show end
CodeToRun:+218
package main

import (
	"fmt"
)

func foo(ch chan int) {
	ch <- 1
	ch <- 2
	close(ch)
}

func main() {
	ch := make(chan int)
	go foo(ch)
	for n := range ch {
		fmt.Println(n)
	}
	fmt.Println("channel is now closed")
}
Output:+26
1
2
channel is now closed
66 1553595308902 glotid
Sha1: dbe2d98ae7dc4d5dfbeed0b715f43dd031256f90
GlotID: fapbty86cn
908 1553595310137 glotoutput
Sha1: 68078f2d51d12feef64509a2cd7a24adc4c11c68
Lang: Go
FileName: main.go
CodeFull:+399
// :glot
package main

import (
	"fmt"
	"time"
)

// :show start

func main() {
	chResult := make(chan int, 1)

	go func() {
		time.Sleep(1 * time.Second)
		chResult <- 5
		fmt.Printf("Worker finished")
	}()

	select {
	case res := <-chResult:
		fmt.Printf("Got %d from worker\n", res)
	case <-time.After(100 * time.Millisecond):
		fmt.Printf("Timed out before worker finished\n")
	}
}

// :show end
CodeToRun:+361
package main

import (
	"fmt"
	"time"
)

func main() {
	chResult := make(chan int, 1)

	go func() {
		time.Sleep(1 * time.Second)
		chResult <- 5
		fmt.Printf("Worker finished")
	}()

	select {
	case res := <-chResult:
		fmt.Printf("Got %d from worker\n", res)
	case <-time.After(100 * time.Millisecond):
		fmt.Printf("Timed out before worker finished\n")
	}
}
Output:+33
Timed out before worker finished
66 1553595310304 glotid
Sha1: 68078f2d51d12feef64509a2cd7a24adc4c11c68
GlotID: fapbtz28d4
982 1553595311575 glotoutput
Sha1: 159940fec5f3fae47ef5796e8db0ecb7f5d07d83
Lang: Go
FileName: main.go
CodeFull:+418
// :glot
package main

import (
	"fmt"
	"time"
)

func main() {
	// :show start
	ch := make(chan string)

	go func() {
		for s := range ch {
			fmt.Printf("received from channel: %s\n", s)
		}
		fmt.Print("range loop finished because ch was closed\n")
	}()

	ch <- "foo"
	close(ch)
	// :show end

	// only to simplify example, don't sleep to coordinate
	// goroutines in real code
	time.Sleep(100 * time.Millisecond)
}
CodeToRun:+379
package main

import (
	"fmt"
	"time"
)

func main() {
	ch := make(chan string)

	go func() {
		for s := range ch {
			fmt.Printf("received from channel: %s\n", s)
		}
		fmt.Print("range loop finished because ch was closed\n")
	}()

	ch <- "foo"
	close(ch)

	// only to simplify example, don't sleep to coordinate
	// goroutines in real code
	time.Sleep(100 * time.Millisecond)
}
Output:+69
received from channel: foo
range loop finished because ch was closed
66 1553595311781 glotid
Sha1: 159940fec5f3fae47ef5796e8db0ecb7f5d07d83
GlotID: fapbtzxv90
612 1553595313315 glotoutput
Sha1: 19881d71571e37f5a13a37cded8c1e5f790b9381
Lang: Go
FileName: main.go
CodeFull:+230
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	ch := make(chan string)
	close(ch)
	v := <-ch
	fmt.Printf("Receive from closed channel immediately returns zero value of the type: %#v\n", v)
	// :show end
}
CodeToRun:+191
package main

import (
	"fmt"
)

func main() {
	ch := make(chan string)
	close(ch)
	v := <-ch
	fmt.Printf("Receive from closed channel immediately returns zero value of the type: %#v\n", v)
}
Output:+75
Receive from closed channel immediately returns zero value of the type: ""
66 1553595313482 glotid
Sha1: 19881d71571e37f5a13a37cded8c1e5f790b9381
GlotID: fapbu0ycxi
790 1553595315055 glotoutput
Sha1: 650f265dcfbb71045d0ef5e7d04867172f7dd5d7
Lang: Go
FileName: main.go
CodeFull:+320
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	ch := make(chan int)
	go func() {
		ch <- 1
		close(ch)
	}()
	v, isClosed := <-ch
	fmt.Printf("received %d, is channel closed: %v\n", v, isClosed)
	v, isClosed = <-ch
	fmt.Printf("received %d, is channel closed: %v\n", v, isClosed)
	// :show end
}
CodeToRun:+281
package main

import (
	"fmt"
)

func main() {
	ch := make(chan int)
	go func() {
		ch <- 1
		close(ch)
	}()
	v, isClosed := <-ch
	fmt.Printf("received %d, is channel closed: %v\n", v, isClosed)
	v, isClosed = <-ch
	fmt.Printf("received %d, is channel closed: %v\n", v, isClosed)
}
Output:+73
received 1, is channel closed: true
received 0, is channel closed: false
66 1553595315223 glotid
Sha1: 650f265dcfbb71045d0ef5e7d04867172f7dd5d7
GlotID: fapbu1znjp
435 1553595316182 glotoutput
Sha1: c060d9b4fdc117b233f6fc3da0efc083ae7593af
Lang: Go
FileName: main.go
CodeFull:+130
// :glot
// allow error
package main

func main() {
	// :show start
	ch := make(chan string)
	close(ch)
	close(ch)
	// :show end
}
CodeToRun:+76
package main

func main() {
	ch := make(chan string)
	close(ch)
	close(ch)
}
Output:+113
panic: close of closed channel

goroutine 1 [running]:
main.main()
	/tmp/338409185/main.go:6 +0x57
exit status 2
66 1553595316352 glotid
Sha1: c060d9b4fdc117b233f6fc3da0efc083ae7593af
GlotID: fapbu2nsy3
444 1553595317407 glotoutput
Sha1: d9243c8f861e86a72554584d986c0ff6cf09d103
Lang: Go
FileName: main.go
CodeFull:+135
// :glot
// allow error
package main

func main() {
	// :show start
	ch := make(chan int)
	close(ch)
	ch <- 5 // panics
	// :show end
}
CodeToRun:+81
package main

func main() {
	ch := make(chan int)
	close(ch)
	ch <- 5 // panics
}
Output:+112
panic: send on closed channel

goroutine 1 [running]:
main.main()
	/tmp/364630557/main.go:6 +0x63
exit status 2
66 1553595317575 glotid
Sha1: d9243c8f861e86a72554584d986c0ff6cf09d103
GlotID: fapbu3e2lo
1795 1553595319151 glotoutput
Sha1: fbe8b28d90db43b75ba8a641ec0fcdfa93c39332
Lang: Go
FileName: main.go
CodeFull:+824
// :glot
package main

import (
	"fmt"
	"time"
)

// :show start

func producer(ch chan int) {
	for i := 0; i < 5; i++ {
		if i%2 == 0 {
			time.Sleep(10 * time.Millisecond)
		} else {
			time.Sleep(1 * time.Millisecond)
		}
		ch <- i
	}
}

func consumer(ch chan int) {
	total := 0
	for i := 0; i < 5; i++ {
		if i%2 == 1 {
			time.Sleep(10 * time.Millisecond)
		} else {
			time.Sleep(1 * time.Millisecond)
		}
		total += <-ch
	}
}

func unbuffered() {
	timeStart := time.Now()
	ch := make(chan int)
	go producer(ch)
	consumer(ch)
	fmt.Printf("Unbuffered version took %s\n", time.Since(timeStart))
}

func buffered() {
	timeStart := time.Now()
	ch := make(chan int, 5)
	go producer(ch)
	consumer(ch)
	fmt.Printf("Buffered version took %s\n", time.Since(timeStart))
}

func main() {
	unbuffered()
	buffered()
}

// :show end
CodeToRun:+786
package main

import (
	"fmt"
	"time"
)

func producer(ch chan int) {
	for i := 0; i < 5; i++ {
		if i%2 == 0 {
			time.Sleep(10 * time.Millisecond)
		} else {
			time.Sleep(1 * time.Millisecond)
		}
		ch <- i
	}
}

func consumer(ch chan int) {
	total := 0
	for i := 0; i < 5; i++ {
		if i%2 == 1 {
			time.Sleep(10 * time.Millisecond)
		} else {
			time.Sleep(1 * time.Millisecond)
		}
		total += <-ch
	}
}

func unbuffered() {
	timeStart := time.Now()
	ch := make(chan int)
	go producer(ch)
	consumer(ch)
	fmt.Printf("Unbuffered version took %s\n", time.Since(timeStart))
}

func buffered() {
	timeStart := time.Now()
	ch := make(chan int, 5)
	go producer(ch)
	consumer(ch)
	fmt.Printf("Buffered version took %s\n", time.Since(timeStart))
}

func main() {
	unbuffered()
	buffered()
}
Output:+70
Unbuffered version took 51.059855ms
Buffered version took 32.807154ms
66 1553595319321 glotid
Sha1: fbe8b28d90db43b75ba8a641ec0fcdfa93c39332
GlotID: fapbu4fh4m
975 1553595320944 glotoutput
Sha1: 0cc674220a55946467297aa2d9ce4c29a7ec67dc
Lang: Go
FileName: main.go
CodeFull:+427
// :glot
package main

import (
	"fmt"
	"time"
)

// :show start
func main() {
	ch := make(chan int, 1)

end:
	for {
		select {
		case n := <-ch:
			fmt.Printf("Received %d from a channel\n", n)
			break end
		default:
			fmt.Print("Channel is empty\n")
			ch <- 8
		}
		// wait for channel to be filled with values
		// don't use time.Sleep() like that in production code
		time.Sleep(20 * time.Millisecond)
	}
}

// :show end
CodeToRun:+390
package main

import (
	"fmt"
	"time"
)

func main() {
	ch := make(chan int, 1)

end:
	for {
		select {
		case n := <-ch:
			fmt.Printf("Received %d from a channel\n", n)
			break end
		default:
			fmt.Print("Channel is empty\n")
			ch <- 8
		}
		// wait for channel to be filled with values
		// don't use time.Sleep() like that in production code
		time.Sleep(20 * time.Millisecond)
	}
}
Output:+43
Channel is empty
Received 8 from a channel
66 1553595321110 glotid
Sha1: 0cc674220a55946467297aa2d9ce4c29a7ec67dc
GlotID: fapbu5huml
1091 1553595322408 glotoutput
Sha1: e658b0cae090defbc2d89b632e3a2dabcebf4d68
Lang: Go
FileName: main.go
CodeFull:+482
// :glot
package main

import (
	"fmt"
)

// :show start
func worker(ch chan int, chQuit chan struct{}) {
	for {
		select {
		case v := <-ch:
			fmt.Printf("Got value %d\n", v)
		case <-chQuit:
			fmt.Printf("Signalled on quit channel. Finishing\n")
			chQuit <- struct{}{}
			return
		}
	}
}
func main() {
	ch, chQuit := make(chan int), make(chan struct{})
	go worker(ch, chQuit)
	ch <- 3
	chQuit <- struct{}{}

	// wait to be signalled back by the worker
	<-chQuit
}

// :show end
CodeToRun:+445
package main

import (
	"fmt"
)

func worker(ch chan int, chQuit chan struct{}) {
	for {
		select {
		case v := <-ch:
			fmt.Printf("Got value %d\n", v)
		case <-chQuit:
			fmt.Printf("Signalled on quit channel. Finishing\n")
			chQuit <- struct{}{}
			return
		}
	}
}
func main() {
	ch, chQuit := make(chan int), make(chan struct{})
	go worker(ch, chQuit)
	ch <- 3
	chQuit <- struct{}{}

	// wait to be signalled back by the worker
	<-chQuit
}
Output:+49
Got value 3
Signalled on quit channel. Finishing
66 1553595322575 glotid
Sha1: e658b0cae090defbc2d89b632e3a2dabcebf4d68
GlotID: fapbu6d8h2
1690 1553595324374 glotoutput
Sha1: fd50a8ecc34ed6166775f9b0c5a00e6a601d880e
Lang: Go
FileName: main.go
CodeFull:+811
// :glot
package main

import (
	"fmt"
	"sync"
	"time"
)

// :show start
var cache map[int]int
var mu sync.RWMutex

func expensiveOperation(n int) int {
	// in real code this operation would be very expensive
	return n * n
}

func getCached(n int) int {
	mu.RLock()
	v, isCached := cache[n]
	mu.RUnlock()
	if isCached {
		return v
	}

	v = expensiveOperation(n)

	mu.Lock()
	cache[n] = v
	mu.Unlock()
	return v
}

func accessCache() {
	total := 0
	for i := 0; i < 5; i++ {
		n := getCached(i)
		total += n
	}
	fmt.Printf("total: %d\n", total)
}

// :show end

func main() {
	// :show start
	cache = make(map[int]int)
	go accessCache()
	accessCache()
	// :show end

	// for simplicity of the example
	// don't use time.Sleep() to coordinate goroutines
	// in production code
	time.Sleep(100 * time.Millisecond)
}
CodeToRun:+743
package main

import (
	"fmt"
	"sync"
	"time"
)

var cache map[int]int
var mu sync.RWMutex

func expensiveOperation(n int) int {
	// in real code this operation would be very expensive
	return n * n
}

func getCached(n int) int {
	mu.RLock()
	v, isCached := cache[n]
	mu.RUnlock()
	if isCached {
		return v
	}

	v = expensiveOperation(n)

	mu.Lock()
	cache[n] = v
	mu.Unlock()
	return v
}

func accessCache() {
	total := 0
	for i := 0; i < 5; i++ {
		n := getCached(i)
		total += n
	}
	fmt.Printf("total: %d\n", total)
}

func main() {
	cache = make(map[int]int)
	go accessCache()
	accessCache()

	// for simplicity of the example
	// don't use time.Sleep() to coordinate goroutines
	// in production code
	time.Sleep(100 * time.Millisecond)
}
Output:+20
total: 30
total: 30
66 1553595324542 glotid
Sha1: fd50a8ecc34ed6166775f9b0c5a00e6a601d880e
GlotID: fapbu7jdid
1505 1553595326837 glotoutput
Sha1: 1c10de6ae3293ba67f3f16651f9b6b47fda4a581
Lang: Go
FileName: main.go
CodeFull:+479
// :glot, :name main.go, :run go run -race main.go, :allow error
package main

import (
	"fmt"
	"runtime"
	"sync"
	"time"
)

// :show start
var (
	n int
)

func main() {
	var wg sync.WaitGroup
	nCPU := runtime.NumCPU()
	nIter := 10
	for i := 0; i < nCPU; i++ {
		wg.Add(1)
		go func() {
			defer wg.Done()
			for j := 0; j < nIter; j++ {
				n++
				time.Sleep(time.Microsecond * 10)
			}
		}()
	}
	wg.Wait()
	fmt.Printf("n is: %d, expected: %d\n", n, nCPU*nIter)
}

// :show end
CodeToRun:+386
package main

import (
	"fmt"
	"runtime"
	"sync"
	"time"
)

var (
	n int
)

func main() {
	var wg sync.WaitGroup
	nCPU := runtime.NumCPU()
	nIter := 10
	for i := 0; i < nCPU; i++ {
		wg.Add(1)
		go func() {
			defer wg.Done()
			for j := 0; j < nIter; j++ {
				n++
				time.Sleep(time.Microsecond * 10)
			}
		}()
	}
	wg.Wait()
	fmt.Printf("n is: %d, expected: %d\n", n, nCPU*nIter)
}
RunCmd: go run -race main.go
Output:+495
n is: 19, expected: 20
==================
WARNING: DATA RACE
Read at 0x0000005ba3c0 by goroutine 7:
  main.main.func1()
      /tmp/353703938/main.go:23 +0x6d

Previous write at 0x0000005ba3c0 by goroutine 6:
  main.main.func1()
      /tmp/353703938/main.go:23 +0x89

Goroutine 7 (running) created at:
  main.main()
      /tmp/353703938/main.go:20 +0xcf

Goroutine 6 (running) created at:
  main.main()
      /tmp/353703938/main.go:20 +0xcf
==================
Found 1 data race(s)
exit status 66
66 1553595327374 glotid
Sha1: 1c10de6ae3293ba67f3f16651f9b6b47fda4a581
GlotID: fapbu98333
1550 1553595328675 glotoutput
Sha1: d14d99c8e3f04bb1a5bd3e9b3352c9a21c244eb8
Lang: Go
FileName: main.go
CodeFull:+731
// :glot, :name main.go
package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
)

// :show start

// ReadLines reads all lines from a file
func ReadLines(filePath string) ([]string, error) {
	file, err := os.OpenFile(filePath, os.O_RDONLY, 0666)
	if err != nil {
		return nil, err
	}
	defer file.Close()
	scanner := bufio.NewScanner(file)
	res := make([]string, 0)
	for scanner.Scan() {
		line := scanner.Bytes()
		res = append(res, string(line))
	}
	if err = scanner.Err(); err != nil {
		return nil, err
	}
	return res, nil
}

func main() {
	path := "main.go"
	lines, err := ReadLines(path)
	if err != nil {
		log.Fatalf("ReadLines failed with '%s'\n", err)
	}
	fmt.Printf("File %s has %d lines\n", path, len(lines))
}

// :show end
CodeToRun:+678
package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
)

// ReadLines reads all lines from a file
func ReadLines(filePath string) ([]string, error) {
	file, err := os.OpenFile(filePath, os.O_RDONLY, 0666)
	if err != nil {
		return nil, err
	}
	defer file.Close()
	scanner := bufio.NewScanner(file)
	res := make([]string, 0)
	for scanner.Scan() {
		line := scanner.Bytes()
		res = append(res, string(line))
	}
	if err = scanner.Err(); err != nil {
		return nil, err
	}
	return res, nil
}

func main() {
	path := "main.go"
	lines, err := ReadLines(path)
	if err != nil {
		log.Fatalf("ReadLines failed with '%s'\n", err)
	}
	fmt.Printf("File %s has %d lines\n", path, len(lines))
}
Output:+26
File main.go has 36 lines
66 1553595328846 glotid
Sha1: d14d99c8e3f04bb1a5bd3e9b3352c9a21c244eb8
GlotID: fapbua3lr9
1098 1553595330006 glotoutput
Sha1: 018992d8a0300eba30208ac06cb7bde5a6c2521f
Lang: Go
FileName: main.go
CodeFull:+501
// :glot, :name main.go
package main

import (
	"fmt"
	"log"
	"os"
)

// :show start

// GetFileSize returns file size or error if e.g. file doesn't exist
func GetFileSize(path string) (int64, error) {
	st, err := os.Lstat(path)
	if err != nil {
		return -1, err
	}
	return st.Size(), nil
}

func main() {
	path := "main.go"
	size, err := GetFileSize(path)
	if err != nil {
		log.Fatalf("GetFileSize failed with '%s'\n", err)
	}
	fmt.Printf("File %s is %d bytes in size\n", path, size)
}

// :show end
CodeToRun:+448
package main

import (
	"fmt"
	"log"
	"os"
)

// GetFileSize returns file size or error if e.g. file doesn't exist
func GetFileSize(path string) (int64, error) {
	st, err := os.Lstat(path)
	if err != nil {
		return -1, err
	}
	return st.Size(), nil
}

func main() {
	path := "main.go"
	size, err := GetFileSize(path)
	if err != nil {
		log.Fatalf("GetFileSize failed with '%s'\n", err)
	}
	fmt.Printf("File %s is %d bytes in size\n", path, size)
}
Output:+34
File main.go is 448 bytes in size
66 1553595330197 glotid
Sha1: 018992d8a0300eba30208ac06cb7bde5a6c2521f
GlotID: fapbuaw3tc
1232 1553595331439 glotoutput
Sha1: b2f72d61c825b5d3bf11a02094212cea45bb8ace
Lang: Go
FileName: main.go
CodeFull:+363
// :glot, :name main.go
package main

import (
	"fmt"
	"log"
	"os"
)

// :show start

func main() {
	st, err := os.Stat("main.go")
	if err != nil {
		log.Fatalf("GetFileSize failed with '%s'\n", err)
	}
	fmt.Printf(`Name: %s
Size: %d
IsDir: %v
Mode: %x
ModTime: %s
OS info: %#v
`, st.Name(), st.Size(), st.IsDir(), st.Mode, st.ModTime(), st.Sys())
}

// :show end
CodeToRun:+310
package main

import (
	"fmt"
	"log"
	"os"
)

func main() {
	st, err := os.Stat("main.go")
	if err != nil {
		log.Fatalf("GetFileSize failed with '%s'\n", err)
	}
	fmt.Printf(`Name: %s
Size: %d
IsDir: %v
Mode: %x
ModTime: %s
OS info: %#v
`, st.Name(), st.Size(), st.IsDir(), st.Mode, st.ModTime(), st.Sys())
}
Output:+443
Name: main.go
Size: 310
IsDir: false
Mode: 48ec30
ModTime: 2019-03-26 10:12:13.595588037 +0000 UTC
OS info: &syscall.Stat_t{Dev:0x3c, Ino:0x336796, Nlink:0x1, Mode:0x81a4, Uid:0x3e8, Gid:0x3e8, X__pad0:0, Rdev:0x0, Size:310, Blksize:4096, Blocks:8, Atim:syscall.Timespec{Sec:1553595133, Nsec:611588290}, Mtim:syscall.Timespec{Sec:1553595133, Nsec:595588037}, Ctim:syscall.Timespec{Sec:1553595133, Nsec:595588037}, X__unused:[3]int64{0, 0, 0}}
66 1553595331609 glotid
Sha1: b2f72d61c825b5d3bf11a02094212cea45bb8ace
GlotID: fapbubqtrq
1681 1553595332682 glotoutput
Sha1: b7b5f95ec46cde56f25433897d506db8e354e2a8
Lang: Go
FileName: main.go
CodeFull:+774
// :glot, :name main.go
package main

import (
	"fmt"
	"os"
)

// :show start

// IsPathxists returns true if a given path exists, false if it doesn't.
// It might return an error if e.g. file exists but you don't have
// access
func IsPathxists(path string) (bool, error) {
	_, err := os.Lstat(path)
	if err == nil {
		return true, nil
	}
	if os.IsNotExist(err) {
		return false, nil
	}
	// error other than not existing e.g. permission denied
	return false, err
}

func printExists(path string) {
	exists, err := IsPathxists(path)
	if err == nil {
		fmt.Printf("File '%s' exists: %v\n", path, exists)
	} else {
		fmt.Printf("IsFileExists('%s') failed with '%s'\n", path, err)
	}
}
func main() {
	printExists("main.go")
	printExists("non-existent-file.txt")
}

// :show end
CodeToRun:+721
package main

import (
	"fmt"
	"os"
)

// IsPathxists returns true if a given path exists, false if it doesn't.
// It might return an error if e.g. file exists but you don't have
// access
func IsPathxists(path string) (bool, error) {
	_, err := os.Lstat(path)
	if err == nil {
		return true, nil
	}
	if os.IsNotExist(err) {
		return false, nil
	}
	// error other than not existing e.g. permission denied
	return false, err
}

func printExists(path string) {
	exists, err := IsPathxists(path)
	if err == nil {
		fmt.Printf("File '%s' exists: %v\n", path, exists)
	} else {
		fmt.Printf("IsFileExists('%s') failed with '%s'\n", path, err)
	}
}
func main() {
	printExists("main.go")
	printExists("non-existent-file.txt")
}
Output:+71
File 'main.go' exists: true
File 'non-existent-file.txt' exists: false
66 1553595333195 glotid
Sha1: b7b5f95ec46cde56f25433897d506db8e354e2a8
GlotID: fapbucov40
1470 1553595334512 glotoutput
Sha1: 4c36a16feaee673f172840873123ee4246ef98da
Lang: Go
FileName: main.go
CodeFull:+710
// :glot, :no output, :name main.go
package main

import (
	"io"
	"log"
	"os"
)

// :show start
// CopyFile copies a src file to dst
func CopyFile(dst, src string) error {
	srcFile, err := os.Open(src)
	if err != nil {
		return err
	}
	defer srcFile.Close()

	dstFile, err := os.Create(dst)
	if err != nil {
		return err
	}
	_, err = io.Copy(dstFile, srcFile)
	err2 := dstFile.Close()
	if err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		// delete the destination if copy failed
		os.Remove(dst)
	}
	return err
}

// :show end

func main() {
	src := "main.go"
	dst := "main_copy.go"
	err := CopyFile(dst, src)
	if err != nil {
		log.Fatalf("CopyFile failed with '%s'\n", err)
	}
	os.Remove(dst)
}
CodeToRun:+645
package main

import (
	"io"
	"log"
	"os"
)

// CopyFile copies a src file to dst
func CopyFile(dst, src string) error {
	srcFile, err := os.Open(src)
	if err != nil {
		return err
	}
	defer srcFile.Close()

	dstFile, err := os.Create(dst)
	if err != nil {
		return err
	}
	_, err = io.Copy(dstFile, srcFile)
	err2 := dstFile.Close()
	if err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		// delete the destination if copy failed
		os.Remove(dst)
	}
	return err
}

func main() {
	src := "main.go"
	dst := "main_copy.go"
	err := CopyFile(dst, src)
	if err != nil {
		log.Fatalf("CopyFile failed with '%s'\n", err)
	}
	os.Remove(dst)
}
Output:+0
66 1553595334682 glotid
Sha1: 4c36a16feaee673f172840873123ee4246ef98da
GlotID: fapbudkpi8
909 1553595336254 glotoutput
Sha1: 212cd1c890ef5b5dcd77095154c912626ce91232
Lang: Go
FileName: main.go
CodeFull:+400
// :glot, :name main.go
package main

import (
	"fmt"
	"io/ioutil"
	"log"
)

// :show start
func main() {
	dir := "."
	fileInfos, err := ioutil.ReadDir(dir)
	if err != nil {
		log.Fatalf("ioutil.ReadDir('%s') failed with '%s'\n", dir, err)
	}
	for i, fi := range fileInfos {
		if i < 4 {
			fmt.Printf("Path: %s, is dir: %v, size: %d bytes\n", fi.Name(), fi.IsDir(), fi.Size())
		}
	}
}

// :show end
CodeToRun:+348
package main

import (
	"fmt"
	"io/ioutil"
	"log"
)

func main() {
	dir := "."
	fileInfos, err := ioutil.ReadDir(dir)
	if err != nil {
		log.Fatalf("ioutil.ReadDir('%s') failed with '%s'\n", dir, err)
	}
	for i, fi := range fileInfos {
		if i < 4 {
			fmt.Printf("Path: %s, is dir: %v, size: %d bytes\n", fi.Name(), fi.IsDir(), fi.Size())
		}
	}
}
Output:+46
Path: main.go, is dir: false, size: 348 bytes
66 1553595336422 glotid
Sha1: 212cd1c890ef5b5dcd77095154c912626ce91232
GlotID: fapbuem0ep
1096 1553595337692 glotoutput
Sha1: 63daccf5e68ca1610e46527cb77350c8c59934ad
Lang: Go
FileName: main.go
CodeFull:+466
// :glot
package main

import (
	"fmt"
	"os"
	"path/filepath"
)

// :show start
func main() {
	nShown := 0
	err := filepath.Walk(".", func(path string, fi os.FileInfo, err error) error {
		if err != nil {
			return err
		}
		if nShown > 4 {
			return nil
		}
		nShown++
		fmt.Printf("Path: %s, is dir: %v, size: %d bytes\n", fi.Name(), fi.IsDir(), fi.Size())
		return nil
	})

	if err != nil {
		fmt.Printf("filepath.Walk failed with '%s'\n", err)
	}
}

// :show end
CodeToRun:+429
package main

import (
	"fmt"
	"os"
	"path/filepath"
)

func main() {
	nShown := 0
	err := filepath.Walk(".", func(path string, fi os.FileInfo, err error) error {
		if err != nil {
			return err
		}
		if nShown > 4 {
			return nil
		}
		nShown++
		fmt.Printf("Path: %s, is dir: %v, size: %d bytes\n", fi.Name(), fi.IsDir(), fi.Size())
		return nil
	})

	if err != nil {
		fmt.Printf("filepath.Walk failed with '%s'\n", err)
	}
}
Output:+86
Path: ., is dir: true, size: 4096 bytes
Path: main.go, is dir: false, size: 429 bytes
66 1553595337860 glotid
Sha1: 63daccf5e68ca1610e46527cb77350c8c59934ad
GlotID: fapbufgtqk
452 1553595338947 glotoutput
Sha1: 99de41208b66aaaec91b35cc359f12c74d285ff3
Lang: Go
FileName: main.go
CodeFull:+178
// :glot
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	// :show start
	path := filepath.Join("dir", "file.txt")
	fmt.Printf("path: %s\n", path)
	// :show end
}
CodeToRun:+139
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	path := filepath.Join("dir", "file.txt")
	fmt.Printf("path: %s\n", path)
}
Output:+19
path: dir/file.txt
66 1553595339472 glotid
Sha1: 99de41208b66aaaec91b35cc359f12c74d285ff3
GlotID: fapbug7qwl
557 1553595340658 glotoutput
Sha1: f6384759f63aebb74dc6126ab64f644eafeb1f61
Lang: Go
FileName: main.go
CodeFull:+227
// :glot
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	// :show start
	path := filepath.Join("dir", "file.txt")
	dir, file := filepath.Split(path)
	fmt.Printf("dir: %s, file: %s\n", dir, file)
	// :show end
}
CodeToRun:+188
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	path := filepath.Join("dir", "file.txt")
	dir, file := filepath.Split(path)
	fmt.Printf("dir: %s, file: %s\n", dir, file)
}
Output:+26
dir: dir/, file: file.txt
66 1553595340825 glotid
Sha1: f6384759f63aebb74dc6126ab64f644eafeb1f61
GlotID: fapbuh8e7h
485 1553595342192 glotoutput
Sha1: 96a8592e650f581a57ac737459ecd8e56b25e6d9
Lang: Go
FileName: main.go
CodeFull:+186
// :glot
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	// :show start

	parts := filepath.SplitList("/usr/bin:/tmp")
	fmt.Printf("parts: %#v\n", parts)
	// :show end
}
CodeToRun:+147
package main

import (
	"fmt"
	"path/filepath"
)

func main() {

	parts := filepath.SplitList("/usr/bin:/tmp")
	fmt.Printf("parts: %#v\n", parts)
}
Output:+36
parts: []string{"/usr/bin", "/tmp"}
66 1553595342360 glotid
Sha1: 96a8592e650f581a57ac737459ecd8e56b25e6d9
GlotID: fapbui59sl
558 1553595344373 glotoutput
Sha1: 0b296fc21e7a7961aabced31923a26c214bbc739
Lang: Go
FileName: main.go
CodeFull:+223
// :glot
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	// :show start
	path := filepath.Join("dir", "file.txt")
	file := filepath.Base(path)
	fmt.Printf("path: %s, file: %s\n", path, file)
	// :show end
}
CodeToRun:+184
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	path := filepath.Join("dir", "file.txt")
	file := filepath.Base(path)
	fmt.Printf("path: %s, file: %s\n", path, file)
}
Output:+35
path: dir/file.txt, file: file.txt
66 1553595344541 glotid
Sha1: 0b296fc21e7a7961aabced31923a26c214bbc739
GlotID: fapbujg1hc
544 1553595345879 glotoutput
Sha1: 49519b6918d10de6a4f1baa0d526cabb5945e786
Lang: Go
FileName: main.go
CodeFull:+219
// :glot
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	// :show start
	path := filepath.Join("dir", "file.txt")
	dir := filepath.Dir(path)
	fmt.Printf("path: %s, dif: %s\n", path, dir)
	// :show end
}
CodeToRun:+180
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	path := filepath.Join("dir", "file.txt")
	dir := filepath.Dir(path)
	fmt.Printf("path: %s, dif: %s\n", path, dir)
}
Output:+29
path: dir/file.txt, dif: dir
66 1553595346048 glotid
Sha1: 49519b6918d10de6a4f1baa0d526cabb5945e786
GlotID: fapbukcbjs
421 1553595347619 glotoutput
Sha1: ebd51d0e8d59e434a0898a2611fd32cdf12ecd9a
Lang: Go
FileName: main.go
CodeFull:+167
// :glot
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	// :show start
	ext := filepath.Ext("file.txt")
	fmt.Printf("ext: %s\n", ext)
	// :show end
}
CodeToRun:+128
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	ext := filepath.Ext("file.txt")
	fmt.Printf("ext: %s\n", ext)
}
Output:+10
ext: .txt
66 1553595347787 glotid
Sha1: ebd51d0e8d59e434a0898a2611fd32cdf12ecd9a
GlotID: fapbuldlv1
940 1553595349054 glotoutput
Sha1: e32eb9c104082c1a34c2f56b91a10d31f145b1e1
Lang: Go
FileName: main.go
CodeFull:+379
// :glot
package main

import (
	"fmt"
	"time"
)

func main() {
	// :show start
	t := time.Date(2017, 9, 4, 3, 38, 45, 0, time.UTC)
	fmt.Println(t.Format("2006-02-01 15:04:05.000 MST"))
	fmt.Println(t.Format("2006-02-1 15pm"))
	fmt.Println(t.Format("Jan 06 Mon 2 01"))
	fmt.Println(t.Format("January 6 Mon 2 1"))
	fmt.Println(t.Format("Month: Jan '1', '01', _2"))
	// :show end
}
CodeToRun:+340
package main

import (
	"fmt"
	"time"
)

func main() {
	t := time.Date(2017, 9, 4, 3, 38, 45, 0, time.UTC)
	fmt.Println(t.Format("2006-02-01 15:04:05.000 MST"))
	fmt.Println(t.Format("2006-02-1 15pm"))
	fmt.Println(t.Format("Jan 06 Mon 2 01"))
	fmt.Println(t.Format("January 6 Mon 2 1"))
	fmt.Println(t.Format("Month: Jan '1', '01', _2"))
}
Output:+104
2017-04-09 03:38:45.000 UTC
2017-04-9 03am
Sep 17 Mon 4 09
September 6 Mon 4 9
Month: Sep '9', '09',  4
66 1553595349221 glotid
Sha1: e32eb9c104082c1a34c2f56b91a10d31f145b1e1
GlotID: fapbum8clv
792 1553595350344 glotoutput
Sha1: e216279918ea87af05dd256f1fce9b115bd6415f
Lang: Go
FileName: main.go
CodeFull:+343
// :glot
package main

import (
	"fmt"
	"log"
	"time"
)

func main() {
	// :show start
	s := "2017-04-09 03:38:45.000 UTC"
	t, err := time.Parse("2006-02-01 15:04:05.000 MST", s)
	if err != nil {
		log.Fatalf("time.Parse() failed wiht '%s'\n", err)
	}
	fmt.Printf("year: %d, month: %d, day: %d\n", t.Year(), t.Month(), t.Day())
	// :show end
}
CodeToRun:+304
package main

import (
	"fmt"
	"log"
	"time"
)

func main() {
	s := "2017-04-09 03:38:45.000 UTC"
	t, err := time.Parse("2006-02-01 15:04:05.000 MST", s)
	if err != nil {
		log.Fatalf("time.Parse() failed wiht '%s'\n", err)
	}
	fmt.Printf("year: %d, month: %d, day: %d\n", t.Year(), t.Month(), t.Day())
}
Output:+29
year: 2017, month: 9, day: 4
66 1553595350512 glotid
Sha1: e216279918ea87af05dd256f1fce9b115bd6415f
GlotID: fapbun003h
841 1553595352023 glotoutput
Sha1: 8ab12f13c94f77d5166be67c025bba57e17faa0c
Lang: Go
FileName: main.go
CodeFull:+312
// :glot, :name main.go
// :run go run main.go -echo echo-arg additional arg
package main

import (
	"fmt"
	"os"
)

// :show start
func main() {
	fmt.Printf("Name of executable: '%s'\n", os.Args[0])
	args := os.Args[1:]
	for i, arg := range args {
		fmt.Printf("Arg %d, value: '%s'\n", i, arg)
	}
}

// :show end
CodeToRun:+207
package main

import (
	"fmt"
	"os"
)

func main() {
	fmt.Printf("Name of executable: '%s'\n", os.Args[0])
	args := os.Args[1:]
	for i, arg := range args {
		fmt.Printf("Arg %d, value: '%s'\n", i, arg)
	}
}
RunCmd: go run main.go -echo echo-arg additional arg
Output:+153
Name of executable: '/tmp/go-build145371810/b001/exe/main'
Arg 0, value: '-echo'
Arg 1, value: 'echo-arg'
Arg 2, value: 'additional'
Arg 3, value: 'arg'
66 1553595352230 glotid
Sha1: 8ab12f13c94f77d5166be67c025bba57e17faa0c
GlotID: fapbuo0t36
1239 1553595353561 glotoutput
Sha1: c66b0487b3683fa96da392951ef6128c0c9e593a
Lang: Go
FileName: main.go
CodeFull:+562
// :glot
package main

import (
	"fmt"
	"log"
	"os/exec"
	"sync/atomic"
	"time"
)

func main() {
	// :show start
	cmd := exec.Command("go", "version")

	err := cmd.Start()
	if err != nil {
		log.Fatalf("cmd.Start() failed with '%s'\n", err)
	}

	var timedOut int32
	timeout := 1 * time.Millisecond
	stopTimer := time.AfterFunc(timeout, func() {
		cmd.Process.Kill()
		atomic.StoreInt32(&timedOut, 1)
	})

	err = cmd.Wait()
	stopTimer.Stop()
	didTimeout := atomic.LoadInt32(&timedOut) != 0
	fmt.Printf("didTimeout: %v, err: %v\n", didTimeout, err)
	// :show end
}
CodeToRun:+523
package main

import (
	"fmt"
	"log"
	"os/exec"
	"sync/atomic"
	"time"
)

func main() {
	cmd := exec.Command("go", "version")

	err := cmd.Start()
	if err != nil {
		log.Fatalf("cmd.Start() failed with '%s'\n", err)
	}

	var timedOut int32
	timeout := 1 * time.Millisecond
	stopTimer := time.AfterFunc(timeout, func() {
		cmd.Process.Kill()
		atomic.StoreInt32(&timedOut, 1)
	})

	err = cmd.Wait()
	stopTimer.Stop()
	didTimeout := atomic.LoadInt32(&timedOut) != 0
	fmt.Printf("didTimeout: %v, err: %v\n", didTimeout, err)
}
Output:+38
didTimeout: true, err: signal: killed
66 1553595353729 glotid
Sha1: c66b0487b3683fa96da392951ef6128c0c9e593a
GlotID: fapbuowy9y
948 1553595355095 glotoutput
Sha1: 5bc84c408c9097098ca4930cc94cfdc1c97b1b9f
Lang: Go
FileName: main.go
CodeFull:+391
// :glot, :allow error
package main

import (
	"log"
	"os/exec"
)

func main() {
	// :show start
	cmd := exec.Command("go", "version")
	_, err := cmd.CombinedOutput()
	if err != nil {
		log.Fatalf("first cmd.CombintedOutput() failed with '%s'\n", err)
	}

	_, err = cmd.CombinedOutput()
	if err != nil {
		log.Fatalf("second cmd.CombintedOutput() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+338
package main

import (
	"log"
	"os/exec"
)

func main() {
	cmd := exec.Command("go", "version")
	_, err := cmd.CombinedOutput()
	if err != nil {
		log.Fatalf("first cmd.CombintedOutput() failed with '%s'\n", err)
	}

	_, err = cmd.CombinedOutput()
	if err != nil {
		log.Fatalf("second cmd.CombintedOutput() failed with '%s'\n", err)
	}
}
Output:+102
2019/03/26 10:12:37 second cmd.CombintedOutput() failed with 'exec: Stdout already set'
exit status 1
66 1553595355301 glotid
Sha1: 5bc84c408c9097098ca4930cc94cfdc1c97b1b9f
GlotID: fapbuptt90
1197 1553595356836 glotoutput
Sha1: 9fc3d05b4d352fe3895491d7875647365dfce57d
Lang: Go
FileName: main.go
CodeFull:+534
// :glot
package main

import (
	"encoding/json"
	"fmt"
	"log"
)

// :show start
var jsonStr = `{
	"name": "Jane",
	"age": 24,
	"city": "ny"
}`
// :show end

func main() {
	// :show start
	var doc map[string]interface{}
	err := json.Unmarshal([]byte(jsonStr), &doc)
	if err != nil {
		log.Fatalf("json.Unmarshal failed with '%s'\n", err)
	}
	fmt.Printf("doc: %#v\n", doc)
	name, ok := doc["name"].(string)
	if !ok {
		log.Fatalf("doc has no key 'name' or its value is not string\n")
	}
	fmt.Printf("name: %#v\n", name)
	// :show end
}
CodeToRun:+467
package main

import (
	"encoding/json"
	"fmt"
	"log"
)

var jsonStr = `{
	"name": "Jane",
	"age": 24,
	"city": "ny"
}`

func main() {
	var doc map[string]interface{}
	err := json.Unmarshal([]byte(jsonStr), &doc)
	if err != nil {
		log.Fatalf("json.Unmarshal failed with '%s'\n", err)
	}
	fmt.Printf("doc: %#v\n", doc)
	name, ok := doc["name"].(string)
	if !ok {
		log.Fatalf("doc has no key 'name' or its value is not string\n")
	}
	fmt.Printf("name: %#v\n", name)
}
Output:+80
doc: map[string]interface {}{"name":"Jane", "age":24, "city":"ny"}
name: "Jane"
66 1553595357041 glotid
Sha1: 9fc3d05b4d352fe3895491d7875647365dfce57d
GlotID: fapbuqvy1c
2731 1553595358617 glotoutput
Sha1: 25c1b6dd899b59fc6b4618e01b7e36d1781e7fd0
Lang: Go
FileName: main.go
CodeFull:+1252
// :glot
package main

import (
	"encoding/json"
	"fmt"
)

// :show start
var jsonBlob = []byte(`
{
  "_total": 1,
  "_links": {
	"self": "https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=0",
	"next": "https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=25"
  },
  "subscriptions": [
	{
	  "created_at": "2011-11-23T02:53:17Z",
	  "_id": "abcdef0000000000000000000000000000000000",
	  "_links": {
		"self": "https://api.twitch.tv/kraken/channels/foo/subscriptions/bar"
	  },
	  "user": {
		"display_name": "bar",
		"_id": 123456,
		"name": "bar",
		"created_at": "2011-06-16T18:23:11Z",
		"updated_at": "2014-10-23T02:20:51Z",
		"_links": {
		  "self": "https://api.twitch.tv/kraken/users/bar"
		}
	  }
	}
  ]
}
`)

// :show end

func main() {
	// :show start
	var js struct {
		Total int `json:"_total"`
		Links struct {
			Next string `json:"next"`
		} `json:"_links"`
		Subs []struct {
			Created string `json:"created_at"`
			User    struct {
				Name string `json:"name"`
				ID   int    `json:"_id"`
			} `json:"user"`
		} `json:"subscriptions"`
	}

	err := json.Unmarshal(jsonBlob, &js)
	if err != nil {
		fmt.Println("error:", err)
	}
	fmt.Printf("%+v", js)
	// :show end
}
CodeToRun:+1184
package main

import (
	"encoding/json"
	"fmt"
)

var jsonBlob = []byte(`
{
  "_total": 1,
  "_links": {
	"self": "https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=0",
	"next": "https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=25"
  },
  "subscriptions": [
	{
	  "created_at": "2011-11-23T02:53:17Z",
	  "_id": "abcdef0000000000000000000000000000000000",
	  "_links": {
		"self": "https://api.twitch.tv/kraken/channels/foo/subscriptions/bar"
	  },
	  "user": {
		"display_name": "bar",
		"_id": 123456,
		"name": "bar",
		"created_at": "2011-06-16T18:23:11Z",
		"updated_at": "2014-10-23T02:20:51Z",
		"_links": {
		  "self": "https://api.twitch.tv/kraken/users/bar"
		}
	  }
	}
  ]
}
`)

func main() {
	var js struct {
		Total int `json:"_total"`
		Links struct {
			Next string `json:"next"`
		} `json:"_links"`
		Subs []struct {
			Created string `json:"created_at"`
			User    struct {
				Name string `json:"name"`
				ID   int    `json:"_id"`
			} `json:"user"`
		} `json:"subscriptions"`
	}

	err := json.Unmarshal(jsonBlob, &js)
	if err != nil {
		fmt.Println("error:", err)
	}
	fmt.Printf("%+v", js)
}
Output:+175
{Total:1 Links:{Next:https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=25} Subs:[{Created:2011-11-23T02:53:17Z User:{Name:bar ID:123456}}]}
66 1553595358787 glotid
Sha1: 25c1b6dd899b59fc6b4618e01b7e36d1781e7fd0
GlotID: fapburxb7x
2590 1553595360112 glotoutput
Sha1: bd80c8f5f0d5451925a8b424eea1f17fb0389a23
Lang: Go
FileName: main.go
CodeFull:+1202
// :glot
package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"log"
	"os"
)

// :show start
type Student struct {
	Name     string
	Standard int `json:"Standard"`
}

func decodeFromReader(r io.Reader) ([]*Student, error) {
	var res []*Student

	dec := json.NewDecoder(r)
	err := dec.Decode(&res)
	if err != nil {
		return nil, err
	}
	return res, nil
}

func decodeFromString(s string) ([]*Student, error) {
	r := bytes.NewBufferString(s)
	return decodeFromReader(r)
}

func decodeFromFile(path string) ([]*Student, error) {
	f, err := os.Open(path)
	if err != nil {
		return nil, err
	}
	defer f.Close()
	return decodeFromReader(f)
}

// :show end

const jsonStr = `
[
    {
        "Name" : "John Doe",
        "Standard" : 4
    },
    {
        "Name" : "Peter Parker",
        "Standard" : 11
    },
    {
        "Name" : "Bilbo Baggins",
        "Standard" : 150
    }
]
`

func main() {
	// studentList, err := decodeFromFile("data.json")
	studentList, err := decodeFromString(jsonStr)
	if err != nil {
		log.Fatalf("decodeFromString() failed with '%s'\n", err)
	}
	for _, student := range studentList {
		fmt.Printf("Student: %s, standard: %d\n", student.Name, student.Standard)
	}
}
CodeToRun:+1164
package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"log"
	"os"
)

type Student struct {
	Name     string
	Standard int `json:"Standard"`
}

func decodeFromReader(r io.Reader) ([]*Student, error) {
	var res []*Student

	dec := json.NewDecoder(r)
	err := dec.Decode(&res)
	if err != nil {
		return nil, err
	}
	return res, nil
}

func decodeFromString(s string) ([]*Student, error) {
	r := bytes.NewBufferString(s)
	return decodeFromReader(r)
}

func decodeFromFile(path string) ([]*Student, error) {
	f, err := os.Open(path)
	if err != nil {
		return nil, err
	}
	defer f.Close()
	return decodeFromReader(f)
}

const jsonStr = `
[
    {
        "Name" : "John Doe",
        "Standard" : 4
    },
    {
        "Name" : "Peter Parker",
        "Standard" : 11
    },
    {
        "Name" : "Bilbo Baggins",
        "Standard" : 150
    }
]
`

func main() {
	// studentList, err := decodeFromFile("data.json")
	studentList, err := decodeFromString(jsonStr)
	if err != nil {
		log.Fatalf("decodeFromString() failed with '%s'\n", err)
	}
	for _, student := range studentList {
		fmt.Printf("Student: %s, standard: %d\n", student.Name, student.Standard)
	}
}
Output:+105
Student: John Doe, standard: 4
Student: Peter Parker, standard: 11
Student: Bilbo Baggins, standard: 150
66 1553595360280 glotid
Sha1: bd80c8f5f0d5451925a8b424eea1f17fb0389a23
GlotID: fapbustdip
3013 1553595361546 glotoutput
Sha1: 44c351ddf34877baa3bab37ea4d4165a41110522
Lang: Go
FileName: main.go
CodeFull:+1423
// :glot
package main

import (
	"encoding/json"
	"fmt"
	"log"
	"time"
)

func notCustom() {
	// :show start
	type Event struct {
		What string
		When time.Time
	}
	e := Event{
		What: "earthquake",
		When: time.Now(),
	}
	d, err := json.Marshal(&e)
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Standard time JSON: %s\n", string(d))
	// :show end
}

// :show start
type customTime time.Time

const customTimeFormat = `"2006-02-01"`

func (ct customTime) MarshalJSON() ([]byte, error) {
	t := time.Time(ct)
	s := t.Format(customTimeFormat)
	return []byte(s), nil
}

func (ct *customTime) UnmarshalJSON(d []byte) error {
	t, err := time.Parse(customTimeFormat, string(d))
	if err != nil {
		return err
	}
	*ct = customTime(t)
	return nil
}

type Event2 struct {
	What string
	When customTime
}

// :show end

func custom() {
	// :show start
	e := Event2{
		What: "earthquake",
		When: customTime(time.Now()),
	}
	d, err := json.Marshal(&e)
	if err != nil {
		log.Fatalf("json.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("\nCustom time JSON: %s\n", string(d))
	var decoded Event2
	err = json.Unmarshal(d, &decoded)
	if err != nil {
		log.Fatalf("json.Unmarshal failed with '%s'\n", err)
	}
	t := time.Time(decoded.When)
	fmt.Printf("Decoded custom time: %s\n", t.Format(customTimeFormat))
	// :show end
}

func main() {
	// :show start
	notCustom()
	custom()
	// :show end
}
CodeToRun:+1295
package main

import (
	"encoding/json"
	"fmt"
	"log"
	"time"
)

func notCustom() {
	type Event struct {
		What string
		When time.Time
	}
	e := Event{
		What: "earthquake",
		When: time.Now(),
	}
	d, err := json.Marshal(&e)
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Standard time JSON: %s\n", string(d))
}

type customTime time.Time

const customTimeFormat = `"2006-02-01"`

func (ct customTime) MarshalJSON() ([]byte, error) {
	t := time.Time(ct)
	s := t.Format(customTimeFormat)
	return []byte(s), nil
}

func (ct *customTime) UnmarshalJSON(d []byte) error {
	t, err := time.Parse(customTimeFormat, string(d))
	if err != nil {
		return err
	}
	*ct = customTime(t)
	return nil
}

type Event2 struct {
	What string
	When customTime
}

func custom() {
	e := Event2{
		What: "earthquake",
		When: customTime(time.Now()),
	}
	d, err := json.Marshal(&e)
	if err != nil {
		log.Fatalf("json.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("\nCustom time JSON: %s\n", string(d))
	var decoded Event2
	err = json.Unmarshal(d, &decoded)
	if err != nil {
		log.Fatalf("json.Unmarshal failed with '%s'\n", err)
	}
	t := time.Time(decoded.When)
	fmt.Printf("Decoded custom time: %s\n", t.Format(customTimeFormat))
}

func main() {
	notCustom()
	custom()
}
Output:+176
Standard time JSON: {"What":"earthquake","When":"2019-03-26T10:12:44.11848256Z"}

Custom time JSON: {"What":"earthquake","When":"2019-26-03"}
Decoded custom time: "2019-26-03"
66 1553595361715 glotid
Sha1: 44c351ddf34877baa3bab37ea4d4165a41110522
GlotID: fapbuto3xr
1340 1553595363016 glotoutput
Sha1: c871fb399e1b7153618299acc0e55b24d5ef79ea
Lang: Go
FileName: main.go
CodeFull:+617
// :glot
package main

import (
	"encoding/json"
	"fmt"
	"log"
)

// :show start
type MyStruct struct {
	uuid string
	Name string
}

func (m MyStruct) MarshalJSON() ([]byte, error) {
	j, err := json.Marshal(struct {
		Uuid string
		Name string
	}{
		Uuid: m.uuid,
		Name: m.Name,
	})
	if err != nil {
		return nil, err
	}
	return j, nil
}

// :show end

func main() {
	// :show start
	s := MyStruct{
		uuid: "uid-john",
		Name: "John",
	}
	d, err := json.Marshal(&s)
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Person in compact JSON: %s\n", string(d))

	// :show end
}
CodeToRun:+549
package main

import (
	"encoding/json"
	"fmt"
	"log"
)

type MyStruct struct {
	uuid string
	Name string
}

func (m MyStruct) MarshalJSON() ([]byte, error) {
	j, err := json.Marshal(struct {
		Uuid string
		Name string
	}{
		Uuid: m.uuid,
		Name: m.Name,
	})
	if err != nil {
		return nil, err
	}
	return j, nil
}

func main() {
	s := MyStruct{
		uuid: "uid-john",
		Name: "John",
	}
	d, err := json.Marshal(&s)
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Person in compact JSON: %s\n", string(d))

}
Output:+58
Person in compact JSON: {"Uuid":"uid-john","Name":"John"}
66 1553595363186 glotid
Sha1: c871fb399e1b7153618299acc0e55b24d5ef79ea
GlotID: fapbuujmf4
2244 1553595364418 glotoutput
Sha1: 5d77bfc0b7701a8ffe2a70eb38fd82f7257520ed
Lang: Go
FileName: main.go
CodeFull:+889
// :glot
package main

import (
	"encoding/json"
	"fmt"
	"io"
	"log"
	"os"
	"text/tabwriter"
)

// :show start
func printSerialized(v interface{}, w io.Writer) {
	d, err := json.Marshal(v)
	if err != nil {
		log.Fatalf("json.Marshal failed with '%s'\n", err)
	}
	fmt.Fprintf(w, "%T\t%s\n", v, string(d))
}

// :show end

func main() {
	// :show start
	w := new(tabwriter.Writer)
	w.Init(os.Stdout, 5, 0, 1, ' ', 0)
	fmt.Fprint(w, "Go type:\tJSON value:\n")
	fmt.Fprint(w, "\t\n")
	printSerialized(nil, w)
	printSerialized(5, w)
	printSerialized(8.23, w)
	printSerialized("john", w)
	ai := []int{5, 4, 18}
	printSerialized(ai, w)
	a := []interface{}{4, "string"}
	printSerialized(a, w)
	d := map[string]interface{}{
		"i": 5,
		"s": "foo",
	}
	printSerialized(d, w)
	s := struct {
		Name string
		Age  int
	}{
		Name: "John",
		Age:  37,
	}
	printSerialized(s, w)
	w.Flush()
	// :show end
}
CodeToRun:+821
package main

import (
	"encoding/json"
	"fmt"
	"io"
	"log"
	"os"
	"text/tabwriter"
)

func printSerialized(v interface{}, w io.Writer) {
	d, err := json.Marshal(v)
	if err != nil {
		log.Fatalf("json.Marshal failed with '%s'\n", err)
	}
	fmt.Fprintf(w, "%T\t%s\n", v, string(d))
}

func main() {
	w := new(tabwriter.Writer)
	w.Init(os.Stdout, 5, 0, 1, ' ', 0)
	fmt.Fprint(w, "Go type:\tJSON value:\n")
	fmt.Fprint(w, "\t\n")
	printSerialized(nil, w)
	printSerialized(5, w)
	printSerialized(8.23, w)
	printSerialized("john", w)
	ai := []int{5, 4, 18}
	printSerialized(ai, w)
	a := []interface{}{4, "string"}
	printSerialized(a, w)
	d := map[string]interface{}{
		"i": 5,
		"s": "foo",
	}
	printSerialized(d, w)
	s := struct {
		Name string
		Age  int
	}{
		Name: "John",
		Age:  37,
	}
	printSerialized(s, w)
	w.Flush()
}
Output:+417
Go type:                        JSON value:
                                
<nil>                           null
int                             5
float64                         8.23
string                          "john"
[]int                           [5,4,18]
[]interface {}                  [4,"string"]
map[string]interface {}         {"i":5,"s":"foo"}
struct { Name string; Age int } {"Name":"John","Age":37}
66 1553595364586 glotid
Sha1: 5d77bfc0b7701a8ffe2a70eb38fd82f7257520ed
GlotID: fapbuvdnrm
2260 1553595366239 glotoutput
Sha1: e2fbf2eaa37d21190cba0094a83f14faca065b4c
Lang: Go
FileName: main.go
CodeFull:+1062
// :glot
package main

import (
	"bytes"
	"encoding/xml"
	"fmt"
	"io"
)

// :show start
var xmlStr = `
<people>
	<person age="34">
		<first-name>John</first-name>
		<address>
			<city>San Francisco</city>
			<state>CA</state>
		</address>
	</person>
	<person age="23">
		<address>
			<city>Austin</city>
			<state>TX</state>
		</address>
	</person>
</people>`

type Address struct {
	City  string `xml:"city"`
	State string `xml:"state"`
}

// :show end

func main() {
	// :show start
	r := bytes.NewBufferString(xmlStr)
	decoder := xml.NewDecoder(r)
	for {
		t, err := decoder.Token()
		if err == io.EOF {
			// io.EOF is a successful end
			break
		}
		if err != nil {
			fmt.Printf("decoder.Token() failed with '%s'\n", err)
			break
		}

		switch v := t.(type) {

		case xml.StartElement:
			if v.Name.Local == "address" {
				var address Address
				err = decoder.DecodeElement(&address, &v)
				if err != nil {
					fmt.Printf("decoder.DecodeElement() failed with '%s'\n", err)
					break
				}
				fmt.Printf("%+#v\n", address)
			}
		}
	}
	// :show end
}
CodeToRun:+994
package main

import (
	"bytes"
	"encoding/xml"
	"fmt"
	"io"
)

var xmlStr = `
<people>
	<person age="34">
		<first-name>John</first-name>
		<address>
			<city>San Francisco</city>
			<state>CA</state>
		</address>
	</person>
	<person age="23">
		<address>
			<city>Austin</city>
			<state>TX</state>
		</address>
	</person>
</people>`

type Address struct {
	City  string `xml:"city"`
	State string `xml:"state"`
}

func main() {
	r := bytes.NewBufferString(xmlStr)
	decoder := xml.NewDecoder(r)
	for {
		t, err := decoder.Token()
		if err == io.EOF {
			// io.EOF is a successful end
			break
		}
		if err != nil {
			fmt.Printf("decoder.Token() failed with '%s'\n", err)
			break
		}

		switch v := t.(type) {

		case xml.StartElement:
			if v.Name.Local == "address" {
				var address Address
				err = decoder.DecodeElement(&address, &v)
				if err != nil {
					fmt.Printf("decoder.DecodeElement() failed with '%s'\n", err)
					break
				}
				fmt.Printf("%+#v\n", address)
			}
		}
	}
}
Output:+87
main.Address{City:"San Francisco", State:"CA"}
main.Address{City:"Austin", State:"TX"}
66 1553595366408 glotid
Sha1: e2fbf2eaa37d21190cba0094a83f14faca065b4c
GlotID: fapbuwgq0p
2835 1553595367896 glotoutput
Sha1: 261e29c04854a80075c5e78c38144fed302c0d2a
Lang: Go
FileName: main.go
CodeFull:+1261
// :glot
package main

import (
	"bytes"
	"encoding/xml"
	"fmt"
	"io"
	"log"
	"os"
)

var xmlStr = `
<people>
	<person age="34">
		<first-name>John</first-name>
		<address>
			<city>San Francisco</city>
			<state>CA</state>
		</address>
	</person>

	<person age="23">
		<first-name>Julia</first-name>
	</person>
</people>`

type People struct {
	Person []Person `xml:"person"`
}

type Person struct {
	Age       int     `xml:"age,attr"`
	FirstName string  `xml:"first-name"`
	Address   Address `xml:"address"`
}

type Address struct {
	City  *string `xml:"city"`
	State string  `xml:"state"`
}

// :show start
func decodeFromReader(r io.Reader) (*People, error) {
	var people People
	decoder := xml.NewDecoder(r)
	err := decoder.Decode(&people)
	if err != nil {
		return nil, err
	}
	return &people, nil
}

func decodeFromString(s string) (*People, error) {
	r := bytes.NewBufferString(s)
	return decodeFromReader(r)
}

func decodeFromFile(path string) (*People, error) {
	f, err := os.Open(path)
	if err != nil {
		return nil, err
	}
	defer f.Close()
	return decodeFromReader(f)
}

// :show end

func main() {
	people, err := decodeFromString(xmlStr)
	if err != nil {
		log.Fatalf("decodeFromString failed with '%s'\n", err)
	}
	fmt.Printf("%#v\n\n", people)
}
CodeToRun:+1223
package main

import (
	"bytes"
	"encoding/xml"
	"fmt"
	"io"
	"log"
	"os"
)

var xmlStr = `
<people>
	<person age="34">
		<first-name>John</first-name>
		<address>
			<city>San Francisco</city>
			<state>CA</state>
		</address>
	</person>

	<person age="23">
		<first-name>Julia</first-name>
	</person>
</people>`

type People struct {
	Person []Person `xml:"person"`
}

type Person struct {
	Age       int     `xml:"age,attr"`
	FirstName string  `xml:"first-name"`
	Address   Address `xml:"address"`
}

type Address struct {
	City  *string `xml:"city"`
	State string  `xml:"state"`
}

func decodeFromReader(r io.Reader) (*People, error) {
	var people People
	decoder := xml.NewDecoder(r)
	err := decoder.Decode(&people)
	if err != nil {
		return nil, err
	}
	return &people, nil
}

func decodeFromString(s string) (*People, error) {
	r := bytes.NewBufferString(s)
	return decodeFromReader(r)
}

func decodeFromFile(path string) (*People, error) {
	f, err := os.Open(path)
	if err != nil {
		return nil, err
	}
	defer f.Close()
	return decodeFromReader(f)
}

func main() {
	people, err := decodeFromString(xmlStr)
	if err != nil {
		log.Fatalf("decodeFromString failed with '%s'\n", err)
	}
	fmt.Printf("%#v\n\n", people)
}
Output:+232
&main.People{Person:[]main.Person{main.Person{Age:34, FirstName:"John", Address:main.Address{City:(*string)(0xc42000e400), State:"CA"}}, main.Person{Age:23, FirstName:"Julia", Address:main.Address{City:(*string)(nil), State:""}}}}

66 1553595368065 glotid
Sha1: 261e29c04854a80075c5e78c38144fed302c0d2a
GlotID: fapbuxg7s7
961 1553595369432 glotoutput
Sha1: 7b063ca0e3f28d31eb7bab4963f69c3c5b22944c
Lang: Go
FileName: main.go
CodeFull:+443
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start

type ShowXMLName struct {
	XMLName xml.Name `xml:"data"`
	N       int      `xml:"n"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowXMLName{
		N: 5,
	}
	printXML(v)

	// :show end
}
CodeToRun:+374
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowXMLName struct {
	XMLName xml.Name `xml:"data"`
	N       int      `xml:"n"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowXMLName{
		N: 5,
	}
	printXML(v)

}
Output:+28
XML: <data><n>5</n></data>

66 1553595369607 glotid
Sha1: 7b063ca0e3f28d31eb7bab4963f69c3c5b22944c
GlotID: fapbuyd4mj
1067 1553595371172 glotoutput
Sha1: 4fc7a070441142233a6ca47fd224872a3242203e
Lang: Go
FileName: main.go
CodeFull:+487
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start
type ShowOmit struct {
	Name          string `xml:"name"`
	NotSerialized string `xml:"-"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowOmit{
		Name:          "John",
		NotSerialized: "Connor",
	}
	printXML(v)
	// :show end
}
CodeToRun:+419
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowOmit struct {
	Name          string `xml:"name"`
	NotSerialized string `xml:"-"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowOmit{
		Name:          "John",
		NotSerialized: "Connor",
	}
	printXML(v)
}
Output:+45
XML: <ShowOmit><name>John</name></ShowOmit>

66 1553595371344 glotid
Sha1: 4fc7a070441142233a6ca47fd224872a3242203e
GlotID: fapbuzef4c
1101 1553595372709 glotoutput
Sha1: 2b3b6c1d9969aee475c2a82121afe4792a0c86b4
Lang: Go
FileName: main.go
CodeFull:+493
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start

type ShowOmitEmpty struct {
	NonEmpty string `xml:",omitempty"`
	Empty    string `xml:",omitempty"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowOmitEmpty{
		NonEmpty: "non empty",
		Empty:    "",
	}
	printXML(v)

	// :show end
}
CodeToRun:+424
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowOmitEmpty struct {
	NonEmpty string `xml:",omitempty"`
	Empty    string `xml:",omitempty"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowOmitEmpty{
		NonEmpty: "non empty",
		Empty:    "",
	}
	printXML(v)

}
Output:+68
XML: <ShowOmitEmpty><NonEmpty>non empty</NonEmpty></ShowOmitEmpty>

66 1553595372889 glotid
Sha1: 2b3b6c1d9969aee475c2a82121afe4792a0c86b4
GlotID: fapbv0bfe0
891 1553595374272 glotoutput
Sha1: f182a04d536649ed920827ddbc51567df96fe28f
Lang: Go
FileName: main.go
CodeFull:+403
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start
type ShowAttr struct {
	B bool `xml:"n,attr"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowAttr{
		B: true,
	}
	printXML(v)

	// :show end
}
CodeToRun:+335
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowAttr struct {
	B bool `xml:"n,attr"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowAttr{
		B: true,
	}
	printXML(v)

}
Output:+37
XML: <ShowAttr n="true"></ShowAttr>

66 1553595374441 glotid
Sha1: f182a04d536649ed920827ddbc51567df96fe28f
GlotID: fapbv18v6a
921 1553595375885 glotoutput
Sha1: fdd105d0c195932125fc9e684150b9ce53838bf4
Lang: Go
FileName: main.go
CodeFull:+417
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start
type ShowCharData struct {
	S string `xml:",chardata"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowCharData{
		S: "str",
	}
	printXML(v)

	// :show end
}
CodeToRun:+349
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowCharData struct {
	S string `xml:",chardata"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowCharData{
		S: "str",
	}
	printXML(v)

}
Output:+39
XML: <ShowCharData>str</ShowCharData>

66 1553595376055 glotid
Sha1: fdd105d0c195932125fc9e684150b9ce53838bf4
GlotID: fapbv27gcy
916 1553595377662 glotoutput
Sha1: 9f1b143344fbc8945c9497bbe6db02bfc9480bb5
Lang: Go
FileName: main.go
CodeFull:+411
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start

type ShowCData struct {
	S string `xml:",cdata"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowCData{
		S: "cdata",
	}
	printXML(v)

	// :show end
}
CodeToRun:+342
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowCData struct {
	S string `xml:",cdata"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowCData{
		S: "cdata",
	}
	printXML(v)

}
Output:+47
XML: <ShowCData><![CDATA[cdata]]></ShowCData>

66 1553595377874 glotid
Sha1: 9f1b143344fbc8945c9497bbe6db02bfc9480bb5
GlotID: fapbv3afxi
1071 1553595379365 glotoutput
Sha1: c101b9ec516b6530a98c0a28134e6b0fbb5a9bda
Lang: Go
FileName: main.go
CodeFull:+473
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start
type ShowInnerXML struct {
	Str string `xml:"s"`
	Raw string `xml:",innerxml"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowInnerXML{
		Str: "<foo></foo>",
		Raw: "<foo></foo>",
	}
	printXML(v)

	// :show end
}
CodeToRun:+405
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowInnerXML struct {
	Str string `xml:"s"`
	Raw string `xml:",innerxml"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowInnerXML{
		Str: "<foo></foo>",
		Raw: "<foo></foo>",
	}
	printXML(v)

}
Output:+77
XML: <ShowInnerXML><s>&lt;foo&gt;&lt;/foo&gt;</s><foo></foo></ShowInnerXML>

66 1553595379533 glotid
Sha1: c101b9ec516b6530a98c0a28134e6b0fbb5a9bda
GlotID: fapbv4a0ls
940 1553595380901 glotoutput
Sha1: 1d775ae3cff281a3a87fdce673b462399e458d1d
Lang: Go
FileName: main.go
CodeFull:+422
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start
type ShowComment struct {
	Str string `xml:",comment"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowComment{
		Str: "comment",
	}
	printXML(v)

	// :show end
}
CodeToRun:+354
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowComment struct {
	Str string `xml:",comment"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowComment{
		Str: "comment",
	}
	printXML(v)

}
Output:+48
XML: <ShowComment><!--comment--></ShowComment>

66 1553595381069 glotid
Sha1: 1d775ae3cff281a3a87fdce673b462399e458d1d
GlotID: fapbv56xn9
945 1553595382335 glotoutput
Sha1: bc7649f03c191c135309b57714be473bf554a5fe
Lang: Go
FileName: main.go
CodeFull:+418
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

// :show start

type ShowNesting struct {
	Str string `xml:"a>b>str"`
}

// :show end

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	// :show start
	v := &ShowNesting{
		Str: "str",
	}
	printXML(v)

	// :show end
}
CodeToRun:+349
package main

import (
	"encoding/xml"
	"fmt"
	"log"
)

type ShowNesting struct {
	Str string `xml:"a>b>str"`
}

func printXML(v interface{}) {
	d, err := xml.Marshal(v)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("XML: %s\n\n", string(d))
}

func main() {
	v := &ShowNesting{
		Str: "str",
	}
	printXML(v)

}
Output:+62
XML: <ShowNesting><a><b><str>str</str></b></a></ShowNesting>

66 1553595382503 glotid
Sha1: bc7649f03c191c135309b57714be473bf554a5fe
GlotID: fapbv61nyd
3319 1553595384183 glotoutput
Sha1: 30589b338c440a8b59cabaf4478b9e7b0a064631
Lang: Go
FileName: main.go
CodeFull:+1556
// :glot
package main

import (
	"encoding/xml"
	"fmt"
	"log"
	"time"
)

func notCustom() {
	// :show start
	type Event struct {
		What string
		When time.Time
	}
	e := Event{
		What: "earthquake",
		When: time.Now(),
	}
	d, err := xml.Marshal(&e)
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Standard time JSON: %s\n", string(d))
	// :show end
}

// :show start
type customTime time.Time

const customTimeFormat = `2006-02-01`

func (ct customTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	t := time.Time(ct)
	v := t.Format(customTimeFormat)
	return e.EncodeElement(v, start)
}

func (ct *customTime) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	var s string
	err := d.DecodeElement(&s, &start)
	if err != nil {
		return err
	}
	t, err := time.Parse(customTimeFormat, s)
	if err != nil {
		return err
	}
	*ct = customTime(t)
	return nil
}

type Event2 struct {
	What string
	When customTime
}

// :show end

func custom() {
	// :show start
	e := Event2{
		What: "earthquake",
		When: customTime(time.Now()),
	}
	d, err := xml.Marshal(&e)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("\nCustom time XML: %s\n", string(d))
	var decoded Event2
	err = xml.Unmarshal(d, &decoded)
	if err != nil {
		log.Fatalf("xml.Unmarshal failed with '%s'\n", err)
	}
	t := time.Time(decoded.When)
	fmt.Printf("Decoded custom time: %s\n", t.Format(customTimeFormat))
	// :show end
}

func main() {
	// :show start
	notCustom()
	custom()
	// :show end
}
CodeToRun:+1428
package main

import (
	"encoding/xml"
	"fmt"
	"log"
	"time"
)

func notCustom() {
	type Event struct {
		What string
		When time.Time
	}
	e := Event{
		What: "earthquake",
		When: time.Now(),
	}
	d, err := xml.Marshal(&e)
	if err != nil {
		log.Fatalf("json.MarshalIndent failed with '%s'\n", err)
	}
	fmt.Printf("Standard time JSON: %s\n", string(d))
}

type customTime time.Time

const customTimeFormat = `2006-02-01`

func (ct customTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	t := time.Time(ct)
	v := t.Format(customTimeFormat)
	return e.EncodeElement(v, start)
}

func (ct *customTime) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	var s string
	err := d.DecodeElement(&s, &start)
	if err != nil {
		return err
	}
	t, err := time.Parse(customTimeFormat, s)
	if err != nil {
		return err
	}
	*ct = customTime(t)
	return nil
}

type Event2 struct {
	What string
	When customTime
}

func custom() {
	e := Event2{
		What: "earthquake",
		When: customTime(time.Now()),
	}
	d, err := xml.Marshal(&e)
	if err != nil {
		log.Fatalf("xml.Marshal failed with '%s'\n", err)
	}
	fmt.Printf("\nCustom time XML: %s\n", string(d))
	var decoded Event2
	err = xml.Unmarshal(d, &decoded)
	if err != nil {
		log.Fatalf("xml.Unmarshal failed with '%s'\n", err)
	}
	t := time.Time(decoded.When)
	fmt.Printf("Decoded custom time: %s\n", t.Format(customTimeFormat))
}

func main() {
	notCustom()
	custom()
}
Output:+216
Standard time JSON: <Event><What>earthquake</What><When>2019-03-26T10:13:06.685692288Z</When></Event>

Custom time XML: <Event2><What>earthquake</What><When>2019-26-03</When></Event2>
Decoded custom time: 2019-26-03
66 1553595384353 glotid
Sha1: 30589b338c440a8b59cabaf4478b9e7b0a064631
GlotID: fapbv75boa
1304 1553595385755 glotoutput
Sha1: 17dfd2def70d12b2220928799b3b7670aa455e96
Lang: Go
FileName: main.go
CodeFull:+596
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
var tmplStr = `Data from a field: '{{ .Field }}'
Data from a method: '{{ .Method }}'
`

// :show end

type Data struct {
	Field int
}

func (d Data) Method() string {
	return "data from a method"
}

func main() {
	// :show start
	t := template.New("method")
	t, err := t.Parse(tmplStr)
	if err != nil {
		log.Fatalf("template.Parse() failed with '%s'\n", err)
	}

	data := Data{
		Field: 5,
	}

	err = t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+528
package main

import (
	"log"
	"os"
	"text/template"
)

var tmplStr = `Data from a field: '{{ .Field }}'
Data from a method: '{{ .Method }}'
`

type Data struct {
	Field int
}

func (d Data) Method() string {
	return "data from a method"
}

func main() {
	t := template.New("method")
	t, err := t.Parse(tmplStr)
	if err != nil {
		log.Fatalf("template.Parse() failed with '%s'\n", err)
	}

	data := Data{
		Field: 5,
	}

	err = t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+64
Data from a field: '5'
Data from a method: 'data from a method'
66 1553595385922 glotid
Sha1: 17dfd2def70d12b2220928799b3b7670aa455e96
GlotID: fapbv82yos
1132 1553595387250 glotoutput
Sha1: cbcaf6c49d1a118e9353eac81aad45f6b2b29c46
Lang: Go
FileName: main.go
CodeFull:+519
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `{{range . -}}
{{if .IsNew}}'{{.Name}}' is new{{else}}'{{.Name}}' is not new{{end}}
{{end}}`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("if").Parse(tmplStr))

	data := []struct {
		Name  string
		IsNew bool
	}{
		{"Bridge", false},
		{"Electric battery", true},
	}

	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+451
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `{{range . -}}
{{if .IsNew}}'{{.Name}}' is new{{else}}'{{.Name}}' is not new{{end}}
{{end}}`

func main() {
	t := template.Must(template.New("if").Parse(tmplStr))

	data := []struct {
		Name  string
		IsNew bool
	}{
		{"Bridge", false},
		{"Electric battery", true},
	}

	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+46
'Bridge' is not new
'Electric battery' is new
66 1553595387446 glotid
Sha1: cbcaf6c49d1a118e9353eac81aad45f6b2b29c46
GlotID: fapbv8z0r3
2120 1553595388810 glotoutput
Sha1: 75fab909a5a0f01d1e27ddde4f17b3f89d69caae
Lang: Go
FileName: main.go
CodeFull:+876
// :glot
package main

import (
	"log"
	"math"
	"os"
	"text/template"
)

// :show start
const tmplStr = `{{range . -}}
{{printf "%- 16s" .Name}} is: {{if .Value}}true{{else}}false{{end}}
{{end}}`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("if").Parse(tmplStr))

	var nilPtr *string = nil
	var nilSlice []float32
	emptySlice := []int{}

	data := []struct {
		Name  string
		Value interface{}
	}{
		{"bool false", false},
		{"bool true", true},
		{"integer 0", 0},
		{"integer 1", 1},
		{"float32 0", float32(0)},
		{"float64 NaN", math.NaN},
		{"empty string", ""},
		{"non-empty string", "haha"},
		{"nil slice", nilSlice},
		{"empty slice", emptySlice},
		{"non-empty slice", []int{3}},
		{"nil pointer", nilPtr},
	}

	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+808
package main

import (
	"log"
	"math"
	"os"
	"text/template"
)

const tmplStr = `{{range . -}}
{{printf "%- 16s" .Name}} is: {{if .Value}}true{{else}}false{{end}}
{{end}}`

func main() {
	t := template.Must(template.New("if").Parse(tmplStr))

	var nilPtr *string = nil
	var nilSlice []float32
	emptySlice := []int{}

	data := []struct {
		Name  string
		Value interface{}
	}{
		{"bool false", false},
		{"bool true", true},
		{"integer 0", 0},
		{"integer 1", 1},
		{"float32 0", float32(0)},
		{"float64 NaN", math.NaN},
		{"empty string", ""},
		{"non-empty string", "haha"},
		{"nil slice", nilSlice},
		{"empty slice", emptySlice},
		{"non-empty slice", []int{3}},
		{"nil pointer", nilPtr},
	}

	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+319
bool false       is: false
bool true        is: true
integer 0        is: false
integer 1        is: true
float32 0        is: false
float64 NaN      is: true
empty string     is: false
non-empty string is: true
nil slice        is: false
empty slice      is: false
non-empty slice  is: true
nil pointer      is: false
66 1553595388978 glotid
Sha1: 75fab909a5a0f01d1e27ddde4f17b3f89d69caae
GlotID: fapbv9wh2g
1690 1553595390467 glotoutput
Sha1: f610daea1b72cc21474b5692e17554f4560e46d1
Lang: Go
FileName: main.go
CodeFull:+783
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
type UserTweets struct {
	User   string
	Tweets []string
}

const tmplStr = `
{{- if not .Tweets -}}
User '{{.User}}' has no tweets.
{{ else -}}
User '{{.User}}' has {{ len .Tweets }} tweets:
{{ range .Tweets -}}
  '{{ . }}'
{{ end }}
{{- end}}`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("if").Parse(tmplStr))

	data := UserTweets{
		User: "kjk",
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	data = UserTweets{
		User:   "masa",
		Tweets: []string{"tweet one", "tweet two"},
	}
	err = t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	// :show end
}
CodeToRun:+715
package main

import (
	"log"
	"os"
	"text/template"
)

type UserTweets struct {
	User   string
	Tweets []string
}

const tmplStr = `
{{- if not .Tweets -}}
User '{{.User}}' has no tweets.
{{ else -}}
User '{{.User}}' has {{ len .Tweets }} tweets:
{{ range .Tweets -}}
  '{{ . }}'
{{ end }}
{{- end}}`

func main() {
	t := template.Must(template.New("if").Parse(tmplStr))

	data := UserTweets{
		User: "kjk",
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	data = UserTweets{
		User:   "masa",
		Tweets: []string{"tweet one", "tweet two"},
	}
	err = t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

}
Output:+76
User 'kjk' has no tweets.
User 'masa' has 2 tweets:
'tweet one'
'tweet two'
66 1553595390637 glotid
Sha1: f610daea1b72cc21474b5692e17554f4560e46d1
GlotID: fapbvaw0m8
1197 1553595392064 glotoutput
Sha1: 3124bf9f78458503d1f91eccdfbc986828d9537a
Lang: Go
FileName: main.go
CodeFull:+540
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `Elements of arrays or slice: {{ range . }}{{ . }} {{end}}
`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("range").Parse(tmplStr))

	array := [...]int{3, 8}
	err := t.Execute(os.Stdout, array)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	slice := []int{12, 5}
	err = t.Execute(os.Stdout, slice)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+472
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `Elements of arrays or slice: {{ range . }}{{ . }} {{end}}
`

func main() {
	t := template.Must(template.New("range").Parse(tmplStr))

	array := [...]int{3, 8}
	err := t.Execute(os.Stdout, array)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	slice := []int{12, 5}
	err = t.Execute(os.Stdout, slice)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+69
Elements of arrays or slice: 3 8 
Elements of arrays or slice: 12 5 
66 1553595392234 glotid
Sha1: 3124bf9f78458503d1f91eccdfbc986828d9537a
GlotID: fapbvbu89f
970 1553595393805 glotoutput
Sha1: 23f6c769ca354df88d50ab5a8d64085800cd84c1
Lang: Go
FileName: main.go
CodeFull:+445
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `Elements of map:
{{ range $k, $v := . }}{{ $k }}: {{ $v }}
{{end}}`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("range").Parse(tmplStr))

	data := map[string]int{
		"one":  1,
		"five": 5,
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+377
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `Elements of map:
{{ range $k, $v := . }}{{ $k }}: {{ $v }}
{{end}}`

func main() {
	t := template.Must(template.New("range").Parse(tmplStr))

	data := map[string]int{
		"one":  1,
		"five": 5,
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+32
Elements of map:
five: 5
one: 1
66 1553595393976 glotid
Sha1: 23f6c769ca354df88d50ab5a8d64085800cd84c1
GlotID: fapbvcvkwp
1016 1553595396628 glotoutput
Sha1: de90acc7ed7b2f1a94275a8d228943159450b4b6
Lang: Go
FileName: main.go
CodeFull:+469
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `Elements of a channel: {{ range . }}{{ . }} {{end}}
`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("range").Parse(tmplStr))

	ch := make(chan int)
	go func() {
		for i := 0; i < 3; i++ {
			ch <- i
		}
		close(ch)
	}()
	err := t.Execute(os.Stdout, ch)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+401
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `Elements of a channel: {{ range . }}{{ . }} {{end}}
`

func main() {
	t := template.Must(template.New("range").Parse(tmplStr))

	ch := make(chan int)
	go func() {
		for i := 0; i < 3; i++ {
			ch <- i
		}
		close(ch)
	}()
	err := t.Execute(os.Stdout, ch)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+30
Elements of a channel: 0 1 2 
66 1553595398765 glotid
Sha1: de90acc7ed7b2f1a94275a8d228943159450b4b6
GlotID: fapbvfq816
1253 1553595400050 glotoutput
Sha1: 50aadce3f65fb0b72dee3455c30bd278f93dab05
Lang: Go
FileName: main.go
CodeFull:+587
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

type Data struct {
	True  bool
	False bool
}

// :show start
const tmplStr = `Or:  {{ if or .True .False }}true{{ else }}false{{ end }}
And: {{ if and .True .False }}true{{ else }}false{{ end }}
Not: {{ if not .False }}true{{ else }}false{{ end }}
`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("and_or_not").Parse(tmplStr))

	data := Data{True: true, False: false}

	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+519
package main

import (
	"log"
	"os"
	"text/template"
)

type Data struct {
	True  bool
	False bool
}

const tmplStr = `Or:  {{ if or .True .False }}true{{ else }}false{{ end }}
And: {{ if and .True .False }}true{{ else }}false{{ end }}
Not: {{ if not .False }}true{{ else }}false{{ end }}
`

func main() {
	t := template.Must(template.New("and_or_not").Parse(tmplStr))

	data := Data{True: true, False: false}

	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+31
Or:  true
And: false
Not: true
66 1553595400226 glotid
Sha1: 50aadce3f65fb0b72dee3455c30bd278f93dab05
GlotID: fapbvglkc7
1435 1553595401451 glotoutput
Sha1: c98c7912930951e4ff0e06617e3a67e2967aaeda
Lang: Go
FileName: main.go
CodeFull:+668
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `Slice[0]: {{ index .Slice 0 }}
SliceNested[1][0]: {{ index .SliceNested 1 0 }}
Map["key"]: {{ index .Map "key" }}
`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("index").Parse(tmplStr))

	data := struct {
		Slice       []string
		SliceNested [][]int
		Map         map[string]int
	}{
		Slice: []string{"first", "second"},
		SliceNested: [][]int{
			{3, 1},
			{2, 3},
		},
		Map: map[string]int{
			"key": 5,
		},
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+600
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `Slice[0]: {{ index .Slice 0 }}
SliceNested[1][0]: {{ index .SliceNested 1 0 }}
Map["key"]: {{ index .Map "key" }}
`

func main() {
	t := template.Must(template.New("index").Parse(tmplStr))

	data := struct {
		Slice       []string
		SliceNested [][]int
		Map         map[string]int
	}{
		Slice: []string{"first", "second"},
		SliceNested: [][]int{
			{3, 1},
			{2, 3},
		},
		Map: map[string]int{
			"key": 5,
		},
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+51
Slice[0]: first
SliceNested[1][0]: 2
Map["key"]: 5
66 1553595401629 glotid
Sha1: c98c7912930951e4ff0e06617e3a67e2967aaeda
GlotID: fapbvhflww
1544 1553595403122 glotoutput
Sha1: affeb81bafbb767c8e0e96ebccc9f6f07265d5ff
Lang: Go
FileName: main.go
CodeFull:+710
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `len(nil)       : {{ len .SliceNil }}
len(emptySlice): {{ len .SliceEmpty }}
len(slice)     : {{ len .Slice }}
len(map)       : {{ len .Map }}
`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("len").Parse(tmplStr))

	data := struct {
		SliceNil   []int
		SliceEmpty []string
		Slice      []bool
		Map        map[int]bool
	}{
		SliceNil:   nil,
		SliceEmpty: []string{},
		Slice:      []bool{true, true, false},
		Map:        map[int]bool{5: true, 3: false},
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+642
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `len(nil)       : {{ len .SliceNil }}
len(emptySlice): {{ len .SliceEmpty }}
len(slice)     : {{ len .Slice }}
len(map)       : {{ len .Map }}
`

func main() {
	t := template.Must(template.New("len").Parse(tmplStr))

	data := struct {
		SliceNil   []int
		SliceEmpty []string
		Slice      []bool
		Map        map[int]bool
	}{
		SliceNil:   nil,
		SliceEmpty: []string{},
		Slice:      []bool{true, true, false},
		Map:        map[int]bool{5: true, 3: false},
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+76
len(nil)       : 0
len(emptySlice): 0
len(slice)     : 3
len(map)       : 2
66 1553595403299 glotid
Sha1: affeb81bafbb767c8e0e96ebccc9f6f07265d5ff
GlotID: fapbvifee6
1119 1553595404786 glotoutput
Sha1: caecf846a2ee15a7f4fee1e9439e38f8bfd6778f
Lang: Go
FileName: main.go
CodeFull:+510
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `print:   {{ print .Str .Num }}
println: {{ println .Str .Num }}
printf:  {{ printf "%s %#v %d" .Str .Str .Num }}
`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("print").Parse(tmplStr))

	data := struct {
		Str string
		Num int
	}{
		Str: "str",
		Num: 8,
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+442
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `print:   {{ print .Str .Num }}
println: {{ println .Str .Num }}
printf:  {{ printf "%s %#v %d" .Str .Str .Num }}
`

func main() {
	t := template.Must(template.New("print").Parse(tmplStr))

	data := struct {
		Str string
		Num int
	}{
		Str: "str",
		Num: 8,
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+51
print:   str8
println: str 8

printf:  str "str" 8
66 1553595404960 glotid
Sha1: caecf846a2ee15a7f4fee1e9439e38f8bfd6778f
GlotID: fapbvjf0o5
1379 1553595406330 glotoutput
Sha1: 71c28604383214ad6210cbf03f1b5636803abacd
Lang: Go
FileName: main.go
CodeFull:+595
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `js escape  : {{ js .JS }}
html escape: {{ html .HTML }}
url escape : {{ urlquery .URL }}
`

// :show end

func main() {
	// :show start
	t := template.Must(template.New("print").Parse(tmplStr))

	data := struct {
		JS   string
		HTML string
		URL  string
	}{
		JS:   `function me(s) { return "foo"; }`,
		HTML: `<div>text</div>`,
		URL:  `http://www.programming-books.io`,
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+527
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `js escape  : {{ js .JS }}
html escape: {{ html .HTML }}
url escape : {{ urlquery .URL }}
`

func main() {
	t := template.Must(template.New("print").Parse(tmplStr))

	data := struct {
		JS   string
		HTML string
		URL  string
	}{
		JS:   `function me(s) { return "foo"; }`,
		HTML: `<div>text</div>`,
		URL:  `http://www.programming-books.io`,
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+140
js escape  : function me(s) { return \"foo\"; }
html escape: &lt;div&gt;text&lt;/div&gt;
url escape : http%3A%2F%2Fwww.programming-books.io
66 1553595406508 glotid
Sha1: 71c28604383214ad6210cbf03f1b5636803abacd
GlotID: fapbvkc67g
1089 1553595407833 glotoutput
Sha1: 6956a6584537fe4aa7e3f1a230a112cfe3c2ea01
Lang: Go
FileName: main.go
CodeFull:+515
// :glot
package main

import (
	"log"
	"os"
	"text/template"
)

// :show start
const tmplStr = `5 + 5 = {{ sum 5 .Arg }}
`

// :show end

func sum(x, y int) int {
	return x + y
}

func main() {
	// :show start
	customFunctions := template.FuncMap{
		"sum": sum,
	}

	t := template.Must(template.New("func").Funcs(customFunctions).Parse(tmplStr))

	data := struct {
		Arg int
	}{
		Arg: 5,
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
	// :show end
}
CodeToRun:+447
package main

import (
	"log"
	"os"
	"text/template"
)

const tmplStr = `5 + 5 = {{ sum 5 .Arg }}
`

func sum(x, y int) int {
	return x + y
}

func main() {
	customFunctions := template.FuncMap{
		"sum": sum,
	}

	t := template.Must(template.New("func").Funcs(customFunctions).Parse(tmplStr))

	data := struct {
		Arg int
	}{
		Arg: 5,
	}
	err := t.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}
}
Output:+11
5 + 5 = 10
66 1553595408008 glotid
Sha1: 6956a6584537fe4aa7e3f1a230a112cfe3c2ea01
GlotID: fapbvl8cuc
1726 1553595409580 glotoutput
Sha1: 02d3c832b8e50661be2a9ae9370a8f9898ac36df
Lang: Go
FileName: main.go
CodeFull:+785
// :glot
package main

import (
	"fmt"
	html_template "html/template"
	"log"
	"os"
	text_template "text/template"
)

// :show start
const tmplStr = `<div onlick="{{ .JS }}">{{ .HTML }}</div>
`

// :show end

func main() {
	// :show start
	txt := text_template.Must(text_template.New("text").Parse(tmplStr))

	html := html_template.Must(html_template.New("html").Parse(tmplStr))

	data := struct {
		JS   string
		HTML string
		URL  string
	}{
		JS:   `foo`,
		HTML: `<span>text</span>`,
		URL:  `http://www.programming-books.io`,
	}

	err := txt.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	fmt.Println()

	err = html.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	// :show end
}
CodeToRun:+717
package main

import (
	"fmt"
	html_template "html/template"
	"log"
	"os"
	text_template "text/template"
)

const tmplStr = `<div onlick="{{ .JS }}">{{ .HTML }}</div>
`

func main() {
	txt := text_template.Must(text_template.New("text").Parse(tmplStr))

	html := html_template.Must(html_template.New("html").Parse(tmplStr))

	data := struct {
		JS   string
		HTML string
		URL  string
	}{
		JS:   `foo`,
		HTML: `<span>text</span>`,
		URL:  `http://www.programming-books.io`,
	}

	err := txt.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	fmt.Println()

	err = html.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

}
Output:+107
<div onlick="foo"><span>text</span></div>

<div onlick="&#34;foo&#34;">&lt;span&gt;text&lt;/span&gt;</div>
66 1553595409758 glotid
Sha1: 02d3c832b8e50661be2a9ae9370a8f9898ac36df
GlotID: fapbvm9tr7
1688 1553595411034 glotoutput
Sha1: 1870fded55bde6e915b183ddc9ec332d4b1cb384
Lang: Go
FileName: main.go
CodeFull:+756
// :glot
package main

import (
	"fmt"
	"html/template"
	"log"
	"os"
)

// :show start
const tmplStr = `<div onlick="{{ .JS }}">{{ .HTML }}</div>
`

// :show end

func main() {
	// :show start

	html := template.Must(template.New("html").Parse(tmplStr))

	data := struct {
		JS   string
		HTML string
	}{
		JS:   `foo`,
		HTML: `<span>text</span>`,
	}

	fmt.Printf("Escaped:\n")
	err := html.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	fmt.Printf("\nUnescaped:\n")
	data2 := struct {
		JS   template.JS
		HTML template.HTML
	}{
		JS:   `foo`,
		HTML: `<span>text</span>`,
	}
	err = html.Execute(os.Stdout, data2)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	// :show end
}
CodeToRun:+688
package main

import (
	"fmt"
	"html/template"
	"log"
	"os"
)

const tmplStr = `<div onlick="{{ .JS }}">{{ .HTML }}</div>
`

func main() {

	html := template.Must(template.New("html").Parse(tmplStr))

	data := struct {
		JS   string
		HTML string
	}{
		JS:   `foo`,
		HTML: `<span>text</span>`,
	}

	fmt.Printf("Escaped:\n")
	err := html.Execute(os.Stdout, data)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

	fmt.Printf("\nUnescaped:\n")
	data2 := struct {
		JS   template.JS
		HTML template.HTML
	}{
		JS:   `foo`,
		HTML: `<span>text</span>`,
	}
	err = html.Execute(os.Stdout, data2)
	if err != nil {
		log.Fatalf("t.Execute() failed with '%s'\n", err)
	}

}
Output:+127
Escaped:
<div onlick="&#34;foo&#34;">&lt;span&gt;text&lt;/span&gt;</div>

Unescaped:
<div onlick="foo"><span>text</span></div>
66 1553595411211 glotid
Sha1: 1870fded55bde6e915b183ddc9ec332d4b1cb384
GlotID: fapbvn4zv9
1442 1553595412554 glotoutput
Sha1: f3e9bca6dc3d47b0af5dc615346a3d8414b4c844
Lang: Go
FileName: main.go
CodeFull:+641
// :glot
package main

import (
	"fmt"
	"reflect"
)

// :show start

func printType(v interface{}) {
	rv := reflect.ValueOf(v)
	typ := rv.Type()
	typeName := ""
	switch rv.Kind() {
	case reflect.Ptr:
		typeName = "pointer"
	case reflect.Int:
		typeName = "int"
	case reflect.Int32:
		typeName = "int32"
	case reflect.String:
		typeName = "string"
	// ... handle more cases
	default:
		typeName = "unrecognized type"
	}
	fmt.Printf("v is of type '%s'. Size: %d bytes\n", typeName, typ.Size())
}

// :show end

func main() {
	// :show start
	printType(int32(3))
	printType("")
	i := 3
	printType(&i) // *int i.e. pointer to int
	// :show end
}
CodeToRun:+572
package main

import (
	"fmt"
	"reflect"
)

func printType(v interface{}) {
	rv := reflect.ValueOf(v)
	typ := rv.Type()
	typeName := ""
	switch rv.Kind() {
	case reflect.Ptr:
		typeName = "pointer"
	case reflect.Int:
		typeName = "int"
	case reflect.Int32:
		typeName = "int32"
	case reflect.String:
		typeName = "string"
	// ... handle more cases
	default:
		typeName = "unrecognized type"
	}
	fmt.Printf("v is of type '%s'. Size: %d bytes\n", typeName, typ.Size())
}

func main() {
	printType(int32(3))
	printType("")
	i := 3
	printType(&i) // *int i.e. pointer to int
}
Output:+112
v is of type 'int32'. Size: 4 bytes
v is of type 'string'. Size: 16 bytes
v is of type 'pointer'. Size: 8 bytes
66 1553595412731 glotid
Sha1: f3e9bca6dc3d47b0af5dc615346a3d8414b4c844
GlotID: fapbvo1knl
1049 1553595414080 glotoutput
Sha1: a7dd57167861847b194fd31c282041d9a0dc1bf7
Lang: Go
FileName: main.go
CodeFull:+336
// :glot
// allow error
package main

import (
	"fmt"
	"reflect"
)

// :show start

func getIntValue(v interface{}) {
	var reflectValue = reflect.ValueOf(v)
	n := reflectValue.Int()
	fmt.Printf("Int value is: %d\n", n)
}

// :show end

func main() {
	// :show start
	getIntValue(3)
	getIntValue(int8(4))
	getIntValue("")
	// :show end
}
CodeToRun:+252
package main

import (
	"fmt"
	"reflect"
)

func getIntValue(v interface{}) {
	var reflectValue = reflect.ValueOf(v)
	n := reflectValue.Int()
	fmt.Printf("Int value is: %d\n", n)
}

func main() {
	getIntValue(3)
	getIntValue(int8(4))
	getIntValue("")
}
Output:+344
Int value is: 3
Int value is: 4
panic: reflect: call of reflect.Value.Int on string Value

goroutine 1 [running]:
reflect.Value.Int(0x493920, 0x4c4420, 0x98, 0x4c4420)
	/usr/local/go/src/reflect/value.go:931 +0x127
main.getIntValue(0x493920, 0x4c4420)
	/tmp/649864871/main.go:10 +0x5b
main.main()
	/tmp/649864871/main.go:17 +0x7b
exit status 2
66 1553595414257 glotid
Sha1: a7dd57167861847b194fd31c282041d9a0dc1bf7
GlotID: fapbvoya1l
2661 1553595415618 glotoutput
Sha1: ca7f537bfe06a5b7bb245873c7087c3a1ca8e530
Lang: Go
FileName: main.go
CodeFull:+1134
// :glot
package main

import (
	"fmt"
	"reflect"
)

// :show start
type S struct {
	N int
}

func setIntPtr() {
	var n int = 2
	reflect.ValueOf(&n).Elem().SetInt(4)
	fmt.Printf("setIntPtr: n=%d\n", n)
}

func setStructFieldDirect() {
	var s S
	reflect.ValueOf(&s.N).Elem().SetInt(5)
	fmt.Printf("setStructFieldDirect: n=%d\n", s.N)
}

func setStructPtrField() {
	var s S
	reflect.ValueOf(&s).Elem().Field(0).SetInt(6)
	fmt.Printf("setStructPtrField: s.N: %d\n", s.N)
}

func handlePanic(funcName string) {
	if msg := recover(); msg != nil {
		fmt.Printf("%s panicked with '%s'\n", funcName, msg)
	}
}

func setStructField() {
	defer handlePanic("setStructField")
	var s S
	reflect.ValueOf(s).Elem().Field(0).SetInt(4)
	fmt.Printf("s.N: %d\n", s.N)
}

func setInt() {
	defer handlePanic("setInt")
	var n int = 2
	rv := reflect.ValueOf(n)
	rv.Elem().SetInt(4)
}

func setIntPtrWithString() {
	defer handlePanic("setIntPtrWithString")
	var n int = 2
	reflect.ValueOf(&n).Elem().SetString("8")
}

// :show end

func main() {
	setIntPtr()
	setStructFieldDirect()
	setStructPtrField()

	setInt()
	setStructField()

	setIntPtrWithString()
}
CodeToRun:+1096
package main

import (
	"fmt"
	"reflect"
)

type S struct {
	N int
}

func setIntPtr() {
	var n int = 2
	reflect.ValueOf(&n).Elem().SetInt(4)
	fmt.Printf("setIntPtr: n=%d\n", n)
}

func setStructFieldDirect() {
	var s S
	reflect.ValueOf(&s.N).Elem().SetInt(5)
	fmt.Printf("setStructFieldDirect: n=%d\n", s.N)
}

func setStructPtrField() {
	var s S
	reflect.ValueOf(&s).Elem().Field(0).SetInt(6)
	fmt.Printf("setStructPtrField: s.N: %d\n", s.N)
}

func handlePanic(funcName string) {
	if msg := recover(); msg != nil {
		fmt.Printf("%s panicked with '%s'\n", funcName, msg)
	}
}

func setStructField() {
	defer handlePanic("setStructField")
	var s S
	reflect.ValueOf(s).Elem().Field(0).SetInt(4)
	fmt.Printf("s.N: %d\n", s.N)
}

func setInt() {
	defer handlePanic("setInt")
	var n int = 2
	rv := reflect.ValueOf(n)
	rv.Elem().SetInt(4)
}

func setIntPtrWithString() {
	defer handlePanic("setIntPtrWithString")
	var n int = 2
	reflect.ValueOf(&n).Elem().SetString("8")
}

func main() {
	setIntPtr()
	setStructFieldDirect()
	setStructPtrField()

	setInt()
	setStructField()

	setIntPtrWithString()
}
Output:+312
setIntPtr: n=4
setStructFieldDirect: n=5
setStructPtrField: s.N: 6
setInt panicked with 'reflect: call of reflect.Value.Elem on int Value'
setStructField panicked with 'reflect: call of reflect.Value.Elem on struct Value'
setIntPtrWithString panicked with 'reflect: call of reflect.Value.SetString on int Value'
66 1553595415794 glotid
Sha1: ca7f537bfe06a5b7bb245873c7087c3a1ca8e530
GlotID: fapbvpv7qe
1286 1553595417527 glotoutput
Sha1: ea911c21a8df4fbd0898eff1f21c04e29f97963a
Lang: Go
FileName: main.go
CodeFull:+533
// :glot
package main

import (
	"fmt"
	"reflect"
)

// :show start
func printIntResolvingPointers(v interface{}) {
	rv := reflect.ValueOf(v)
	typeName := rv.Type().String()
	name := ""
	for rv.Kind() == reflect.Ptr {
		name = "pointer to " + name
		rv = rv.Elem()
	}
	name += rv.Type().String()
	fmt.Printf("Value: %d. Type: '%s' i.e. '%s'.\n\n", rv.Int(), name, typeName)
}

func main() {
	n := 3
	printIntResolvingPointers(n)

	n = 4
	printIntResolvingPointers(&n)

	n = 5
	np := &n
	printIntResolvingPointers(&np)
}

// :show end
CodeToRun:+496
package main

import (
	"fmt"
	"reflect"
)

func printIntResolvingPointers(v interface{}) {
	rv := reflect.ValueOf(v)
	typeName := rv.Type().String()
	name := ""
	for rv.Kind() == reflect.Ptr {
		name = "pointer to " + name
		rv = rv.Elem()
	}
	name += rv.Type().String()
	fmt.Printf("Value: %d. Type: '%s' i.e. '%s'.\n\n", rv.Int(), name, typeName)
}

func main() {
	n := 3
	printIntResolvingPointers(n)

	n = 4
	printIntResolvingPointers(&n)

	n = 5
	np := &n
	printIntResolvingPointers(&np)
}
Output:+141
Value: 3. Type: 'int' i.e. 'int'.

Value: 4. Type: 'pointer to int' i.e. '*int'.

Value: 5. Type: 'pointer to pointer to int' i.e. '**int'.

66 1553595417704 glotid
Sha1: ea911c21a8df4fbd0898eff1f21c04e29f97963a
GlotID: fapbvr04su
2093 1553595419044 glotoutput
Sha1: 84c131ee3b20b7716ef3355edfa402366168a054
Lang: Go
FileName: main.go
CodeFull:+893
// :glot
package main

import (
	"fmt"
	"reflect"
)

// :show start

type S struct {
	FirstName string `my_tag:"first-name"`
	lastName  string
	Age       int `json:"age",xml:"AgeXml`
}

func describeStructSimple(rv reflect.Value) {
	structType := rv.Type()
	for i := 0; i < rv.NumField(); i++ {
		v := rv.Field(i)
		structField := structType.Field(i)
		name := structField.Name
		typ := structField.Type
		tag := structField.Tag
		jsonTag := tag.Get("json")
		isExported := structField.PkgPath == ""
		if isExported {
			fmt.Printf("name: '%s',\ttype: '%s', value: %v,\ttag: '%s',\tjson tag: '%s'\n", name, typ, v.Interface(), tag, jsonTag)
		} else {
			fmt.Printf("name: '%s',\ttype: '%s',\tvalue: not accessible\n", name, v.Type().Name())
		}
	}
}

func main() {
	s := S{
		FirstName: "John",
		lastName:  "Doe",
		Age:       27,
	}
	describeStructSimple(reflect.ValueOf(s))
}

// :show end
CodeToRun:+855
package main

import (
	"fmt"
	"reflect"
)

type S struct {
	FirstName string `my_tag:"first-name"`
	lastName  string
	Age       int `json:"age",xml:"AgeXml`
}

func describeStructSimple(rv reflect.Value) {
	structType := rv.Type()
	for i := 0; i < rv.NumField(); i++ {
		v := rv.Field(i)
		structField := structType.Field(i)
		name := structField.Name
		typ := structField.Type
		tag := structField.Tag
		jsonTag := tag.Get("json")
		isExported := structField.PkgPath == ""
		if isExported {
			fmt.Printf("name: '%s',\ttype: '%s', value: %v,\ttag: '%s',\tjson tag: '%s'\n", name, typ, v.Interface(), tag, jsonTag)
		} else {
			fmt.Printf("name: '%s',\ttype: '%s',\tvalue: not accessible\n", name, v.Type().Name())
		}
	}
}

func main() {
	s := S{
		FirstName: "John",
		lastName:  "Doe",
		Age:       27,
	}
	describeStructSimple(reflect.ValueOf(s))
}
Output:+229
name: 'FirstName',	type: 'string', value: John,	tag: 'my_tag:"first-name"',	json tag: ''
name: 'lastName',	type: 'string',	value: not accessible
name: 'Age',	type: 'int', value: 27,	tag: 'json:"age",xml:"AgeXml',	json tag: 'age'
66 1553595419222 glotid
Sha1: 84c131ee3b20b7716ef3355edfa402366168a054
GlotID: fapbvrwo3q
3966 1553595420559 glotoutput
Sha1: 7d6a992f36a99f6492f1706b4940635a20fbf02d
Lang: Go
FileName: main.go
CodeFull:+1703
// :glot
package main

import (
	"fmt"
	"reflect"
	"strings"
)

// :show start
type Inner struct {
	N int
}

type S struct {
	Inner
	NamedInner Inner
	PtrInner   *Inner
	unexported int
	N          int8
}

func indentStr(level int) string {
	return strings.Repeat("  ", level)
}

// if sf is not nil, this is a field of a struct
func describeStruct(level int, rv reflect.Value, sf *reflect.StructField) {
	structType := rv.Type()
	nFields := rv.NumField()
	typ := rv.Type()
	if sf == nil {
		fmt.Printf("%sstruct %s, %d field(s), size: %d bytes\n", indentStr(level), structType.Name(), nFields, typ.Size())
	} else {
		fmt.Printf("%sname: '%s' type: 'struct %s', offset: %d, %d field(s), size: %d bytes, embedded: %v\n", indentStr(level), sf.Name, structType.Name(), sf.Offset, nFields, typ.Size(), sf.Anonymous)
	}

	for i := 0; i < nFields; i++ {
		fv := rv.Field(i)
		sf := structType.Field(i)
		describeType(level+1, fv, &sf)
	}
}

// if sf is not nil, this is a field of a struct
func describeType(level int, rv reflect.Value, sf *reflect.StructField) {
	switch rv.Kind() {

	case reflect.Int, reflect.Int8:
		// in real code we would handle more primitive types
		i := rv.Int()
		typ := rv.Type()
		if sf == nil {
			fmt.Printf("%stype: '%s', value: '%d'\n", indentStr(level), typ.Name(), i)
		} else {
			fmt.Printf("%s name: '%s' type: '%s', value: '%d', offset: %d, size: %d\n", indentStr(level), sf.Name, typ.Name(), i, sf.Offset, typ.Size())
		}

	case reflect.Ptr:
		fmt.Printf("%spointer\n", indentStr(level))
		describeType(level+1, rv.Elem(), nil)

	case reflect.Struct:
		describeStruct(level, rv, sf)
	}
}

func main() {
	var s S
	describeType(0, reflect.ValueOf(s), nil)
}

// :show end
CodeToRun:+1666
package main

import (
	"fmt"
	"reflect"
	"strings"
)

type Inner struct {
	N int
}

type S struct {
	Inner
	NamedInner Inner
	PtrInner   *Inner
	unexported int
	N          int8
}

func indentStr(level int) string {
	return strings.Repeat("  ", level)
}

// if sf is not nil, this is a field of a struct
func describeStruct(level int, rv reflect.Value, sf *reflect.StructField) {
	structType := rv.Type()
	nFields := rv.NumField()
	typ := rv.Type()
	if sf == nil {
		fmt.Printf("%sstruct %s, %d field(s), size: %d bytes\n", indentStr(level), structType.Name(), nFields, typ.Size())
	} else {
		fmt.Printf("%sname: '%s' type: 'struct %s', offset: %d, %d field(s), size: %d bytes, embedded: %v\n", indentStr(level), sf.Name, structType.Name(), sf.Offset, nFields, typ.Size(), sf.Anonymous)
	}

	for i := 0; i < nFields; i++ {
		fv := rv.Field(i)
		sf := structType.Field(i)
		describeType(level+1, fv, &sf)
	}
}

// if sf is not nil, this is a field of a struct
func describeType(level int, rv reflect.Value, sf *reflect.StructField) {
	switch rv.Kind() {

	case reflect.Int, reflect.Int8:
		// in real code we would handle more primitive types
		i := rv.Int()
		typ := rv.Type()
		if sf == nil {
			fmt.Printf("%stype: '%s', value: '%d'\n", indentStr(level), typ.Name(), i)
		} else {
			fmt.Printf("%s name: '%s' type: '%s', value: '%d', offset: %d, size: %d\n", indentStr(level), sf.Name, typ.Name(), i, sf.Offset, typ.Size())
		}

	case reflect.Ptr:
		fmt.Printf("%spointer\n", indentStr(level))
		describeType(level+1, rv.Elem(), nil)

	case reflect.Struct:
		describeStruct(level, rv, sf)
	}
}

func main() {
	var s S
	describeType(0, reflect.ValueOf(s), nil)
}
Output:+479
struct S, 5 field(s), size: 40 bytes
  name: 'Inner' type: 'struct Inner', offset: 0, 1 field(s), size: 8 bytes, embedded: true
     name: 'N' type: 'int', value: '0', offset: 0, size: 8
  name: 'NamedInner' type: 'struct Inner', offset: 8, 1 field(s), size: 8 bytes, embedded: false
     name: 'N' type: 'int', value: '0', offset: 0, size: 8
  pointer
   name: 'unexported' type: 'int', value: '0', offset: 24, size: 8
   name: 'N' type: 'int8', value: '0', offset: 32, size: 1
66 1553595420737 glotid
Sha1: 7d6a992f36a99f6492f1706b4940635a20fbf02d
GlotID: fapbvst4my
1350 1553595421849 glotoutput
Sha1: f9f43b0ed790c12e0a01c691d2675228bea8e2c8
Lang: Go
FileName: main.go
CodeFull:+575
// :glot
package main

import (
	"fmt"
	"reflect"
)

func main() {
	// :show start
	a := []int{3, 1, 8}
	rv := reflect.ValueOf(a)

	fmt.Printf("len(a): %d\n", rv.Len())
	fmt.Printf("cap(a): %d\n", rv.Cap())

	fmt.Printf("slice kind: '%s'\n", rv.Kind().String())

	fmt.Printf("element type: '%s'\n", rv.Type().Elem().Name())

	el := rv.Index(0).Interface()
	fmt.Printf("a[0]: %v\n", el)

	elRef := rv.Index(1)
	fmt.Printf("elRef.CanAddr(): %v\n", elRef.CanAddr())
	fmt.Printf("elRef.CanSet(): %v\n", elRef.CanSet())

	elRef.SetInt(5)
	fmt.Printf("a: %v\n", a)

	// :show end
}
CodeToRun:+536
package main

import (
	"fmt"
	"reflect"
)

func main() {
	a := []int{3, 1, 8}
	rv := reflect.ValueOf(a)

	fmt.Printf("len(a): %d\n", rv.Len())
	fmt.Printf("cap(a): %d\n", rv.Cap())

	fmt.Printf("slice kind: '%s'\n", rv.Kind().String())

	fmt.Printf("element type: '%s'\n", rv.Type().Elem().Name())

	el := rv.Index(0).Interface()
	fmt.Printf("a[0]: %v\n", el)

	elRef := rv.Index(1)
	fmt.Printf("elRef.CanAddr(): %v\n", elRef.CanAddr())
	fmt.Printf("elRef.CanSet(): %v\n", elRef.CanSet())

	elRef.SetInt(5)
	fmt.Printf("a: %v\n", a)

}
Output:+122
len(a): 3
cap(a): 3
slice kind: 'slice'
element type: 'int'
a[0]: 3
elRef.CanAddr(): true
elRef.CanSet(): true
a: [3 5 8]
66 1553595422027 glotid
Sha1: f9f43b0ed790c12e0a01c691d2675228bea8e2c8
GlotID: fapbvtkrsr
742 1553595423297 glotoutput
Sha1: a2a0a6e0e52b77c5b10284f57a8d816e1e766224
Lang: Go
FileName: main.go
CodeFull:+323
// :glot
package main

import (
	"fmt"
	"reflect"
)

func main() {
	// :show start
	typ := reflect.SliceOf(reflect.TypeOf("example"))
	// create slice with capacity 10 and length 1
	rv := reflect.MakeSlice(typ, 1, 10)
	rv.Index(0).SetString("foo")

	a := rv.Interface().([]string)
	fmt.Printf("a: %#v\n", a)
	// :show end
}
CodeToRun:+284
package main

import (
	"fmt"
	"reflect"
)

func main() {
	typ := reflect.SliceOf(reflect.TypeOf("example"))
	// create slice with capacity 10 and length 1
	rv := reflect.MakeSlice(typ, 1, 10)
	rv.Index(0).SetString("foo")

	a := rv.Interface().([]string)
	fmt.Printf("a: %#v\n", a)
}
Output:+19
a: []string{"foo"}
66 1553595423485 glotid
Sha1: a2a0a6e0e52b77c5b10284f57a8d816e1e766224
GlotID: fapbvufst6
1832 1553595425038 glotoutput
Sha1: cab832773f4fb002099f24af8fd56c1fc001dab8
Lang: Go
FileName: main.go
CodeFull:+853
// :glot
package main

import (
	"context"
	"fmt"
)

// :show start
type User struct {
	Name       string
	IsLoggedIn bool
}

type userKeyType int

var userKey userKeyType

func contextWithUser(ctx context.Context, user *User) context.Context {
	return context.WithValue(ctx, userKey, user)
}

// returns nil if not set
func getUserFromContext(ctx context.Context) *User {
	user, ok := ctx.Value(userKey).(*User)
	if !ok {
		return nil
	}
	return user
}

// will panic if not set
func mustGetUserFromContext(ctx context.Context) *User {
	return ctx.Value(userKey).(*User)
}

func printUser(ctx context.Context) {
	user := getUserFromContext(ctx)
	fmt.Printf("User: %#v\n", user)
}

func main() {
	ctx := context.Background()
	user := &User{
		Name:       "John",
		IsLoggedIn: false,
	}
	ctx = contextWithUser(ctx, user)

	printUser(ctx)
}

// :show end
CodeToRun:+816
package main

import (
	"context"
	"fmt"
)

type User struct {
	Name       string
	IsLoggedIn bool
}

type userKeyType int

var userKey userKeyType

func contextWithUser(ctx context.Context, user *User) context.Context {
	return context.WithValue(ctx, userKey, user)
}

// returns nil if not set
func getUserFromContext(ctx context.Context) *User {
	user, ok := ctx.Value(userKey).(*User)
	if !ok {
		return nil
	}
	return user
}

// will panic if not set
func mustGetUserFromContext(ctx context.Context) *User {
	return ctx.Value(userKey).(*User)
}

func printUser(ctx context.Context) {
	user := getUserFromContext(ctx)
	fmt.Printf("User: %#v\n", user)
}

func main() {
	ctx := context.Background()
	user := &User{
		Name:       "John",
		IsLoggedIn: false,
	}
	ctx = contextWithUser(ctx, user)

	printUser(ctx)
}
Output:+48
User: &main.User{Name:"John", IsLoggedIn:false}
66 1553595425217 glotid
Sha1: cab832773f4fb002099f24af8fd56c1fc001dab8
GlotID: fapbvvh58e
1739 1553595426574 glotoutput
Sha1: 1951017a94fda2fcf405e0c28732dfc7813f8f94
Lang: Go
FileName: main.go
CodeFull:+760
// :glot
package main

import (
	"context"
	"fmt"
	"time"
)

// :show start
func longMathOp(ctx context.Context, n int) (int, error) {
	res := n
	for i := 0; i < 100; i++ {
		select {
		case <-ctx.Done():
			return 0, ctx.Err()
		default:
			res += i
			// simulate long operation by sleeping
			time.Sleep(time.Millisecond)
		}
	}
	return res, nil
}

func main() {
	ctx, _ := context.WithTimeout(context.Background(), time.Millisecond*200)
	res, err := longMathOp(ctx, 5)
	fmt.Printf("Called longMathOp() with 200ms timeout. res; %d, err: %v\n", res, err)

	ctx, _ = context.WithTimeout(context.Background(), time.Millisecond*10)
	res, err = longMathOp(ctx, 5)
	fmt.Printf("Called longMathOp() with 10ms timeout. res: %d, err: %v\n", res, err)
}

// :show end
CodeToRun:+723
package main

import (
	"context"
	"fmt"
	"time"
)

func longMathOp(ctx context.Context, n int) (int, error) {
	res := n
	for i := 0; i < 100; i++ {
		select {
		case <-ctx.Done():
			return 0, ctx.Err()
		default:
			res += i
			// simulate long operation by sleeping
			time.Sleep(time.Millisecond)
		}
	}
	return res, nil
}

func main() {
	ctx, _ := context.WithTimeout(context.Background(), time.Millisecond*200)
	res, err := longMathOp(ctx, 5)
	fmt.Printf("Called longMathOp() with 200ms timeout. res; %d, err: %v\n", res, err)

	ctx, _ = context.WithTimeout(context.Background(), time.Millisecond*10)
	res, err = longMathOp(ctx, 5)
	fmt.Printf("Called longMathOp() with 10ms timeout. res: %d, err: %v\n", res, err)
}
Output:+140
Called longMathOp() with 200ms timeout. res; 4955, err: <nil>
Called longMathOp() with 10ms timeout. res: 0, err: context deadline exceeded
66 1553595426792 glotid
Sha1: 1951017a94fda2fcf405e0c28732dfc7813f8f94
GlotID: fapbvwevrq
1364 1553595428109 glotoutput
Sha1: 4165c6d7d92f9116b6745daa8cd6757680ff56af
Lang: Go
FileName: main.go
CodeFull:+613
// :glot
package main

import (
	"fmt"
)

type Runner interface {
	Run()
}

type Admin struct {
	Username, Password string
}

func (admin Admin) Run() {
	fmt.Println("Admin ==> Run()")
}

type User struct {
	ID              uint64
	FullName, Email string
}

func (user User) Run() {
	fmt.Println("User ==> Run()")
}

// RunnerExample takes any type that fullfils the Runner interface
func RunnerExample(r Runner) {
	r.Run()
}

func main() {
	admin := Admin{
		"zola",
		"supersecretpassword",
	}

	user := User{
		1,
		"Zelalem Mekonen",
		"zola.mk.27@gmail.com",
	}

	RunnerExample(admin)

	RunnerExample(user)
}
CodeToRun:+604
package main

import (
	"fmt"
)

type Runner interface {
	Run()
}

type Admin struct {
	Username, Password string
}

func (admin Admin) Run() {
	fmt.Println("Admin ==> Run()")
}

type User struct {
	ID              uint64
	FullName, Email string
}

func (user User) Run() {
	fmt.Println("User ==> Run()")
}

// RunnerExample takes any type that fullfils the Runner interface
func RunnerExample(r Runner) {
	r.Run()
}

func main() {
	admin := Admin{
		"zola",
		"supersecretpassword",
	}

	user := User{
		1,
		"Zelalem Mekonen",
		"zola.mk.27@gmail.com",
	}

	RunnerExample(admin)

	RunnerExample(user)
}
Output:+31
Admin ==> Run()
User ==> Run()
66 1553595428299 glotid
Sha1: 4165c6d7d92f9116b6745daa8cd6757680ff56af
GlotID: fapbvxb8d6
2374 1553667929932 glotoutput
Sha1: 1904f4e0cfbe6624eb5c7ecf0d7b486323c1ee32
Lang: Go
FileName: main.go
CodeFull:+1134
// :glot
package main

import (
	"bytes"
	"fmt"
	"io"
)

// :show start
// declaration of a single top-level variable
var topLevel int64 = 5

// grouping of multiple top-level declarations
var (
	intVal int            // value is initialized with zero-value
	str    string = "str" // assigning

	// functions are first-class values so can be assigned to variables
	// fn is variable of type func(a int) string
	// it's uninitialized so is nil (zero-value for function variables)
	fn func(a int) string
)

func f() {
	// shorthand using local type inference
	// type of `i` is int and is inferred from the value
	// note: this is not allowed at top-level
	i := 4

	// grouping inside a function
	var (
		i2 int
		s  string
	)

	// _ is like a variable whose value is discarded. It's called blank identifier.
	// Useful when we don't care about one of the values returned by a function
	_, err := io.Copy(dst, src) // don't care how many bytes were written
	// ...

	fmt.Printf(`i: %d
i2: %d
s: %s
err: %v
`, i, i2, s, err)
}

// :show end

var (
	dst io.Writer = &bytes.Buffer{}
	src io.Reader = &bytes.Buffer{}
)

func main() {
	f()
}
CodeToRun:+1096
package main

import (
	"bytes"
	"fmt"
	"io"
)

// declaration of a single top-level variable
var topLevel int64 = 5

// grouping of multiple top-level declarations
var (
	intVal int            // value is initialized with zero-value
	str    string = "str" // assigning

	// functions are first-class values so can be assigned to variables
	// fn is variable of type func(a int) string
	// it's uninitialized so is nil (zero-value for function variables)
	fn func(a int) string
)

func f() {
	// shorthand using local type inference
	// type of `i` is int and is inferred from the value
	// note: this is not allowed at top-level
	i := 4

	// grouping inside a function
	var (
		i2 int
		s  string
	)

	// _ is like a variable whose value is discarded. It's called blank identifier.
	// Useful when we don't care about one of the values returned by a function
	_, err := io.Copy(dst, src) // don't care how many bytes were written
	// ...

	fmt.Printf(`i: %d
i2: %d
s: %s
err: %v
`, i, i2, s, err)
}

var (
	dst io.Writer = &bytes.Buffer{}
	src io.Reader = &bytes.Buffer{}
)

func main() {
	f()
}
Output:+26
i: 4
i2: 0
s: 
err: <nil>
66 1553667930755 glotid
Sha1: 1904f4e0cfbe6624eb5c7ecf0d7b486323c1ee32
GlotID: faq96ze9q3
1998 1553667932392 glotoutput
Sha1: bc4afda39ff4ba78003f0ca4a00f32b604f2b4dc
Lang: Go
FileName: main.go
CodeFull:+788
// :glot
package main

import (
    "bytes"
	"encoding/csv"
	"fmt"
	"io"
	"log"
)

var (
    csvData = `date,open,high,low,close,volume,Name
2013-02-08,15.07,15.12,14.63,14.75,8407500,AAL
2013-02-11,14.89,15.01,14.26,14.46,8882000,AAL
2013-02-12,14.45,14.51,14.1,14.27,8126000,AAL
2013-02-13,14.3,14.94,14.25,14.66,10259500,AAL
`)

func main() {
	// :show start
	buf := bytes.NewBufferString(csvData)

	r := csv.NewReader(buf)
	var record []string
	nRecords := 0
	var err error
	for {
		record, err = r.Read()
		if err != nil {
			if err == io.EOF {
				err = nil
			}
			break
		}
		nRecords++
		if nRecords < 5 {
			fmt.Printf("Record: %#v\n", record)
		}
	}
	if err != nil {
		log.Fatalf("r.Read() failed with '%s'\n", err)
	}
	fmt.Printf("Read %d records\n", nRecords)
	// :show end
}
CodeToRun:+749
package main

import (
    "bytes"
	"encoding/csv"
	"fmt"
	"io"
	"log"
)

var (
    csvData = `date,open,high,low,close,volume,Name
2013-02-08,15.07,15.12,14.63,14.75,8407500,AAL
2013-02-11,14.89,15.01,14.26,14.46,8882000,AAL
2013-02-12,14.45,14.51,14.1,14.27,8126000,AAL
2013-02-13,14.3,14.94,14.25,14.66,10259500,AAL
`)

func main() {
	buf := bytes.NewBufferString(csvData)

	r := csv.NewReader(buf)
	var record []string
	nRecords := 0
	var err error
	for {
		record, err = r.Read()
		if err != nil {
			if err == io.EOF {
				err = nil
			}
			break
		}
		nRecords++
		if nRecords < 5 {
			fmt.Printf("Record: %#v\n", record)
		}
	}
	if err != nil {
		log.Fatalf("r.Read() failed with '%s'\n", err)
	}
	fmt.Printf("Read %d records\n", nRecords)
}
Output:+344
Record: []string{"date", "open", "high", "low", "close", "volume", "Name"}
Record: []string{"2013-02-08", "15.07", "15.12", "14.63", "14.75", "8407500", "AAL"}
Record: []string{"2013-02-11", "14.89", "15.01", "14.26", "14.46", "8882000", "AAL"}
Record: []string{"2013-02-12", "14.45", "14.51", "14.1", "14.27", "8126000", "AAL"}
Read 5 records
66 1553667932562 glotid
Sha1: bc4afda39ff4ba78003f0ca4a00f32b604f2b4dc
GlotID: faq970h5h6
1384 1553755362463 glotoutput
Sha1: ff51f50deb25cc9ccb78d7b767b9f55fb9fb1cf3
Lang: Go
FileName: main.go
CodeFull:+601
// :glot
package main

import (
	"fmt"
	"sync"
)

// :show start
var wg sync.WaitGroup

func sqrtWorker(chIn chan int, chOut chan int) {
	fmt.Printf("sqrtWorker started\n")
	for i := range chIn {
		sqrt := i * i
		chOut <- sqrt
	}
	fmt.Printf("sqrtWorker finished\n")
	wg.Done()
}

func main() {
	chIn := make(chan int)
	chOut := make(chan int)
	for i := 0; i < 2; i++ {
		wg.Add(1)
		go sqrtWorker(chIn, chOut)
	}

	go func() {
		chIn <- 2
		chIn <- 4
		close(chIn)
	}()

	go func() {
		wg.Wait()
		close(chOut)
	}()

	for sqrt := range chOut {
		fmt.Printf("Got sqrt: %d\n", sqrt)
	}
}

// :show end
CodeToRun:+564
package main

import (
	"fmt"
	"sync"
)

var wg sync.WaitGroup

func sqrtWorker(chIn chan int, chOut chan int) {
	fmt.Printf("sqrtWorker started\n")
	for i := range chIn {
		sqrt := i * i
		chOut <- sqrt
	}
	fmt.Printf("sqrtWorker finished\n")
	wg.Done()
}

func main() {
	chIn := make(chan int)
	chOut := make(chan int)
	for i := 0; i < 2; i++ {
		wg.Add(1)
		go sqrtWorker(chIn, chOut)
	}

	go func() {
		chIn <- 2
		chIn <- 4
		close(chIn)
	}()

	go func() {
		wg.Wait()
		close(chOut)
	}()

	for sqrt := range chOut {
		fmt.Printf("Got sqrt: %d\n", sqrt)
	}
}
Output:+103
sqrtWorker started
sqrtWorker started
sqrtWorker finished
Got sqrt: 16
sqrtWorker finished
Got sqrt: 4
66 1553755363270 glotid
Sha1: ff51f50deb25cc9ccb78d7b767b9f55fb9fb1cf3
GlotID: fardcxoshf
465 1555607413696 glotoutput
Sha1: 187adf86a8822871fb1d04e345d21002b6729515
Lang: Go
FileName: main.go
CodeFull:+183
// :glot
package main

import "fmt"

func main() {
	// :show start
	var s = make([]int, 3, 5)
	fmt.Printf("Length: %d\n", len(s))
	fmt.Printf("Capacity: %d\n", cap(s))
	// :show end
}
CodeToRun:+144
package main

import "fmt"

func main() {
	var s = make([]int, 3, 5)
	fmt.Printf("Length: %d\n", len(s))
	fmt.Printf("Capacity: %d\n", cap(s))
}
Output:+22
Length: 3
Capacity: 5
66 1555607414584 glotid
Sha1: 187adf86a8822871fb1d04e345d21002b6729515
GlotID: fbf06hrkcq
459 1555607415548 glotoutput
Sha1: e5b5ab7d0150f4a9f4fd6b3a9c817894a91bd23d
Lang: Go
FileName: main.go
CodeFull:+180
// :glot
package main

import "fmt"

func main() {
	// :show start
	var s = make([]int, 4)
	fmt.Printf("Length: %d\n", len(s))
	fmt.Printf("Capacity: %d\n", cap(s))
	// :show end
}
CodeToRun:+141
package main

import "fmt"

func main() {
	var s = make([]int, 4)
	fmt.Printf("Length: %d\n", len(s))
	fmt.Printf("Capacity: %d\n", cap(s))
}
Output:+22
Length: 4
Capacity: 4
66 1555607415721 glotid
Sha1: e5b5ab7d0150f4a9f4fd6b3a9c817894a91bd23d
GlotID: fbf06ify2i
409 1555607416638 glotoutput
Sha1: e5cea28d704b78badc9c22eb5f3510051d61222a
Lang: Go
FileName: main.go
CodeFull:+160
// :glot
package main

import "fmt"

func main() {
	// :show start
	var s = make([]int, 3)
	for idx, val := range s {
		fmt.Println(idx, val)
	}
	// :show end
}
CodeToRun:+121
package main

import "fmt"

func main() {
	var s = make([]int, 3)
	for idx, val := range s {
		fmt.Println(idx, val)
	}
}
Output:+12
0 0
1 0
2 0
66 1555607416813 glotid
Sha1: e5cea28d704b78badc9c22eb5f3510051d61222a
GlotID: fbf06j3bs2
457 1555607417733 glotoutput
Sha1: 5eed8db7efd570b686a928d6df1c00a37d57863b
Lang: Go
FileName: main.go
CodeFull:+135
// :glot, allow error
package main

import "fmt"

func main() {
	// :show start
	s := make([]int, 3)
	fmt.Println(s[5])
	// :show end
}
CodeToRun:+83
package main

import "fmt"

func main() {
	s := make([]int, 3)
	fmt.Println(s[5])
}
Output:+123
panic: runtime error: index out of range

goroutine 1 [running]:
main.main()
	/tmp/595702968/main.go:7 +0x11
exit status 2
66 1555607417910 glotid
Sha1: 5eed8db7efd570b686a928d6df1c00a37d57863b
GlotID: fbf06jqu8k
495 1555607479524 glotoutput
Sha1: f1da7f978bf3ce7c4b8de0d16a3d7be9a8f7279a
Lang: Go
FileName: main.go
CodeFull:+204
// :glot, no output
package main

import "fmt"

func main() {
	// :show start
	s := []int{10, 11, 12, 13}

	i := 2 // index of 12
	s = append(s[:i], s[i+1:]...)

	fmt.Printf("s: %#v\n", s)
	// :show end
}
CodeToRun:+154
package main

import "fmt"

func main() {
	s := []int{10, 11, 12, 13}

	i := 2 // index of 12
	s = append(s[:i], s[i+1:]...)

	fmt.Printf("s: %#v\n", s)
}
Output:+21
s: []int{10, 11, 13}
66 1555607479699 glotid
Sha1: f1da7f978bf3ce7c4b8de0d16a3d7be9a8f7279a
GlotID: fbf07kj89k
551 1555607480498 glotoutput
Sha1: f264f761f9335af3198a88d4c9ba8c3d98ec0cce
Lang: Go
FileName: main.go
CodeFull:+234
// :glot, no output
package main

import "fmt"

func main() {
	// :show start
	s := []int{10, 11, 12, 13}

	i := 1 // index of 11
	n := 2 // remove 2 elements

	s = append(s[:i], s[i+n:]...)

	fmt.Printf("s: %#v\n", s)
	// :show end
}
CodeToRun:+184
package main

import "fmt"

func main() {
	s := []int{10, 11, 12, 13}

	i := 1 // index of 11
	n := 2 // remove 2 elements

	s = append(s[:i], s[i+n:]...)

	fmt.Printf("s: %#v\n", s)
}
Output:+17
s: []int{10, 13}
66 1555607480675 glotid
Sha1: f264f761f9335af3198a88d4c9ba8c3d98ec0cce
GlotID: fbf07l43n1
1439 1555607481601 glotoutput
Sha1: 7af9eac56aebfc7ffd8adbcd0957e5721ec9b835
Lang: Go
FileName: main.go
CodeFull:+574
// :glot, no output
package main

import "fmt"

func main() {
	// :show start
	s := []int{10, 11, 12, 13}
	fmt.Printf("&s[0]: %p, cap(s): %d\n", &s[0], cap(s))
	fmt.Printf("s: %#v\n", s)

	i := 1 // index of 11
	n := 2 // remove 2 elements

	s = append(s[:i], s[i+n:]...)

	fmt.Print("\nAfter removal:\n")
	fmt.Printf("&s[0]: %p, cap(s): %d\n", &s[0], cap(s))
	fmt.Printf("s: %#v\n", s)

	s = append(s, 1, 2, 3, 4)
	fmt.Printf("\nAfter appending beyond remaining capacity:\n")
	fmt.Printf("&s[0]: %p, cap(s): %d\n", &s[0], cap(s))
	fmt.Printf("s: %#v\n", s)

	// :show end
}
CodeToRun:+524
package main

import "fmt"

func main() {
	s := []int{10, 11, 12, 13}
	fmt.Printf("&s[0]: %p, cap(s): %d\n", &s[0], cap(s))
	fmt.Printf("s: %#v\n", s)

	i := 1 // index of 11
	n := 2 // remove 2 elements

	s = append(s[:i], s[i+n:]...)

	fmt.Print("\nAfter removal:\n")
	fmt.Printf("&s[0]: %p, cap(s): %d\n", &s[0], cap(s))
	fmt.Printf("s: %#v\n", s)

	s = append(s, 1, 2, 3, 4)
	fmt.Printf("\nAfter appending beyond remaining capacity:\n")
	fmt.Printf("&s[0]: %p, cap(s): %d\n", &s[0], cap(s))
	fmt.Printf("s: %#v\n", s)

}
Output:+224
&s[0]: 0xc42007a000, cap(s): 4
s: []int{10, 11, 12, 13}

After removal:
&s[0]: 0xc42007a000, cap(s): 4
s: []int{10, 13}

After appending beyond remaining capacity:
&s[0]: 0xc420082000, cap(s): 8
s: []int{10, 13, 1, 2, 3, 4}
66 1555607481775 glotid
Sha1: 7af9eac56aebfc7ffd8adbcd0957e5721ec9b835
GlotID: fbf07lrqoj
553 1555607482658 glotoutput
Sha1: e5fa55da696b55ff8820a24e043d35d77e67de5f
Lang: Go
FileName: main.go
CodeFull:+233
// :glot, no output
package main

import "fmt"

func main() {
	// :show start
	s := []int{10, 11, 12, 13}

	i := 1 // index of 11
	lastIdx := len(s) - 1

	s[i] = s[lastIdx]
	s = s[:lastIdx]

	fmt.Printf("s: %#v\n", s)
	// :show end
}
CodeToRun:+183
package main

import "fmt"

func main() {
	s := []int{10, 11, 12, 13}

	i := 1 // index of 11
	lastIdx := len(s) - 1

	s[i] = s[lastIdx]
	s = s[:lastIdx]

	fmt.Printf("s: %#v\n", s)
}
Output:+21
s: []int{10, 13, 12}
66 1555607482833 glotid
Sha1: e5fa55da696b55ff8820a24e043d35d77e67de5f
GlotID: fbf07meeme
521 1555607522733 glotoutput
Sha1: ae0364f65e8ca0150ccb218a3983ff361031c746
Lang: Go
FileName: main.go
CodeFull:+202
// :glot
package main

import "fmt"

func main() {
	// :show start
	src := []int{1, 2, 3}
	dst := append([]int(nil), src...)
	fmt.Printf("src: %#v\n", src)
	fmt.Printf("dst: %#v\n", dst)
	// :show end
}
CodeToRun:+163
package main

import "fmt"

func main() {
	src := []int{1, 2, 3}
	dst := append([]int(nil), src...)
	fmt.Printf("src: %#v\n", src)
	fmt.Printf("dst: %#v\n", dst)
}
Output:+40
src: []int{1, 2, 3}
dst: []int{1, 2, 3}
66 1555607522910 glotid
Sha1: ae0364f65e8ca0150ccb218a3983ff361031c746
GlotID: fbf08a9dvu
353 1555607605455 glotoutput
Sha1: d3de2b4a89e48cccd15226de35b0d4c0d9c2e9b3
Lang: Go
FileName: main.go
CodeFull:+137
// :glot, no output
package main

import "fmt"

func main() {
	// :show start
	s := []int(nil)
	fmt.Printf("s: %#v\n", s)
	// :show end
}
CodeToRun:+87
package main

import "fmt"

func main() {
	s := []int(nil)
	fmt.Printf("s: %#v\n", s)
}
Output:+14
s: []int(nil)
66 1555607606302 glotid
Sha1: d3de2b4a89e48cccd15226de35b0d4c0d9c2e9b3
GlotID: fbf09nwnd0
795 1555607607577 glotoutput
Sha1: 5c54e19c705a8b2a6a1338c476c2afc011bd3c0b
Lang: Go
FileName: main.go
CodeFull:+330
// :glot, no output
package main

import "fmt"

func main() {
	// :show start
	s := []int(nil)
	if len(s) == 0 {
		fmt.Printf("s  is empty: %#v\n", s)
	}

	var s2 []int
	if len(s2) == 0 {
		fmt.Printf("s2 is empty: %#v\n", s2)
	}

	s3 := make([]int, 0)
	if len(s2) == 0 {
		fmt.Printf("s3 is empty: %#v\n", s3)
	}

	// :show end
}
CodeToRun:+280
package main

import "fmt"

func main() {
	s := []int(nil)
	if len(s) == 0 {
		fmt.Printf("s  is empty: %#v\n", s)
	}

	var s2 []int
	if len(s2) == 0 {
		fmt.Printf("s2 is empty: %#v\n", s2)
	}

	s3 := make([]int, 0)
	if len(s2) == 0 {
		fmt.Printf("s3 is empty: %#v\n", s3)
	}

}
Output:+69
s  is empty: []int(nil)
s2 is empty: []int(nil)
s3 is empty: []int{}
66 1555607607756 glotid
Sha1: 5c54e19c705a8b2a6a1338c476c2afc011bd3c0b
GlotID: fbf09orwnr
543 1555607689432 glotoutput
Sha1: 9664db1c22b54297cb59530d4e29b2acdcab1106
Lang: Go
FileName: main.go
CodeFull:+213
// :glot
package main

import "fmt"

func main() {
	// :show start
	src := []int{1, 2, 3}
	dst := make([]int, len(src))
	copy(dst, src)
	// :show end
	fmt.Printf("src: %#v\n", src)
	fmt.Printf("dst: %#v\n", dst)
}
CodeToRun:+174
package main

import "fmt"

func main() {
	src := []int{1, 2, 3}
	dst := make([]int, len(src))
	copy(dst, src)
	fmt.Printf("src: %#v\n", src)
	fmt.Printf("dst: %#v\n", dst)
}
Output:+40
src: []int{1, 2, 3}
dst: []int{1, 2, 3}
66 1555607690102 glotid
Sha1: 9664db1c22b54297cb59530d4e29b2acdcab1106
GlotID: fbf0b1swnh
521 1555607690960 glotoutput
Sha1: 8c2134c4ccb3524cbc8e91e05ea47d0ce86e8b73
Lang: Go
FileName: main.go
CodeFull:+202
// :glot
package main

import "fmt"

func main() {
	// :show start
	src := []int{1, 2, 3}
	dst := append([]int(nil), src...)
	// :show end
	fmt.Printf("src: %#v\n", src)
	fmt.Printf("dst: %#v\n", dst)
}
CodeToRun:+163
package main

import "fmt"

func main() {
	src := []int{1, 2, 3}
	dst := append([]int(nil), src...)
	fmt.Printf("src: %#v\n", src)
	fmt.Printf("dst: %#v\n", dst)
}
Output:+40
src: []int{1, 2, 3}
dst: []int{1, 2, 3}
66 1555607691131 glotid
Sha1: 8c2134c4ccb3524cbc8e91e05ea47d0ce86e8b73
GlotID: fbf0b2eyoy
471 1555607715565 glotoutput
Sha1: bb9a9f5e083dbe070658bebdbbc36453d097bca6
Lang: Go
FileName: main.go
CodeFull:+185
// :glot
package main

import "fmt"

func main() {
	// :show start
	var s = make([]int, 3, 5)
	fmt.Printf("Length:   %d\n", len(s))
	fmt.Printf("Capacity: %d\n", cap(s))
	// :show end
}
CodeToRun:+146
package main

import "fmt"

func main() {
	var s = make([]int, 3, 5)
	fmt.Printf("Length:   %d\n", len(s))
	fmt.Printf("Capacity: %d\n", cap(s))
}
Output:+24
Length:   3
Capacity: 5
66 1555607715737 glotid
Sha1: bb9a9f5e083dbe070658bebdbbc36453d097bca6
GlotID: fbf0bh2dam
465 1555607719031 glotoutput
Sha1: c22a48ceaac3b6bc379c978c27542558166b80c5
Lang: Go
FileName: main.go
CodeFull:+182
// :glot
package main

import "fmt"

func main() {
	// :show start
	var s = make([]int, 4)
	fmt.Printf("Length:   %d\n", len(s))
	fmt.Printf("Capacity: %d\n", cap(s))
	// :show end
}
CodeToRun:+143
package main

import "fmt"

func main() {
	var s = make([]int, 4)
	fmt.Printf("Length:   %d\n", len(s))
	fmt.Printf("Capacity: %d\n", cap(s))
}
Output:+24
Length:   4
Capacity: 4
66 1555607719207 glotid
Sha1: c22a48ceaac3b6bc379c978c27542558166b80c5
GlotID: fbf0bj4pqx
340 1555607720895 glotoutput
Sha1: 9721f5d5d6341e9f363c1ba8c4586089457d6172
Lang: Go
FileName: main.go
CodeFull:+139
// :glot, allow error
package main

import "fmt"

func main() {
	// :show start
	s := make([]int, 3, 20)
	fmt.Println(s[5])
	// :show end
}
CodeToRun:+87
package main

import "fmt"

func main() {
	s := make([]int, 3, 20)
	fmt.Println(s[5])
}
Output:+0
66 1555607721073 glotid
Sha1: 9721f5d5d6341e9f363c1ba8c4586089457d6172
GlotID: fbf0bk8kvp
459 1555607724834 glotoutput
Sha1: 7931f8e6b9e339080e282b0aba59bc298b5fc971
Lang: Go
FileName: main.go
CodeFull:+176
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	var a []int
	fmt.Printf("a is %#v\n", a)
	a = append(a, 3)
	fmt.Printf("a is %#v\n", a)
	// :show end
}
CodeToRun:+137
package main

import (
	"fmt"
)

func main() {
	var a []int
	fmt.Printf("a is %#v\n", a)
	a = append(a, 3)
	fmt.Printf("a is %#v\n", a)
}
Output:+30
a is []int(nil)
a is []int{3}
66 1555607725005 glotid
Sha1: 7931f8e6b9e339080e282b0aba59bc298b5fc971
GlotID: fbf0bml084
779 1555607726116 glotoutput
Sha1: 4f8d5595148f89b0d4865010151d87f269de326a
Lang: Go
FileName: main.go
CodeFull:+320
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	var nilSlice []bool
	empty1 := []bool{}
	empty2 := make([]bool, 0)
	fmt.Printf("nilSlice is %#v\n", nilSlice)
	// empty slice is different than nil slice
	fmt.Printf("empty1 is %#v\n", empty1)
	fmt.Printf("empty2 is %#v\n", empty2)
	// :show end
}
CodeToRun:+281
package main

import (
	"fmt"
)

func main() {
	var nilSlice []bool
	empty1 := []bool{}
	empty2 := make([]bool, 0)
	fmt.Printf("nilSlice is %#v\n", nilSlice)
	// empty slice is different than nil slice
	fmt.Printf("empty1 is %#v\n", empty1)
	fmt.Printf("empty2 is %#v\n", empty2)
}
Output:+62
nilSlice is []bool(nil)
empty1 is []bool{}
empty2 is []bool{}
66 1555607726285 glotid
Sha1: 4f8d5595148f89b0d4865010151d87f269de326a
GlotID: fbf0bncfcc
404 1555607727349 glotoutput
Sha1: 758bc2a2a26b2d6989b3fa627629cbd0ef676342
Lang: Go
FileName: main.go
CodeFull:+155
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	a := []int{3, 1, 4, 1}
	fmt.Printf("a has %d elements\n", len(a))

	// :show end
}
CodeToRun:+116
package main

import (
	"fmt"
)

func main() {
	a := []int{3, 1, 4, 1}
	fmt.Printf("a has %d elements\n", len(a))

}
Output:+17
a has 4 elements
66 1555607727557 glotid
Sha1: 758bc2a2a26b2d6989b3fa627629cbd0ef676342
GlotID: fbf0bo3q5j
402 1555607728487 glotoutput
Sha1: 9c30497d268b899dad299067f5a827de22046e92
Lang: Go
FileName: main.go
CodeFull:+154
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	a := make([]string, 4)
	fmt.Printf("a has %d elements\n", len(a))
	// :show end
}
CodeToRun:+115
package main

import (
	"fmt"
)

func main() {
	a := make([]string, 4)
	fmt.Printf("a has %d elements\n", len(a))
}
Output:+17
a has 4 elements
66 1555607728655 glotid
Sha1: 9c30497d268b899dad299067f5a827de22046e92
GlotID: fbf0bor9l1
638 1555607729491 glotoutput
Sha1: 0954cb9772e8fb74c689614798351c59737f8d48
Lang: Go
FileName: main.go
CodeFull:+297
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	n := 30
	a := make([]int, 0, n)
	fmt.Printf("a has lenght %d and capacity %d\n", len(a), cap(a))
	for i := 0; i < n; i++ {
		a = append(a, i)
	}
	fmt.Printf("a has lenght %d and capacity %d\n", len(a), cap(a)) // :show end
}
CodeToRun:+194
package main

import (
	"fmt"
)

func main() {
	n := 30
	a := make([]int, 0, n)
	fmt.Printf("a has lenght %d and capacity %d\n", len(a), cap(a))
	for i := 0; i < n; i++ {
		a = append(a, i)
	}
}
Output:+31
a has lenght 0 and capacity 30
66 1555607729661 glotid
Sha1: 0954cb9772e8fb74c689614798351c59737f8d48
GlotID: fbf0bpcscr
402 1555608133600 glotoutput
Sha1: 60c7796f619c923f6acceb398bc725bbb102c854
Lang: Go
FileName: main.go
CodeFull:+154
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	a := []int{3, 1, 4, 1}
	fmt.Printf("a has %d elements\n", len(a))
	// :show end
}
CodeToRun:+115
package main

import (
	"fmt"
)

func main() {
	a := []int{3, 1, 4, 1}
	fmt.Printf("a has %d elements\n", len(a))
}
Output:+17
a has 4 elements
66 1555608134404 glotid
Sha1: 60c7796f619c923f6acceb398bc725bbb102c854
GlotID: fbf0iebxjf
737 1555608135310 glotoutput
Sha1: 783bb92934aefbc762b4fd59e99acf74e95513a3
Lang: Go
FileName: main.go
CodeFull:+299
// :glot
package main

import (
	"fmt"
)

func main() {
	// :show start
	n := 30
	a := make([]int, 0, n)
	fmt.Printf("a has lenght %d and capacity %d\n", len(a), cap(a))
	for i := 0; i < n; i++ {
		a = append(a, i)
	}
	fmt.Printf("a has lenght %d and capacity %d\n", len(a), cap(a))
  // :show end
}
CodeToRun:+259
package main

import (
	"fmt"
)

func main() {
	n := 30
	a := make([]int, 0, n)
	fmt.Printf("a has lenght %d and capacity %d\n", len(a), cap(a))
	for i := 0; i < n; i++ {
		a = append(a, i)
	}
	fmt.Printf("a has lenght %d and capacity %d\n", len(a), cap(a))
}
Output:+63
a has lenght 0 and capacity 30
a has lenght 30 and capacity 30
66 1555608135482 glotid
Sha1: 783bb92934aefbc762b4fd59e99acf74e95513a3
GlotID: fbf0iez08a
1433 1561010783516 glotoutput
Sha1: f61c9625c55ece74c28d209abdf2bf22f24643af
Lang: Go
FileName: main.go
CodeFull:+640
// :glot, no output
package main

import (
    "fmt"
)

func main() {
    // :show start
    fmt.Print("What is your name?\n")
    var name string
    if n, err := fmt.Scanf("%s", &name); err != nil {
        fmt.Printf("fmt.Scanf failed with '%s'\n", err)
    } else {
        fmt.Printf("fmt.Scanf scanned %d item(s) and set name to '%s'\n", n, name)
    }
    fmt.Print("What is your age?\n")
    var age int
    if n, err :=  fmt.Scanf("%d", &age); err != nil {
        fmt.Printf("fmt.Scanf failed with '%s'\n", err)
    } else {
        fmt.Printf("fmt.Scanf scanned %d item(s) and set age to '%d'\n", n, age)
    }
    // :show end
}
CodeToRun:+584
package main

import (
    "fmt"
)

func main() {
    fmt.Print("What is your name?\n")
    var name string
    if n, err := fmt.Scanf("%s", &name); err != nil {
        fmt.Printf("fmt.Scanf failed with '%s'\n", err)
    } else {
        fmt.Printf("fmt.Scanf scanned %d item(s) and set name to '%s'\n", n, name)
    }
    fmt.Print("What is your age?\n")
    var age int
    if n, err :=  fmt.Scanf("%d", &age); err != nil {
        fmt.Printf("fmt.Scanf failed with '%s'\n", err)
    } else {
        fmt.Printf("fmt.Scanf scanned %d item(s) and set age to '%d'\n", n, age)
    }
}
Output:+93
What is your name?
fmt.Scanf failed with 'EOF'
What is your age?
fmt.Scanf failed with 'EOF'
66 1561010784399 glotid
Sha1: f61c9625c55ece74c28d209abdf2bf22f24643af
GlotID: fdbygd5uul
465 1561010785435 glotoutput
Sha1: ae42c0ff14ba5c6f0a4ebbcb3ae1b7d2cf86af3a
Lang: Go
FileName: main.go
CodeFull:+194
// :glot, no output
package main

import (
    "fmt"
)

func main() {
    // :show start
    var line string
    fmt.Scanln(&line)
    fmt.Printf("Entered line: '%s'\n", line)
    // :show end
}
CodeToRun:+138
package main

import (
    "fmt"
)

func main() {
    var line string
    fmt.Scanln(&line)
    fmt.Printf("Entered line: '%s'\n", line)
}
Output:+17
Entered line: ''
66 1561010785615 glotid
Sha1: ae42c0ff14ba5c6f0a4ebbcb3ae1b7d2cf86af3a
GlotID: fdbygdw56q
801 1561010786832 glotoutput
Sha1: 9639daa593923a1aa4a47c717ab4eb9e742e3150
Lang: Go
FileName: main.go
CodeFull:+356
// :glot, no output
package main

import (
    "fmt"
    "bufio"
    "os"
)

func main() {
    // :show start
    reader := bufio.NewReader(os.Stdin)
    if line, err := reader.ReadString('\n'); err != nil {
        fmt.Printf("ReadString failed with '%s'\n", err)
    } else {
        fmt.Printf("Entered line: '%s'\n", line)
    }
    
    // :show end
}
CodeToRun:+300
package main

import (
    "fmt"
    "bufio"
    "os"
)

func main() {
    reader := bufio.NewReader(os.Stdin)
    if line, err := reader.ReadString('\n'); err != nil {
        fmt.Printf("ReadString failed with '%s'\n", err)
    } else {
        fmt.Printf("Entered line: '%s'\n", line)
    }
    
}
Output:+29
ReadString failed with 'EOF'
66 1561010787020 glotid
Sha1: 9639daa593923a1aa4a47c717ab4eb9e742e3150
GlotID: fdbygeq9nx
621 1561010788227 glotoutput
Sha1: 4c3c0f0aa936fc4c6221ca23372b76c2ced43315
Lang: Go
FileName: main.go
CodeFull:+281
// :glot, no output
package main

import (
    "fmt"
    "bufio"
    "os"
)

func main() {
    // :show start
    scanner := bufio.NewScanner(os.Stdin)
    for scanner.Scan() {
        line := scanner.Text()
        fmt.Printf("Entered line: '%s'\n", line)
    }
    // :show end
}
CodeToRun:+225
package main

import (
    "fmt"
    "bufio"
    "os"
)

func main() {
    scanner := bufio.NewScanner(os.Stdin)
    for scanner.Scan() {
        line := scanner.Text()
        fmt.Printf("Entered line: '%s'\n", line)
    }
}
Output:+0
66 1561010788413 glotid
Sha1: 4c3c0f0aa936fc4c6221ca23372b76c2ced43315
GlotID: fdbygfk18i
466 1566580960489 glotoutput
Sha1: 14a513e3476830756c4cea316632399fd18dd19e
Lang: Go
FileName: main.go
CodeFull:+179
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "  str\n "
	fmt.Printf("TrimSpace: %#v => %#v\n", s, strings.TrimSpace(s))
	// :show end
}
CodeToRun:+140
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "  str\n "
	fmt.Printf("TrimSpace: %#v => %#v\n", s, strings.TrimSpace(s))
}
Output:+31
TrimSpace: "  str\n " => "str"
66 1566580961417 glotid
Sha1: 14a513e3476830756c4cea316632399fd18dd19e
GlotID: ffb1cwg8j6
1019 1566580962647 glotoutput
Sha1: 0f12b1145b821389957468c21ce1592d57f12408
Lang: Go
FileName: main.go
CodeFull:+434
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
    	// :show start
    	prefix := "aba"
    	s1 := "abacdda"
    	trimmed1 := strings.TrimPrefix(s1, prefix)
    	fmt.Printf("TrimPrefix %#v of %#v => %#v\n\n", prefix, s1, trimmed1)

    	s2 := "abacdda"
    	suffix := "da"
    	trimmed2 := strings.TrimSuffix(s2, suffix)
    	fmt.Printf("TrimSuffix %#v of %#v => %#v\n\n", suffix, s2, trimmed2)
    	// :show end
}
CodeToRun:+387
package main

import (
	"fmt"
	"strings"
)

func main() {
    	prefix := "aba"
    	s1 := "abacdda"
    	trimmed1 := strings.TrimPrefix(s1, prefix)
    	fmt.Printf("TrimPrefix %#v of %#v => %#v\n\n", prefix, s1, trimmed1)

    	s2 := "abacdda"
    	suffix := "da"
    	trimmed2 := strings.TrimSuffix(s2, suffix)
    	fmt.Printf("TrimSuffix %#v of %#v => %#v\n\n", suffix, s2, trimmed2)
}
Output:+82
TrimPrefix "aba" of "abacdda" => "cdda"

TrimSuffix "da" of "abacdda" => "abacd"

66 1566580962823 glotid
Sha1: 0f12b1145b821389957468c21ce1592d57f12408
GlotID: ffb1cxajkz
1153 1566580964042 glotoutput
Sha1: 6387c36dfc89a8e9a7ec112a1fbbfc7f5621d124
Lang: Go
FileName: main.go
CodeFull:+468
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "abacdda"
	cutset := "zab"

	trimmed := strings.Trim(s, cutset)
	fmt.Printf("Trim chars %#v from %#v => %#v\n\n", cutset, s, trimmed)

	trimmed = strings.TrimLeft(s, cutset)
	fmt.Printf("TrimLeft chars %#v from %#v => %#v\n\n", cutset, s, trimmed)

	trimmed = strings.TrimRight(s, cutset)
	fmt.Printf("TrimRight chars %#v from %#v => %#v\n\n", cutset, s, trimmed)
	// :show end
}
CodeToRun:+429
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "abacdda"
	cutset := "zab"

	trimmed := strings.Trim(s, cutset)
	fmt.Printf("Trim chars %#v from %#v => %#v\n\n", cutset, s, trimmed)

	trimmed = strings.TrimLeft(s, cutset)
	fmt.Printf("TrimLeft chars %#v from %#v => %#v\n\n", cutset, s, trimmed)

	trimmed = strings.TrimRight(s, cutset)
	fmt.Printf("TrimRight chars %#v from %#v => %#v\n\n", cutset, s, trimmed)
}
Output:+139
Trim chars "zab" from "abacdda" => "cdd"

TrimLeft chars "zab" from "abacdda" => "cdda"

TrimRight chars "zab" from "abacdda" => "abacdd"

66 1566580964218 glotid
Sha1: 6387c36dfc89a8e9a7ec112a1fbbfc7f5621d124
GlotID: ffb1cy4fn1
655 1566580965401 glotoutput
Sha1: 37e8cc94a1b898b32db8d4919e883c80e66feed9
Lang: Go
FileName: main.go
CodeFull:+262
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "this is string"
	toRemove := " is"

    after := strings.Replace(s, toRemove, "", -1)    
	fmt.Printf("Removed %#v from %#v => %#v\n\n", toRemove, s, after)
	// :show end
}
CodeToRun:+223
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "this is string"
	toRemove := " is"

    after := strings.Replace(s, toRemove, "", -1)    
	fmt.Printf("Removed %#v from %#v => %#v\n\n", toRemove, s, after)
}
Output:+54
Removed " is" from "this is string" => "this string"

66 1566580965592 glotid
Sha1: 37e8cc94a1b898b32db8d4919e883c80e66feed9
GlotID: ffb1cyxqkf
651 1566581053371 glotoutput
Sha1: dd0a206f33198fe5557530b6a8c1cb6675da959b
Lang: Go
FileName: main.go
CodeFull:+260
// :glot
package main

import (
	"fmt"
	"strings"
)

func main() {
	// :show start
	s := "this is string"
	toRemove := " is"

  after := strings.Replace(s, toRemove, "", -1)    
	fmt.Printf("Removed %#v from %#v => %#v\n\n", toRemove, s, after)
	// :show end
}
CodeToRun:+221
package main

import (
	"fmt"
	"strings"
)

func main() {
	s := "this is string"
	toRemove := " is"

  after := strings.Replace(s, toRemove, "", -1)    
	fmt.Printf("Removed %#v from %#v => %#v\n\n", toRemove, s, after)
}
Output:+54
Removed " is" from "this is string" => "this string"

66 1566581054062 glotid
Sha1: dd0a206f33198fe5557530b6a8c1cb6675da959b
GlotID: ffb1efm0kr
645 1566661580962 glotoutput
Sha1: 0ce68903aecb80c42ce9c9c2fe06f8893970fcee
Lang: Go
FileName: main.go
CodeFull:+268
// :glot
package main

import "fmt"

func main() {
    // :show start
    m := map[string]int{}
    size := len(m)
    fmt.Printf("Size of empty map: %d\n\n", size)

    
    m["foo"] = 1
    size = len(m)
    fmt.Printf("Size of map: %d\n\n", size)
    // :show end
}
CodeToRun:+223
package main

import "fmt"

func main() {
    m := map[string]int{}
    size := len(m)
    fmt.Printf("Size of empty map: %d\n\n", size)

    
    m["foo"] = 1
    size = len(m)
    fmt.Printf("Size of map: %d\n\n", size)
}
Output:+38
Size of empty map: 0

Size of map: 1

66 1566661582356 glotid
Sha1: 0ce68903aecb80c42ce9c9c2fe06f8893970fcee
GlotID: ffc2e7ssee
451 1566661583554 glotoutput
Sha1: 2cbba444ee324f7d549665330c4e3933076603e0
Lang: Go
FileName: main.go
CodeFull:+180
// :glot
package main

import "fmt"

func main() {
    // :show start
    var m map[string]int
    size := len(m)
    fmt.Printf("Size of nil map: %d\n\n", size)
    // :show end
}
CodeToRun:+135
package main

import "fmt"

func main() {
    var m map[string]int
    size := len(m)
    fmt.Printf("Size of nil map: %d\n\n", size)
}
Output:+20
Size of nil map: 0

66 1566661583736 glotid
Sha1: 2cbba444ee324f7d549665330c4e3933076603e0
GlotID: ffc2e8wbgs
873 1566661585091 glotoutput
Sha1: 6a3848c9aabc51a3c00484fd40eeffee4ccc7f28
Lang: Go
FileName: main.go
CodeFull:+379
// :glot
package main

import "fmt"

// :show start
func returnValues(ok bool) (int, bool) {
	return 5, ok
}

func main() {
	a := 5
	b := 5
	if a == b {
		fmt.Print("a is equal to b\n")
	} else {
		fmt.Print("a is not equal to b\n")
	}

	if n, ok := returnValues(true); ok {
		fmt.Print("ok is true, n: %d\n", n)
	} else {
		fmt.Print("ok is false, n: %d\n", n)
	}
}
// :show end
CodeToRun:+342
package main

import "fmt"

func returnValues(ok bool) (int, bool) {
	return 5, ok
}

func main() {
	a := 5
	b := 5
	if a == b {
		fmt.Print("a is equal to b\n")
	} else {
		fmt.Print("a is not equal to b\n")
	}

	if n, ok := returnValues(true); ok {
		fmt.Print("ok is true, n: %d\n", n)
	} else {
		fmt.Print("ok is false, n: %d\n", n)
	}
}
Output:+35
a is equal to b
ok is true, n: %d
5
66 1566661585275 glotid
Sha1: 6a3848c9aabc51a3c00484fd40eeffee4ccc7f28
GlotID: ffc2e9t87h
870 1566662473625 glotoutput
Sha1: d92c8ce43d1d058bb788c1949f317afb4f6d86ef
Lang: Go
FileName: main.go
CodeFull:+374
// :glot, allowerror
package main

import "fmt"

// :show start
func returnValues(ok bool) (int, bool) {
	return 5, ok
}

func main() {
	if n, ok := returnValues(true); ok {
		fmt.Print("ok is true, n: %d\n", n)
	} else {
		fmt.Print("ok is false, n: %d\n", n)
	}

	// n is only visible within if statement, so this fails compilation
	fmt.Printf("n: %d\n", n)
}
// :show end
CodeToRun:+325
package main

import "fmt"

func returnValues(ok bool) (int, bool) {
	return 5, ok
}

func main() {
	if n, ok := returnValues(true); ok {
		fmt.Print("ok is true, n: %d\n", n)
	} else {
		fmt.Print("ok is false, n: %d\n", n)
	}

	// n is only visible within if statement, so this fails compilation
	fmt.Printf("n: %d\n", n)
}
Output:+55
# command-line-arguments
./main.go:17:24: undefined: n
66 1566662474496 glotid
Sha1: d92c8ce43d1d058bb788c1949f317afb4f6d86ef
GlotID: ffc2sz7kqc
874 1566676659120 glotoutput
Sha1: c89af514e3051b21b2379114625695cc53ee013b
Lang: Go
FileName: main.go
CodeFull:+381
// :glot
package main

import "fmt"

// :show start
func returnValues(ok bool) (int, bool) {
	return 5, ok
}

func main() {
	a := 5
	b := 5
	if a == b {
		fmt.Print("a is equal to b\n")
	} else {
		fmt.Print("a is not equal to b\n")
	}

	if n, ok := returnValues(true); ok {
		fmt.Printf("ok is true, n: %d\n", n)
	} else {
		fmt.Printf("ok is false, n: %d\n", n)
	}
}
// :show end
CodeToRun:+344
package main

import "fmt"

func returnValues(ok bool) (int, bool) {
	return 5, ok
}

func main() {
	a := 5
	b := 5
	if a == b {
		fmt.Print("a is equal to b\n")
	} else {
		fmt.Print("a is not equal to b\n")
	}

	if n, ok := returnValues(true); ok {
		fmt.Printf("ok is true, n: %d\n", n)
	} else {
		fmt.Printf("ok is false, n: %d\n", n)
	}
}
Output:+33
a is equal to b
ok is true, n: 5
66 1566676660088 glotid
Sha1: c89af514e3051b21b2379114625695cc53ee013b
GlotID: ffc9bkyltr
370 1566683372983 glotoutput
Sha1: 660dc1f6d4af386fd933ca21e031fd5d88503c40
Lang: Go
FileName: main.go
CodeFull:+139
// :glot
package main

import "fmt"

func main() {
	// :show start
	n := 0
	for n < 3 {
		fmt.Printf("n: %d\n", n)
		n++
	}
	// :show end
}
CodeToRun:+100
package main

import "fmt"

func main() {
	n := 0
	for n < 3 {
		fmt.Printf("n: %d\n", n)
		n++
	}
}
Output:+15
n: 0
n: 1
n: 2
66 1566683373825 glotid
Sha1: 660dc1f6d4af386fd933ca21e031fd5d88503c40
GlotID: ffccem5gz1
1169 1566770952567 glotoutput
Sha1: f6663bf9fc63e86bd7d8289dbfb20a16a063848b
Lang: Go
FileName: main.go
CodeFull:+551
// :glot, no output
package main

// :show start
var isUserAdminFn func(string) bool

func isUserAdminProduction(userName string) bool {
    // an real implementation that talks to database
    return false
}

func isUserAdminMock(userName string) bool {
    // a fake implementation used for tests
    return userName == "admin"
}

func isUserAdmin(userName string) bool {
    return isUserAdminFn(userName)
}

func main() {
    isUserAdminFn = isUserAdminProduction
    // in test you would use:
    // isUserAdminFn = isUserAdminMock
}
// :show end
CodeToRun:+503
package main

var isUserAdminFn func(string) bool

func isUserAdminProduction(userName string) bool {
    // an real implementation that talks to database
    return false
}

func isUserAdminMock(userName string) bool {
    // a fake implementation used for tests
    return userName == "admin"
}

func isUserAdmin(userName string) bool {
    return isUserAdminFn(userName)
}

func main() {
    isUserAdminFn = isUserAdminProduction
    // in test you would use:
    // isUserAdminFn = isUserAdminMock
}
Output:+0
66 1566770953986 glotid
Sha1: f6663bf9fc63e86bd7d8289dbfb20a16a063848b
GlotID: ffdgn14ln7
992 1566838281622 glotoutput
Sha1: 496a6c861e662aae32448a51afd441bca25f9de3
Lang: Go
FileName: main.go
CodeFull:+392
// :glot
// allow error
package main

import "fmt"

// :show start
func logNum(i int) {
	fmt.Printf("Num %d\n", i)
}

func main() {
	defer logNum(1)
	fmt.Println("First main statement")
	defer logNum(2)
	defer logNum(3)
	panic("panic occurred")

	fmt.Println("Last main statement") // not printed

	// not deferred since execution flow never reaches this line
	defer logNum(4)
}

// :show end
CodeToRun:+340
package main

import "fmt"

func logNum(i int) {
	fmt.Printf("Num %d\n", i)
}

func main() {
	defer logNum(1)
	fmt.Println("First main statement")
	defer logNum(2)
	defer logNum(3)
	panic("panic occurred")

	fmt.Println("Last main statement") // not printed

	// not deferred since execution flow never reaches this line
	defer logNum(4)
}
Output:+144
First main statement
Num 3
Num 2
Num 1
panic: panic occurred

goroutine 1 [running]:
main.main()
	/tmp/791288832/main.go:14 +0xf0
exit status 2
66 1566838282448 glotid
Sha1: 496a6c861e662aae32448a51afd441bca25f9de3
GlotID: ffebkir13n
1026 1567124881973 glotoutput
Sha1: e41f4d5373a787303deae7c228e6890fb1667b9f
Lang: Go
FileName: main.go
CodeFull:+469
// :glot, :name main.go
package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"os"
)

func main() {
	// :show start
	path := "main.go"
	f, err := os.Open(path)
	if err != nil {
		log.Fatalf("os.Open() failed with %s\n", err)
	}
	defer f.Close()

	d, err := ioutil.ReadAll(f)
	if err != nil {
		log.Fatalf("ioutil.ReadAll() failed with '%s'\n", err)
	}

	lines := bytes.Split(d, []byte{'\n'})
	fmt.Printf("File %s has %d lines\n", path, len(lines))
	// :show end
}
CodeToRun:+415
package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"os"
)

func main() {
	path := "main.go"
	f, err := os.Open(path)
	if err != nil {
		log.Fatalf("os.Open() failed with %s\n", err)
	}
	defer f.Close()

	d, err := ioutil.ReadAll(f)
	if err != nil {
		log.Fatalf("ioutil.ReadAll() failed with '%s'\n", err)
	}

	lines := bytes.Split(d, []byte{'\n'})
	fmt.Printf("File %s has %d lines\n", path, len(lines))
}
Output:+26
File main.go has 26 lines
66 1567124882864 glotid
Sha1: e41f4d5373a787303deae7c228e6890fb1667b9f
GlotID: ffhz8d8ly2
1532 1567124884409 glotoutput
Sha1: c4fd7202d14e12aca90d9eeace155e4c6439309a
Lang: Go
FileName: main.go
CodeFull:+722
// :glot, :name main.go
package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
)

// :show start

// ReadLines reads all lines from a file
func ReadLines(filePath string) ([]string, error) {
	file, err := os.OpenFile(filePath, os.O_RDONLY, 0666)
	if err != nil {
		return nil, err
	}
	defer file.Close()
	scanner := bufio.NewScanner(file)
	res := make([]string, 0)
	for scanner.Scan() {
		line := scanner.Text()
		res = append(res, line)
	}
	if err = scanner.Err(); err != nil {
		return nil, err
	}
	return res, nil
}

func main() {
	path := "main.go"
	lines, err := ReadLines(path)
	if err != nil {
		log.Fatalf("ReadLines failed with '%s'\n", err)
	}
	fmt.Printf("File %s has %d lines\n", path, len(lines))
}

// :show end
CodeToRun:+669
package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
)

// ReadLines reads all lines from a file
func ReadLines(filePath string) ([]string, error) {
	file, err := os.OpenFile(filePath, os.O_RDONLY, 0666)
	if err != nil {
		return nil, err
	}
	defer file.Close()
	scanner := bufio.NewScanner(file)
	res := make([]string, 0)
	for scanner.Scan() {
		line := scanner.Text()
		res = append(res, line)
	}
	if err = scanner.Err(); err != nil {
		return nil, err
	}
	return res, nil
}

func main() {
	path := "main.go"
	lines, err := ReadLines(path)
	if err != nil {
		log.Fatalf("ReadLines failed with '%s'\n", err)
	}
	fmt.Printf("File %s has %d lines\n", path, len(lines))
}
Output:+26
File main.go has 36 lines
66 1567124884585 glotid
Sha1: c4fd7202d14e12aca90d9eeace155e4c6439309a
GlotID: ffhz8e9hem
1676 1567878913574 glotoutput
Sha1: 57210bc424d902858fa57252565301be5fd1e9f0
Lang: Go
FileName: main.go
CodeFull:+685
// :glot
package main

import "fmt"

func main() {
	// :show start
	var s string // empty string ""
	s1 := "string\nliteral\nwith\tescape characters"
	s2 := `raw string literal
	which doesn't recognize escape characters like \n
	`

	// you can add strings with +
	fmt.Printf("sum of string: %s\n", s+s1+s2)

	// you can compare strings with ==
	if s1 == s2 {
		fmt.Printf("s1 is equal to s2\n")
	} else {
		fmt.Printf("s1 is not equal to s2\n")
	}

	fmt.Printf("substring of s1: %s\n", s1[3:5])
	fmt.Printf("byte (character) at position 3 in s1: %d\n", s1[3])

	// C-style string formatting
	s = fmt.Sprintf("%d + %f = %s", 1, float64(3), "4")
	fmt.Printf("s: %s\n", s)
	// :show end
}
CodeToRun:+646
package main

import "fmt"

func main() {
	var s string // empty string ""
	s1 := "string\nliteral\nwith\tescape characters"
	s2 := `raw string literal
	which doesn't recognize escape characters like \n
	`

	// you can add strings with +
	fmt.Printf("sum of string: %s\n", s+s1+s2)

	// you can compare strings with ==
	if s1 == s2 {
		fmt.Printf("s1 is equal to s2\n")
	} else {
		fmt.Printf("s1 is not equal to s2\n")
	}

	fmt.Printf("substring of s1: %s\n", s1[3:5])
	fmt.Printf("byte (character) at position 3 in s1: %d\n", s1[3])

	// C-style string formatting
	s = fmt.Sprintf("%d + %f = %s", 1, float64(3), "4")
	fmt.Printf("s: %s\n", s)
}
Output:+228
sum of string: string
literal
with	escape charactersraw string literal
	which doesn't recognize escape characters like \n
	
s1 is not equal to s2
substring of s1: in
byte (character) at position 3 in s1: 105
s: 1 + 3.000000 = 4
66 1567878914574 glotid
Sha1: 57210bc424d902858fa57252565301be5fd1e9f0
GlotID: ffrlmo8f7n
508 1567878915828 glotoutput
Sha1: 59d3ad8da64dea73e0848f55e64570302522b92d
Lang: Go
FileName: main.go
CodeFull:+210
// :glot
package main

import "fmt"

func main() {
	// :show start
	const (
		a = iota // a = 0
		_        // iota is incremented  to 1
		b        // b = 2
	)
	fmt.Printf("a: %d, b: %d\n", a, b)
	// :show end
}
CodeToRun:+171
package main

import "fmt"

func main() {
	const (
		a = iota // a = 0
		_        // iota is incremented  to 1
		b        // b = 2
	)
	fmt.Printf("a: %d, b: %d\n", a, b)
}
Output:+11
a: 0, b: 2
66 1567878916005 glotid
Sha1: 59d3ad8da64dea73e0848f55e64570302522b92d
GlotID: ffrlmp34ej
2865 1567878917670 glotoutput
Sha1: f8f0402b49cea6b15cf6aaf6622248d12bdf27a3
Lang: Go
FileName: main.go
CodeFull:+1294
// :glot
package main

import "fmt"

func main() {
	// :show start
	// Creating arrays of 6 elements of type int
	var array1 = [6]int{1, 2, 3, 4, 5, 6}
	// the compiler will derive the size of the array
	var array2 = [...]int{1, 2, 3, 4, 5, 6} 

	fmt.Println("array1:", array1)
	fmt.Println("array2:", array2)

	// Creating arrays with default values inside:
	zeros := [8]int{}       // Create a list of 8 int filled with 0
	ptrs := [8]*int{}       // a list of int pointers, filled with 8 nil references ( <nil> )
	emptystr := [8]string{} // a list of string filled with 8 times ""

	fmt.Println("zeroes:", zeros)      // > [0 0 0 0 0 0 0 0]
	fmt.Println("ptrs:", ptrs)         // > [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
	fmt.Println("emptystr:", emptystr) // > [       ]
	// values are empty strings, separated by spaces,
	// so we can just see separating spaces

	// Arrays are also working with a personalized type
	type Data struct {
		Number int
		Text   string
	}

	// Creating an array with 8 'Data' elements
	// All the 8 elements will be like {0, ""} (Number = 0, Text = "")
	structs := [8]Data{}

	fmt.Println("structs:", structs) // > [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]
	// prints {0 } because Number are 0 and Text are empty; separated by a space
	// :show end
}
CodeToRun:+1255
package main

import "fmt"

func main() {
	// Creating arrays of 6 elements of type int
	var array1 = [6]int{1, 2, 3, 4, 5, 6}
	// the compiler will derive the size of the array
	var array2 = [...]int{1, 2, 3, 4, 5, 6} 

	fmt.Println("array1:", array1)
	fmt.Println("array2:", array2)

	// Creating arrays with default values inside:
	zeros := [8]int{}       // Create a list of 8 int filled with 0
	ptrs := [8]*int{}       // a list of int pointers, filled with 8 nil references ( <nil> )
	emptystr := [8]string{} // a list of string filled with 8 times ""

	fmt.Println("zeroes:", zeros)      // > [0 0 0 0 0 0 0 0]
	fmt.Println("ptrs:", ptrs)         // > [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
	fmt.Println("emptystr:", emptystr) // > [       ]
	// values are empty strings, separated by spaces,
	// so we can just see separating spaces

	// Arrays are also working with a personalized type
	type Data struct {
		Number int
		Text   string
	}

	// Creating an array with 8 'Data' elements
	// All the 8 elements will be like {0, ""} (Number = 0, Text = "")
	structs := [8]Data{}

	fmt.Println("structs:", structs) // > [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]
	// prints {0 } because Number are 0 and Text are empty; separated by a space
}
Output:+197
array1: [1 2 3 4 5 6]
array2: [1 2 3 4 5 6]
zeroes: [0 0 0 0 0 0 0 0]
ptrs: [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
emptystr: [       ]
structs: [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]
66 1567878917850 glotid
Sha1: f8f0402b49cea6b15cf6aaf6622248d12bdf27a3
GlotID: ffrlmq6q8x
1108 1567878919309 glotoutput
Sha1: 10b61507451ce4f5a1b43cf82cd6f1465dd79b7c
Lang: Go
FileName: main.go
CodeFull:+502
// :glot
package main

import "fmt"

func main() {
	// :show start
	// Defining a 2d Array to represent a matrix like
	// 1 2 3     So with 2 lines and 3 columns;
	// 4 5 6
	multiDimArray := [2][3]int{[3]int{1, 2, 3}, [3]int{4, 5, 6}}

	// That can be simplified like this:
	var simplified = [2][3]int{{1, 2, 3}, {4, 5, 6}}

	fmt.Println(multiDimArray)

	fmt.Println(multiDimArray[0])

	fmt.Println(multiDimArray[0][1])

	// :show end

	// silence compiler error about unused variable
	_ = simplified
}
CodeToRun:+462
package main

import "fmt"

func main() {
	// Defining a 2d Array to represent a matrix like
	// 1 2 3     So with 2 lines and 3 columns;
	// 4 5 6
	multiDimArray := [2][3]int{[3]int{1, 2, 3}, [3]int{4, 5, 6}}

	// That can be simplified like this:
	var simplified = [2][3]int{{1, 2, 3}, {4, 5, 6}}

	fmt.Println(multiDimArray)

	fmt.Println(multiDimArray[0])

	fmt.Println(multiDimArray[0][1])

	// silence compiler error about unused variable
	_ = simplified
}
Output:+28
[[1 2 3] [4 5 6]]
[1 2 3]
2
66 1567878919486 glotid
Sha1: 10b61507451ce4f5a1b43cf82cd6f1465dd79b7c
GlotID: ffrlmr5qcv
1221 1567878920874 glotoutput
Sha1: b9785b826491fdbd72ab775ba8e9bfab99deb59f
Lang: Go
FileName: main.go
CodeFull:+261
// :glot
package main

import "fmt"

func main() {
	// :show start
	// We can also define array with as much dimensions as we need
	// here, initialized with all zeros
	var multiDimArray = [2][4][3][2]string{}
	fmt.Printf("%#v\n", multiDimArray)
	// :show end
}
CodeToRun:+222
package main

import "fmt"

func main() {
	// We can also define array with as much dimensions as we need
	// here, initialized with all zeros
	var multiDimArray = [2][4][3][2]string{}
	fmt.Printf("%#v\n", multiDimArray)
}
Output:+621
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}}
66 1567878921048 glotid
Sha1: b9785b826491fdbd72ab775ba8e9bfab99deb59f
GlotID: ffrlms39jz
1335 1567878922279 glotoutput
Sha1: fa5772cb945767a0ca25c624d8ef95d0b7a2fec4
Lang: Go
FileName: main.go
CodeFull:+301
// :glot
package main

import "fmt"

func main() {
	// :show start

	var multiDimArray = [2][4][3][2]string{}

	// setting values at various locations:
	multiDimArray[0][0][0][0] = "All zero indexes"
	multiDimArray[1][3][2][1] = "All indexes to max"
	fmt.Printf("%#v\n", multiDimArray)
	// :show end
}
CodeToRun:+262
package main

import "fmt"

func main() {

	var multiDimArray = [2][4][3][2]string{}

	// setting values at various locations:
	multiDimArray[0][0][0][0] = "All zero indexes"
	multiDimArray[1][3][2][1] = "All indexes to max"
	fmt.Printf("%#v\n", multiDimArray)
}
Output:+655
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"All zero indexes", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", "All indexes to max"}}}}
66 1567878922461 glotid
Sha1: fa5772cb945767a0ca25c624d8ef95d0b7a2fec4
GlotID: ffrlmsxij5
1905 1568911972748 glotoutput
Sha1: 89c9439c74bd8d90bc444fdcd3f93ccc9d94723d
Lang: Go
FileName: main.go
CodeFull:+889
// :glot
package main

import (
    "encoding/gob"
    "os"
    "log"
    "fmt"
)

// :show start
type User struct {
    Username string
    Password string
}

func writeToGob(path string, user *User) error {
    file, err := os.Create(path)
    if err != nil {
        return err
    }

    encoder := gob.NewEncoder(file)

    err = encoder.Encode(user)
    if err != nil {
        file.Close()
        return err
    }

    return file.Close()
}

func main() {
     user := User{
        Username: "Angus",
        Password: "1234",
    }
    path := "user.gob"
    err := writeToGob(path, &user)
    if err != nil {
        log.Fatalf("writeToGob() failed with '%s'\n", err)
    }
    st, err := os.Stat(path)
    if err != nil {
        log.Fatalf("os.Stat() failed with '%s'\n", err)
    }
    fmt.Printf("Wrote user struct to file '%s' of size %d\n", path, st.Size())
}
// :show end
CodeToRun:+852
package main

import (
    "encoding/gob"
    "os"
    "log"
    "fmt"
)

type User struct {
    Username string
    Password string
}

func writeToGob(path string, user *User) error {
    file, err := os.Create(path)
    if err != nil {
        return err
    }

    encoder := gob.NewEncoder(file)

    err = encoder.Encode(user)
    if err != nil {
        file.Close()
        return err
    }

    return file.Close()
}

func main() {
     user := User{
        Username: "Angus",
        Password: "1234",
    }
    path := "user.gob"
    err := writeToGob(path, &user)
    if err != nil {
        log.Fatalf("writeToGob() failed with '%s'\n", err)
    }
    st, err := os.Stat(path)
    if err != nil {
        log.Fatalf("os.Stat() failed with '%s'\n", err)
    }
    fmt.Printf("Wrote user struct to file '%s' of size %d\n", path, st.Size())
}
Output:+48
Wrote user struct to file 'user.gob' of size 62
66 1568911973717 glotid
Sha1: 89c9439c74bd8d90bc444fdcd3f93ccc9d94723d
GlotID: fg4s7l08l4
2985 1568913279645 glotoutput
Sha1: e1e266b4e6b03633d5077674558c10cd89c34a91
Lang: Go
FileName: main.go
CodeFull:+1398
// :glot
package main

import (
    "encoding/gob"
    "os"
    "log"
    "fmt"
)

// :show start
type User struct {
    Username string
    Password string
}
// :show end

// :show start
func writeToGob(path string, user *User) error {
    file, err := os.Create(path)
    if err != nil {
        return err
    }

    encoder := gob.NewEncoder(file)

    err = encoder.Encode(user)
    if err != nil {
        file.Close()
        return err
    }

    return file.Close()
}

func write(path string, user *User) {
    err := writeToGob(path, user)
    if err != nil {
        log.Fatalf("writeToGob() failed with '%s'\n", err)
    }
    st, err := os.Stat(path)
    if err != nil {
        log.Fatalf("os.Stat() failed with '%s'\n", err)
    }
    fmt.Printf("Wrote user struct to file '%s' of size %d.\n", path, st.Size())
}

func read(path string) {
    user := User{}
    file, err := os.Open(path)
    if err != nil {
        log.Fatalf("os.Open('%s') failed with '%s'\n", path, err)
    }
    defer file.Close()

    decoder := gob.NewDecoder(file)
    err = decoder.Decode(&user)
    if err != nil {
        log.Fatalf("decoder.Decode() failed with '%s'\n", err)
    }
    fmt.Printf("\nRead from '%s' user:\n%#v\n", path, user)    
}

func main() {
     user := User{
        Username: "Angus",
        Password: "1234",
    }
    path := "user.gob"
    write(path, &user)
    read(path)
}
CodeToRun:+1346
package main

import (
    "encoding/gob"
    "os"
    "log"
    "fmt"
)

type User struct {
    Username string
    Password string
}

func writeToGob(path string, user *User) error {
    file, err := os.Create(path)
    if err != nil {
        return err
    }

    encoder := gob.NewEncoder(file)

    err = encoder.Encode(user)
    if err != nil {
        file.Close()
        return err
    }

    return file.Close()
}

func write(path string, user *User) {
    err := writeToGob(path, user)
    if err != nil {
        log.Fatalf("writeToGob() failed with '%s'\n", err)
    }
    st, err := os.Stat(path)
    if err != nil {
        log.Fatalf("os.Stat() failed with '%s'\n", err)
    }
    fmt.Printf("Wrote user struct to file '%s' of size %d.\n", path, st.Size())
}

func read(path string) {
    user := User{}
    file, err := os.Open(path)
    if err != nil {
        log.Fatalf("os.Open('%s') failed with '%s'\n", path, err)
    }
    defer file.Close()

    decoder := gob.NewDecoder(file)
    err = decoder.Decode(&user)
    if err != nil {
        log.Fatalf("decoder.Decode() failed with '%s'\n", err)
    }
    fmt.Printf("\nRead from '%s' user:\n%#v\n", path, user)    
}

func main() {
     user := User{
        Username: "Angus",
        Password: "1234",
    }
    path := "user.gob"
    write(path, &user)
    read(path)
}
Output:+122
Wrote user struct to file 'user.gob' of size 62.

Read from 'user.gob' user:
main.User{Username:"Angus", Password:"1234"}
66 1568913280741 glotid
Sha1: e1e266b4e6b03633d5077674558c10cd89c34a91
GlotID: fg4st75m4w
2998 1568913332281 glotoutput
Sha1: 9ae97ec3cc30f47a3fb8620b08a2c40863e76ad2
Lang: Go
FileName: main.go
CodeFull:+1411
// :glot
package main

import (
    "encoding/gob"
    "os"
    "log"
    "fmt"
)

// :show start
type User struct {
    Username string
    Password string
}
// :show end

// :show start
func writeToGob(path string, user *User) error {
    file, err := os.Create(path)
    if err != nil {
        return err
    }

    encoder := gob.NewEncoder(file)

    err = encoder.Encode(user)
    if err != nil {
        file.Close()
        return err
    }

    return file.Close()
}

func write(path string, user *User) {
    err := writeToGob(path, user)
    if err != nil {
        log.Fatalf("writeToGob() failed with '%s'\n", err)
    }
    st, err := os.Stat(path)
    if err != nil {
        log.Fatalf("os.Stat() failed with '%s'\n", err)
    }
    fmt.Printf("Wrote user struct to file '%s' of size %d.\n", path, st.Size())
}

func read(path string) {
    user := User{}
    file, err := os.Open(path)
    if err != nil {
        log.Fatalf("os.Open('%s') failed with '%s'\n", path, err)
    }
    defer file.Close()

    decoder := gob.NewDecoder(file)
    err = decoder.Decode(&user)
    if err != nil {
        log.Fatalf("decoder.Decode() failed with '%s'\n", err)
    }
    fmt.Printf("\nRead from '%s' user:\n%#v\n", path, user)    
}

func main() {
     user := User{
        Username: "Angus",
        Password: "1234",
    }
    path := "user.gob"
    write(path, &user)
    read(path)
}
// :show end
CodeToRun:+1346
package main

import (
    "encoding/gob"
    "os"
    "log"
    "fmt"
)

type User struct {
    Username string
    Password string
}

func writeToGob(path string, user *User) error {
    file, err := os.Create(path)
    if err != nil {
        return err
    }

    encoder := gob.NewEncoder(file)

    err = encoder.Encode(user)
    if err != nil {
        file.Close()
        return err
    }

    return file.Close()
}

func write(path string, user *User) {
    err := writeToGob(path, user)
    if err != nil {
        log.Fatalf("writeToGob() failed with '%s'\n", err)
    }
    st, err := os.Stat(path)
    if err != nil {
        log.Fatalf("os.Stat() failed with '%s'\n", err)
    }
    fmt.Printf("Wrote user struct to file '%s' of size %d.\n", path, st.Size())
}

func read(path string) {
    user := User{}
    file, err := os.Open(path)
    if err != nil {
        log.Fatalf("os.Open('%s') failed with '%s'\n", path, err)
    }
    defer file.Close()

    decoder := gob.NewDecoder(file)
    err = decoder.Decode(&user)
    if err != nil {
        log.Fatalf("decoder.Decode() failed with '%s'\n", err)
    }
    fmt.Printf("\nRead from '%s' user:\n%#v\n", path, user)    
}

func main() {
     user := User{
        Username: "Angus",
        Password: "1234",
    }
    path := "user.gob"
    write(path, &user)
    read(path)
}
Output:+122
Wrote user struct to file 'user.gob' of size 62.

Read from 'user.gob' user:
main.User{Username:"Angus", Password:"1234"}
66 1568913332936 glotid
Sha1: 9ae97ec3cc30f47a3fb8620b08a2c40863e76ad2
GlotID: fg4su28chw
2068 1570212518921 glotoutput
Sha1: b4ee3f0146c694620583c6b582ee4bd1b20f5c4e
Lang: Go
FileName: main.go
CodeFull:+901
// :glot
package main

import (
    "fmt"
)

// :show start
type User1 struct {
    Name  string
    Email string
}

type User2 struct {
    Name  string
    Email string
}

// String satisfies the fmt.Stringer interface
// Defining it on type User2 makes it available on *User2 as well
func (u User2) String() string {
    return fmt.Sprintf("%s <%s>", u.Name, u.Email)
}

func main() {
    u1 := &User1{
        Name:  "John Doe",
        Email: "johndoe@example.com",
    }

    fmt.Printf("u1: type: %T, value: %s\n\n", u1, u1)

    u2 := User2{
        Name:  "John Doe",
        Email: "johndoe@example.com",
    }

    fmt.Printf("u2: type:  %T, value: %s\n\n", u2, u2)

		// method define on type User2 is also available on type *User2
    u3 := &User2{
        Name:  "John Doe",
        Email: "johndoe@example.com",
    }

    fmt.Printf("u3: type: %T, value: %s\n", u3, u3)

}
// :show end
CodeToRun:+864
package main

import (
    "fmt"
)

type User1 struct {
    Name  string
    Email string
}

type User2 struct {
    Name  string
    Email string
}

// String satisfies the fmt.Stringer interface
// Defining it on type User2 makes it available on *User2 as well
func (u User2) String() string {
    return fmt.Sprintf("%s <%s>", u.Name, u.Email)
}

func main() {
    u1 := &User1{
        Name:  "John Doe",
        Email: "johndoe@example.com",
    }

    fmt.Printf("u1: type: %T, value: %s\n\n", u1, u1)

    u2 := User2{
        Name:  "John Doe",
        Email: "johndoe@example.com",
    }

    fmt.Printf("u2: type:  %T, value: %s\n\n", u2, u2)

		// method define on type User2 is also available on type *User2
    u3 := &User2{
        Name:  "John Doe",
        Email: "johndoe@example.com",
    }

    fmt.Printf("u3: type: %T, value: %s\n", u3, u3)

}
Output:+186
u1: type: *main.User1, value: &{John Doe johndoe@example.com}

u2: type:  main.User2, value: John Doe <johndoe@example.com>

u3: type: *main.User2, value: John Doe <johndoe@example.com>
66 1570212519982 glotid
Sha1: b4ee3f0146c694620583c6b582ee4bd1b20f5c4e
GlotID: fgldo8n7el
470 1570695738663 glotoutput
Sha1: 771afbfd4b8a089f8c7d1ad1ffa6b7115a40af9e
Lang: Go
FileName: main.go
CodeFull:+185
// :glot
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	// :show start
	path := filepath.Join("dir", "sub", "file.txt")
	fmt.Printf("path: %s\n", path)
	// :show end
}
CodeToRun:+146
package main

import (
	"fmt"
	"path/filepath"
)

func main() {
	path := filepath.Join("dir", "sub", "file.txt")
	fmt.Printf("path: %s\n", path)
}
Output:+23
path: dir/sub/file.txt
66 1570695739782 glotid
Sha1: 771afbfd4b8a089f8c7d1ad1ffa6b7115a40af9e
GlotID: fgrjnt91a0
3259 1572858146158 gist
GistID: 5648d36550f7592236327e920243f791
Gist:+3206
{"url":"https://api.github.com/gists/5648d36550f7592236327e920243f791","forks_url":"https://api.github.com/gists/5648d36550f7592236327e920243f791/forks","commits_url":"https://api.github.com/gists/5648d36550f7592236327e920243f791/commits","id":"5648d36550f7592236327e920243f791","node_id":"MDQ6R2lzdDU2NDhkMzY1NTBmNzU5MjIzNjMyN2U5MjAyNDNmNzkx","git_pull_url":"https://gist.github.com/5648d36550f7592236327e920243f791.git","git_push_url":"https://gist.github.com/5648d36550f7592236327e920243f791.git","html_url":"https://gist.github.com/5648d36550f7592236327e920243f791","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5648d36550f7592236327e920243f791/raw/e36efa9b530f5a8d3102cb307f3a3e4d0357031a/main.go","size":73,"truncated":false,"content":"package main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello, 世界\")\n}"}},"public":true,"created_at":"2019-11-02T09:12:17Z","updated_at":"2019-11-02T09:13:49Z","description":"chapter https://www.notion.so/essentialbooks/Hello-World-a62bd2012aba4b6e9eadabe1b91e06cc","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5648d36550f7592236327e920243f791/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7836ffb06c0a52b6ef00a4742e53c7bd9b5c788b","committed_at":"2019-11-02T09:12:17Z","change_status":{"total":7,"additions":7,"deletions":0},"url":"https://api.github.com/gists/5648d36550f7592236327e920243f791/7836ffb06c0a52b6ef00a4742e53c7bd9b5c788b"}],"truncated":false}
3247 1572864080511 gistoutput
Gist:+3206
{"url":"https://api.github.com/gists/5648d36550f7592236327e920243f791","forks_url":"https://api.github.com/gists/5648d36550f7592236327e920243f791/forks","commits_url":"https://api.github.com/gists/5648d36550f7592236327e920243f791/commits","id":"5648d36550f7592236327e920243f791","node_id":"MDQ6R2lzdDU2NDhkMzY1NTBmNzU5MjIzNjMyN2U5MjAyNDNmNzkx","git_pull_url":"https://gist.github.com/5648d36550f7592236327e920243f791.git","git_push_url":"https://gist.github.com/5648d36550f7592236327e920243f791.git","html_url":"https://gist.github.com/5648d36550f7592236327e920243f791","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5648d36550f7592236327e920243f791/raw/e36efa9b530f5a8d3102cb307f3a3e4d0357031a/main.go","size":73,"truncated":false,"content":"package main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello, 世界\")\n}"}},"public":true,"created_at":"2019-11-02T09:12:17Z","updated_at":"2019-11-02T09:13:49Z","description":"chapter https://www.notion.so/essentialbooks/Hello-World-a62bd2012aba4b6e9eadabe1b91e06cc","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5648d36550f7592236327e920243f791/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7836ffb06c0a52b6ef00a4742e53c7bd9b5c788b","committed_at":"2019-11-02T09:12:17Z","change_status":{"total":7,"additions":7,"deletions":0},"url":"https://api.github.com/gists/5648d36550f7592236327e920243f791/7836ffb06c0a52b6ef00a4742e53c7bd9b5c788b"}],"truncated":false}
GistOutput:+14
Hello, 世界
4874 1572944703955 gist
GistID: 31b5364c35801027a2929b17e9155425
Gist:+4821
{"url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425","forks_url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/forks","commits_url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/commits","id":"31b5364c35801027a2929b17e9155425","node_id":"MDQ6R2lzdDMxYjUzNjRjMzU4MDEwMjdhMjkyOWIxN2U5MTU1NDI1","git_pull_url":"https://gist.github.com/31b5364c35801027a2929b17e9155425.git","git_push_url":"https://gist.github.com/31b5364c35801027a2929b17e9155425.git","html_url":"https://gist.github.com/31b5364c35801027a2929b17e9155425","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/31b5364c35801027a2929b17e9155425/raw/e33edef5095c1523974862f906dc3e1513b22759/main.go","size":580,"truncated":false,"content":"// :run go run main.go -echo echo-arg additional arg\n// :collection Essential Go\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n)\n\n// :show start\nvar (\n\tflgHelp bool\n\tflgEcho string\n)\n\nfunc parseCmdLineFlags() {\n\tflag.BoolVar(&flgHelp, \"help\", false, \"if true, show help\")\n\tflag.StringVar(&flgEcho, \"echo\", \"\", \"\")\n\tflag.Parse()\n}\n\nfunc main() {\n\tparseCmdLineFlags()\n\tif flgHelp {\n\t\tflag.Usage()\n\t\tos.Exit(0)\n\t}\n\tfmt.Printf(\"flag -echo: '%s'\\n\", flgEcho)\n\n\tremainingArgs := flag.Args()\n\tfor _, arg := range remainingArgs {\n\t\tfmt.Printf(\"Remainig arg: '%s'\\n\", arg)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T05:13:40Z","updated_at":"2019-11-05T08:17:09Z","description":"command line arguments","comments":0,"user":null,"comments_url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"dc084e0dae06147c2d314fec25dde52f7891f48a","committed_at":"2019-11-05T08:17:09Z","change_status":{"total":4,"additions":1,"deletions":3},"url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/dc084e0dae06147c2d314fec25dde52f7891f48a"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"fb5f7a2a414d863becde59d05ff7b12c498a8d66","committed_at":"2019-11-05T05:13:39Z","change_status":{"total":39,"additions":39,"deletions":0},"url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/fb5f7a2a414d863becde59d05ff7b12c498a8d66"}],"truncated":false}
4918 1572944705371 gistoutput
Gist:+4821
{"url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425","forks_url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/forks","commits_url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/commits","id":"31b5364c35801027a2929b17e9155425","node_id":"MDQ6R2lzdDMxYjUzNjRjMzU4MDEwMjdhMjkyOWIxN2U5MTU1NDI1","git_pull_url":"https://gist.github.com/31b5364c35801027a2929b17e9155425.git","git_push_url":"https://gist.github.com/31b5364c35801027a2929b17e9155425.git","html_url":"https://gist.github.com/31b5364c35801027a2929b17e9155425","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/31b5364c35801027a2929b17e9155425/raw/e33edef5095c1523974862f906dc3e1513b22759/main.go","size":580,"truncated":false,"content":"// :run go run main.go -echo echo-arg additional arg\n// :collection Essential Go\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n)\n\n// :show start\nvar (\n\tflgHelp bool\n\tflgEcho string\n)\n\nfunc parseCmdLineFlags() {\n\tflag.BoolVar(&flgHelp, \"help\", false, \"if true, show help\")\n\tflag.StringVar(&flgEcho, \"echo\", \"\", \"\")\n\tflag.Parse()\n}\n\nfunc main() {\n\tparseCmdLineFlags()\n\tif flgHelp {\n\t\tflag.Usage()\n\t\tos.Exit(0)\n\t}\n\tfmt.Printf(\"flag -echo: '%s'\\n\", flgEcho)\n\n\tremainingArgs := flag.Args()\n\tfor _, arg := range remainingArgs {\n\t\tfmt.Printf(\"Remainig arg: '%s'\\n\", arg)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T05:13:40Z","updated_at":"2019-11-05T08:17:09Z","description":"command line arguments","comments":0,"user":null,"comments_url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"dc084e0dae06147c2d314fec25dde52f7891f48a","committed_at":"2019-11-05T08:17:09Z","change_status":{"total":4,"additions":1,"deletions":3},"url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/dc084e0dae06147c2d314fec25dde52f7891f48a"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"fb5f7a2a414d863becde59d05ff7b12c498a8d66","committed_at":"2019-11-05T05:13:39Z","change_status":{"total":39,"additions":39,"deletions":0},"url":"https://api.github.com/gists/31b5364c35801027a2929b17e9155425/fb5f7a2a414d863becde59d05ff7b12c498a8d66"}],"truncated":false}
GistOutput:+70
flag -echo: 'echo-arg'
Remainig arg: 'additional'
Remainig arg: 'arg'
3895 1572945272066 gist
GistID: b0ce5c49fb5e692a0daf62bcbb558f98
Gist:+3842
{"url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98","forks_url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98/forks","commits_url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98/commits","id":"b0ce5c49fb5e692a0daf62bcbb558f98","node_id":"MDQ6R2lzdGIwY2U1YzQ5ZmI1ZTY5MmEwZGFmNjJiY2JiNTU4Zjk4","git_pull_url":"https://gist.github.com/b0ce5c49fb5e692a0daf62bcbb558f98.git","git_push_url":"https://gist.github.com/b0ce5c49fb5e692a0daf62bcbb558f98.git","html_url":"https://gist.github.com/b0ce5c49fb5e692a0daf62bcbb558f98","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b0ce5c49fb5e692a0daf62bcbb558f98/raw/20c30acf089afe5ab73f6829bdcefde6d9c2a717/main.go","size":684,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype Person struct {\n\tfullName string\n\tName     string\n\tAge      int    `json:\"age\"`\n\tCity     string `json:\"city\"`\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tp := Person{\n\t\tName: \"John\",\n\t\tAge:  37,\n\t\tCity: \"SF\",\n\t}\n\td, err := json.Marshal(&p)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Person in compact JSON: %s\\n\", string(d))\n\n\td, err = json.MarshalIndent(p, \"\", \"  \")\n\tif err != nil {\n\t\tlog.Fatalf(\"json.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Person in pretty-printed JSON:\\n%s\\n\", string(d))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T09:07:28Z","updated_at":"2019-11-05T09:07:28Z","description":"Serialize struct as JSON","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e13e20ba70639baaf43a60e5f017f3fa4e1ff9dc","committed_at":"2019-11-05T09:07:28Z","change_status":{"total":39,"additions":39,"deletions":0},"url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98/e13e20ba70639baaf43a60e5f017f3fa4e1ff9dc"}],"truncated":false}
4012 1572945273645 gistoutput
Gist:+3842
{"url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98","forks_url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98/forks","commits_url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98/commits","id":"b0ce5c49fb5e692a0daf62bcbb558f98","node_id":"MDQ6R2lzdGIwY2U1YzQ5ZmI1ZTY5MmEwZGFmNjJiY2JiNTU4Zjk4","git_pull_url":"https://gist.github.com/b0ce5c49fb5e692a0daf62bcbb558f98.git","git_push_url":"https://gist.github.com/b0ce5c49fb5e692a0daf62bcbb558f98.git","html_url":"https://gist.github.com/b0ce5c49fb5e692a0daf62bcbb558f98","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b0ce5c49fb5e692a0daf62bcbb558f98/raw/20c30acf089afe5ab73f6829bdcefde6d9c2a717/main.go","size":684,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype Person struct {\n\tfullName string\n\tName     string\n\tAge      int    `json:\"age\"`\n\tCity     string `json:\"city\"`\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tp := Person{\n\t\tName: \"John\",\n\t\tAge:  37,\n\t\tCity: \"SF\",\n\t}\n\td, err := json.Marshal(&p)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Person in compact JSON: %s\\n\", string(d))\n\n\td, err = json.MarshalIndent(p, \"\", \"  \")\n\tif err != nil {\n\t\tlog.Fatalf(\"json.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Person in pretty-printed JSON:\\n%s\\n\", string(d))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T09:07:28Z","updated_at":"2019-11-05T09:07:28Z","description":"Serialize struct as JSON","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e13e20ba70639baaf43a60e5f017f3fa4e1ff9dc","committed_at":"2019-11-05T09:07:28Z","change_status":{"total":39,"additions":39,"deletions":0},"url":"https://api.github.com/gists/b0ce5c49fb5e692a0daf62bcbb558f98/e13e20ba70639baaf43a60e5f017f3fa4e1ff9dc"}],"truncated":false}
GistOutput:+142
Person in compact JSON: {"Name":"John","age":37,"city":"SF"}
Person in pretty-printed JSON:
{
  "Name": "John",
  "age": 37,
  "city": "SF"
}
3774 1572945273799 gist
GistID: 9abfbfbd4c8739650632521fd3c337ea
Gist:+3721
{"url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea","forks_url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea/forks","commits_url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea/commits","id":"9abfbfbd4c8739650632521fd3c337ea","node_id":"MDQ6R2lzdDlhYmZiZmJkNGM4NzM5NjUwNjMyNTIxZmQzYzMzN2Vh","git_pull_url":"https://gist.github.com/9abfbfbd4c8739650632521fd3c337ea.git","git_push_url":"https://gist.github.com/9abfbfbd4c8739650632521fd3c337ea.git","html_url":"https://gist.github.com/9abfbfbd4c8739650632521fd3c337ea","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9abfbfbd4c8739650632521fd3c337ea/raw/a9f8981aeeb9d52df7caa25133796d1496a91938/main.go","size":577,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype Person struct {\n\tName       *string `json:\"name\"`\n\tAge        int     `json:\"age\"`\n\tCity       string\n\tOccupation string\n}\n\nvar jsonStr = `{\n\t\"name\": \"Jane\",\n\t\"age\": 24,\n\t\"city\": \"ny\"\n}`\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar p Person\n\terr := json.Unmarshal([]byte(jsonStr), &p)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Unmarshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Person struct parsed from JSON: %#v\\n\", p)\n\tfmt.Printf(\"Name: %#v\\n\", *p.Name)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T09:08:29Z","updated_at":"2019-11-05T09:08:29Z","description":"Parse JSON into a struct","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2c2cc2786e7af353c580bd11a230788bf70600ad","committed_at":"2019-11-05T09:08:28Z","change_status":{"total":36,"additions":36,"deletions":0},"url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea/2c2cc2786e7af353c580bd11a230788bf70600ad"}],"truncated":false}
3870 1572945275346 gistoutput
Gist:+3721
{"url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea","forks_url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea/forks","commits_url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea/commits","id":"9abfbfbd4c8739650632521fd3c337ea","node_id":"MDQ6R2lzdDlhYmZiZmJkNGM4NzM5NjUwNjMyNTIxZmQzYzMzN2Vh","git_pull_url":"https://gist.github.com/9abfbfbd4c8739650632521fd3c337ea.git","git_push_url":"https://gist.github.com/9abfbfbd4c8739650632521fd3c337ea.git","html_url":"https://gist.github.com/9abfbfbd4c8739650632521fd3c337ea","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9abfbfbd4c8739650632521fd3c337ea/raw/a9f8981aeeb9d52df7caa25133796d1496a91938/main.go","size":577,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype Person struct {\n\tName       *string `json:\"name\"`\n\tAge        int     `json:\"age\"`\n\tCity       string\n\tOccupation string\n}\n\nvar jsonStr = `{\n\t\"name\": \"Jane\",\n\t\"age\": 24,\n\t\"city\": \"ny\"\n}`\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar p Person\n\terr := json.Unmarshal([]byte(jsonStr), &p)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Unmarshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Person struct parsed from JSON: %#v\\n\", p)\n\tfmt.Printf(\"Name: %#v\\n\", *p.Name)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T09:08:29Z","updated_at":"2019-11-05T09:08:29Z","description":"Parse JSON into a struct","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2c2cc2786e7af353c580bd11a230788bf70600ad","committed_at":"2019-11-05T09:08:28Z","change_status":{"total":36,"additions":36,"deletions":0},"url":"https://api.github.com/gists/9abfbfbd4c8739650632521fd3c337ea/2c2cc2786e7af353c580bd11a230788bf70600ad"}],"truncated":false}
GistOutput:+121
Person struct parsed from JSON: main.Person{Name:(*string)(0xc000010330), Age:24, City:"ny", Occupation:""}
Name: "Jane"
3815 1572945275769 gist
GistID: 2f155938fdd0d264618bcd8b38b091b6
Gist:+3762
{"url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6","forks_url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6/forks","commits_url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6/commits","id":"2f155938fdd0d264618bcd8b38b091b6","node_id":"MDQ6R2lzdDJmMTU1OTM4ZmRkMGQyNjQ2MThiY2Q4YjM4YjA5MWI2","git_pull_url":"https://gist.github.com/2f155938fdd0d264618bcd8b38b091b6.git","git_push_url":"https://gist.github.com/2f155938fdd0d264618bcd8b38b091b6.git","html_url":"https://gist.github.com/2f155938fdd0d264618bcd8b38b091b6","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/2f155938fdd0d264618bcd8b38b091b6/raw/f9775108cdb509b5d962bc7ddade9407fc6aae76/main.go","size":620,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n)\n\n// :show start\nvar wg sync.WaitGroup\n\nfunc sqrtWorker(chIn chan int, chOut chan int) {\n\tfmt.Printf(\"sqrtWorker started\\n\")\n\tfor i := range chIn {\n\t\tsqrt := i * i\n\t\tchOut <- sqrt\n\t}\n\tfmt.Printf(\"sqrtWorker finished\\n\")\n\twg.Done()\n}\n\nfunc main() {\n\tchIn := make(chan int)\n\tchOut := make(chan int)\n\tfor i := 0; i < 2; i++ {\n\t\twg.Add(1)\n\t\tgo sqrtWorker(chIn, chOut)\n\t}\n\n\tgo func() {\n\t\tchIn <- 2\n\t\tchIn <- 4\n\t\tclose(chIn)\n\t}()\n\n\tgo func() {\n\t\twg.Wait()\n\t\tclose(chOut)\n\t}()\n\n\tfor sqrt := range chOut {\n\t\tfmt.Printf(\"Got sqrt: %d\\n\", sqrt)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:10:31Z","updated_at":"2019-11-05T09:10:31Z","description":"Concurrency","comments":0,"user":null,"comments_url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f69e64413eb1bd2df1897656542f2d9bffdaecb2","committed_at":"2019-11-05T09:10:30Z","change_status":{"total":46,"additions":46,"deletions":0},"url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6/f69e64413eb1bd2df1897656542f2d9bffdaecb2"}],"truncated":false}
3893 1572945277112 gistoutput
Gist:+3762
{"url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6","forks_url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6/forks","commits_url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6/commits","id":"2f155938fdd0d264618bcd8b38b091b6","node_id":"MDQ6R2lzdDJmMTU1OTM4ZmRkMGQyNjQ2MThiY2Q4YjM4YjA5MWI2","git_pull_url":"https://gist.github.com/2f155938fdd0d264618bcd8b38b091b6.git","git_push_url":"https://gist.github.com/2f155938fdd0d264618bcd8b38b091b6.git","html_url":"https://gist.github.com/2f155938fdd0d264618bcd8b38b091b6","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/2f155938fdd0d264618bcd8b38b091b6/raw/f9775108cdb509b5d962bc7ddade9407fc6aae76/main.go","size":620,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n)\n\n// :show start\nvar wg sync.WaitGroup\n\nfunc sqrtWorker(chIn chan int, chOut chan int) {\n\tfmt.Printf(\"sqrtWorker started\\n\")\n\tfor i := range chIn {\n\t\tsqrt := i * i\n\t\tchOut <- sqrt\n\t}\n\tfmt.Printf(\"sqrtWorker finished\\n\")\n\twg.Done()\n}\n\nfunc main() {\n\tchIn := make(chan int)\n\tchOut := make(chan int)\n\tfor i := 0; i < 2; i++ {\n\t\twg.Add(1)\n\t\tgo sqrtWorker(chIn, chOut)\n\t}\n\n\tgo func() {\n\t\tchIn <- 2\n\t\tchIn <- 4\n\t\tclose(chIn)\n\t}()\n\n\tgo func() {\n\t\twg.Wait()\n\t\tclose(chOut)\n\t}()\n\n\tfor sqrt := range chOut {\n\t\tfmt.Printf(\"Got sqrt: %d\\n\", sqrt)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:10:31Z","updated_at":"2019-11-05T09:10:31Z","description":"Concurrency","comments":0,"user":null,"comments_url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f69e64413eb1bd2df1897656542f2d9bffdaecb2","committed_at":"2019-11-05T09:10:30Z","change_status":{"total":46,"additions":46,"deletions":0},"url":"https://api.github.com/gists/2f155938fdd0d264618bcd8b38b091b6/f69e64413eb1bd2df1897656542f2d9bffdaecb2"}],"truncated":false}
GistOutput:+103
sqrtWorker started
Got sqrt: 4
sqrtWorker started
sqrtWorker finished
sqrtWorker finished
Got sqrt: 16
3507 1572945277444 gist
GistID: caaac781536be9e4dc0c2f6eab8bc196
Gist:+3454
{"url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196","forks_url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196/forks","commits_url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196/commits","id":"caaac781536be9e4dc0c2f6eab8bc196","node_id":"MDQ6R2lzdGNhYWFjNzgxNTM2YmU5ZTRkYzBjMmY2ZWFiOGJjMTk2","git_pull_url":"https://gist.github.com/caaac781536be9e4dc0c2f6eab8bc196.git","git_push_url":"https://gist.github.com/caaac781536be9e4dc0c2f6eab8bc196.git","html_url":"https://gist.github.com/caaac781536be9e4dc0c2f6eab8bc196","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/caaac781536be9e4dc0c2f6eab8bc196/raw/0eae5945bda68df251ca18d33a049a475fa21e10/main.go","size":366,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tv := 5\n\n\t// pv is a pointer to v\n\tpv := &v\n\tfmt.Printf(\"v: %d, pv: %p\\n\", v, pv)\n\n\t// we change the value of v via pv\n\t*pv = 4\n\tfmt.Printf(\"v: %d\\n\", v)\n\n\t// two pointers to the same value have the same address\n\tpv2 := &v\n\tfmt.Printf(\"pv: %p, pv2: %p\\n\", pv, pv2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T09:12:18Z","updated_at":"2019-11-05T09:12:18Z","description":"Pointers","comments":0,"user":null,"comments_url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4414c9cbe03e049911f654130d72b7dc7ec18f3e","committed_at":"2019-11-05T09:12:18Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196/4414c9cbe03e049911f654130d72b7dc7ec18f3e"}],"truncated":false}
3545 1572945278631 gistoutput
Gist:+3454
{"url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196","forks_url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196/forks","commits_url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196/commits","id":"caaac781536be9e4dc0c2f6eab8bc196","node_id":"MDQ6R2lzdGNhYWFjNzgxNTM2YmU5ZTRkYzBjMmY2ZWFiOGJjMTk2","git_pull_url":"https://gist.github.com/caaac781536be9e4dc0c2f6eab8bc196.git","git_push_url":"https://gist.github.com/caaac781536be9e4dc0c2f6eab8bc196.git","html_url":"https://gist.github.com/caaac781536be9e4dc0c2f6eab8bc196","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/caaac781536be9e4dc0c2f6eab8bc196/raw/0eae5945bda68df251ca18d33a049a475fa21e10/main.go","size":366,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tv := 5\n\n\t// pv is a pointer to v\n\tpv := &v\n\tfmt.Printf(\"v: %d, pv: %p\\n\", v, pv)\n\n\t// we change the value of v via pv\n\t*pv = 4\n\tfmt.Printf(\"v: %d\\n\", v)\n\n\t// two pointers to the same value have the same address\n\tpv2 := &v\n\tfmt.Printf(\"pv: %p, pv2: %p\\n\", pv, pv2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T09:12:18Z","updated_at":"2019-11-05T09:12:18Z","description":"Pointers","comments":0,"user":null,"comments_url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4414c9cbe03e049911f654130d72b7dc7ec18f3e","committed_at":"2019-11-05T09:12:18Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/caaac781536be9e4dc0c2f6eab8bc196/4414c9cbe03e049911f654130d72b7dc7ec18f3e"}],"truncated":false}
GistOutput:+64
v: 5, pv: 0xc000016048
v: 4
pv: 0xc000016048, pv2: 0xc000016048
3637 1572945279111 gist
GistID: 646f2e936bff82f90b7fbc62f891bf3c
Gist:+3584
{"url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c","forks_url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c/forks","commits_url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c/commits","id":"646f2e936bff82f90b7fbc62f891bf3c","node_id":"MDQ6R2lzdDY0NmYyZTkzNmJmZjgyZjkwYjdmYmM2MmY4OTFiZjNj","git_pull_url":"https://gist.github.com/646f2e936bff82f90b7fbc62f891bf3c.git","git_push_url":"https://gist.github.com/646f2e936bff82f90b7fbc62f891bf3c.git","html_url":"https://gist.github.com/646f2e936bff82f90b7fbc62f891bf3c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/646f2e936bff82f90b7fbc62f891bf3c/raw/ba2ede0a93755710c136c6e6d674b4faded303cb/main.go","size":476,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\n// :show start\nfunc sqrt(n float64) (float64, error) {\n\tif n < 0 {\n\t\treturn 0, fmt.Errorf(\"invalid argument '%f', must be >= 0\", n)\n\t}\n\treturn math.Sqrt(n), nil\n}\n\nfunc printSqrt(n float64) {\n\tif res, err := sqrt(n); err == nil {\n\t\tfmt.Printf(\"sqrt of %f is %f\\n\", n, res)\n\t} else {\n\t\tfmt.Printf(\"sqrt of %f returned error '%s'\\n\", n, err)\n\t}\n\n}\n\nfunc main() {\n\tprintSqrt(16)\n\tprintSqrt(-16)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:13:40Z","updated_at":"2019-11-05T09:14:03Z","description":"Error handling","comments":0,"user":null,"comments_url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"d2ac1a95c8f339d890d957a9c265212b5ae0b3a1","committed_at":"2019-11-05T09:13:39Z","change_status":{"total":31,"additions":31,"deletions":0},"url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c/d2ac1a95c8f339d890d957a9c265212b5ae0b3a1"}],"truncated":false}
3722 1572945280360 gistoutput
Gist:+3584
{"url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c","forks_url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c/forks","commits_url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c/commits","id":"646f2e936bff82f90b7fbc62f891bf3c","node_id":"MDQ6R2lzdDY0NmYyZTkzNmJmZjgyZjkwYjdmYmM2MmY4OTFiZjNj","git_pull_url":"https://gist.github.com/646f2e936bff82f90b7fbc62f891bf3c.git","git_push_url":"https://gist.github.com/646f2e936bff82f90b7fbc62f891bf3c.git","html_url":"https://gist.github.com/646f2e936bff82f90b7fbc62f891bf3c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/646f2e936bff82f90b7fbc62f891bf3c/raw/ba2ede0a93755710c136c6e6d674b4faded303cb/main.go","size":476,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\n// :show start\nfunc sqrt(n float64) (float64, error) {\n\tif n < 0 {\n\t\treturn 0, fmt.Errorf(\"invalid argument '%f', must be >= 0\", n)\n\t}\n\treturn math.Sqrt(n), nil\n}\n\nfunc printSqrt(n float64) {\n\tif res, err := sqrt(n); err == nil {\n\t\tfmt.Printf(\"sqrt of %f is %f\\n\", n, res)\n\t} else {\n\t\tfmt.Printf(\"sqrt of %f returned error '%s'\\n\", n, err)\n\t}\n\n}\n\nfunc main() {\n\tprintSqrt(16)\n\tprintSqrt(-16)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:13:40Z","updated_at":"2019-11-05T09:14:03Z","description":"Error handling","comments":0,"user":null,"comments_url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"d2ac1a95c8f339d890d957a9c265212b5ae0b3a1","committed_at":"2019-11-05T09:13:39Z","change_status":{"total":31,"additions":31,"deletions":0},"url":"https://api.github.com/gists/646f2e936bff82f90b7fbc62f891bf3c/d2ac1a95c8f339d890d957a9c265212b5ae0b3a1"}],"truncated":false}
GistOutput:+110
sqrt of 16.000000 is 4.000000
sqrt of -16.000000 returned error 'invalid argument '-16.000000', must be >= 0'
4019 1572986854804 gist
GistID: 890835696fd11492418d898ece2dd1e7
Gist:+3966
{"url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7","forks_url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7/forks","commits_url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7/commits","id":"890835696fd11492418d898ece2dd1e7","node_id":"MDQ6R2lzdDg5MDgzNTY5NmZkMTE0OTI0MThkODk4ZWNlMmRkMWU3","git_pull_url":"https://gist.github.com/890835696fd11492418d898ece2dd1e7.git","git_push_url":"https://gist.github.com/890835696fd11492418d898ece2dd1e7.git","html_url":"https://gist.github.com/890835696fd11492418d898ece2dd1e7","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/890835696fd11492418d898ece2dd1e7/raw/861d82e1774f6795968c198f927aa2313e2ef699/main.go","size":826,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n)\n\n// :show start\nvar cache map[int]int\nvar mu sync.Mutex\n\nfunc expensiveOperation(n int) int {\n\t// in real code this operation would be very expensive\n\treturn n * n\n}\n\nfunc getCached(n int) int {\n\tmu.Lock()\n\tv, isCached := cache[n]\n\tmu.Unlock()\n\tif isCached {\n\t\treturn v\n\t}\n\n\tv = expensiveOperation(n)\n\n\tmu.Lock()\n\tcache[n] = v\n\tmu.Unlock()\n\treturn v\n}\n\nfunc accessCache() {\n\ttotal := 0\n\tfor i := 0; i < 5; i++ {\n\t\tn := getCached(i)\n\t\ttotal += n\n\t}\n\tfmt.Printf(\"total: %d\\n\", total)\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tcache = make(map[int]int)\n\tgo accessCache()\n\taccessCache()\n\t// :show end\n\n\t// for simplicity of the example\n\t// don't use time.Sleep() to coordinate goroutines\n\t// in production code\n\ttime.Sleep(100 * time.Millisecond)\n}"}},"public":true,"created_at":"2019-11-05T09:21:00Z","updated_at":"2019-11-05T09:21:01Z","description":"Mutex","comments":0,"user":null,"comments_url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7a3c9d6c8b4c29e5d52322c47b3a4de46c0bf947","committed_at":"2019-11-05T09:21:00Z","change_status":{"total":57,"additions":57,"deletions":0},"url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7/7a3c9d6c8b4c29e5d52322c47b3a4de46c0bf947"}],"truncated":false}
4013 1572986856961 gistoutput
Gist:+3966
{"url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7","forks_url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7/forks","commits_url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7/commits","id":"890835696fd11492418d898ece2dd1e7","node_id":"MDQ6R2lzdDg5MDgzNTY5NmZkMTE0OTI0MThkODk4ZWNlMmRkMWU3","git_pull_url":"https://gist.github.com/890835696fd11492418d898ece2dd1e7.git","git_push_url":"https://gist.github.com/890835696fd11492418d898ece2dd1e7.git","html_url":"https://gist.github.com/890835696fd11492418d898ece2dd1e7","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/890835696fd11492418d898ece2dd1e7/raw/861d82e1774f6795968c198f927aa2313e2ef699/main.go","size":826,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n)\n\n// :show start\nvar cache map[int]int\nvar mu sync.Mutex\n\nfunc expensiveOperation(n int) int {\n\t// in real code this operation would be very expensive\n\treturn n * n\n}\n\nfunc getCached(n int) int {\n\tmu.Lock()\n\tv, isCached := cache[n]\n\tmu.Unlock()\n\tif isCached {\n\t\treturn v\n\t}\n\n\tv = expensiveOperation(n)\n\n\tmu.Lock()\n\tcache[n] = v\n\tmu.Unlock()\n\treturn v\n}\n\nfunc accessCache() {\n\ttotal := 0\n\tfor i := 0; i < 5; i++ {\n\t\tn := getCached(i)\n\t\ttotal += n\n\t}\n\tfmt.Printf(\"total: %d\\n\", total)\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tcache = make(map[int]int)\n\tgo accessCache()\n\taccessCache()\n\t// :show end\n\n\t// for simplicity of the example\n\t// don't use time.Sleep() to coordinate goroutines\n\t// in production code\n\ttime.Sleep(100 * time.Millisecond)\n}"}},"public":true,"created_at":"2019-11-05T09:21:00Z","updated_at":"2019-11-05T09:21:01Z","description":"Mutex","comments":0,"user":null,"comments_url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7a3c9d6c8b4c29e5d52322c47b3a4de46c0bf947","committed_at":"2019-11-05T09:21:00Z","change_status":{"total":57,"additions":57,"deletions":0},"url":"https://api.github.com/gists/890835696fd11492418d898ece2dd1e7/7a3c9d6c8b4c29e5d52322c47b3a4de46c0bf947"}],"truncated":false}
GistOutput:+20
total: 30
total: 30
5073 1572986857413 gist
GistID: 07b87878ae9efeb2478a52f437a33d40
Gist:+5020
{"url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40","forks_url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/forks","commits_url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/commits","id":"07b87878ae9efeb2478a52f437a33d40","node_id":"MDQ6R2lzdDA3Yjg3ODc4YWU5ZWZlYjI0NzhhNTJmNDM3YTMzZDQw","git_pull_url":"https://gist.github.com/07b87878ae9efeb2478a52f437a33d40.git","git_push_url":"https://gist.github.com/07b87878ae9efeb2478a52f437a33d40.git","html_url":"https://gist.github.com/07b87878ae9efeb2478a52f437a33d40","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/07b87878ae9efeb2478a52f437a33d40/raw/cbbad6192c1a3a0a0683a9ce29ab9337fd892757/main.go","size":804,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\n// :show start\n// Stringer is an interface with a single method\ntype Stringer interface {\n\tString() string\n}\n\n// User struct that implements Stringer interface\ntype User struct {\n\tName string\n}\n\nfunc (u *User) String() string {\n\treturn u.Name\n}\n\n// Any type can implement an interface. Here we create\n// an alias of int type an implement Stringer interface\n\ntype MyInt int\n\nfunc (mi MyInt) String() string {\n\treturn strconv.Itoa(int(mi))\n}\n\n// printTypeAndString accepts an interface. 's' can be any value\n// that implements Stringer interface\nfunc printTypeAndString(s Stringer) {\n\tfmt.Printf(\"%T: %s\\n\", s, s)\n}\n\nfunc main() {\n\tu := &User{Name: \"John\"}\n\tprintTypeAndString(u)\n\n\tn := MyInt(5)\n\tprintTypeAndString(n)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:40:18Z","updated_at":"2019-11-05T09:40:39Z","description":"Interfaces","comments":0,"user":null,"comments_url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b8b5b069363a57865874367627c5712285289716","committed_at":"2019-11-05T09:40:38Z","change_status":{"total":2,"additions":0,"deletions":2},"url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/b8b5b069363a57865874367627c5712285289716"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"636d87933cc8ca8cc14c7aa13789b3901f0b23b6","committed_at":"2019-11-05T09:40:16Z","change_status":{"total":49,"additions":49,"deletions":0},"url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/636d87933cc8ca8cc14c7aa13789b3901f0b23b6"}],"truncated":false}
5078 1572986858958 gistoutput
Gist:+5020
{"url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40","forks_url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/forks","commits_url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/commits","id":"07b87878ae9efeb2478a52f437a33d40","node_id":"MDQ6R2lzdDA3Yjg3ODc4YWU5ZWZlYjI0NzhhNTJmNDM3YTMzZDQw","git_pull_url":"https://gist.github.com/07b87878ae9efeb2478a52f437a33d40.git","git_push_url":"https://gist.github.com/07b87878ae9efeb2478a52f437a33d40.git","html_url":"https://gist.github.com/07b87878ae9efeb2478a52f437a33d40","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/07b87878ae9efeb2478a52f437a33d40/raw/cbbad6192c1a3a0a0683a9ce29ab9337fd892757/main.go","size":804,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\n// :show start\n// Stringer is an interface with a single method\ntype Stringer interface {\n\tString() string\n}\n\n// User struct that implements Stringer interface\ntype User struct {\n\tName string\n}\n\nfunc (u *User) String() string {\n\treturn u.Name\n}\n\n// Any type can implement an interface. Here we create\n// an alias of int type an implement Stringer interface\n\ntype MyInt int\n\nfunc (mi MyInt) String() string {\n\treturn strconv.Itoa(int(mi))\n}\n\n// printTypeAndString accepts an interface. 's' can be any value\n// that implements Stringer interface\nfunc printTypeAndString(s Stringer) {\n\tfmt.Printf(\"%T: %s\\n\", s, s)\n}\n\nfunc main() {\n\tu := &User{Name: \"John\"}\n\tprintTypeAndString(u)\n\n\tn := MyInt(5)\n\tprintTypeAndString(n)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:40:18Z","updated_at":"2019-11-05T09:40:39Z","description":"Interfaces","comments":0,"user":null,"comments_url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b8b5b069363a57865874367627c5712285289716","committed_at":"2019-11-05T09:40:38Z","change_status":{"total":2,"additions":0,"deletions":2},"url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/b8b5b069363a57865874367627c5712285289716"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"636d87933cc8ca8cc14c7aa13789b3901f0b23b6","committed_at":"2019-11-05T09:40:16Z","change_status":{"total":49,"additions":49,"deletions":0},"url":"https://api.github.com/gists/07b87878ae9efeb2478a52f437a33d40/636d87933cc8ca8cc14c7aa13789b3901f0b23b6"}],"truncated":false}
GistOutput:+31
*main.User: John
main.MyInt: 5
3521 1572986859298 gist
GistID: 3b414583e0fd92c4cc3810474b6c1b6d
Gist:+3468
{"url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d","forks_url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d/forks","commits_url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d/commits","id":"3b414583e0fd92c4cc3810474b6c1b6d","node_id":"MDQ6R2lzdDNiNDE0NTgzZTBmZDkyYzRjYzM4MTA0NzRiNmMxYjZk","git_pull_url":"https://gist.github.com/3b414583e0fd92c4cc3810474b6c1b6d.git","git_push_url":"https://gist.github.com/3b414583e0fd92c4cc3810474b6c1b6d.git","html_url":"https://gist.github.com/3b414583e0fd92c4cc3810474b6c1b6d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3b414583e0fd92c4cc3810474b6c1b6d/raw/03f9a8ce82e3c706e5bee6c4604807b1a25366d5/main.go","size":360,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n)\n\n// :show start\n\nfunc genInts(chInts chan int) {\n\tchInts <- rand.Intn(1000)\n}\n\nfunc main() {\n\tchInts := make(chan int)\n\tfor i := 0; i < 2; i++ {\n\t\tgo genInts(chInts)\n\t}\n\tn := <-chInts\n\tfmt.Printf(\"n: %d\\n\", n)\n\n\tselect {\n\tcase n := <-chInts:\n\t\tfmt.Printf(\"n: %d\\n\", n)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:38:05Z","updated_at":"2019-11-05T09:38:06Z","description":"Channels and select","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"77d8c2ba6b89dd6dba0391f0b942a7f02dbc2cee","committed_at":"2019-11-05T09:38:04Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d/77d8c2ba6b89dd6dba0391f0b942a7f02dbc2cee"}],"truncated":false}
3508 1572986860850 gistoutput
Gist:+3468
{"url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d","forks_url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d/forks","commits_url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d/commits","id":"3b414583e0fd92c4cc3810474b6c1b6d","node_id":"MDQ6R2lzdDNiNDE0NTgzZTBmZDkyYzRjYzM4MTA0NzRiNmMxYjZk","git_pull_url":"https://gist.github.com/3b414583e0fd92c4cc3810474b6c1b6d.git","git_push_url":"https://gist.github.com/3b414583e0fd92c4cc3810474b6c1b6d.git","html_url":"https://gist.github.com/3b414583e0fd92c4cc3810474b6c1b6d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3b414583e0fd92c4cc3810474b6c1b6d/raw/03f9a8ce82e3c706e5bee6c4604807b1a25366d5/main.go","size":360,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n)\n\n// :show start\n\nfunc genInts(chInts chan int) {\n\tchInts <- rand.Intn(1000)\n}\n\nfunc main() {\n\tchInts := make(chan int)\n\tfor i := 0; i < 2; i++ {\n\t\tgo genInts(chInts)\n\t}\n\tn := <-chInts\n\tfmt.Printf(\"n: %d\\n\", n)\n\n\tselect {\n\tcase n := <-chInts:\n\t\tfmt.Printf(\"n: %d\\n\", n)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:38:05Z","updated_at":"2019-11-05T09:38:06Z","description":"Channels and select","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"77d8c2ba6b89dd6dba0391f0b942a7f02dbc2cee","committed_at":"2019-11-05T09:38:04Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/3b414583e0fd92c4cc3810474b6c1b6d/77d8c2ba6b89dd6dba0391f0b942a7f02dbc2cee"}],"truncated":false}
GistOutput:+13
n: 81
n: 887
3440 1572986861217 gist
GistID: 6c730ba2eae313952f1e5409e0fa7321
Gist:+3387
{"url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321","forks_url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321/forks","commits_url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321/commits","id":"6c730ba2eae313952f1e5409e0fa7321","node_id":"MDQ6R2lzdDZjNzMwYmEyZWFlMzEzOTUyZjFlNTQwOWUwZmE3MzIx","git_pull_url":"https://gist.github.com/6c730ba2eae313952f1e5409e0fa7321.git","git_push_url":"https://gist.github.com/6c730ba2eae313952f1e5409e0fa7321.git","html_url":"https://gist.github.com/6c730ba2eae313952f1e5409e0fa7321","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/6c730ba2eae313952f1e5409e0fa7321/raw/d2b3905fe846ba7c19cadba6824186d4e23d241e/main.go","size":302,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Person struct {\n\tFirstName string\n\tLastName  string\n}\n\nfunc (p *Person) PrintFullName() {\n\tfmt.Printf(\"%s %s\\n\", p.FirstName, p.LastName)\n}\n\nfunc main() {\n\tp := &Person{\n\t\t\"John\",\n\t\t\"Doe\",\n\t}\n\tp.PrintFullName()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:42:25Z","updated_at":"2019-11-05T09:42:25Z","description":"Methods","comments":0,"user":null,"comments_url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5fd20f65aeab4143bd3283463ca930c40cb92574","committed_at":"2019-11-05T09:42:24Z","change_status":{"total":24,"additions":24,"deletions":0},"url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321/5fd20f65aeab4143bd3283463ca930c40cb92574"}],"truncated":false}
3422 1572986864161 gistoutput
Gist:+3387
{"url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321","forks_url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321/forks","commits_url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321/commits","id":"6c730ba2eae313952f1e5409e0fa7321","node_id":"MDQ6R2lzdDZjNzMwYmEyZWFlMzEzOTUyZjFlNTQwOWUwZmE3MzIx","git_pull_url":"https://gist.github.com/6c730ba2eae313952f1e5409e0fa7321.git","git_push_url":"https://gist.github.com/6c730ba2eae313952f1e5409e0fa7321.git","html_url":"https://gist.github.com/6c730ba2eae313952f1e5409e0fa7321","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/6c730ba2eae313952f1e5409e0fa7321/raw/d2b3905fe846ba7c19cadba6824186d4e23d241e/main.go","size":302,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Person struct {\n\tFirstName string\n\tLastName  string\n}\n\nfunc (p *Person) PrintFullName() {\n\tfmt.Printf(\"%s %s\\n\", p.FirstName, p.LastName)\n}\n\nfunc main() {\n\tp := &Person{\n\t\t\"John\",\n\t\t\"Doe\",\n\t}\n\tp.PrintFullName()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:42:25Z","updated_at":"2019-11-05T09:42:25Z","description":"Methods","comments":0,"user":null,"comments_url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5fd20f65aeab4143bd3283463ca930c40cb92574","committed_at":"2019-11-05T09:42:24Z","change_status":{"total":24,"additions":24,"deletions":0},"url":"https://api.github.com/gists/6c730ba2eae313952f1e5409e0fa7321/5fd20f65aeab4143bd3283463ca930c40cb92574"}],"truncated":false}
GistOutput:+9
John Doe
3691 1572986864323 gist
GistID: f225654f7c0177efd2871978f988a06d
Gist:+3638
{"url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d","forks_url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d/forks","commits_url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d/commits","id":"f225654f7c0177efd2871978f988a06d","node_id":"MDQ6R2lzdGYyMjU2NTRmN2MwMTc3ZWZkMjg3MTk3OGY5ODhhMDZk","git_pull_url":"https://gist.github.com/f225654f7c0177efd2871978f988a06d.git","git_push_url":"https://gist.github.com/f225654f7c0177efd2871978f988a06d.git","html_url":"https://gist.github.com/f225654f7c0177efd2871978f988a06d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f225654f7c0177efd2871978f988a06d/raw/2685a5e54fadef5f3d974a2845c49c0931a6f3f1/main.go","size":518,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Person struct {\n\tFirstName string\n\tLastName  string\n}\n\nfunc (p Person) PrintFullNameValue() {\n\tfmt.Printf(\"PrintFullNameValue:   address of p is %p\\n\", &p)\n}\n\nfunc (p *Person) PrintFullNamePointer() {\n\tfmt.Printf(\"PrintFullNamePointer: p is            %p\\n\", p)\n}\n\nfunc main() {\n\tp := Person{\n\t\t\"John\",\n\t\t\"Doe\",\n\t}\n\tfmt.Printf(\"address of p:                         %p\\n\", &p)\n\tp.PrintFullNamePointer()\n\tp.PrintFullNameValue()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:43:10Z","updated_at":"2019-11-05T09:43:11Z","description":"Value vs. pointer receiver","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a24917220b45564f1fb154742367932aa9a1770d","committed_at":"2019-11-05T09:43:10Z","change_status":{"total":30,"additions":30,"deletions":0},"url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d/a24917220b45564f1fb154742367932aa9a1770d"}],"truncated":false}
3819 1572986867227 gistoutput
Gist:+3638
{"url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d","forks_url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d/forks","commits_url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d/commits","id":"f225654f7c0177efd2871978f988a06d","node_id":"MDQ6R2lzdGYyMjU2NTRmN2MwMTc3ZWZkMjg3MTk3OGY5ODhhMDZk","git_pull_url":"https://gist.github.com/f225654f7c0177efd2871978f988a06d.git","git_push_url":"https://gist.github.com/f225654f7c0177efd2871978f988a06d.git","html_url":"https://gist.github.com/f225654f7c0177efd2871978f988a06d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f225654f7c0177efd2871978f988a06d/raw/2685a5e54fadef5f3d974a2845c49c0931a6f3f1/main.go","size":518,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Person struct {\n\tFirstName string\n\tLastName  string\n}\n\nfunc (p Person) PrintFullNameValue() {\n\tfmt.Printf(\"PrintFullNameValue:   address of p is %p\\n\", &p)\n}\n\nfunc (p *Person) PrintFullNamePointer() {\n\tfmt.Printf(\"PrintFullNamePointer: p is            %p\\n\", p)\n}\n\nfunc main() {\n\tp := Person{\n\t\t\"John\",\n\t\t\"Doe\",\n\t}\n\tfmt.Printf(\"address of p:                         %p\\n\", &p)\n\tp.PrintFullNamePointer()\n\tp.PrintFullNameValue()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T09:43:10Z","updated_at":"2019-11-05T09:43:11Z","description":"Value vs. pointer receiver","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a24917220b45564f1fb154742367932aa9a1770d","committed_at":"2019-11-05T09:43:10Z","change_status":{"total":30,"additions":30,"deletions":0},"url":"https://api.github.com/gists/f225654f7c0177efd2871978f988a06d/a24917220b45564f1fb154742367932aa9a1770d"}],"truncated":false}
GistOutput:+153
address of p:                         0xc00000c060
PrintFullNamePointer: p is            0xc00000c060
PrintFullNameValue:   address of p is 0xc00000c080
3597 1572986867607 gist
GistID: 6d9409619a714a5077a2ce46b83b8b4d
Gist:+3544
{"url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d","forks_url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d/forks","commits_url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d/commits","id":"6d9409619a714a5077a2ce46b83b8b4d","node_id":"MDQ6R2lzdDZkOTQwOTYxOWE3MTRhNTA3N2EyY2U0NmI4M2I4YjRk","git_pull_url":"https://gist.github.com/6d9409619a714a5077a2ce46b83b8b4d.git","git_push_url":"https://gist.github.com/6d9409619a714a5077a2ce46b83b8b4d.git","html_url":"https://gist.github.com/6d9409619a714a5077a2ce46b83b8b4d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/6d9409619a714a5077a2ce46b83b8b4d/raw/4918a922ce8fc0817dde2d471c9bfa5b44f73d37/main.go","size":457,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ta := [2]int{4, 5} // array of 2 ints\n\n\t// access element of array\n\tfmt.Printf(\"a[1]: %d\\n\", a[1])\n\n\t// set element of array\n\ta[1] = 3\n\n\t// get size of array\n\tfmt.Printf(\"size of array  a: %d\\n\", len(a))\n\n\t// when using [...] size will be deduced from { ... }\n\ta2 := [...]int{4, 8, -1} // array of 3 integers\n\tfmt.Printf(\"size of array a2: %d\\n\", len(a2))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T09:44:23Z","updated_at":"2019-11-05T09:44:24Z","description":"Arrays","comments":0,"user":null,"comments_url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"501184218e6f94dc5d6143c44292d13b630aaf52","committed_at":"2019-11-05T09:44:23Z","change_status":{"total":23,"additions":23,"deletions":0},"url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d/501184218e6f94dc5d6143c44292d13b630aaf52"}],"truncated":false}
3619 1572986869207 gistoutput
Gist:+3544
{"url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d","forks_url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d/forks","commits_url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d/commits","id":"6d9409619a714a5077a2ce46b83b8b4d","node_id":"MDQ6R2lzdDZkOTQwOTYxOWE3MTRhNTA3N2EyY2U0NmI4M2I4YjRk","git_pull_url":"https://gist.github.com/6d9409619a714a5077a2ce46b83b8b4d.git","git_push_url":"https://gist.github.com/6d9409619a714a5077a2ce46b83b8b4d.git","html_url":"https://gist.github.com/6d9409619a714a5077a2ce46b83b8b4d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/6d9409619a714a5077a2ce46b83b8b4d/raw/4918a922ce8fc0817dde2d471c9bfa5b44f73d37/main.go","size":457,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ta := [2]int{4, 5} // array of 2 ints\n\n\t// access element of array\n\tfmt.Printf(\"a[1]: %d\\n\", a[1])\n\n\t// set element of array\n\ta[1] = 3\n\n\t// get size of array\n\tfmt.Printf(\"size of array  a: %d\\n\", len(a))\n\n\t// when using [...] size will be deduced from { ... }\n\ta2 := [...]int{4, 8, -1} // array of 3 integers\n\tfmt.Printf(\"size of array a2: %d\\n\", len(a2))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T09:44:23Z","updated_at":"2019-11-05T09:44:24Z","description":"Arrays","comments":0,"user":null,"comments_url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"501184218e6f94dc5d6143c44292d13b630aaf52","committed_at":"2019-11-05T09:44:23Z","change_status":{"total":23,"additions":23,"deletions":0},"url":"https://api.github.com/gists/6d9409619a714a5077a2ce46b83b8b4d/501184218e6f94dc5d6143c44292d13b630aaf52"}],"truncated":false}
GistOutput:+48
a[1]: 5
size of array  a: 2
size of array a2: 3
4345 1572989046175 gist
GistID: 48ad2945284768d2b5a81f427105e5bc
Gist:+4292
{"url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc","forks_url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc/forks","commits_url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc/commits","id":"48ad2945284768d2b5a81f427105e5bc","node_id":"MDQ6R2lzdDQ4YWQyOTQ1Mjg0NzY4ZDJiNWE4MWY0MjcxMDVlNWJj","git_pull_url":"https://gist.github.com/48ad2945284768d2b5a81f427105e5bc.git","git_push_url":"https://gist.github.com/48ad2945284768d2b5a81f427105e5bc.git","html_url":"https://gist.github.com/48ad2945284768d2b5a81f427105e5bc","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/48ad2945284768d2b5a81f427105e5bc/raw/1622c31976b2518ae2d977803f6524b88743d82f/main.go","size":1153,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n)\n\n// :show start\n// declaration of a single top-level variable\nvar topLevel int64 = 5\n\n// grouping of multiple top-level declarations\nvar (\n\tintVal int            // value is initialized with zero-value\n\tstr    string = \"str\" // assigning\n\n\t// functions are first-class values so can be assigned to variables\n\t// fn is variable of type func(a int) string\n\t// it's uninitialized so is nil (zero-value for function variables)\n\tfn func(a int) string\n)\n\nfunc f() {\n\t// shorthand using local type inference\n\t// type of `i` is int and is inferred from the value\n\t// note: this is not allowed at top-level\n\ti := 4\n\n\t// grouping inside a function\n\tvar (\n\t\ti2 int\n\t\ts  string\n\t)\n\n\t// _ is like a variable whose value is discarded. It's called blank identifier.\n\t// Useful when we don't care about one of the values returned by a function\n\t_, err := io.Copy(dst, src) // don't care how many bytes were written\n\t// ...\n\n\tfmt.Printf(`i: %d\ni2: %d\ns: %s\nerr: %v\n`, i, i2, s, err)\n}\n\n// :show end\n\nvar (\n\tdst io.Writer = &bytes.Buffer{}\n\tsrc io.Reader = &bytes.Buffer{}\n)\n\nfunc main() {\n\tf()\n}"}},"public":true,"created_at":"2019-11-05T20:50:09Z","updated_at":"2019-11-05T20:50:09Z","description":"Variables","comments":0,"user":null,"comments_url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"890d7524001bec8c32e8ddd0cdc865f1f42f993d","committed_at":"2019-11-05T20:50:08Z","change_status":{"total":58,"additions":58,"deletions":0},"url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc/890d7524001bec8c32e8ddd0cdc865f1f42f993d"}],"truncated":false}
4345 1572989048436 gistoutput
Gist:+4292
{"url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc","forks_url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc/forks","commits_url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc/commits","id":"48ad2945284768d2b5a81f427105e5bc","node_id":"MDQ6R2lzdDQ4YWQyOTQ1Mjg0NzY4ZDJiNWE4MWY0MjcxMDVlNWJj","git_pull_url":"https://gist.github.com/48ad2945284768d2b5a81f427105e5bc.git","git_push_url":"https://gist.github.com/48ad2945284768d2b5a81f427105e5bc.git","html_url":"https://gist.github.com/48ad2945284768d2b5a81f427105e5bc","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/48ad2945284768d2b5a81f427105e5bc/raw/1622c31976b2518ae2d977803f6524b88743d82f/main.go","size":1153,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n)\n\n// :show start\n// declaration of a single top-level variable\nvar topLevel int64 = 5\n\n// grouping of multiple top-level declarations\nvar (\n\tintVal int            // value is initialized with zero-value\n\tstr    string = \"str\" // assigning\n\n\t// functions are first-class values so can be assigned to variables\n\t// fn is variable of type func(a int) string\n\t// it's uninitialized so is nil (zero-value for function variables)\n\tfn func(a int) string\n)\n\nfunc f() {\n\t// shorthand using local type inference\n\t// type of `i` is int and is inferred from the value\n\t// note: this is not allowed at top-level\n\ti := 4\n\n\t// grouping inside a function\n\tvar (\n\t\ti2 int\n\t\ts  string\n\t)\n\n\t// _ is like a variable whose value is discarded. It's called blank identifier.\n\t// Useful when we don't care about one of the values returned by a function\n\t_, err := io.Copy(dst, src) // don't care how many bytes were written\n\t// ...\n\n\tfmt.Printf(`i: %d\ni2: %d\ns: %s\nerr: %v\n`, i, i2, s, err)\n}\n\n// :show end\n\nvar (\n\tdst io.Writer = &bytes.Buffer{}\n\tsrc io.Reader = &bytes.Buffer{}\n)\n\nfunc main() {\n\tf()\n}"}},"public":true,"created_at":"2019-11-05T20:50:09Z","updated_at":"2019-11-05T20:50:09Z","description":"Variables","comments":0,"user":null,"comments_url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"890d7524001bec8c32e8ddd0cdc865f1f42f993d","committed_at":"2019-11-05T20:50:08Z","change_status":{"total":58,"additions":58,"deletions":0},"url":"https://api.github.com/gists/48ad2945284768d2b5a81f427105e5bc/890d7524001bec8c32e8ddd0cdc865f1f42f993d"}],"truncated":false}
GistOutput:+26
i: 4
i2: 0
s: 
err: <nil>
3718 1572989049034 gist
GistID: 0309cb6b537361d2aaf4eed3220e2825
Gist:+3665
{"url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825","forks_url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825/forks","commits_url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825/commits","id":"0309cb6b537361d2aaf4eed3220e2825","node_id":"MDQ6R2lzdDAzMDljYjZiNTM3MzYxZDJhYWY0ZWVkMzIyMGUyODI1","git_pull_url":"https://gist.github.com/0309cb6b537361d2aaf4eed3220e2825.git","git_push_url":"https://gist.github.com/0309cb6b537361d2aaf4eed3220e2825.git","html_url":"https://gist.github.com/0309cb6b537361d2aaf4eed3220e2825","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0309cb6b537361d2aaf4eed3220e2825/raw/7e54f170247bb8dcfb5dc3f3f82244463bcfc751/main.go","size":580,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\n// addCheckOverflow adds two int16 numbers and additionally\n// returns true if the result overflowed\nfunc addCheckOverflow(a, b uint16) (uint16, bool) {\n\tres := a + b\n\toverflowed := res < a || res < b\n\treturn res, overflowed\n}\n\nfunc main() {\n\tres, overflowed := addCheckOverflow(1, 3)\n\tfmt.Printf(\"%5d + %5d = %5d, overflowed: %v\\n\\n\", 1, 3, res, overflowed)\n\tres, overflowed = addCheckOverflow(65520, 10000)\n\tfmt.Printf(\"%5d + %5d = %5d, overflowed: %v\\n\", 65550, 10000, res, overflowed)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T20:53:54Z","updated_at":"2019-11-05T20:53:54Z","description":"Functions","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"0dc700118375333ac117e68ef3af3cc61f9fac44","committed_at":"2019-11-05T20:53:53Z","change_status":{"total":24,"additions":24,"deletions":0},"url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825/0dc700118375333ac117e68ef3af3cc61f9fac44"}],"truncated":false}
3774 1572989050401 gistoutput
Gist:+3665
{"url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825","forks_url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825/forks","commits_url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825/commits","id":"0309cb6b537361d2aaf4eed3220e2825","node_id":"MDQ6R2lzdDAzMDljYjZiNTM3MzYxZDJhYWY0ZWVkMzIyMGUyODI1","git_pull_url":"https://gist.github.com/0309cb6b537361d2aaf4eed3220e2825.git","git_push_url":"https://gist.github.com/0309cb6b537361d2aaf4eed3220e2825.git","html_url":"https://gist.github.com/0309cb6b537361d2aaf4eed3220e2825","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0309cb6b537361d2aaf4eed3220e2825/raw/7e54f170247bb8dcfb5dc3f3f82244463bcfc751/main.go","size":580,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\n// addCheckOverflow adds two int16 numbers and additionally\n// returns true if the result overflowed\nfunc addCheckOverflow(a, b uint16) (uint16, bool) {\n\tres := a + b\n\toverflowed := res < a || res < b\n\treturn res, overflowed\n}\n\nfunc main() {\n\tres, overflowed := addCheckOverflow(1, 3)\n\tfmt.Printf(\"%5d + %5d = %5d, overflowed: %v\\n\\n\", 1, 3, res, overflowed)\n\tres, overflowed = addCheckOverflow(65520, 10000)\n\tfmt.Printf(\"%5d + %5d = %5d, overflowed: %v\\n\", 65550, 10000, res, overflowed)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T20:53:54Z","updated_at":"2019-11-05T20:53:54Z","description":"Functions","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"0dc700118375333ac117e68ef3af3cc61f9fac44","committed_at":"2019-11-05T20:53:53Z","change_status":{"total":24,"additions":24,"deletions":0},"url":"https://api.github.com/gists/0309cb6b537361d2aaf4eed3220e2825/0dc700118375333ac117e68ef3af3cc61f9fac44"}],"truncated":false}
GistOutput:+82
    1 +     3 =     4, overflowed: false

65550 + 10000 =  9984, overflowed: true
4062 1572989051028 gist
GistID: 62992e0c515e5c5b663fe1ac96fd14bc
Gist:+4009
{"url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc","forks_url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc/forks","commits_url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc/commits","id":"62992e0c515e5c5b663fe1ac96fd14bc","node_id":"MDQ6R2lzdDYyOTkyZTBjNTE1ZTVjNWI2NjNmZTFhYzk2ZmQxNGJj","git_pull_url":"https://gist.github.com/62992e0c515e5c5b663fe1ac96fd14bc.git","git_push_url":"https://gist.github.com/62992e0c515e5c5b663fe1ac96fd14bc.git","html_url":"https://gist.github.com/62992e0c515e5c5b663fe1ac96fd14bc","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/62992e0c515e5c5b663fe1ac96fd14bc/raw/418be33fcf51b4dfc60058c12737e4061e58a17c/main.go","size":852,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\nvar xmlStr = `\n<people>\n\t<person age=\"34\">\n\t\t<first-name>John</first-name>\n\t\t<address>\n\t\t\t<city>San Francisco</city>\n\t\t\t<state>CA</state>\n\t\t</address>\n\t</person>\n\n\t<person age=\"23\">\n\t\t<first-name>Julia</first-name>\n\t</person>\n</people>`\n\ntype People struct {\n\tPerson []Person `xml:\"person\"`\n}\n\ntype Person struct {\n\tAge       int     `xml:\"age,attr\"`\n\tFirstName string  `xml:\"first-name\"`\n\tAddress   Address `xml:\"address\"`\n}\n\ntype Address struct {\n\tCity  *string `xml:\"city\"`\n\tState string  `xml:\"state\"`\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar people People\n\tdata := []byte(xmlStr)\n\terr := xml.Unmarshal(data, &people)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Unmarshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"%#v\\n\\n\", people)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T20:55:02Z","updated_at":"2019-11-05T20:55:03Z","description":"XML","comments":0,"user":null,"comments_url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7a642428757363d0073fd366b2b076f986249c8d","committed_at":"2019-11-05T20:55:02Z","change_status":{"total":53,"additions":53,"deletions":0},"url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc/7a642428757363d0073fd366b2b076f986249c8d"}],"truncated":false}
4268 1572989052572 gistoutput
Gist:+4009
{"url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc","forks_url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc/forks","commits_url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc/commits","id":"62992e0c515e5c5b663fe1ac96fd14bc","node_id":"MDQ6R2lzdDYyOTkyZTBjNTE1ZTVjNWI2NjNmZTFhYzk2ZmQxNGJj","git_pull_url":"https://gist.github.com/62992e0c515e5c5b663fe1ac96fd14bc.git","git_push_url":"https://gist.github.com/62992e0c515e5c5b663fe1ac96fd14bc.git","html_url":"https://gist.github.com/62992e0c515e5c5b663fe1ac96fd14bc","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/62992e0c515e5c5b663fe1ac96fd14bc/raw/418be33fcf51b4dfc60058c12737e4061e58a17c/main.go","size":852,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\nvar xmlStr = `\n<people>\n\t<person age=\"34\">\n\t\t<first-name>John</first-name>\n\t\t<address>\n\t\t\t<city>San Francisco</city>\n\t\t\t<state>CA</state>\n\t\t</address>\n\t</person>\n\n\t<person age=\"23\">\n\t\t<first-name>Julia</first-name>\n\t</person>\n</people>`\n\ntype People struct {\n\tPerson []Person `xml:\"person\"`\n}\n\ntype Person struct {\n\tAge       int     `xml:\"age,attr\"`\n\tFirstName string  `xml:\"first-name\"`\n\tAddress   Address `xml:\"address\"`\n}\n\ntype Address struct {\n\tCity  *string `xml:\"city\"`\n\tState string  `xml:\"state\"`\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar people People\n\tdata := []byte(xmlStr)\n\terr := xml.Unmarshal(data, &people)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Unmarshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"%#v\\n\\n\", people)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T20:55:02Z","updated_at":"2019-11-05T20:55:03Z","description":"XML","comments":0,"user":null,"comments_url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7a642428757363d0073fd366b2b076f986249c8d","committed_at":"2019-11-05T20:55:02Z","change_status":{"total":53,"additions":53,"deletions":0},"url":"https://api.github.com/gists/62992e0c515e5c5b663fe1ac96fd14bc/7a642428757363d0073fd366b2b076f986249c8d"}],"truncated":false}
GistOutput:+231
main.People{Person:[]main.Person{main.Person{Age:34, FirstName:"John", Address:main.Address{City:(*string)(0xc000010430), State:"CA"}}, main.Person{Age:23, FirstName:"Julia", Address:main.Address{City:(*string)(nil), State:""}}}}

4275 1572989052793 gist
GistID: abdf76b17b89f29219d43cf92a084dba
Gist:+4222
{"url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba","forks_url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba/forks","commits_url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba/commits","id":"abdf76b17b89f29219d43cf92a084dba","node_id":"MDQ6R2lzdGFiZGY3NmIxN2I4OWYyOTIxOWQ0M2NmOTJhMDg0ZGJh","git_pull_url":"https://gist.github.com/abdf76b17b89f29219d43cf92a084dba.git","git_push_url":"https://gist.github.com/abdf76b17b89f29219d43cf92a084dba.git","html_url":"https://gist.github.com/abdf76b17b89f29219d43cf92a084dba","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/abdf76b17b89f29219d43cf92a084dba/raw/df429c046077da73af69644a50d1f6af44b2ecc2/main.go","size":1011,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype People struct {\n\tXMLName        xml.Name `xml:\"people\"`\n\tPerson         []Person `xml:\"person\"`\n\tnoteSerialized int\n}\n\ntype Person struct {\n\tAge       int     `xml:\"age,attr\"`\n\tFirstName string  `xml:\"first-name\"`\n\tAddress   Address `xml:\"address\"`\n}\n\ntype Address struct {\n\tCity  string `xml:\"city\"`\n\tState string `xml:\"state\"`\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tpeople := People{\n\t\tPerson: []Person{\n\t\t\tPerson{\n\t\t\t\tAge:       34,\n\t\t\t\tFirstName: \"John\",\n\t\t\t\tAddress:   Address{City: \"San Francisco\", State: \"CA\"},\n\t\t\t},\n\t\t},\n\t\tnoteSerialized: 8,\n\t}\n\td, err := xml.Marshal(&people)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Compact XML: %s\\n\\n\", string(d))\n\n\td, err = xml.MarshalIndent(&people, \"\", \"  \")\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Pretty printed XML:\\n%s\\n\", string(d))\n\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T20:56:04Z","updated_at":"2019-11-05T20:56:05Z","description":"Serialize a struct as XML","comments":0,"user":null,"comments_url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"eaced8f6e5408879e1d9f73a04017bee39b31248","committed_at":"2019-11-05T20:56:04Z","change_status":{"total":55,"additions":55,"deletions":0},"url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba/eaced8f6e5408879e1d9f73a04017bee39b31248"}],"truncated":false}
4590 1572989054305 gistoutput
Gist:+4222
{"url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba","forks_url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba/forks","commits_url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba/commits","id":"abdf76b17b89f29219d43cf92a084dba","node_id":"MDQ6R2lzdGFiZGY3NmIxN2I4OWYyOTIxOWQ0M2NmOTJhMDg0ZGJh","git_pull_url":"https://gist.github.com/abdf76b17b89f29219d43cf92a084dba.git","git_push_url":"https://gist.github.com/abdf76b17b89f29219d43cf92a084dba.git","html_url":"https://gist.github.com/abdf76b17b89f29219d43cf92a084dba","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/abdf76b17b89f29219d43cf92a084dba/raw/df429c046077da73af69644a50d1f6af44b2ecc2/main.go","size":1011,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype People struct {\n\tXMLName        xml.Name `xml:\"people\"`\n\tPerson         []Person `xml:\"person\"`\n\tnoteSerialized int\n}\n\ntype Person struct {\n\tAge       int     `xml:\"age,attr\"`\n\tFirstName string  `xml:\"first-name\"`\n\tAddress   Address `xml:\"address\"`\n}\n\ntype Address struct {\n\tCity  string `xml:\"city\"`\n\tState string `xml:\"state\"`\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tpeople := People{\n\t\tPerson: []Person{\n\t\t\tPerson{\n\t\t\t\tAge:       34,\n\t\t\t\tFirstName: \"John\",\n\t\t\t\tAddress:   Address{City: \"San Francisco\", State: \"CA\"},\n\t\t\t},\n\t\t},\n\t\tnoteSerialized: 8,\n\t}\n\td, err := xml.Marshal(&people)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Compact XML: %s\\n\\n\", string(d))\n\n\td, err = xml.MarshalIndent(&people, \"\", \"  \")\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Pretty printed XML:\\n%s\\n\", string(d))\n\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T20:56:04Z","updated_at":"2019-11-05T20:56:05Z","description":"Serialize a struct as XML","comments":0,"user":null,"comments_url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"eaced8f6e5408879e1d9f73a04017bee39b31248","committed_at":"2019-11-05T20:56:04Z","change_status":{"total":55,"additions":55,"deletions":0},"url":"https://api.github.com/gists/abdf76b17b89f29219d43cf92a084dba/eaced8f6e5408879e1d9f73a04017bee39b31248"}],"truncated":false}
GistOutput:+340
Compact XML: <people><person age="34"><first-name>John</first-name><address><city>San Francisco</city><state>CA</state></address></person></people>

Pretty printed XML:
<people>
  <person age="34">
    <first-name>John</first-name>
    <address>
      <city>San Francisco</city>
      <state>CA</state>
    </address>
  </person>
</people>
3646 1572989054703 gist
GistID: 2f493d47f6d8bb328a3a86e4bbefff9c
Gist:+3593
{"url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c","forks_url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c/forks","commits_url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c/commits","id":"2f493d47f6d8bb328a3a86e4bbefff9c","node_id":"MDQ6R2lzdDJmNDkzZDQ3ZjZkOGJiMzI4YTNhODZlNGJiZWZmZjlj","git_pull_url":"https://gist.github.com/2f493d47f6d8bb328a3a86e4bbefff9c.git","git_push_url":"https://gist.github.com/2f493d47f6d8bb328a3a86e4bbefff9c.git","html_url":"https://gist.github.com/2f493d47f6d8bb328a3a86e4bbefff9c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/2f493d47f6d8bb328a3a86e4bbefff9c/raw/f0a776cf302ca2b3ece7aeed32c85c6ee8151333/main.go","size":473,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tpath := \"main.go\"\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.Open() failed with %s\\n\", err)\n\t}\n\tdefer f.Close()\n\n\td, err := ioutil.ReadAll(f)\n\tif err != nil {\n\t\tlog.Fatalf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\n\tlines := bytes.Split(d, []byte{'\\n'})\n\tfmt.Printf(\"File %s has %d lines\\n\", path, len(lines))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T20:57:42Z","updated_at":"2019-11-05T20:57:43Z","description":"Files and I/O","comments":0,"user":null,"comments_url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"163d06c7f2fb25db452840926220474149c5167b","committed_at":"2019-11-05T20:57:42Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c/163d06c7f2fb25db452840926220474149c5167b"}],"truncated":false}
3646 1572989057787 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c","forks_url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c/forks","commits_url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c/commits","id":"2f493d47f6d8bb328a3a86e4bbefff9c","node_id":"MDQ6R2lzdDJmNDkzZDQ3ZjZkOGJiMzI4YTNhODZlNGJiZWZmZjlj","git_pull_url":"https://gist.github.com/2f493d47f6d8bb328a3a86e4bbefff9c.git","git_push_url":"https://gist.github.com/2f493d47f6d8bb328a3a86e4bbefff9c.git","html_url":"https://gist.github.com/2f493d47f6d8bb328a3a86e4bbefff9c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/2f493d47f6d8bb328a3a86e4bbefff9c/raw/f0a776cf302ca2b3ece7aeed32c85c6ee8151333/main.go","size":473,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tpath := \"main.go\"\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.Open() failed with %s\\n\", err)\n\t}\n\tdefer f.Close()\n\n\td, err := ioutil.ReadAll(f)\n\tif err != nil {\n\t\tlog.Fatalf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\n\tlines := bytes.Split(d, []byte{'\\n'})\n\tfmt.Printf(\"File %s has %d lines\\n\", path, len(lines))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T20:57:42Z","updated_at":"2019-11-05T20:57:43Z","description":"Files and I/O","comments":0,"user":null,"comments_url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"163d06c7f2fb25db452840926220474149c5167b","committed_at":"2019-11-05T20:57:42Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/2f493d47f6d8bb328a3a86e4bbefff9c/163d06c7f2fb25db452840926220474149c5167b"}],"truncated":false}
GistOutput:+26
File main.go has 29 lines
4217 1572989058202 gist
GistID: 01d43f3ee1710c742ab352504c40b54f
Gist:+4164
{"url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f","forks_url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f/forks","commits_url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f/commits","id":"01d43f3ee1710c742ab352504c40b54f","node_id":"MDQ6R2lzdDAxZDQzZjNlZTE3MTBjNzQyYWIzNTI1MDRjNDBiNTRm","git_pull_url":"https://gist.github.com/01d43f3ee1710c742ab352504c40b54f.git","git_push_url":"https://gist.github.com/01d43f3ee1710c742ab352504c40b54f.git","html_url":"https://gist.github.com/01d43f3ee1710c742ab352504c40b54f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/01d43f3ee1710c742ab352504c40b54f/raw/3840c1bd5c6c1eb0ba25ebaab9f9af692f88f535/main.go","size":1004,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tm := make(map[string]int)\n\n\t// set the value\n\tm[\"three\"] = 3\n\tm[\"four\"] = 4\n\n\t// get the value and see if the value exists\n\tkey := \"four\"\n\tif value, ok := m[key]; ok {\n\t\tfmt.Printf(\"Key '%s' exists and maps to %d\\n\", key, value)\n\t} else {\n\t\tfmt.Printf(\"Key '%s' doesn't exists\\n\", key)\n\t}\n\n\tkey = \"five\"\n\tif value, ok := m[key]; ok {\n\t\tfmt.Printf(\"Key '%s' exists and maps to %d\\n\", key, value)\n\t} else {\n\t\tfmt.Printf(\"Key '%s' doesn't exists\\n\", key)\n\t}\n\n\t// if value doesn't exist, the result of lookup is zero value. In this case zero value of int is 0\n\tfmt.Printf(\"\\nValue for non-existing key: %d\\n\\n\", m[\"not-exists\"])\n\n\t// iterating over keys and values\n\tfmt.Printf(\"All keys and their values:\\n\")\n\tfor key, value := range m {\n\t\tfmt.Printf(\"%s => %d\\n\", key, value)\n\t}\n\n\tfmt.Printf(\"\\nBefore deletion: len(m)=%d\\n\", len(m))\n\tdelete(m, \"four\")\n\tfmt.Printf(\"After deletion : len(m)=%d\\n\", len(m))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T20:59:17Z","updated_at":"2019-11-05T20:59:18Z","description":"Maps","comments":0,"user":null,"comments_url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4dac707ad0c424a45a99997c4d0a996724a40c7e","committed_at":"2019-11-05T20:59:17Z","change_status":{"total":42,"additions":42,"deletions":0},"url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f/4dac707ad0c424a45a99997c4d0a996724a40c7e"}],"truncated":false}
4383 1572989059528 gistoutput
Gist:+4164
{"url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f","forks_url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f/forks","commits_url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f/commits","id":"01d43f3ee1710c742ab352504c40b54f","node_id":"MDQ6R2lzdDAxZDQzZjNlZTE3MTBjNzQyYWIzNTI1MDRjNDBiNTRm","git_pull_url":"https://gist.github.com/01d43f3ee1710c742ab352504c40b54f.git","git_push_url":"https://gist.github.com/01d43f3ee1710c742ab352504c40b54f.git","html_url":"https://gist.github.com/01d43f3ee1710c742ab352504c40b54f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/01d43f3ee1710c742ab352504c40b54f/raw/3840c1bd5c6c1eb0ba25ebaab9f9af692f88f535/main.go","size":1004,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tm := make(map[string]int)\n\n\t// set the value\n\tm[\"three\"] = 3\n\tm[\"four\"] = 4\n\n\t// get the value and see if the value exists\n\tkey := \"four\"\n\tif value, ok := m[key]; ok {\n\t\tfmt.Printf(\"Key '%s' exists and maps to %d\\n\", key, value)\n\t} else {\n\t\tfmt.Printf(\"Key '%s' doesn't exists\\n\", key)\n\t}\n\n\tkey = \"five\"\n\tif value, ok := m[key]; ok {\n\t\tfmt.Printf(\"Key '%s' exists and maps to %d\\n\", key, value)\n\t} else {\n\t\tfmt.Printf(\"Key '%s' doesn't exists\\n\", key)\n\t}\n\n\t// if value doesn't exist, the result of lookup is zero value. In this case zero value of int is 0\n\tfmt.Printf(\"\\nValue for non-existing key: %d\\n\\n\", m[\"not-exists\"])\n\n\t// iterating over keys and values\n\tfmt.Printf(\"All keys and their values:\\n\")\n\tfor key, value := range m {\n\t\tfmt.Printf(\"%s => %d\\n\", key, value)\n\t}\n\n\tfmt.Printf(\"\\nBefore deletion: len(m)=%d\\n\", len(m))\n\tdelete(m, \"four\")\n\tfmt.Printf(\"After deletion : len(m)=%d\\n\", len(m))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T20:59:17Z","updated_at":"2019-11-05T20:59:18Z","description":"Maps","comments":0,"user":null,"comments_url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4dac707ad0c424a45a99997c4d0a996724a40c7e","committed_at":"2019-11-05T20:59:17Z","change_status":{"total":42,"additions":42,"deletions":0},"url":"https://api.github.com/gists/01d43f3ee1710c742ab352504c40b54f/4dac707ad0c424a45a99997c4d0a996724a40c7e"}],"truncated":false}
GistOutput:+191
Key 'four' exists and maps to 4
Key 'five' doesn't exists

Value for non-existing key: 0

All keys and their values:
three => 3
four => 4

Before deletion: len(m)=2
After deletion : len(m)=1
5770 1572989059894 gist
GistID: f6ceb3c30ebdc1e9eb8a695f328251d3
Gist:+5717
{"url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3","forks_url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/forks","commits_url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/commits","id":"f6ceb3c30ebdc1e9eb8a695f328251d3","node_id":"MDQ6R2lzdGY2Y2ViM2MzMGViZGMxZTllYjhhNjk1ZjMyODI1MWQz","git_pull_url":"https://gist.github.com/f6ceb3c30ebdc1e9eb8a695f328251d3.git","git_push_url":"https://gist.github.com/f6ceb3c30ebdc1e9eb8a695f328251d3.git","html_url":"https://gist.github.com/f6ceb3c30ebdc1e9eb8a695f328251d3","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f6ceb3c30ebdc1e9eb8a695f328251d3/raw/14967d772775ccf43666e2f5d6ac5ef0317ea779/main.go","size":1430,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n    \"encoding/gob\"\n    \"os\"\n    \"log\"\n    \"fmt\"\n)\n\n// :show start\ntype User struct {\n    Username string\n    Password string\n}\n// :show end\n\n// :show start\nfunc writeToGob(path string, user *User) error {\n    file, err := os.Create(path)\n    if err != nil {\n        return err\n    }\n\n    encoder := gob.NewEncoder(file)\n\n    err = encoder.Encode(user)\n    if err != nil {\n        file.Close()\n        return err\n    }\n\n    return file.Close()\n}\n\nfunc write(path string, user *User) {\n    err := writeToGob(path, user)\n    if err != nil {\n        log.Fatalf(\"writeToGob() failed with '%s'\\n\", err)\n    }\n    st, err := os.Stat(path)\n    if err != nil {\n        log.Fatalf(\"os.Stat() failed with '%s'\\n\", err)\n    }\n    fmt.Printf(\"Wrote user struct to file '%s' of size %d.\\n\", path, st.Size())\n}\n\nfunc read(path string) {\n    user := User{}\n    file, err := os.Open(path)\n    if err != nil {\n        log.Fatalf(\"os.Open('%s') failed with '%s'\\n\", path, err)\n    }\n    defer file.Close()\n\n    decoder := gob.NewDecoder(file)\n    err = decoder.Decode(&user)\n    if err != nil {\n        log.Fatalf(\"decoder.Decode() failed with '%s'\\n\", err)\n    }\n    fmt.Printf(\"\\nRead from '%s' user:\\n%#v\\n\", path, user)    \n}\n\nfunc main() {\n     user := User{\n        Username: \"Angus\",\n        Password: \"1234\",\n    }\n    path := \"user.gob\"\n    write(path, &user)\n    read(path)\n}\n// :show end"}},"public":true,"created_at":"2019-11-05T21:00:59Z","updated_at":"2019-11-05T21:01:09Z","description":"Encode data to file and decode from file","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5fcf1c71d2d0f22302537621aa6a476d12e31e3d","committed_at":"2019-11-05T21:01:08Z","change_status":{"total":2,"additions":1,"deletions":1},"url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/5fcf1c71d2d0f22302537621aa6a476d12e31e3d"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c1e0acc036f9a00606ceee74c7e6d7d4fdb3a90d","committed_at":"2019-11-05T21:00:58Z","change_status":{"total":73,"additions":73,"deletions":0},"url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/c1e0acc036f9a00606ceee74c7e6d7d4fdb3a90d"}],"truncated":false}
5867 1572989061268 gistoutput
Gist:+5717
{"url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3","forks_url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/forks","commits_url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/commits","id":"f6ceb3c30ebdc1e9eb8a695f328251d3","node_id":"MDQ6R2lzdGY2Y2ViM2MzMGViZGMxZTllYjhhNjk1ZjMyODI1MWQz","git_pull_url":"https://gist.github.com/f6ceb3c30ebdc1e9eb8a695f328251d3.git","git_push_url":"https://gist.github.com/f6ceb3c30ebdc1e9eb8a695f328251d3.git","html_url":"https://gist.github.com/f6ceb3c30ebdc1e9eb8a695f328251d3","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f6ceb3c30ebdc1e9eb8a695f328251d3/raw/14967d772775ccf43666e2f5d6ac5ef0317ea779/main.go","size":1430,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n    \"encoding/gob\"\n    \"os\"\n    \"log\"\n    \"fmt\"\n)\n\n// :show start\ntype User struct {\n    Username string\n    Password string\n}\n// :show end\n\n// :show start\nfunc writeToGob(path string, user *User) error {\n    file, err := os.Create(path)\n    if err != nil {\n        return err\n    }\n\n    encoder := gob.NewEncoder(file)\n\n    err = encoder.Encode(user)\n    if err != nil {\n        file.Close()\n        return err\n    }\n\n    return file.Close()\n}\n\nfunc write(path string, user *User) {\n    err := writeToGob(path, user)\n    if err != nil {\n        log.Fatalf(\"writeToGob() failed with '%s'\\n\", err)\n    }\n    st, err := os.Stat(path)\n    if err != nil {\n        log.Fatalf(\"os.Stat() failed with '%s'\\n\", err)\n    }\n    fmt.Printf(\"Wrote user struct to file '%s' of size %d.\\n\", path, st.Size())\n}\n\nfunc read(path string) {\n    user := User{}\n    file, err := os.Open(path)\n    if err != nil {\n        log.Fatalf(\"os.Open('%s') failed with '%s'\\n\", path, err)\n    }\n    defer file.Close()\n\n    decoder := gob.NewDecoder(file)\n    err = decoder.Decode(&user)\n    if err != nil {\n        log.Fatalf(\"decoder.Decode() failed with '%s'\\n\", err)\n    }\n    fmt.Printf(\"\\nRead from '%s' user:\\n%#v\\n\", path, user)    \n}\n\nfunc main() {\n     user := User{\n        Username: \"Angus\",\n        Password: \"1234\",\n    }\n    path := \"user.gob\"\n    write(path, &user)\n    read(path)\n}\n// :show end"}},"public":true,"created_at":"2019-11-05T21:00:59Z","updated_at":"2019-11-05T21:01:09Z","description":"Encode data to file and decode from file","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5fcf1c71d2d0f22302537621aa6a476d12e31e3d","committed_at":"2019-11-05T21:01:08Z","change_status":{"total":2,"additions":1,"deletions":1},"url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/5fcf1c71d2d0f22302537621aa6a476d12e31e3d"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c1e0acc036f9a00606ceee74c7e6d7d4fdb3a90d","committed_at":"2019-11-05T21:00:58Z","change_status":{"total":73,"additions":73,"deletions":0},"url":"https://api.github.com/gists/f6ceb3c30ebdc1e9eb8a695f328251d3/c1e0acc036f9a00606ceee74c7e6d7d4fdb3a90d"}],"truncated":false}
GistOutput:+122
Wrote user struct to file 'user.gob' of size 62.

Read from 'user.gob' user:
main.User{Username:"Angus", Password:"1234"}
4035 1572989061627 gist
GistID: b1fb4a2a2f6c6d2e317f540928d890e8
Gist:+3982
{"url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8","forks_url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8/forks","commits_url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8/commits","id":"b1fb4a2a2f6c6d2e317f540928d890e8","node_id":"MDQ6R2lzdGIxZmI0YTJhMmY2YzZkMmUzMTdmNTQwOTI4ZDg5MGU4","git_pull_url":"https://gist.github.com/b1fb4a2a2f6c6d2e317f540928d890e8.git","git_push_url":"https://gist.github.com/b1fb4a2a2f6c6d2e317f540928d890e8.git","html_url":"https://gist.github.com/b1fb4a2a2f6c6d2e317f540928d890e8","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b1fb4a2a2f6c6d2e317f540928d890e8/raw/4927c24f705eb84ba0a639962db765e247956b9c/main.go","size":807,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n    \"bytes\"\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n)\n\nvar (\n    csvData = `date,open,high,low,close,volume,Name\n2013-02-08,15.07,15.12,14.63,14.75,8407500,AAL\n2013-02-11,14.89,15.01,14.26,14.46,8882000,AAL\n2013-02-12,14.45,14.51,14.1,14.27,8126000,AAL\n2013-02-13,14.3,14.94,14.25,14.66,10259500,AAL\n`)\n\nfunc main() {\n\t// :show start\n\tbuf := bytes.NewBufferString(csvData)\n\n\tr := csv.NewReader(buf)\n\tvar record []string\n\tnRecords := 0\n\tvar err error\n\tfor {\n\t\trecord, err = r.Read()\n\t\tif err != nil {\n\t\t\tif err == io.EOF {\n\t\t\t\terr = nil\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tnRecords++\n\t\tif nRecords < 5 {\n\t\t\tfmt.Printf(\"Record: %#v\\n\", record)\n\t\t}\n\t}\n\tif err != nil {\n\t\tlog.Fatalf(\"r.Read() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Read %d records\\n\", nRecords)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:13:06Z","updated_at":"2019-11-05T21:13:07Z","description":"Reading records from CSV file","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4963b6847f7dd9a56a5a74b2d7a36c98011d9cc4","committed_at":"2019-11-05T21:13:06Z","change_status":{"total":46,"additions":46,"deletions":0},"url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8/4963b6847f7dd9a56a5a74b2d7a36c98011d9cc4"}],"truncated":false}
4354 1572989063658 gistoutput
Gist:+3982
{"url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8","forks_url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8/forks","commits_url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8/commits","id":"b1fb4a2a2f6c6d2e317f540928d890e8","node_id":"MDQ6R2lzdGIxZmI0YTJhMmY2YzZkMmUzMTdmNTQwOTI4ZDg5MGU4","git_pull_url":"https://gist.github.com/b1fb4a2a2f6c6d2e317f540928d890e8.git","git_push_url":"https://gist.github.com/b1fb4a2a2f6c6d2e317f540928d890e8.git","html_url":"https://gist.github.com/b1fb4a2a2f6c6d2e317f540928d890e8","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b1fb4a2a2f6c6d2e317f540928d890e8/raw/4927c24f705eb84ba0a639962db765e247956b9c/main.go","size":807,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n    \"bytes\"\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n)\n\nvar (\n    csvData = `date,open,high,low,close,volume,Name\n2013-02-08,15.07,15.12,14.63,14.75,8407500,AAL\n2013-02-11,14.89,15.01,14.26,14.46,8882000,AAL\n2013-02-12,14.45,14.51,14.1,14.27,8126000,AAL\n2013-02-13,14.3,14.94,14.25,14.66,10259500,AAL\n`)\n\nfunc main() {\n\t// :show start\n\tbuf := bytes.NewBufferString(csvData)\n\n\tr := csv.NewReader(buf)\n\tvar record []string\n\tnRecords := 0\n\tvar err error\n\tfor {\n\t\trecord, err = r.Read()\n\t\tif err != nil {\n\t\t\tif err == io.EOF {\n\t\t\t\terr = nil\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tnRecords++\n\t\tif nRecords < 5 {\n\t\t\tfmt.Printf(\"Record: %#v\\n\", record)\n\t\t}\n\t}\n\tif err != nil {\n\t\tlog.Fatalf(\"r.Read() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Read %d records\\n\", nRecords)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:13:06Z","updated_at":"2019-11-05T21:13:07Z","description":"Reading records from CSV file","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4963b6847f7dd9a56a5a74b2d7a36c98011d9cc4","committed_at":"2019-11-05T21:13:06Z","change_status":{"total":46,"additions":46,"deletions":0},"url":"https://api.github.com/gists/b1fb4a2a2f6c6d2e317f540928d890e8/4963b6847f7dd9a56a5a74b2d7a36c98011d9cc4"}],"truncated":false}
GistOutput:+344
Record: []string{"date", "open", "high", "low", "close", "volume", "Name"}
Record: []string{"2013-02-08", "15.07", "15.12", "14.63", "14.75", "8407500", "AAL"}
Record: []string{"2013-02-11", "14.89", "15.01", "14.26", "14.46", "8882000", "AAL"}
Record: []string{"2013-02-12", "14.45", "14.51", "14.1", "14.27", "8126000", "AAL"}
Read 5 records
4347 1572989063857 gist
GistID: b6c47e08082b00a135b575fba1726ad8
Gist:+4294
{"url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8","forks_url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8/forks","commits_url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8/commits","id":"b6c47e08082b00a135b575fba1726ad8","node_id":"MDQ6R2lzdGI2YzQ3ZTA4MDgyYjAwYTEzNWI1NzVmYmExNzI2YWQ4","git_pull_url":"https://gist.github.com/b6c47e08082b00a135b575fba1726ad8.git","git_push_url":"https://gist.github.com/b6c47e08082b00a135b575fba1726ad8.git","html_url":"https://gist.github.com/b6c47e08082b00a135b575fba1726ad8","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b6c47e08082b00a135b575fba1726ad8/raw/764dad0a3a678568b9445fa08ba252c564404343/main.go","size":1077,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"os\"\n)\n\n// :show start\nfunc writeCSV() error {\n\tf, err := os.Create(\"stocks_tmp.csv\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tw := csv.NewWriter(f)\n\trecords := [][]string{\n\t\t{\"date\", \"price\", \"name\"},\n\t\t{\"2013-02-08\", \"15,07\", \"GOOG\"},\n\t\t{\"2013-02-09\", \"15,09\", \"GOOG\"},\n\t}\n\tfor _, rec := range records {\n\t\terr = w.Write(rec)\n\t\tif err != nil {\n\t\t\tf.Close()\n\t\t\treturn err\n\t\t}\n\t}\n\n\t// csv.Writer might buffer writes for performance so we must\n\t// Flush to ensure all data has been written to underlying\n\t// writer\n\tw.Flush()\n\n\t// Flush doesn't return an error. If it failed to write, we\n\t// can get the error with Error()\n\terr = w.Error()\n\tif err != nil {\n\t\treturn err\n\t}\n\t// Close might also fail due to flushing out buffered writes\n\terr = f.Close()\n\treturn err\n}\n\n// :show end\n\nfunc main() {\n\twriteCSV()\n\td, err := ioutil.ReadFile(\"stocks_tmp.csv\")\n\tif err != nil {\n\t\tlog.Fatalf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"%s\\n\", string(d))\n\tos.Remove(\"stocks_tmp.csv\")\n}"}},"public":true,"created_at":"2019-11-05T21:14:38Z","updated_at":"2019-11-05T21:14:38Z","description":"Writing records to CSV file","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f89eb4d76f5d7da25937481d2695c4bf2419c34e","committed_at":"2019-11-05T21:14:37Z","change_status":{"total":59,"additions":59,"deletions":0},"url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8/f89eb4d76f5d7da25937481d2695c4bf2419c34e"}],"truncated":false}
4386 1572989065467 gistoutput
Gist:+4294
{"url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8","forks_url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8/forks","commits_url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8/commits","id":"b6c47e08082b00a135b575fba1726ad8","node_id":"MDQ6R2lzdGI2YzQ3ZTA4MDgyYjAwYTEzNWI1NzVmYmExNzI2YWQ4","git_pull_url":"https://gist.github.com/b6c47e08082b00a135b575fba1726ad8.git","git_push_url":"https://gist.github.com/b6c47e08082b00a135b575fba1726ad8.git","html_url":"https://gist.github.com/b6c47e08082b00a135b575fba1726ad8","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b6c47e08082b00a135b575fba1726ad8/raw/764dad0a3a678568b9445fa08ba252c564404343/main.go","size":1077,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport (\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"os\"\n)\n\n// :show start\nfunc writeCSV() error {\n\tf, err := os.Create(\"stocks_tmp.csv\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tw := csv.NewWriter(f)\n\trecords := [][]string{\n\t\t{\"date\", \"price\", \"name\"},\n\t\t{\"2013-02-08\", \"15,07\", \"GOOG\"},\n\t\t{\"2013-02-09\", \"15,09\", \"GOOG\"},\n\t}\n\tfor _, rec := range records {\n\t\terr = w.Write(rec)\n\t\tif err != nil {\n\t\t\tf.Close()\n\t\t\treturn err\n\t\t}\n\t}\n\n\t// csv.Writer might buffer writes for performance so we must\n\t// Flush to ensure all data has been written to underlying\n\t// writer\n\tw.Flush()\n\n\t// Flush doesn't return an error. If it failed to write, we\n\t// can get the error with Error()\n\terr = w.Error()\n\tif err != nil {\n\t\treturn err\n\t}\n\t// Close might also fail due to flushing out buffered writes\n\terr = f.Close()\n\treturn err\n}\n\n// :show end\n\nfunc main() {\n\twriteCSV()\n\td, err := ioutil.ReadFile(\"stocks_tmp.csv\")\n\tif err != nil {\n\t\tlog.Fatalf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"%s\\n\", string(d))\n\tos.Remove(\"stocks_tmp.csv\")\n}"}},"public":true,"created_at":"2019-11-05T21:14:38Z","updated_at":"2019-11-05T21:14:38Z","description":"Writing records to CSV file","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f89eb4d76f5d7da25937481d2695c4bf2419c34e","committed_at":"2019-11-05T21:14:37Z","change_status":{"total":59,"additions":59,"deletions":0},"url":"https://api.github.com/gists/b6c47e08082b00a135b575fba1726ad8/f89eb4d76f5d7da25937481d2695c4bf2419c34e"}],"truncated":false}
GistOutput:+65
date,price,name
2013-02-08,"15,07",GOOG
2013-02-09,"15,09",GOOG

3287 1572989065858 gist
GistID: 9870092f584e2a8b22975b537b4b8884
Gist:+3234
{"url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884","forks_url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884/forks","commits_url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884/commits","id":"9870092f584e2a8b22975b537b4b8884","node_id":"MDQ6R2lzdDk4NzAwOTJmNTg0ZTJhOGIyMjk3NWI1MzdiNGI4ODg0","git_pull_url":"https://gist.github.com/9870092f584e2a8b22975b537b4b8884.git","git_push_url":"https://gist.github.com/9870092f584e2a8b22975b537b4b8884.git","html_url":"https://gist.github.com/9870092f584e2a8b22975b537b4b8884","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9870092f584e2a8b22975b537b4b8884/raw/8453b97ab5841ba1defbdd87baefaafb05ff92b6/main.go","size":160,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tfor i := 0; i < 5; i += 2 {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:16:07Z","updated_at":"2019-11-05T21:16:07Z","description":"for, while loops","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7a571fc48053db744d58a0d4ed31bf940a9a830f","committed_at":"2019-11-05T21:16:06Z","change_status":{"total":12,"additions":12,"deletions":0},"url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884/7a571fc48053db744d58a0d4ed31bf940a9a830f"}],"truncated":false}
3276 1572989067208 gistoutput
Gist:+3234
{"url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884","forks_url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884/forks","commits_url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884/commits","id":"9870092f584e2a8b22975b537b4b8884","node_id":"MDQ6R2lzdDk4NzAwOTJmNTg0ZTJhOGIyMjk3NWI1MzdiNGI4ODg0","git_pull_url":"https://gist.github.com/9870092f584e2a8b22975b537b4b8884.git","git_push_url":"https://gist.github.com/9870092f584e2a8b22975b537b4b8884.git","html_url":"https://gist.github.com/9870092f584e2a8b22975b537b4b8884","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9870092f584e2a8b22975b537b4b8884/raw/8453b97ab5841ba1defbdd87baefaafb05ff92b6/main.go","size":160,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tfor i := 0; i < 5; i += 2 {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:16:07Z","updated_at":"2019-11-05T21:16:07Z","description":"for, while loops","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7a571fc48053db744d58a0d4ed31bf940a9a830f","committed_at":"2019-11-05T21:16:06Z","change_status":{"total":12,"additions":12,"deletions":0},"url":"https://api.github.com/gists/9870092f584e2a8b22975b537b4b8884/7a571fc48053db744d58a0d4ed31bf940a9a830f"}],"truncated":false}
GistOutput:+15
i: 0
i: 2
i: 4
3311 1572989067428 gist
GistID: 4378f43b1d016fa3a85f9786c6476f84
Gist:+3258
{"url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84","forks_url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84/forks","commits_url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84/commits","id":"4378f43b1d016fa3a85f9786c6476f84","node_id":"MDQ6R2lzdDQzNzhmNDNiMWQwMTZmYTNhODVmOTc4NmM2NDc2Zjg0","git_pull_url":"https://gist.github.com/4378f43b1d016fa3a85f9786c6476f84.git","git_push_url":"https://gist.github.com/4378f43b1d016fa3a85f9786c6476f84.git","html_url":"https://gist.github.com/4378f43b1d016fa3a85f9786c6476f84","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/4378f43b1d016fa3a85f9786c6476f84/raw/9eadf42e07a61e03748381a45a20ec8c21d331af/main.go","size":162,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ti := 0\n\tfor ; i < 5; i += 2 {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:17:56Z","updated_at":"2019-11-05T21:18:03Z","description":"for without initialization statement","comments":0,"user":null,"comments_url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6938cc77ea883c78ba3a36f007b4994e5a0f9549","committed_at":"2019-11-05T21:17:55Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84/6938cc77ea883c78ba3a36f007b4994e5a0f9549"}],"truncated":false}
3300 1572989068711 gistoutput
Gist:+3258
{"url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84","forks_url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84/forks","commits_url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84/commits","id":"4378f43b1d016fa3a85f9786c6476f84","node_id":"MDQ6R2lzdDQzNzhmNDNiMWQwMTZmYTNhODVmOTc4NmM2NDc2Zjg0","git_pull_url":"https://gist.github.com/4378f43b1d016fa3a85f9786c6476f84.git","git_push_url":"https://gist.github.com/4378f43b1d016fa3a85f9786c6476f84.git","html_url":"https://gist.github.com/4378f43b1d016fa3a85f9786c6476f84","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/4378f43b1d016fa3a85f9786c6476f84/raw/9eadf42e07a61e03748381a45a20ec8c21d331af/main.go","size":162,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ti := 0\n\tfor ; i < 5; i += 2 {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:17:56Z","updated_at":"2019-11-05T21:18:03Z","description":"for without initialization statement","comments":0,"user":null,"comments_url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6938cc77ea883c78ba3a36f007b4994e5a0f9549","committed_at":"2019-11-05T21:17:55Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/4378f43b1d016fa3a85f9786c6476f84/6938cc77ea883c78ba3a36f007b4994e5a0f9549"}],"truncated":false}
GistOutput:+15
i: 0
i: 2
i: 4
3334 1572989068870 gist
GistID: b9fc06c6cd529c4141c349af0580b733
Gist:+3281
{"url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733","forks_url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733/forks","commits_url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733/commits","id":"b9fc06c6cd529c4141c349af0580b733","node_id":"MDQ6R2lzdGI5ZmMwNmM2Y2Q1MjljNDE0MWMzNDlhZjA1ODBiNzMz","git_pull_url":"https://gist.github.com/b9fc06c6cd529c4141c349af0580b733.git","git_push_url":"https://gist.github.com/b9fc06c6cd529c4141c349af0580b733.git","html_url":"https://gist.github.com/b9fc06c6cd529c4141c349af0580b733","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b9fc06c6cd529c4141c349af0580b733/raw/c408c68294bb6982a85c9a70807d5f5a9f386d92/main.go","size":184,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ti := 0\n\tfor ; ; i += 2 {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t\tif i >= 5 {\n\t\t\tbreak\n\t\t}\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:19:32Z","updated_at":"2019-11-05T21:19:33Z","description":"for without test expression","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c64ea6c6db65821797fcd6be29bc85c8c3835292","committed_at":"2019-11-05T21:19:32Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733/c64ea6c6db65821797fcd6be29bc85c8c3835292"}],"truncated":false}
3328 1572989070123 gistoutput
Gist:+3281
{"url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733","forks_url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733/forks","commits_url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733/commits","id":"b9fc06c6cd529c4141c349af0580b733","node_id":"MDQ6R2lzdGI5ZmMwNmM2Y2Q1MjljNDE0MWMzNDlhZjA1ODBiNzMz","git_pull_url":"https://gist.github.com/b9fc06c6cd529c4141c349af0580b733.git","git_push_url":"https://gist.github.com/b9fc06c6cd529c4141c349af0580b733.git","html_url":"https://gist.github.com/b9fc06c6cd529c4141c349af0580b733","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b9fc06c6cd529c4141c349af0580b733/raw/c408c68294bb6982a85c9a70807d5f5a9f386d92/main.go","size":184,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ti := 0\n\tfor ; ; i += 2 {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t\tif i >= 5 {\n\t\t\tbreak\n\t\t}\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:19:32Z","updated_at":"2019-11-05T21:19:33Z","description":"for without test expression","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c64ea6c6db65821797fcd6be29bc85c8c3835292","committed_at":"2019-11-05T21:19:32Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/b9fc06c6cd529c4141c349af0580b733/c64ea6c6db65821797fcd6be29bc85c8c3835292"}],"truncated":false}
GistOutput:+20
i: 0
i: 2
i: 4
i: 6
3307 1572989070294 gist
GistID: 7e8af34a77b303fe7e1e046cdef6995b
Gist:+3254
{"url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b","forks_url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b/forks","commits_url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b/commits","id":"7e8af34a77b303fe7e1e046cdef6995b","node_id":"MDQ6R2lzdDdlOGFmMzRhNzdiMzAzZmU3ZTFlMDQ2Y2RlZjY5OTVi","git_pull_url":"https://gist.github.com/7e8af34a77b303fe7e1e046cdef6995b.git","git_push_url":"https://gist.github.com/7e8af34a77b303fe7e1e046cdef6995b.git","html_url":"https://gist.github.com/7e8af34a77b303fe7e1e046cdef6995b","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7e8af34a77b303fe7e1e046cdef6995b/raw/bbd06b6a786e3162a0c99362d112b69f1f6748ac/main.go","size":162,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tfor i := 0; i < 5; {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t\ti += 2\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:20:26Z","updated_at":"2019-11-05T21:20:26Z","description":"for without increment statement","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"068af6142adb08897bc9c6a6b18898e0e05bd16d","committed_at":"2019-11-05T21:20:25Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b/068af6142adb08897bc9c6a6b18898e0e05bd16d"}],"truncated":false}
3296 1572989071611 gistoutput
Gist:+3254
{"url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b","forks_url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b/forks","commits_url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b/commits","id":"7e8af34a77b303fe7e1e046cdef6995b","node_id":"MDQ6R2lzdDdlOGFmMzRhNzdiMzAzZmU3ZTFlMDQ2Y2RlZjY5OTVi","git_pull_url":"https://gist.github.com/7e8af34a77b303fe7e1e046cdef6995b.git","git_push_url":"https://gist.github.com/7e8af34a77b303fe7e1e046cdef6995b.git","html_url":"https://gist.github.com/7e8af34a77b303fe7e1e046cdef6995b","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7e8af34a77b303fe7e1e046cdef6995b/raw/bbd06b6a786e3162a0c99362d112b69f1f6748ac/main.go","size":162,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tfor i := 0; i < 5; {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t\ti += 2\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:20:26Z","updated_at":"2019-11-05T21:20:26Z","description":"for without increment statement","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"068af6142adb08897bc9c6a6b18898e0e05bd16d","committed_at":"2019-11-05T21:20:25Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/7e8af34a77b303fe7e1e046cdef6995b/068af6142adb08897bc9c6a6b18898e0e05bd16d"}],"truncated":false}
GistOutput:+15
i: 0
i: 2
i: 4
3327 1572989071767 gist
GistID: 1206d992a950885e9ba867de8e222a68
Gist:+3274
{"url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68","forks_url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68/forks","commits_url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68/commits","id":"1206d992a950885e9ba867de8e222a68","node_id":"MDQ6R2lzdDEyMDZkOTkyYTk1MDg4NWU5YmE4NjdkZThlMjIyYTY4","git_pull_url":"https://gist.github.com/1206d992a950885e9ba867de8e222a68.git","git_push_url":"https://gist.github.com/1206d992a950885e9ba867de8e222a68.git","html_url":"https://gist.github.com/1206d992a950885e9ba867de8e222a68","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1206d992a950885e9ba867de8e222a68/raw/a9ae540a07d6e54660cb64af47b116ad3e6ceb43/main.go","size":183,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ti := 0\n\tfor {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t\ti += 2\n\t\tif i >= 5 {\n\t\t\tbreak\n\t\t}\n\t}\n\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:21:39Z","updated_at":"2019-11-05T21:21:39Z","description":"infinite for loop","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"631452d3a36b9d8452cdda94f1255a63b8b4f9b6","committed_at":"2019-11-05T21:21:38Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68/631452d3a36b9d8452cdda94f1255a63b8b4f9b6"}],"truncated":false}
3316 1572989073147 gistoutput
Gist:+3274
{"url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68","forks_url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68/forks","commits_url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68/commits","id":"1206d992a950885e9ba867de8e222a68","node_id":"MDQ6R2lzdDEyMDZkOTkyYTk1MDg4NWU5YmE4NjdkZThlMjIyYTY4","git_pull_url":"https://gist.github.com/1206d992a950885e9ba867de8e222a68.git","git_push_url":"https://gist.github.com/1206d992a950885e9ba867de8e222a68.git","html_url":"https://gist.github.com/1206d992a950885e9ba867de8e222a68","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1206d992a950885e9ba867de8e222a68/raw/a9ae540a07d6e54660cb64af47b116ad3e6ceb43/main.go","size":183,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ti := 0\n\tfor {\n\t\tfmt.Printf(\"i: %d\\n\", i)\n\t\ti += 2\n\t\tif i >= 5 {\n\t\t\tbreak\n\t\t}\n\t}\n\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:21:39Z","updated_at":"2019-11-05T21:21:39Z","description":"infinite for loop","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"631452d3a36b9d8452cdda94f1255a63b8b4f9b6","committed_at":"2019-11-05T21:21:38Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/1206d992a950885e9ba867de8e222a68/631452d3a36b9d8452cdda94f1255a63b8b4f9b6"}],"truncated":false}
GistOutput:+15
i: 0
i: 2
i: 4
3348 1572989073314 gist
GistID: f807e821184ffe8409d40f55de373044
Gist:+3295
{"url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044","forks_url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044/forks","commits_url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044/commits","id":"f807e821184ffe8409d40f55de373044","node_id":"MDQ6R2lzdGY4MDdlODIxMTg0ZmZlODQwOWQ0MGY1NWRlMzczMDQ0","git_pull_url":"https://gist.github.com/f807e821184ffe8409d40f55de373044.git","git_push_url":"https://gist.github.com/f807e821184ffe8409d40f55de373044.git","html_url":"https://gist.github.com/f807e821184ffe8409d40f55de373044","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f807e821184ffe8409d40f55de373044/raw/5dd287baf80058339d53ec0dd8c8e056c8b4f6c9/main.go","size":203,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ta := []int{1, 3, 5}\n\tfor idx, value := range a {\n\t\tfmt.Printf(\"idx: %d, value: %d\\n\", idx, value)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:22:40Z","updated_at":"2019-11-05T21:22:40Z","description":"for loop over a slice with range","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4e407e9dd7fa8cfea91dab01e45366e13b605297","committed_at":"2019-11-05T21:22:39Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044/4e407e9dd7fa8cfea91dab01e45366e13b605297"}],"truncated":false}
3373 1572989074532 gistoutput
Gist:+3295
{"url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044","forks_url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044/forks","commits_url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044/commits","id":"f807e821184ffe8409d40f55de373044","node_id":"MDQ6R2lzdGY4MDdlODIxMTg0ZmZlODQwOWQ0MGY1NWRlMzczMDQ0","git_pull_url":"https://gist.github.com/f807e821184ffe8409d40f55de373044.git","git_push_url":"https://gist.github.com/f807e821184ffe8409d40f55de373044.git","html_url":"https://gist.github.com/f807e821184ffe8409d40f55de373044","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f807e821184ffe8409d40f55de373044/raw/5dd287baf80058339d53ec0dd8c8e056c8b4f6c9/main.go","size":203,"truncated":false,"content":"// :collection Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ta := []int{1, 3, 5}\n\tfor idx, value := range a {\n\t\tfmt.Printf(\"idx: %d, value: %d\\n\", idx, value)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T21:22:40Z","updated_at":"2019-11-05T21:22:40Z","description":"for loop over a slice with range","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4e407e9dd7fa8cfea91dab01e45366e13b605297","committed_at":"2019-11-05T21:22:39Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/f807e821184ffe8409d40f55de373044/4e407e9dd7fa8cfea91dab01e45366e13b605297"}],"truncated":false}
GistOutput:+51
idx: 0, value: 1
idx: 1, value: 3
idx: 2, value: 5
3599 1573005336419 gist
GistID: f055282edd12292e0f5aaa3fa1537e80
Gist:+3546
{"url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80","forks_url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80/forks","commits_url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80/commits","id":"f055282edd12292e0f5aaa3fa1537e80","node_id":"MDQ6R2lzdGYwNTUyODJlZGQxMjI5MmUwZjVhYWEzZmExNTM3ZTgw","git_pull_url":"https://gist.github.com/f055282edd12292e0f5aaa3fa1537e80.git","git_push_url":"https://gist.github.com/f055282edd12292e0f5aaa3fa1537e80.git","html_url":"https://gist.github.com/f055282edd12292e0f5aaa3fa1537e80","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f055282edd12292e0f5aaa3fa1537e80/raw/3870111681608b064a5157fc5529bfb4fb3a3aee/main.go","size":431,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\ts := hex.EncodeToString(d)\n\tfmt.Printf(\"Hex: %s\\n\", s)\n\n\td2, err := hex.DecodeString(s)\n\tif err != nil {\n\t\tlog.Fatalf(\"hex.DecodeString() failed with '%s'\\n\", err)\n\t}\n\tif !bytes.Equal(d, d2) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:15:57Z","updated_at":"2019-11-05T23:15:57Z","description":"Hex encode and decode","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c2075fe7ecfcad2f5bbdf03749c8392b1d851696","committed_at":"2019-11-05T23:15:56Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80/c2075fe7ecfcad2f5bbdf03749c8392b1d851696"}],"truncated":false}
3587 1573005338307 gistoutput
Gist:+3546
{"url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80","forks_url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80/forks","commits_url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80/commits","id":"f055282edd12292e0f5aaa3fa1537e80","node_id":"MDQ6R2lzdGYwNTUyODJlZGQxMjI5MmUwZjVhYWEzZmExNTM3ZTgw","git_pull_url":"https://gist.github.com/f055282edd12292e0f5aaa3fa1537e80.git","git_push_url":"https://gist.github.com/f055282edd12292e0f5aaa3fa1537e80.git","html_url":"https://gist.github.com/f055282edd12292e0f5aaa3fa1537e80","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f055282edd12292e0f5aaa3fa1537e80/raw/3870111681608b064a5157fc5529bfb4fb3a3aee/main.go","size":431,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\ts := hex.EncodeToString(d)\n\tfmt.Printf(\"Hex: %s\\n\", s)\n\n\td2, err := hex.DecodeString(s)\n\tif err != nil {\n\t\tlog.Fatalf(\"hex.DecodeString() failed with '%s'\\n\", err)\n\t}\n\tif !bytes.Equal(d, d2) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:15:57Z","updated_at":"2019-11-05T23:15:57Z","description":"Hex encode and decode","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c2075fe7ecfcad2f5bbdf03749c8392b1d851696","committed_at":"2019-11-05T23:15:56Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/f055282edd12292e0f5aaa3fa1537e80/c2075fe7ecfcad2f5bbdf03749c8392b1d851696"}],"truncated":false}
GistOutput:+14
Hex: 01ff3acd
3681 1573005338542 gist
GistID: 61fae43f06ff7450316ec59759c42834
Gist:+3628
{"url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834","forks_url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834/forks","commits_url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834/commits","id":"61fae43f06ff7450316ec59759c42834","node_id":"MDQ6R2lzdDYxZmFlNDNmMDZmZjc0NTAzMTZlYzU5NzU5YzQyODM0","git_pull_url":"https://gist.github.com/61fae43f06ff7450316ec59759c42834.git","git_push_url":"https://gist.github.com/61fae43f06ff7450316ec59759c42834.git","html_url":"https://gist.github.com/61fae43f06ff7450316ec59759c42834","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/61fae43f06ff7450316ec59759c42834/raw/84c782bb56d8d6c82260839b1213810db016935d/main.go","size":495,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\ts := fmt.Sprintf(\"%x\", d)\n\tfmt.Printf(\"Hex: %s\\n\", s)\n\n\tvar decoded []byte\n\t_, err := fmt.Sscanf(s, \"%x\", &decoded)\n\tif err != nil {\n\t\tlog.Fatalf(\"fmt.Sscanf() failed with '%s'\\n\", err)\n\t}\n\tif !bytes.Equal(d, decoded) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\n\tn := 3824\n\tfmt.Printf(\"%d in hex is 0x%x\\n\", n, n)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:17:56Z","updated_at":"2019-11-05T23:17:56Z","description":"Hex encoding with fmt.Sprintf","comments":0,"user":null,"comments_url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"35a4da084ced1565889ca577a6dc03a94ffde41b","committed_at":"2019-11-05T23:17:55Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834/35a4da084ced1565889ca577a6dc03a94ffde41b"}],"truncated":false}
3690 1573005340040 gistoutput
Gist:+3628
{"url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834","forks_url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834/forks","commits_url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834/commits","id":"61fae43f06ff7450316ec59759c42834","node_id":"MDQ6R2lzdDYxZmFlNDNmMDZmZjc0NTAzMTZlYzU5NzU5YzQyODM0","git_pull_url":"https://gist.github.com/61fae43f06ff7450316ec59759c42834.git","git_push_url":"https://gist.github.com/61fae43f06ff7450316ec59759c42834.git","html_url":"https://gist.github.com/61fae43f06ff7450316ec59759c42834","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/61fae43f06ff7450316ec59759c42834/raw/84c782bb56d8d6c82260839b1213810db016935d/main.go","size":495,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\ts := fmt.Sprintf(\"%x\", d)\n\tfmt.Printf(\"Hex: %s\\n\", s)\n\n\tvar decoded []byte\n\t_, err := fmt.Sscanf(s, \"%x\", &decoded)\n\tif err != nil {\n\t\tlog.Fatalf(\"fmt.Sscanf() failed with '%s'\\n\", err)\n\t}\n\tif !bytes.Equal(d, decoded) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\n\tn := 3824\n\tfmt.Printf(\"%d in hex is 0x%x\\n\", n, n)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:17:56Z","updated_at":"2019-11-05T23:17:56Z","description":"Hex encoding with fmt.Sprintf","comments":0,"user":null,"comments_url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"35a4da084ced1565889ca577a6dc03a94ffde41b","committed_at":"2019-11-05T23:17:55Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/61fae43f06ff7450316ec59759c42834/35a4da084ced1565889ca577a6dc03a94ffde41b"}],"truncated":false}
GistOutput:+35
Hex: 01ff3acd
3824 in hex is 0xef0
3941 1573005340227 gist
GistID: 0e7af9c5080dc1b63751c56d629176ae
Gist:+3888
{"url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae","forks_url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae/forks","commits_url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae/commits","id":"0e7af9c5080dc1b63751c56d629176ae","node_id":"MDQ6R2lzdDBlN2FmOWM1MDgwZGMxYjYzNzUxYzU2ZDYyOTE3NmFl","git_pull_url":"https://gist.github.com/0e7af9c5080dc1b63751c56d629176ae.git","git_push_url":"https://gist.github.com/0e7af9c5080dc1b63751c56d629176ae.git","html_url":"https://gist.github.com/0e7af9c5080dc1b63751c56d629176ae","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0e7af9c5080dc1b63751c56d629176ae/raw/5fafc54f859cbc85bdc51b20703171fdae3f642a/main.go","size":721,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\n\twriter := &bytes.Buffer{}\n\thexWriter := hex.NewEncoder(writer)\n\n\t_, err := hexWriter.Write(d)\n\tif err != nil {\n\t\tlog.Fatalf(\"hexWriter.Write() failed with '%s'\\n\", err)\n\t}\n\n\tencoded := writer.Bytes()\n\tfmt.Printf(\"Hex: %s\\n\", string(encoded))\n\n\treader := bytes.NewBuffer(encoded)\n\thexReader := hex.NewDecoder(reader)\n\n\tdecoded, err := ioutil.ReadAll(hexReader)\n\tif err != nil {\n\t\tfmt.Printf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\n\tif !bytes.Equal(d, decoded) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:19:32Z","updated_at":"2019-11-05T23:19:33Z","description":"Hex encoding to writer, decoding from reader","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c28665531121b003188b18b17e1b2df82fc27db6","committed_at":"2019-11-05T23:19:32Z","change_status":{"total":39,"additions":39,"deletions":0},"url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae/c28665531121b003188b18b17e1b2df82fc27db6"}],"truncated":false}
3929 1573005341723 gistoutput
Gist:+3888
{"url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae","forks_url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae/forks","commits_url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae/commits","id":"0e7af9c5080dc1b63751c56d629176ae","node_id":"MDQ6R2lzdDBlN2FmOWM1MDgwZGMxYjYzNzUxYzU2ZDYyOTE3NmFl","git_pull_url":"https://gist.github.com/0e7af9c5080dc1b63751c56d629176ae.git","git_push_url":"https://gist.github.com/0e7af9c5080dc1b63751c56d629176ae.git","html_url":"https://gist.github.com/0e7af9c5080dc1b63751c56d629176ae","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0e7af9c5080dc1b63751c56d629176ae/raw/5fafc54f859cbc85bdc51b20703171fdae3f642a/main.go","size":721,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\n\twriter := &bytes.Buffer{}\n\thexWriter := hex.NewEncoder(writer)\n\n\t_, err := hexWriter.Write(d)\n\tif err != nil {\n\t\tlog.Fatalf(\"hexWriter.Write() failed with '%s'\\n\", err)\n\t}\n\n\tencoded := writer.Bytes()\n\tfmt.Printf(\"Hex: %s\\n\", string(encoded))\n\n\treader := bytes.NewBuffer(encoded)\n\thexReader := hex.NewDecoder(reader)\n\n\tdecoded, err := ioutil.ReadAll(hexReader)\n\tif err != nil {\n\t\tfmt.Printf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\n\tif !bytes.Equal(d, decoded) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:19:32Z","updated_at":"2019-11-05T23:19:33Z","description":"Hex encoding to writer, decoding from reader","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c28665531121b003188b18b17e1b2df82fc27db6","committed_at":"2019-11-05T23:19:32Z","change_status":{"total":39,"additions":39,"deletions":0},"url":"https://api.github.com/gists/0e7af9c5080dc1b63751c56d629176ae/c28665531121b003188b18b17e1b2df82fc27db6"}],"truncated":false}
GistOutput:+14
Hex: 01ff3acd
3638 1573005341913 gist
GistID: 520d1b4a31345752abdce2e552695aea
Gist:+3585
{"url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea","forks_url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea/forks","commits_url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea/commits","id":"520d1b4a31345752abdce2e552695aea","node_id":"MDQ6R2lzdDUyMGQxYjRhMzEzNDU3NTJhYmRjZTJlNTUyNjk1YWVh","git_pull_url":"https://gist.github.com/520d1b4a31345752abdce2e552695aea.git","git_push_url":"https://gist.github.com/520d1b4a31345752abdce2e552695aea.git","html_url":"https://gist.github.com/520d1b4a31345752abdce2e552695aea","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/520d1b4a31345752abdce2e552695aea/raw/7145a2c7050653a098418eb14be3c8c23405bed3/main.go","size":467,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\ts := base64.StdEncoding.EncodeToString(d)\n\tfmt.Printf(\"base64: %s\\n\", s)\n\n\td2, err := base64.StdEncoding.DecodeString(s)\n\tif err != nil {\n\t\tlog.Fatalf(\"hex.DecodeString() failed with '%s'\\n\", err)\n\t}\n\tif !bytes.Equal(d, d2) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:21:04Z","updated_at":"2019-11-05T23:21:05Z","description":"Base64 encode and decode","comments":0,"user":null,"comments_url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7dfc8805a5d4f93861da6217d55d6b4e9176ff59","committed_at":"2019-11-05T23:21:04Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea/7dfc8805a5d4f93861da6217d55d6b4e9176ff59"}],"truncated":false}
3629 1573005343343 gistoutput
Gist:+3585
{"url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea","forks_url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea/forks","commits_url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea/commits","id":"520d1b4a31345752abdce2e552695aea","node_id":"MDQ6R2lzdDUyMGQxYjRhMzEzNDU3NTJhYmRjZTJlNTUyNjk1YWVh","git_pull_url":"https://gist.github.com/520d1b4a31345752abdce2e552695aea.git","git_push_url":"https://gist.github.com/520d1b4a31345752abdce2e552695aea.git","html_url":"https://gist.github.com/520d1b4a31345752abdce2e552695aea","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/520d1b4a31345752abdce2e552695aea/raw/7145a2c7050653a098418eb14be3c8c23405bed3/main.go","size":467,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\ts := base64.StdEncoding.EncodeToString(d)\n\tfmt.Printf(\"base64: %s\\n\", s)\n\n\td2, err := base64.StdEncoding.DecodeString(s)\n\tif err != nil {\n\t\tlog.Fatalf(\"hex.DecodeString() failed with '%s'\\n\", err)\n\t}\n\tif !bytes.Equal(d, d2) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:21:04Z","updated_at":"2019-11-05T23:21:05Z","description":"Base64 encode and decode","comments":0,"user":null,"comments_url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7dfc8805a5d4f93861da6217d55d6b4e9176ff59","committed_at":"2019-11-05T23:21:04Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/520d1b4a31345752abdce2e552695aea/7dfc8805a5d4f93861da6217d55d6b4e9176ff59"}],"truncated":false}
GistOutput:+17
base64: Af86zQ==
3629 1573005343645 gist
GistID: e4c2199e28c07ca8b06f8222c52da408
Gist:+3576
{"url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408","forks_url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408/forks","commits_url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408/commits","id":"e4c2199e28c07ca8b06f8222c52da408","node_id":"MDQ6R2lzdGU0YzIxOTllMjhjMDdjYThiMDZmODIyMmM1MmRhNDA4","git_pull_url":"https://gist.github.com/e4c2199e28c07ca8b06f8222c52da408.git","git_push_url":"https://gist.github.com/e4c2199e28c07ca8b06f8222c52da408.git","html_url":"https://gist.github.com/e4c2199e28c07ca8b06f8222c52da408","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/e4c2199e28c07ca8b06f8222c52da408/raw/922f1e816250e2484dcee71e7ec42452bd92ba23/main.go","size":467,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\ts := base64.URLEncoding.EncodeToString(d)\n\tfmt.Printf(\"base64: %s\\n\", s)\n\n\td2, err := base64.URLEncoding.DecodeString(s)\n\tif err != nil {\n\t\tlog.Fatalf(\"hex.DecodeString() failed with '%s'\\n\", err)\n\t}\n\tif !bytes.Equal(d, d2) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:22:11Z","updated_at":"2019-11-05T23:22:12Z","description":"URL-safe base64","comments":0,"user":null,"comments_url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"697e27da55513831061abb14531a0c26c6da7743","committed_at":"2019-11-05T23:22:11Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408/697e27da55513831061abb14531a0c26c6da7743"}],"truncated":false}
3620 1573005345056 gistoutput
Gist:+3576
{"url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408","forks_url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408/forks","commits_url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408/commits","id":"e4c2199e28c07ca8b06f8222c52da408","node_id":"MDQ6R2lzdGU0YzIxOTllMjhjMDdjYThiMDZmODIyMmM1MmRhNDA4","git_pull_url":"https://gist.github.com/e4c2199e28c07ca8b06f8222c52da408.git","git_push_url":"https://gist.github.com/e4c2199e28c07ca8b06f8222c52da408.git","html_url":"https://gist.github.com/e4c2199e28c07ca8b06f8222c52da408","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/e4c2199e28c07ca8b06f8222c52da408/raw/922f1e816250e2484dcee71e7ec42452bd92ba23/main.go","size":467,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\ts := base64.URLEncoding.EncodeToString(d)\n\tfmt.Printf(\"base64: %s\\n\", s)\n\n\td2, err := base64.URLEncoding.DecodeString(s)\n\tif err != nil {\n\t\tlog.Fatalf(\"hex.DecodeString() failed with '%s'\\n\", err)\n\t}\n\tif !bytes.Equal(d, d2) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:22:11Z","updated_at":"2019-11-05T23:22:12Z","description":"URL-safe base64","comments":0,"user":null,"comments_url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"697e27da55513831061abb14531a0c26c6da7743","committed_at":"2019-11-05T23:22:11Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/e4c2199e28c07ca8b06f8222c52da408/697e27da55513831061abb14531a0c26c6da7743"}],"truncated":false}
GistOutput:+17
base64: Af86zQ==
4132 1573005345275 gist
GistID: 0534c1b42d7e4b8352c9cf0a2d4bab73
Gist:+4079
{"url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73","forks_url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73/forks","commits_url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73/commits","id":"0534c1b42d7e4b8352c9cf0a2d4bab73","node_id":"MDQ6R2lzdDA1MzRjMWI0MmQ3ZTRiODM1MmM5Y2YwYTJkNGJhYjcz","git_pull_url":"https://gist.github.com/0534c1b42d7e4b8352c9cf0a2d4bab73.git","git_push_url":"https://gist.github.com/0534c1b42d7e4b8352c9cf0a2d4bab73.git","html_url":"https://gist.github.com/0534c1b42d7e4b8352c9cf0a2d4bab73","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0534c1b42d7e4b8352c9cf0a2d4bab73/raw/f51d50928d5fc36db234ea87525cf44c20434460/main.go","size":897,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\n\twriter := &bytes.Buffer{}\n\tbase64Writer := base64.NewEncoder(base64.StdEncoding, writer)\n\n\t_, err := base64Writer.Write(d)\n\tif err != nil {\n\t\tlog.Fatalf(\"base64Writer.Write() failed with '%s'\\n\", err)\n\t}\n\terr = base64Writer.Close()\n\tif err != nil {\n\t\tlog.Fatalf(\"base64Writer.Close() failed with '%s'\\n\", err)\n\t}\n\n\tencoded := writer.Bytes()\n\tfmt.Printf(\"Base64: %s\\n\", string(encoded))\n\n\treader := bytes.NewBuffer(encoded)\n\tbase64Reader := base64.NewDecoder(base64.StdEncoding, reader)\n\n\tdecoded, err := ioutil.ReadAll(base64Reader)\n\tif err != nil {\n\t\tfmt.Printf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\n\tif !bytes.Equal(d, decoded) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:23:16Z","updated_at":"2019-11-05T23:23:16Z","description":"Base64 encoding to writer, decoding from reader","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5a8dd812ff675b8a8c01b41f3ea73ca0ca96c5f4","committed_at":"2019-11-05T23:23:16Z","change_status":{"total":43,"additions":43,"deletions":0},"url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73/5a8dd812ff675b8a8c01b41f3ea73ca0ca96c5f4"}],"truncated":false}
4123 1573005346906 gistoutput
Gist:+4079
{"url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73","forks_url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73/forks","commits_url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73/commits","id":"0534c1b42d7e4b8352c9cf0a2d4bab73","node_id":"MDQ6R2lzdDA1MzRjMWI0MmQ3ZTRiODM1MmM5Y2YwYTJkNGJhYjcz","git_pull_url":"https://gist.github.com/0534c1b42d7e4b8352c9cf0a2d4bab73.git","git_push_url":"https://gist.github.com/0534c1b42d7e4b8352c9cf0a2d4bab73.git","html_url":"https://gist.github.com/0534c1b42d7e4b8352c9cf0a2d4bab73","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0534c1b42d7e4b8352c9cf0a2d4bab73/raw/f51d50928d5fc36db234ea87525cf44c20434460/main.go","size":897,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\td := []byte{0x01, 0xff, 0x3a, 0xcd}\n\n\twriter := &bytes.Buffer{}\n\tbase64Writer := base64.NewEncoder(base64.StdEncoding, writer)\n\n\t_, err := base64Writer.Write(d)\n\tif err != nil {\n\t\tlog.Fatalf(\"base64Writer.Write() failed with '%s'\\n\", err)\n\t}\n\terr = base64Writer.Close()\n\tif err != nil {\n\t\tlog.Fatalf(\"base64Writer.Close() failed with '%s'\\n\", err)\n\t}\n\n\tencoded := writer.Bytes()\n\tfmt.Printf(\"Base64: %s\\n\", string(encoded))\n\n\treader := bytes.NewBuffer(encoded)\n\tbase64Reader := base64.NewDecoder(base64.StdEncoding, reader)\n\n\tdecoded, err := ioutil.ReadAll(base64Reader)\n\tif err != nil {\n\t\tfmt.Printf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\n\tif !bytes.Equal(d, decoded) {\n\t\tlog.Fatalf(\"decoded version is different than original\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:23:16Z","updated_at":"2019-11-05T23:23:16Z","description":"Base64 encoding to writer, decoding from reader","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5a8dd812ff675b8a8c01b41f3ea73ca0ca96c5f4","committed_at":"2019-11-05T23:23:16Z","change_status":{"total":43,"additions":43,"deletions":0},"url":"https://api.github.com/gists/0534c1b42d7e4b8352c9cf0a2d4bab73/5a8dd812ff675b8a8c01b41f3ea73ca0ca96c5f4"}],"truncated":false}
GistOutput:+17
Base64: Af86zQ==
3478 1573005348519 gist
GistID: 8c2ff95efa534c95619e1fb74a878b0c
Gist:+3425
{"url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c","forks_url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c/forks","commits_url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c/commits","id":"8c2ff95efa534c95619e1fb74a878b0c","node_id":"MDQ6R2lzdDhjMmZmOTVlZmE1MzRjOTU2MTllMWZiNzRhODc4YjBj","git_pull_url":"https://gist.github.com/8c2ff95efa534c95619e1fb74a878b0c.git","git_push_url":"https://gist.github.com/8c2ff95efa534c95619e1fb74a878b0c.git","html_url":"https://gist.github.com/8c2ff95efa534c95619e1fb74a878b0c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8c2ff95efa534c95619e1fb74a878b0c/raw/2887e57181fc6532b26fef5ec650bc9932203937/main.go","size":319,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os/exec\"\n)\n\nfunc main() {\n\t// :show start\n\tcmd := exec.Command(\"go\", \"version\")\n\tout, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.CombinedOutput() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Output:\\n%s\\n\", string(out))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:27:25Z","updated_at":"2019-11-05T23:27:25Z","description":"Basic command execution","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"817381ab35723dfdc90b842f13c72ce08fc2392a","committed_at":"2019-11-05T23:27:24Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c/817381ab35723dfdc90b842f13c72ce08fc2392a"}],"truncated":false}
3493 1573005350074 gistoutput
Gist:+3425
{"url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c","forks_url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c/forks","commits_url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c/commits","id":"8c2ff95efa534c95619e1fb74a878b0c","node_id":"MDQ6R2lzdDhjMmZmOTVlZmE1MzRjOTU2MTllMWZiNzRhODc4YjBj","git_pull_url":"https://gist.github.com/8c2ff95efa534c95619e1fb74a878b0c.git","git_push_url":"https://gist.github.com/8c2ff95efa534c95619e1fb74a878b0c.git","html_url":"https://gist.github.com/8c2ff95efa534c95619e1fb74a878b0c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8c2ff95efa534c95619e1fb74a878b0c/raw/2887e57181fc6532b26fef5ec650bc9932203937/main.go","size":319,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os/exec\"\n)\n\nfunc main() {\n\t// :show start\n\tcmd := exec.Command(\"go\", \"version\")\n\tout, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.CombinedOutput() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Output:\\n%s\\n\", string(out))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:27:25Z","updated_at":"2019-11-05T23:27:25Z","description":"Basic command execution","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"817381ab35723dfdc90b842f13c72ce08fc2392a","committed_at":"2019-11-05T23:27:24Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/8c2ff95efa534c95619e1fb74a878b0c/817381ab35723dfdc90b842f13c72ce08fc2392a"}],"truncated":false}
GistOutput:+41
Output:
go version go1.13.1 linux/amd64

4739 1573005350262 gist
GistID: 797717462a1a065464aa58d1e2b9def1
Gist:+4686
{"url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1","forks_url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/forks","commits_url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/commits","id":"797717462a1a065464aa58d1e2b9def1","node_id":"MDQ6R2lzdDc5NzcxNzQ2MmExYTA2NTQ2NGFhNThkMWUyYjlkZWYx","git_pull_url":"https://gist.github.com/797717462a1a065464aa58d1e2b9def1.git","git_push_url":"https://gist.github.com/797717462a1a065464aa58d1e2b9def1.git","html_url":"https://gist.github.com/797717462a1a065464aa58d1e2b9def1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/797717462a1a065464aa58d1e2b9def1/raw/f2f0d61a9505c8d3d55d0d50e0f7154f6ff08a4c/main.go","size":456,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc printVariableType(v interface{}) {\n\tswitch v.(type) {\n\tcase string:\n\t\tfmt.Printf(\"v is of type 'string'\\n\")\n\tcase int:\n\t\tfmt.Printf(\"v is of type 'int'\\n\")\n\tdefault:\n\t\t// generic fallback\n\t\tfmt.Printf(\"v is of type '%T'\\n\", v)\n\t}\n}\n\nfunc main() {\n\tprintVariableType(\"string\") // string\n\tprintVariableType(5)        // int\n\tprintVariableType(int32(5)) // int32\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:29:16Z","updated_at":"2019-11-05T23:30:18Z","description":"More advanced command execution","comments":0,"user":null,"comments_url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4031ee67b230b738f923772a7463a6732879be58","committed_at":"2019-11-05T23:30:18Z","change_status":{"total":39,"additions":18,"deletions":21},"url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/4031ee67b230b738f923772a7463a6732879be58"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f8d13e0c8af00d3917f78434f289aea26e0d0f70","committed_at":"2019-11-05T23:29:15Z","change_status":{"total":30,"additions":30,"deletions":0},"url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/f8d13e0c8af00d3917f78434f289aea26e0d0f70"}],"truncated":false}
4775 1573005351660 gistoutput
Gist:+4686
{"url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1","forks_url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/forks","commits_url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/commits","id":"797717462a1a065464aa58d1e2b9def1","node_id":"MDQ6R2lzdDc5NzcxNzQ2MmExYTA2NTQ2NGFhNThkMWUyYjlkZWYx","git_pull_url":"https://gist.github.com/797717462a1a065464aa58d1e2b9def1.git","git_push_url":"https://gist.github.com/797717462a1a065464aa58d1e2b9def1.git","html_url":"https://gist.github.com/797717462a1a065464aa58d1e2b9def1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/797717462a1a065464aa58d1e2b9def1/raw/f2f0d61a9505c8d3d55d0d50e0f7154f6ff08a4c/main.go","size":456,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc printVariableType(v interface{}) {\n\tswitch v.(type) {\n\tcase string:\n\t\tfmt.Printf(\"v is of type 'string'\\n\")\n\tcase int:\n\t\tfmt.Printf(\"v is of type 'int'\\n\")\n\tdefault:\n\t\t// generic fallback\n\t\tfmt.Printf(\"v is of type '%T'\\n\", v)\n\t}\n}\n\nfunc main() {\n\tprintVariableType(\"string\") // string\n\tprintVariableType(5)        // int\n\tprintVariableType(int32(5)) // int32\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:29:16Z","updated_at":"2019-11-05T23:30:18Z","description":"More advanced command execution","comments":0,"user":null,"comments_url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4031ee67b230b738f923772a7463a6732879be58","committed_at":"2019-11-05T23:30:18Z","change_status":{"total":39,"additions":18,"deletions":21},"url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/4031ee67b230b738f923772a7463a6732879be58"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f8d13e0c8af00d3917f78434f289aea26e0d0f70","committed_at":"2019-11-05T23:29:15Z","change_status":{"total":30,"additions":30,"deletions":0},"url":"https://api.github.com/gists/797717462a1a065464aa58d1e2b9def1/f8d13e0c8af00d3917f78434f289aea26e0d0f70"}],"truncated":false}
GistOutput:+62
v is of type 'string'
v is of type 'int'
v is of type 'int32'
3616 1573005352130 gist
GistID: 03627f233489bf1171cc1488ff73f432
Gist:+3563
{"url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432","forks_url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432/forks","commits_url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432/commits","id":"03627f233489bf1171cc1488ff73f432","node_id":"MDQ6R2lzdDAzNjI3ZjIzMzQ4OWJmMTE3MWNjMTQ4OGZmNzNmNDMy","git_pull_url":"https://gist.github.com/03627f233489bf1171cc1488ff73f432.git","git_push_url":"https://gist.github.com/03627f233489bf1171cc1488ff73f432.git","html_url":"https://gist.github.com/03627f233489bf1171cc1488ff73f432","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/03627f233489bf1171cc1488ff73f432/raw/f2f0d61a9505c8d3d55d0d50e0f7154f6ff08a4c/main.go","size":456,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc printVariableType(v interface{}) {\n\tswitch v.(type) {\n\tcase string:\n\t\tfmt.Printf(\"v is of type 'string'\\n\")\n\tcase int:\n\t\tfmt.Printf(\"v is of type 'int'\\n\")\n\tdefault:\n\t\t// generic fallback\n\t\tfmt.Printf(\"v is of type '%T'\\n\", v)\n\t}\n}\n\nfunc main() {\n\tprintVariableType(\"string\") // string\n\tprintVariableType(5)        // int\n\tprintVariableType(int32(5)) // int32\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:32:39Z","updated_at":"2019-11-05T23:32:39Z","description":"Empty interface","comments":0,"user":null,"comments_url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6a5ec02fbf1e192f2bfac727bad8a7c392198fc4","committed_at":"2019-11-05T23:32:38Z","change_status":{"total":27,"additions":27,"deletions":0},"url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432/6a5ec02fbf1e192f2bfac727bad8a7c392198fc4"}],"truncated":false}
3652 1573005353490 gistoutput
Gist:+3563
{"url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432","forks_url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432/forks","commits_url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432/commits","id":"03627f233489bf1171cc1488ff73f432","node_id":"MDQ6R2lzdDAzNjI3ZjIzMzQ4OWJmMTE3MWNjMTQ4OGZmNzNmNDMy","git_pull_url":"https://gist.github.com/03627f233489bf1171cc1488ff73f432.git","git_push_url":"https://gist.github.com/03627f233489bf1171cc1488ff73f432.git","html_url":"https://gist.github.com/03627f233489bf1171cc1488ff73f432","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/03627f233489bf1171cc1488ff73f432/raw/f2f0d61a9505c8d3d55d0d50e0f7154f6ff08a4c/main.go","size":456,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc printVariableType(v interface{}) {\n\tswitch v.(type) {\n\tcase string:\n\t\tfmt.Printf(\"v is of type 'string'\\n\")\n\tcase int:\n\t\tfmt.Printf(\"v is of type 'int'\\n\")\n\tdefault:\n\t\t// generic fallback\n\t\tfmt.Printf(\"v is of type '%T'\\n\", v)\n\t}\n}\n\nfunc main() {\n\tprintVariableType(\"string\") // string\n\tprintVariableType(5)        // int\n\tprintVariableType(int32(5)) // int32\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:32:39Z","updated_at":"2019-11-05T23:32:39Z","description":"Empty interface","comments":0,"user":null,"comments_url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6a5ec02fbf1e192f2bfac727bad8a7c392198fc4","committed_at":"2019-11-05T23:32:38Z","change_status":{"total":27,"additions":27,"deletions":0},"url":"https://api.github.com/gists/03627f233489bf1171cc1488ff73f432/6a5ec02fbf1e192f2bfac727bad8a7c392198fc4"}],"truncated":false}
GistOutput:+62
v is of type 'string'
v is of type 'int'
v is of type 'int32'
4006 1573005353674 gist
GistID: 87f4bb1c4f744040d73a55f239108c41
Gist:+3953
{"url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41","forks_url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41/forks","commits_url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41/commits","id":"87f4bb1c4f744040d73a55f239108c41","node_id":"MDQ6R2lzdDg3ZjRiYjFjNGY3NDQwNDBkNzNhNTVmMjM5MTA4YzQx","git_pull_url":"https://gist.github.com/87f4bb1c4f744040d73a55f239108c41.git","git_push_url":"https://gist.github.com/87f4bb1c4f744040d73a55f239108c41.git","html_url":"https://gist.github.com/87f4bb1c4f744040d73a55f239108c41","files":{"type assertion.go":{"filename":"type assertion.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/87f4bb1c4f744040d73a55f239108c41/raw/6b42391e77bc15ad8afbb85f558b47e3fa1facc9/type%20assertion.go","size":780,"truncated":false,"content":"// :glot, allow error\n// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc printTypeAndValue(iv interface{}) {\n\tif v, ok := iv.(string); ok {\n\t\tfmt.Printf(\"iv is of type string and has value '%s'\\n\", v)\n\t\treturn\n\t}\n\tif v, ok := iv.(int); ok {\n\t\tfmt.Printf(\"iv is of type int and has value '%d'\\n\", v)\n\t\treturn\n\t}\n\tif v, ok := iv.(*int); ok {\n\t\tfmt.Printf(\"iv is of type *int and has value '%s'\\n\", v)\n\t\treturn\n\t}\n}\n\nfunc panicOnInvalidConversion() {\n\tvar iv interface{} = \"string\"\n\n\tv := iv.(int)\n\tfmt.Printf(\"v is int of value: %d\\n\", v)\n}\n\nfunc main() {\n\t// pass a string\n\tprintTypeAndValue(\"string\")\n\ti := 5\n\t// pass an int\n\tprintTypeAndValue(i)\n\t// pass a pointer to int i.e. *int\n\tprintTypeAndValue(&i)\n\n\tpanicOnInvalidConversion()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:35:25Z","updated_at":"2019-11-05T23:35:26Z","description":"type assertion","comments":0,"user":null,"comments_url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2964e3ac8f418c7e52f383813fd00d24521f4754","committed_at":"2019-11-05T23:35:25Z","change_status":{"total":44,"additions":44,"deletions":0},"url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41/2964e3ac8f418c7e52f383813fd00d24521f4754"}],"truncated":false}
4354 1573005355165 gistoutput
Gist:+3953
{"url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41","forks_url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41/forks","commits_url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41/commits","id":"87f4bb1c4f744040d73a55f239108c41","node_id":"MDQ6R2lzdDg3ZjRiYjFjNGY3NDQwNDBkNzNhNTVmMjM5MTA4YzQx","git_pull_url":"https://gist.github.com/87f4bb1c4f744040d73a55f239108c41.git","git_push_url":"https://gist.github.com/87f4bb1c4f744040d73a55f239108c41.git","html_url":"https://gist.github.com/87f4bb1c4f744040d73a55f239108c41","files":{"type assertion.go":{"filename":"type assertion.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/87f4bb1c4f744040d73a55f239108c41/raw/6b42391e77bc15ad8afbb85f558b47e3fa1facc9/type%20assertion.go","size":780,"truncated":false,"content":"// :glot, allow error\n// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc printTypeAndValue(iv interface{}) {\n\tif v, ok := iv.(string); ok {\n\t\tfmt.Printf(\"iv is of type string and has value '%s'\\n\", v)\n\t\treturn\n\t}\n\tif v, ok := iv.(int); ok {\n\t\tfmt.Printf(\"iv is of type int and has value '%d'\\n\", v)\n\t\treturn\n\t}\n\tif v, ok := iv.(*int); ok {\n\t\tfmt.Printf(\"iv is of type *int and has value '%s'\\n\", v)\n\t\treturn\n\t}\n}\n\nfunc panicOnInvalidConversion() {\n\tvar iv interface{} = \"string\"\n\n\tv := iv.(int)\n\tfmt.Printf(\"v is int of value: %d\\n\", v)\n}\n\nfunc main() {\n\t// pass a string\n\tprintTypeAndValue(\"string\")\n\ti := 5\n\t// pass an int\n\tprintTypeAndValue(i)\n\t// pass a pointer to int i.e. *int\n\tprintTypeAndValue(&i)\n\n\tpanicOnInvalidConversion()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:35:25Z","updated_at":"2019-11-05T23:35:26Z","description":"type assertion","comments":0,"user":null,"comments_url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2964e3ac8f418c7e52f383813fd00d24521f4754","committed_at":"2019-11-05T23:35:25Z","change_status":{"total":44,"additions":44,"deletions":0},"url":"https://api.github.com/gists/87f4bb1c4f744040d73a55f239108c41/2964e3ac8f418c7e52f383813fd00d24521f4754"}],"truncated":false}
GistOutput:+372
iv is of type string and has value 'string'
iv is of type int and has value '5'
iv is of type *int and has value '%!s(*int=0xc000016048)'
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion()
	/tmp/src178978545/type assertion.go:28 +0x45
main.main()
	/tmp/src178978545/type assertion.go:41 +0x9a
exit status 2
3435 1573005355342 gist
GistID: c2b1c9a1ee37bf3edb9c81d2b7a15289
Gist:+3382
{"url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289","forks_url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289/forks","commits_url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289/commits","id":"c2b1c9a1ee37bf3edb9c81d2b7a15289","node_id":"MDQ6R2lzdGMyYjFjOWExZWUzN2JmM2VkYjljODFkMmI3YTE1Mjg5","git_pull_url":"https://gist.github.com/c2b1c9a1ee37bf3edb9c81d2b7a15289.git","git_push_url":"https://gist.github.com/c2b1c9a1ee37bf3edb9c81d2b7a15289.git","html_url":"https://gist.github.com/c2b1c9a1ee37bf3edb9c81d2b7a15289","files":{"type assertion.go":{"filename":"type assertion.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/c2b1c9a1ee37bf3edb9c81d2b7a15289/raw/96c0ad66f4741bbfed0c287562b50bb4be53cecc/type%20assertion.go","size":271,"truncated":false,"content":"// :glot, allow error\n// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc panicOnInvalidConversion(iv interface{}) {\n\tv := iv.(int)\n\tfmt.Printf(\"v is int of value: %d\\n\", v)\n}\n\nfunc main() {\n\tpanicOnInvalidConversion(\"string\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:36:32Z","updated_at":"2019-11-05T23:36:32Z","description":"Type assertion","comments":0,"user":null,"comments_url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7be72478bd322daa19c49b18404d772a4c79865c","committed_at":"2019-11-05T23:36:31Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289/7be72478bd322daa19c49b18404d772a4c79865c"}],"truncated":false}
3663 1573005356767 gistoutput
Gist:+3382
{"url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289","forks_url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289/forks","commits_url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289/commits","id":"c2b1c9a1ee37bf3edb9c81d2b7a15289","node_id":"MDQ6R2lzdGMyYjFjOWExZWUzN2JmM2VkYjljODFkMmI3YTE1Mjg5","git_pull_url":"https://gist.github.com/c2b1c9a1ee37bf3edb9c81d2b7a15289.git","git_push_url":"https://gist.github.com/c2b1c9a1ee37bf3edb9c81d2b7a15289.git","html_url":"https://gist.github.com/c2b1c9a1ee37bf3edb9c81d2b7a15289","files":{"type assertion.go":{"filename":"type assertion.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/c2b1c9a1ee37bf3edb9c81d2b7a15289/raw/96c0ad66f4741bbfed0c287562b50bb4be53cecc/type%20assertion.go","size":271,"truncated":false,"content":"// :glot, allow error\n// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc panicOnInvalidConversion(iv interface{}) {\n\tv := iv.(int)\n\tfmt.Printf(\"v is int of value: %d\\n\", v)\n}\n\nfunc main() {\n\tpanicOnInvalidConversion(\"string\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:36:32Z","updated_at":"2019-11-05T23:36:32Z","description":"Type assertion","comments":0,"user":null,"comments_url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7be72478bd322daa19c49b18404d772a4c79865c","committed_at":"2019-11-05T23:36:31Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/c2b1c9a1ee37bf3edb9c81d2b7a15289/7be72478bd322daa19c49b18404d772a4c79865c"}],"truncated":false}
GistOutput:+252
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion(0x4a0120, 0x4db030)
	/tmp/src459967900/type assertion.go:11 +0xd6
main.main()
	/tmp/src459967900/type assertion.go:16 +0x39
exit status 2
3983 1573005356959 gist
GistID: 362edcbccd8df1dadff5181406a72599
Gist:+3930
{"url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599","forks_url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599/forks","commits_url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599/commits","id":"362edcbccd8df1dadff5181406a72599","node_id":"MDQ6R2lzdDM2MmVkY2JjY2Q4ZGYxZGFkZmY1MTgxNDA2YTcyNTk5","git_pull_url":"https://gist.github.com/362edcbccd8df1dadff5181406a72599.git","git_push_url":"https://gist.github.com/362edcbccd8df1dadff5181406a72599.git","html_url":"https://gist.github.com/362edcbccd8df1dadff5181406a72599","files":{"type switch.go":{"filename":"type switch.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/362edcbccd8df1dadff5181406a72599/raw/c4d593de97830779cd53b61500b9c42f85663bc8/type%20switch.go","size":776,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\n// :show start\nfunc smartConvertToInt(iv interface{}) (int, error) {\n\t// inside case statements, v is of type matching case type\n\tswitch v := iv.(type) {\n\tcase int:\n\t\treturn v, nil\n\tcase string:\n\t\treturn strconv.Atoi(v)\n\tcase float64:\n\t\treturn int(v), nil\n\tdefault:\n\t\treturn 0, fmt.Errorf(\"unsupported type: %T\", iv)\n\t}\n}\n\nfunc printSmartConvertToInt(iv interface{}) {\n\ti, err := smartConvertToInt(iv)\n\tif err != nil {\n\t\tfmt.Printf(\"Failed to convert %#v to int\\n\", iv)\n\t\treturn\n\t}\n\tfmt.Printf(\"%#v of type %T converted to %d\\n\", iv, iv, i)\n}\n\nfunc main() {\n\tprintSmartConvertToInt(\"5\")\n\tprintSmartConvertToInt(4)\n\tprintSmartConvertToInt(int32(8))\n\tprintSmartConvertToInt(\"not valid int\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:37:55Z","updated_at":"2019-11-05T23:37:56Z","description":"Type switch","comments":0,"user":null,"comments_url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5427405f4de8b3a79642edf6ac77f21def1c28a9","committed_at":"2019-11-05T23:37:55Z","change_status":{"total":40,"additions":40,"deletions":0},"url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599/5427405f4de8b3a79642edf6ac77f21def1c28a9"}],"truncated":false}
4089 1573005358345 gistoutput
Gist:+3930
{"url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599","forks_url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599/forks","commits_url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599/commits","id":"362edcbccd8df1dadff5181406a72599","node_id":"MDQ6R2lzdDM2MmVkY2JjY2Q4ZGYxZGFkZmY1MTgxNDA2YTcyNTk5","git_pull_url":"https://gist.github.com/362edcbccd8df1dadff5181406a72599.git","git_push_url":"https://gist.github.com/362edcbccd8df1dadff5181406a72599.git","html_url":"https://gist.github.com/362edcbccd8df1dadff5181406a72599","files":{"type switch.go":{"filename":"type switch.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/362edcbccd8df1dadff5181406a72599/raw/c4d593de97830779cd53b61500b9c42f85663bc8/type%20switch.go","size":776,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\n// :show start\nfunc smartConvertToInt(iv interface{}) (int, error) {\n\t// inside case statements, v is of type matching case type\n\tswitch v := iv.(type) {\n\tcase int:\n\t\treturn v, nil\n\tcase string:\n\t\treturn strconv.Atoi(v)\n\tcase float64:\n\t\treturn int(v), nil\n\tdefault:\n\t\treturn 0, fmt.Errorf(\"unsupported type: %T\", iv)\n\t}\n}\n\nfunc printSmartConvertToInt(iv interface{}) {\n\ti, err := smartConvertToInt(iv)\n\tif err != nil {\n\t\tfmt.Printf(\"Failed to convert %#v to int\\n\", iv)\n\t\treturn\n\t}\n\tfmt.Printf(\"%#v of type %T converted to %d\\n\", iv, iv, i)\n}\n\nfunc main() {\n\tprintSmartConvertToInt(\"5\")\n\tprintSmartConvertToInt(4)\n\tprintSmartConvertToInt(int32(8))\n\tprintSmartConvertToInt(\"not valid int\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-05T23:37:55Z","updated_at":"2019-11-05T23:37:56Z","description":"Type switch","comments":0,"user":null,"comments_url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5427405f4de8b3a79642edf6ac77f21def1c28a9","committed_at":"2019-11-05T23:37:55Z","change_status":{"total":40,"additions":40,"deletions":0},"url":"https://api.github.com/gists/362edcbccd8df1dadff5181406a72599/5427405f4de8b3a79642edf6ac77f21def1c28a9"}],"truncated":false}
GistOutput:+131
"5" of type string converted to 5
4 of type int converted to 4
Failed to convert 8 to int
Failed to convert "not valid int" to int
4503 1573005358800 gist
GistID: 0baa979105d146a2b76bd3afbf773c98
Gist:+4450
{"url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98","forks_url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/forks","commits_url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/commits","id":"0baa979105d146a2b76bd3afbf773c98","node_id":"MDQ6R2lzdDBiYWE5NzkxMDVkMTQ2YTJiNzZiZDNhZmJmNzczYzk4","git_pull_url":"https://gist.github.com/0baa979105d146a2b76bd3afbf773c98.git","git_push_url":"https://gist.github.com/0baa979105d146a2b76bd3afbf773c98.git","html_url":"https://gist.github.com/0baa979105d146a2b76bd3afbf773c98","files":{"range iterate over string.go":{"filename":"range iterate over string.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0baa979105d146a2b76bd3afbf773c98/raw/a0cd88249a1b3df2eaf15ffb377915a20e097db1/range%20iterate%20over%20string.go","size":188,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := \"Hey 世界\"\n\tfor i, r := range s {\n\t\tfmt.Printf(\"idx: %d, rune: %d\\n\", i, r)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:39:25Z","updated_at":"2019-11-05T23:40:24Z","description":"range iterate over a string","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4ef187c3479b6461e0bd89b772c7775b0eec19c3","committed_at":"2019-11-05T23:40:23Z","change_status":{"total":2,"additions":1,"deletions":1},"url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/4ef187c3479b6461e0bd89b772c7775b0eec19c3"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a511dcfaa6e358dc6a36d15b77ce49c9c011f04b","committed_at":"2019-11-05T23:39:24Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/a511dcfaa6e358dc6a36d15b77ce49c9c011f04b"}],"truncated":false}
4588 1573005360243 gistoutput
Gist:+4450
{"url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98","forks_url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/forks","commits_url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/commits","id":"0baa979105d146a2b76bd3afbf773c98","node_id":"MDQ6R2lzdDBiYWE5NzkxMDVkMTQ2YTJiNzZiZDNhZmJmNzczYzk4","git_pull_url":"https://gist.github.com/0baa979105d146a2b76bd3afbf773c98.git","git_push_url":"https://gist.github.com/0baa979105d146a2b76bd3afbf773c98.git","html_url":"https://gist.github.com/0baa979105d146a2b76bd3afbf773c98","files":{"range iterate over string.go":{"filename":"range iterate over string.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0baa979105d146a2b76bd3afbf773c98/raw/a0cd88249a1b3df2eaf15ffb377915a20e097db1/range%20iterate%20over%20string.go","size":188,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := \"Hey 世界\"\n\tfor i, r := range s {\n\t\tfmt.Printf(\"idx: %d, rune: %d\\n\", i, r)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:39:25Z","updated_at":"2019-11-05T23:40:24Z","description":"range iterate over a string","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4ef187c3479b6461e0bd89b772c7775b0eec19c3","committed_at":"2019-11-05T23:40:23Z","change_status":{"total":2,"additions":1,"deletions":1},"url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/4ef187c3479b6461e0bd89b772c7775b0eec19c3"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a511dcfaa6e358dc6a36d15b77ce49c9c011f04b","committed_at":"2019-11-05T23:39:24Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/0baa979105d146a2b76bd3afbf773c98/a511dcfaa6e358dc6a36d15b77ce49c9c011f04b"}],"truncated":false}
GistOutput:+110
idx: 0, rune: 72
idx: 1, rune: 101
idx: 2, rune: 121
idx: 3, rune: 32
idx: 4, rune: 19990
idx: 7, rune: 30028
3403 1573005360461 gist
GistID: 87f6e34c2409e56a7b87f0f553533641
Gist:+3350
{"url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641","forks_url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641/forks","commits_url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641/commits","id":"87f6e34c2409e56a7b87f0f553533641","node_id":"MDQ6R2lzdDg3ZjZlMzRjMjQwOWU1NmE3Yjg3ZjBmNTUzNTMzNjQx","git_pull_url":"https://gist.github.com/87f6e34c2409e56a7b87f0f553533641.git","git_push_url":"https://gist.github.com/87f6e34c2409e56a7b87f0f553533641.git","html_url":"https://gist.github.com/87f6e34c2409e56a7b87f0f553533641","files":{"iterate string bytes.go":{"filename":"iterate string bytes.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/87f6e34c2409e56a7b87f0f553533641/raw/da73a3e480ec9b0cdd7a816a08d85e5c43a6578a/iterate%20string%20bytes.go","size":203,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := \"a 世\"\n\tfor i := 0; i < len(s); i++ {\n\t\tc := s[i]\n\t\tfmt.Printf(\"idx: %d, byte: %d\\n\", i, c)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:41:36Z","updated_at":"2019-11-05T23:41:37Z","description":"Iterate over bytes in a string","comments":0,"user":null,"comments_url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"0ec5ecb00cf03570bfa9339b40bd00238c34c92e","committed_at":"2019-11-05T23:41:36Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641/0ec5ecb00cf03570bfa9339b40bd00238c34c92e"}],"truncated":false}
3465 1573005362202 gistoutput
Gist:+3350
{"url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641","forks_url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641/forks","commits_url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641/commits","id":"87f6e34c2409e56a7b87f0f553533641","node_id":"MDQ6R2lzdDg3ZjZlMzRjMjQwOWU1NmE3Yjg3ZjBmNTUzNTMzNjQx","git_pull_url":"https://gist.github.com/87f6e34c2409e56a7b87f0f553533641.git","git_push_url":"https://gist.github.com/87f6e34c2409e56a7b87f0f553533641.git","html_url":"https://gist.github.com/87f6e34c2409e56a7b87f0f553533641","files":{"iterate string bytes.go":{"filename":"iterate string bytes.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/87f6e34c2409e56a7b87f0f553533641/raw/da73a3e480ec9b0cdd7a816a08d85e5c43a6578a/iterate%20string%20bytes.go","size":203,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := \"a 世\"\n\tfor i := 0; i < len(s); i++ {\n\t\tc := s[i]\n\t\tfmt.Printf(\"idx: %d, byte: %d\\n\", i, c)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:41:36Z","updated_at":"2019-11-05T23:41:37Z","description":"Iterate over bytes in a string","comments":0,"user":null,"comments_url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"0ec5ecb00cf03570bfa9339b40bd00238c34c92e","committed_at":"2019-11-05T23:41:36Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/87f6e34c2409e56a7b87f0f553533641/0ec5ecb00cf03570bfa9339b40bd00238c34c92e"}],"truncated":false}
GistOutput:+88
idx: 0, byte: 97
idx: 1, byte: 32
idx: 2, byte: 228
idx: 3, byte: 184
idx: 4, byte: 150
3369 1573005362393 gist
GistID: dc433bd1d2a427720e5342ead27b2e77
Gist:+3316
{"url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77","forks_url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77/forks","commits_url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77/commits","id":"dc433bd1d2a427720e5342ead27b2e77","node_id":"MDQ6R2lzdGRjNDMzYmQxZDJhNDI3NzIwZTUzNDJlYWQyN2IyZTc3","git_pull_url":"https://gist.github.com/dc433bd1d2a427720e5342ead27b2e77.git","git_push_url":"https://gist.github.com/dc433bd1d2a427720e5342ead27b2e77.git","html_url":"https://gist.github.com/dc433bd1d2a427720e5342ead27b2e77","files":{"range over slice.go":{"filename":"range over slice.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/dc433bd1d2a427720e5342ead27b2e77/raw/43c28680aa3b128b8622b9a8f440dabf1ab5117d/range%20over%20slice.go","size":196,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ta := []int{3, 15, 8}\n\tfor i, el := range a {\n\t\tfmt.Printf(\"idx: %d, element: %d\\n\", i, el)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:42:58Z","updated_at":"2019-11-05T23:42:59Z","description":"Iterate over a slice","comments":0,"user":null,"comments_url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4cbd05c1ef6843ca06ea3fcf2c385b0604ff14ea","committed_at":"2019-11-05T23:42:58Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77/4cbd05c1ef6843ca06ea3fcf2c385b0604ff14ea"}],"truncated":false}
3401 1573005363890 gistoutput
Gist:+3316
{"url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77","forks_url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77/forks","commits_url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77/commits","id":"dc433bd1d2a427720e5342ead27b2e77","node_id":"MDQ6R2lzdGRjNDMzYmQxZDJhNDI3NzIwZTUzNDJlYWQyN2IyZTc3","git_pull_url":"https://gist.github.com/dc433bd1d2a427720e5342ead27b2e77.git","git_push_url":"https://gist.github.com/dc433bd1d2a427720e5342ead27b2e77.git","html_url":"https://gist.github.com/dc433bd1d2a427720e5342ead27b2e77","files":{"range over slice.go":{"filename":"range over slice.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/dc433bd1d2a427720e5342ead27b2e77/raw/43c28680aa3b128b8622b9a8f440dabf1ab5117d/range%20over%20slice.go","size":196,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ta := []int{3, 15, 8}\n\tfor i, el := range a {\n\t\tfmt.Printf(\"idx: %d, element: %d\\n\", i, el)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:42:58Z","updated_at":"2019-11-05T23:42:59Z","description":"Iterate over a slice","comments":0,"user":null,"comments_url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4cbd05c1ef6843ca06ea3fcf2c385b0604ff14ea","committed_at":"2019-11-05T23:42:58Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/dc433bd1d2a427720e5342ead27b2e77/4cbd05c1ef6843ca06ea3fcf2c385b0604ff14ea"}],"truncated":false}
GistOutput:+58
idx: 0, element: 3
idx: 1, element: 15
idx: 2, element: 8
3423 1573005364069 gist
GistID: 757780ebb45be1dc5dec6ed769c4e933
Gist:+3370
{"url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933","forks_url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933/forks","commits_url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933/commits","id":"757780ebb45be1dc5dec6ed769c4e933","node_id":"MDQ6R2lzdDc1Nzc4MGViYjQ1YmUxZGM1ZGVjNmVkNzY5YzRlOTMz","git_pull_url":"https://gist.github.com/757780ebb45be1dc5dec6ed769c4e933.git","git_push_url":"https://gist.github.com/757780ebb45be1dc5dec6ed769c4e933.git","html_url":"https://gist.github.com/757780ebb45be1dc5dec6ed769c4e933","files":{"range over map.go":{"filename":"range over map.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/757780ebb45be1dc5dec6ed769c4e933/raw/8dd4bdec6a282e4c96075d5e4d27c241ecfcec88/range%20over%20map.go","size":235,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tm := map[string]int{\n\t\t\"three\": 3,\n\t\t\"five\":  5,\n\t}\n\tfor key, value := range m {\n\t\tfmt.Printf(\"key: %s, value: %d\\n\", key, value)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:43:50Z","updated_at":"2019-11-05T23:43:50Z","description":"Iterate over a map with range","comments":0,"user":null,"comments_url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"79f9005dbd9eb12d76893c7ec1a272ba60014bda","committed_at":"2019-11-05T23:43:50Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933/79f9005dbd9eb12d76893c7ec1a272ba60014bda"}],"truncated":false}
3438 1573005365533 gistoutput
Gist:+3370
{"url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933","forks_url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933/forks","commits_url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933/commits","id":"757780ebb45be1dc5dec6ed769c4e933","node_id":"MDQ6R2lzdDc1Nzc4MGViYjQ1YmUxZGM1ZGVjNmVkNzY5YzRlOTMz","git_pull_url":"https://gist.github.com/757780ebb45be1dc5dec6ed769c4e933.git","git_push_url":"https://gist.github.com/757780ebb45be1dc5dec6ed769c4e933.git","html_url":"https://gist.github.com/757780ebb45be1dc5dec6ed769c4e933","files":{"range over map.go":{"filename":"range over map.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/757780ebb45be1dc5dec6ed769c4e933/raw/8dd4bdec6a282e4c96075d5e4d27c241ecfcec88/range%20over%20map.go","size":235,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tm := map[string]int{\n\t\t\"three\": 3,\n\t\t\"five\":  5,\n\t}\n\tfor key, value := range m {\n\t\tfmt.Printf(\"key: %s, value: %d\\n\", key, value)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:43:50Z","updated_at":"2019-11-05T23:43:50Z","description":"Iterate over a map with range","comments":0,"user":null,"comments_url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"79f9005dbd9eb12d76893c7ec1a272ba60014bda","committed_at":"2019-11-05T23:43:50Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/757780ebb45be1dc5dec6ed769c4e933/79f9005dbd9eb12d76893c7ec1a272ba60014bda"}],"truncated":false}
GistOutput:+41
key: three, value: 3
key: five, value: 5
3543 1573005365930 gist
GistID: ef044402a5c91d757186df7753fa8649
Gist:+3490
{"url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649","forks_url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649/forks","commits_url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649/commits","id":"ef044402a5c91d757186df7753fa8649","node_id":"MDQ6R2lzdGVmMDQ0NDAyYTVjOTFkNzU3MTg2ZGY3NzUzZmE4NjQ5","git_pull_url":"https://gist.github.com/ef044402a5c91d757186df7753fa8649.git","git_push_url":"https://gist.github.com/ef044402a5c91d757186df7753fa8649.git","html_url":"https://gist.github.com/ef044402a5c91d757186df7753fa8649","files":{"reflection.go":{"filename":"reflection.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ef044402a5c91d757186df7753fa8649/raw/d73508115f78c63d5e955ab2bbd5ab10d2ebbbbd/reflection.go","size":385,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"reflect\"\n)\n\nfunc main() {\n\t// :show start\n\tvar v interface{} = 4\n\tvar reflectVal reflect.Value = reflect.ValueOf(v)\n\n\tvar typ reflect.Type = reflectVal.Type()\n\tfmt.Printf(\"Type '%s' of size: %d bytes\\n\", typ.Name(), typ.Size())\n\tif typ.Kind() == reflect.Int {\n\t\tfmt.Printf(\"v contains value of type int\\n\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:45:17Z","updated_at":"2019-11-05T23:45:17Z","description":"reflection","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"aa9498bad105e11913a9e1abf3ca0680eafd8fdb","committed_at":"2019-11-05T23:45:16Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649/aa9498bad105e11913a9e1abf3ca0680eafd8fdb"}],"truncated":false}
3574 1573005367332 gistoutput
Gist:+3490
{"url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649","forks_url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649/forks","commits_url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649/commits","id":"ef044402a5c91d757186df7753fa8649","node_id":"MDQ6R2lzdGVmMDQ0NDAyYTVjOTFkNzU3MTg2ZGY3NzUzZmE4NjQ5","git_pull_url":"https://gist.github.com/ef044402a5c91d757186df7753fa8649.git","git_push_url":"https://gist.github.com/ef044402a5c91d757186df7753fa8649.git","html_url":"https://gist.github.com/ef044402a5c91d757186df7753fa8649","files":{"reflection.go":{"filename":"reflection.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ef044402a5c91d757186df7753fa8649/raw/d73508115f78c63d5e955ab2bbd5ab10d2ebbbbd/reflection.go","size":385,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"reflect\"\n)\n\nfunc main() {\n\t// :show start\n\tvar v interface{} = 4\n\tvar reflectVal reflect.Value = reflect.ValueOf(v)\n\n\tvar typ reflect.Type = reflectVal.Type()\n\tfmt.Printf(\"Type '%s' of size: %d bytes\\n\", typ.Name(), typ.Size())\n\tif typ.Kind() == reflect.Int {\n\t\tfmt.Printf(\"v contains value of type int\\n\")\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:45:17Z","updated_at":"2019-11-05T23:45:17Z","description":"reflection","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"aa9498bad105e11913a9e1abf3ca0680eafd8fdb","committed_at":"2019-11-05T23:45:16Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/ef044402a5c91d757186df7753fa8649/aa9498bad105e11913a9e1abf3ca0680eafd8fdb"}],"truncated":false}
GistOutput:+57
Type 'int' of size: 8 bytes
v contains value of type int
4048 1573005367694 gist
GistID: 268012d588ff9c1b80fdca03bc5cf0b8
Gist:+3995
{"url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8","forks_url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8/forks","commits_url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8/commits","id":"268012d588ff9c1b80fdca03bc5cf0b8","node_id":"MDQ6R2lzdDI2ODAxMmQ1ODhmZjljMWI4MGZkY2EwM2JjNWNmMGI4","git_pull_url":"https://gist.github.com/268012d588ff9c1b80fdca03bc5cf0b8.git","git_push_url":"https://gist.github.com/268012d588ff9c1b80fdca03bc5cf0b8.git","html_url":"https://gist.github.com/268012d588ff9c1b80fdca03bc5cf0b8","files":{"tempates.go":{"filename":"tempates.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/268012d588ff9c1b80fdca03bc5cf0b8/raw/213a8649ee3ade78428a50b0b542d7c2b32f69dd/tempates.go","size":832,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n\t\"text/template\"\n)\n\n// :show start\nvar tmplStr = `User {{.User}} has {{.TotalTweets}} tweets.\n{{- $tweetCount := len .RecentTweets }}\nRecent tweets:\n{{range $idx, $tweet := .RecentTweets}}Tweet {{$idx}} of {{$tweetCount}}: '{{.}}'\n{{end -}}\nMost recent tweet: '{{index .RecentTweets 0}}'\n`\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tt := template.New(\"tweets\")\n\tt, err := t.Parse(tmplStr)\n\tif err != nil {\n\t\tlog.Fatalf(\"template.Parse() failed with '%s'\\n\", err)\n\t}\n\tdata := struct {\n\t\tUser         string\n\t\tTotalTweets  int\n\t\tRecentTweets []string\n\t}{\n\t\tUser:         \"kjk\",\n\t\tTotalTweets:  124,\n\t\tRecentTweets: []string{\"hello\", \"there\"},\n\t}\n\terr = t.Execute(os.Stdout, data)\n\tif err != nil {\n\t\tlog.Fatalf(\"t.Execute() failed with '%s'\\n\", err)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:46:21Z","updated_at":"2019-11-05T23:46:21Z","description":"Text and HTML templates","comments":0,"user":null,"comments_url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2a6fdbe58643c51d37c48d17b3ca269df51f43ea","committed_at":"2019-11-05T23:46:20Z","change_status":{"total":42,"additions":42,"deletions":0},"url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8/2a6fdbe58643c51d37c48d17b3ca269df51f43ea"}],"truncated":false}
4134 1573005369336 gistoutput
Gist:+3995
{"url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8","forks_url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8/forks","commits_url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8/commits","id":"268012d588ff9c1b80fdca03bc5cf0b8","node_id":"MDQ6R2lzdDI2ODAxMmQ1ODhmZjljMWI4MGZkY2EwM2JjNWNmMGI4","git_pull_url":"https://gist.github.com/268012d588ff9c1b80fdca03bc5cf0b8.git","git_push_url":"https://gist.github.com/268012d588ff9c1b80fdca03bc5cf0b8.git","html_url":"https://gist.github.com/268012d588ff9c1b80fdca03bc5cf0b8","files":{"tempates.go":{"filename":"tempates.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/268012d588ff9c1b80fdca03bc5cf0b8/raw/213a8649ee3ade78428a50b0b542d7c2b32f69dd/tempates.go","size":832,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n\t\"text/template\"\n)\n\n// :show start\nvar tmplStr = `User {{.User}} has {{.TotalTweets}} tweets.\n{{- $tweetCount := len .RecentTweets }}\nRecent tweets:\n{{range $idx, $tweet := .RecentTweets}}Tweet {{$idx}} of {{$tweetCount}}: '{{.}}'\n{{end -}}\nMost recent tweet: '{{index .RecentTweets 0}}'\n`\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tt := template.New(\"tweets\")\n\tt, err := t.Parse(tmplStr)\n\tif err != nil {\n\t\tlog.Fatalf(\"template.Parse() failed with '%s'\\n\", err)\n\t}\n\tdata := struct {\n\t\tUser         string\n\t\tTotalTweets  int\n\t\tRecentTweets []string\n\t}{\n\t\tUser:         \"kjk\",\n\t\tTotalTweets:  124,\n\t\tRecentTweets: []string{\"hello\", \"there\"},\n\t}\n\terr = t.Execute(os.Stdout, data)\n\tif err != nil {\n\t\tlog.Fatalf(\"t.Execute() failed with '%s'\\n\", err)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:46:21Z","updated_at":"2019-11-05T23:46:21Z","description":"Text and HTML templates","comments":0,"user":null,"comments_url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2a6fdbe58643c51d37c48d17b3ca269df51f43ea","committed_at":"2019-11-05T23:46:20Z","change_status":{"total":42,"additions":42,"deletions":0},"url":"https://api.github.com/gists/268012d588ff9c1b80fdca03bc5cf0b8/2a6fdbe58643c51d37c48d17b3ca269df51f43ea"}],"truncated":false}
GistOutput:+111
User kjk has 124 tweets.
Recent tweets:
Tweet 0 of 2: 'hello'
Tweet 1 of 2: 'there'
Most recent tweet: 'hello'
3707 1573005369501 gist
GistID: 9184283766765fd094cabdc53491402a
Gist:+3654
{"url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a","forks_url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a/forks","commits_url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a/commits","id":"9184283766765fd094cabdc53491402a","node_id":"MDQ6R2lzdDkxODQyODM3NjY3NjVmZDA5NGNhYmRjNTM0OTE0MDJh","git_pull_url":"https://gist.github.com/9184283766765fd094cabdc53491402a.git","git_push_url":"https://gist.github.com/9184283766765fd094cabdc53491402a.git","html_url":"https://gist.github.com/9184283766765fd094cabdc53491402a","files":{"tempaltes.go":{"filename":"tempaltes.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9184283766765fd094cabdc53491402a/raw/7aaddd2d1bd55798cf4aa434526787df42386c38/tempaltes.go","size":513,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n\t\"text/template\"\n)\n\nfunc main() {\n\t// :show start\n\ttmplStr := \"Data: {{.}}\\n\"\n\tt := template.Must(template.New(\"simple\").Parse(tmplStr))\n\texecWithData := func(data interface{}) {\n\t\terr := t.Execute(os.Stdout, data)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"t.Execute() failed with '%s'\\n\", err)\n\t\t}\n\t}\n\n\texecWithData(5)\n\texecWithData(\"foo\")\n\tst := struct {\n\t\tNumber int\n\t\tStr    string\n\t}{\n\t\tNumber: 3,\n\t\tStr:    \"hello\",\n\t}\n\texecWithData(st)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:47:38Z","updated_at":"2019-11-05T23:47:38Z","description":"templates","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f4fb59657a91858c8cfc1a6b7e1c97a240caf303","committed_at":"2019-11-05T23:47:37Z","change_status":{"total":32,"additions":32,"deletions":0},"url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a/f4fb59657a91858c8cfc1a6b7e1c97a240caf303"}],"truncated":false}
3715 1573005371249 gistoutput
Gist:+3654
{"url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a","forks_url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a/forks","commits_url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a/commits","id":"9184283766765fd094cabdc53491402a","node_id":"MDQ6R2lzdDkxODQyODM3NjY3NjVmZDA5NGNhYmRjNTM0OTE0MDJh","git_pull_url":"https://gist.github.com/9184283766765fd094cabdc53491402a.git","git_push_url":"https://gist.github.com/9184283766765fd094cabdc53491402a.git","html_url":"https://gist.github.com/9184283766765fd094cabdc53491402a","files":{"tempaltes.go":{"filename":"tempaltes.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9184283766765fd094cabdc53491402a/raw/7aaddd2d1bd55798cf4aa434526787df42386c38/tempaltes.go","size":513,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n\t\"text/template\"\n)\n\nfunc main() {\n\t// :show start\n\ttmplStr := \"Data: {{.}}\\n\"\n\tt := template.Must(template.New(\"simple\").Parse(tmplStr))\n\texecWithData := func(data interface{}) {\n\t\terr := t.Execute(os.Stdout, data)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"t.Execute() failed with '%s'\\n\", err)\n\t\t}\n\t}\n\n\texecWithData(5)\n\texecWithData(\"foo\")\n\tst := struct {\n\t\tNumber int\n\t\tStr    string\n\t}{\n\t\tNumber: 3,\n\t\tStr:    \"hello\",\n\t}\n\texecWithData(st)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-05T23:47:38Z","updated_at":"2019-11-05T23:47:38Z","description":"templates","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f4fb59657a91858c8cfc1a6b7e1c97a240caf303","committed_at":"2019-11-05T23:47:37Z","change_status":{"total":32,"additions":32,"deletions":0},"url":"https://api.github.com/gists/9184283766765fd094cabdc53491402a/f4fb59657a91858c8cfc1a6b7e1c97a240caf303"}],"truncated":false}
GistOutput:+34
Data: 5
Data: foo
Data: {3 hello}
5223 1573005371691 gist
GistID: 26ed4afc610949390fcd2efab4326110
Gist:+5170
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"},"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/833727f0adf98445ac20754a50656213a30033aa/main.go","size":325,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-05T23:49:44Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
5618 1573005372248 gistoutput
Gist:+5170
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"},"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/833727f0adf98445ac20754a50656213a30033aa/main.go","size":325,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-05T23:49:44Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+419
# test
./main.go:6:7: Greeting redeclared in this block
	previous declaration at ./constants basics.go:7:25
./main.go:11:2: years redeclared in this block
	previous declaration at ./constants basics.go:12:15
./main.go:12:2: truth redeclared in this block
	previous declaration at ./constants basics.go:13:15
./main.go:17:6: main redeclared in this block
	previous declaration at ./constants basics.go:18:6
exit status 2
5732 1573006315303 gist
GistID: 26ed4afc610949390fcd2efab4326110
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
5705 1573006662122 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3723 1573006662536 gist
GistID: d36d30471048d802bf7173e48d39989f
Gist:+3670
{"url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f","forks_url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f/forks","commits_url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f/commits","id":"d36d30471048d802bf7173e48d39989f","node_id":"MDQ6R2lzdGQzNmQzMDQ3MTA0OGQ4MDJiZjcxNzNlNDhkMzk5ODlm","git_pull_url":"https://gist.github.com/d36d30471048d802bf7173e48d39989f.git","git_push_url":"https://gist.github.com/d36d30471048d802bf7173e48d39989f.git","html_url":"https://gist.github.com/d36d30471048d802bf7173e48d39989f","files":{"constants.go":{"filename":"constants.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d36d30471048d802bf7173e48d39989f/raw/73119e41104c162eaeb6a0e591ee09708b881b7d/constants.go","size":563,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nconst s string = \"constant\"\n\nfunc main() {\n\tfmt.Println(s) // constant\n\n\t// A `const` statement can appear anywhere a `var` statement can.\n\tconst n = 10\n\tfmt.Println(n)                           // 10\n\tfmt.Printf(\"n=%d is of type %T\\n\", n, n) // n=10 is of type int\n\n\tconst m float64 = 4.3\n\tfmt.Println(m) // 4.3\n\n\t// An untyped constant takes the type needed by its context.\n\t// For example, here `math.Sin` expects a `float64`.\n\tconst x = 10\n\tfmt.Println(math.Sin(x)) // -0.5440211108893699\n}"}},"public":true,"created_at":"2019-11-05T23:50:59Z","updated_at":"2019-11-05T23:50:59Z","description":"constants","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"08ec10fc466c49e535e89980a3b9f77e16a3dc6a","committed_at":"2019-11-05T23:50:58Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f/08ec10fc466c49e535e89980a3b9f77e16a3dc6a"}],"truncated":false}
3753 1573006664036 gistoutput
Gist:+3670
{"url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f","forks_url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f/forks","commits_url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f/commits","id":"d36d30471048d802bf7173e48d39989f","node_id":"MDQ6R2lzdGQzNmQzMDQ3MTA0OGQ4MDJiZjcxNzNlNDhkMzk5ODlm","git_pull_url":"https://gist.github.com/d36d30471048d802bf7173e48d39989f.git","git_push_url":"https://gist.github.com/d36d30471048d802bf7173e48d39989f.git","html_url":"https://gist.github.com/d36d30471048d802bf7173e48d39989f","files":{"constants.go":{"filename":"constants.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d36d30471048d802bf7173e48d39989f/raw/73119e41104c162eaeb6a0e591ee09708b881b7d/constants.go","size":563,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nconst s string = \"constant\"\n\nfunc main() {\n\tfmt.Println(s) // constant\n\n\t// A `const` statement can appear anywhere a `var` statement can.\n\tconst n = 10\n\tfmt.Println(n)                           // 10\n\tfmt.Printf(\"n=%d is of type %T\\n\", n, n) // n=10 is of type int\n\n\tconst m float64 = 4.3\n\tfmt.Println(m) // 4.3\n\n\t// An untyped constant takes the type needed by its context.\n\t// For example, here `math.Sin` expects a `float64`.\n\tconst x = 10\n\tfmt.Println(math.Sin(x)) // -0.5440211108893699\n}"}},"public":true,"created_at":"2019-11-05T23:50:59Z","updated_at":"2019-11-05T23:50:59Z","description":"constants","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"08ec10fc466c49e535e89980a3b9f77e16a3dc6a","committed_at":"2019-11-05T23:50:58Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/d36d30471048d802bf7173e48d39989f/08ec10fc466c49e535e89980a3b9f77e16a3dc6a"}],"truncated":false}
GistOutput:+56
constant
10
n=10 is of type int
4.3
-0.5440211108893699
3923 1573006664424 gist
GistID: 835be5b2055cb49a0d3bc864777d6061
Gist:+3870
{"url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061","forks_url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061/forks","commits_url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061/commits","id":"835be5b2055cb49a0d3bc864777d6061","node_id":"MDQ6R2lzdDgzNWJlNWIyMDU1Y2I0OWEwZDNiYzg2NDc3N2Q2MDYx","git_pull_url":"https://gist.github.com/835be5b2055cb49a0d3bc864777d6061.git","git_push_url":"https://gist.github.com/835be5b2055cb49a0d3bc864777d6061.git","html_url":"https://gist.github.com/835be5b2055cb49a0d3bc864777d6061","files":{"strings basics.go":{"filename":"strings basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/835be5b2055cb49a0d3bc864777d6061/raw/226a38498ebfa7f12859f4559b60c83d7e10a566/strings%20basics.go","size":704,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s string // empty string \"\"\n\ts1 := \"string\\nliteral\\nwith\\tescape characters\"\n\ts2 := `raw string literal\n\twhich doesn't recognize escape characters like \\n\n\t`\n\n\t// you can add strings with +\n\tfmt.Printf(\"sum of string: %s\\n\", s+s1+s2)\n\n\t// you can compare strings with ==\n\tif s1 == s2 {\n\t\tfmt.Printf(\"s1 is equal to s2\\n\")\n\t} else {\n\t\tfmt.Printf(\"s1 is not equal to s2\\n\")\n\t}\n\n\tfmt.Printf(\"substring of s1: %s\\n\", s1[3:5])\n\tfmt.Printf(\"byte (character) at position 3 in s1: %d\\n\", s1[3])\n\n\t// C-style string formatting\n\ts = fmt.Sprintf(\"%d + %f = %s\", 1, float64(3), \"4\")\n\tfmt.Printf(\"s: %s\\n\", s)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:01:24Z","updated_at":"2019-11-06T01:01:24Z","description":"strings basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2f2696a4496fcee56516d2e5337871f166d73b5e","committed_at":"2019-11-06T01:01:23Z","change_status":{"total":31,"additions":31,"deletions":0},"url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061/2f2696a4496fcee56516d2e5337871f166d73b5e"}],"truncated":false}
4126 1573006665825 gistoutput
Gist:+3870
{"url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061","forks_url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061/forks","commits_url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061/commits","id":"835be5b2055cb49a0d3bc864777d6061","node_id":"MDQ6R2lzdDgzNWJlNWIyMDU1Y2I0OWEwZDNiYzg2NDc3N2Q2MDYx","git_pull_url":"https://gist.github.com/835be5b2055cb49a0d3bc864777d6061.git","git_push_url":"https://gist.github.com/835be5b2055cb49a0d3bc864777d6061.git","html_url":"https://gist.github.com/835be5b2055cb49a0d3bc864777d6061","files":{"strings basics.go":{"filename":"strings basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/835be5b2055cb49a0d3bc864777d6061/raw/226a38498ebfa7f12859f4559b60c83d7e10a566/strings%20basics.go","size":704,"truncated":false,"content":"// collection: Essential Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s string // empty string \"\"\n\ts1 := \"string\\nliteral\\nwith\\tescape characters\"\n\ts2 := `raw string literal\n\twhich doesn't recognize escape characters like \\n\n\t`\n\n\t// you can add strings with +\n\tfmt.Printf(\"sum of string: %s\\n\", s+s1+s2)\n\n\t// you can compare strings with ==\n\tif s1 == s2 {\n\t\tfmt.Printf(\"s1 is equal to s2\\n\")\n\t} else {\n\t\tfmt.Printf(\"s1 is not equal to s2\\n\")\n\t}\n\n\tfmt.Printf(\"substring of s1: %s\\n\", s1[3:5])\n\tfmt.Printf(\"byte (character) at position 3 in s1: %d\\n\", s1[3])\n\n\t// C-style string formatting\n\ts = fmt.Sprintf(\"%d + %f = %s\", 1, float64(3), \"4\")\n\tfmt.Printf(\"s: %s\\n\", s)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:01:24Z","updated_at":"2019-11-06T01:01:24Z","description":"strings basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2f2696a4496fcee56516d2e5337871f166d73b5e","committed_at":"2019-11-06T01:01:23Z","change_status":{"total":31,"additions":31,"deletions":0},"url":"https://api.github.com/gists/835be5b2055cb49a0d3bc864777d6061/2f2696a4496fcee56516d2e5337871f166d73b5e"}],"truncated":false}
GistOutput:+228
sum of string: string
literal
with	escape charactersraw string literal
	which doesn't recognize escape characters like \n
	
s1 is not equal to s2
substring of s1: in
byte (character) at position 3 in s1: 105
s: 1 + 3.000000 = 4
3873 1573006666355 gist
GistID: 5579a4213b5a8b72a4e4a2cc29f3d254
Gist:+3820
{"url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254","forks_url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254/forks","commits_url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254/commits","id":"5579a4213b5a8b72a4e4a2cc29f3d254","node_id":"MDQ6R2lzdDU1NzlhNDIxM2I1YThiNzJhNGU0YTJjYzI5ZjNkMjU0","git_pull_url":"https://gist.github.com/5579a4213b5a8b72a4e4a2cc29f3d254.git","git_push_url":"https://gist.github.com/5579a4213b5a8b72a4e4a2cc29f3d254.git","html_url":"https://gist.github.com/5579a4213b5a8b72a4e4a2cc29f3d254","files":{"read from stdio.go":{"filename":"read from stdio.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5579a4213b5a8b72a4e4a2cc29f3d254/raw/8756ce8b9735f70977a78fbf0f71135aaf86b392/read%20from%20stdio.go","size":668,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    // :show start\n    fmt.Print(\"What is your name?\\n\")\n    var name string\n    if n, err := fmt.Scanf(\"%s\", &name); err != nil {\n        fmt.Printf(\"fmt.Scanf failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"fmt.Scanf scanned %d item(s) and set name to '%s'\\n\", n, name)\n    }\n    fmt.Print(\"What is your age?\\n\")\n    var age int\n    if n, err :=  fmt.Scanf(\"%d\", &age); err != nil {\n        fmt.Printf(\"fmt.Scanf failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"fmt.Scanf scanned %d item(s) and set age to '%d'\\n\", n, age)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:02:37Z","updated_at":"2019-11-06T01:02:38Z","description":"read from stdio with fmt.Scanf","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f21abffc021082f1eb7e581e30a128c1231eeece","committed_at":"2019-11-06T01:02:37Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254/f21abffc021082f1eb7e581e30a128c1231eeece"}],"truncated":false}
3940 1573006667837 gistoutput
Gist:+3820
{"url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254","forks_url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254/forks","commits_url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254/commits","id":"5579a4213b5a8b72a4e4a2cc29f3d254","node_id":"MDQ6R2lzdDU1NzlhNDIxM2I1YThiNzJhNGU0YTJjYzI5ZjNkMjU0","git_pull_url":"https://gist.github.com/5579a4213b5a8b72a4e4a2cc29f3d254.git","git_push_url":"https://gist.github.com/5579a4213b5a8b72a4e4a2cc29f3d254.git","html_url":"https://gist.github.com/5579a4213b5a8b72a4e4a2cc29f3d254","files":{"read from stdio.go":{"filename":"read from stdio.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5579a4213b5a8b72a4e4a2cc29f3d254/raw/8756ce8b9735f70977a78fbf0f71135aaf86b392/read%20from%20stdio.go","size":668,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    // :show start\n    fmt.Print(\"What is your name?\\n\")\n    var name string\n    if n, err := fmt.Scanf(\"%s\", &name); err != nil {\n        fmt.Printf(\"fmt.Scanf failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"fmt.Scanf scanned %d item(s) and set name to '%s'\\n\", n, name)\n    }\n    fmt.Print(\"What is your age?\\n\")\n    var age int\n    if n, err :=  fmt.Scanf(\"%d\", &age); err != nil {\n        fmt.Printf(\"fmt.Scanf failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"fmt.Scanf scanned %d item(s) and set age to '%d'\\n\", n, age)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:02:37Z","updated_at":"2019-11-06T01:02:38Z","description":"read from stdio with fmt.Scanf","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f21abffc021082f1eb7e581e30a128c1231eeece","committed_at":"2019-11-06T01:02:37Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/5579a4213b5a8b72a4e4a2cc29f3d254/f21abffc021082f1eb7e581e30a128c1231eeece"}],"truncated":false}
GistOutput:+93
What is your name?
fmt.Scanf failed with 'EOF'
What is your age?
fmt.Scanf failed with 'EOF'
3407 1573006668032 gist
GistID: 285a79ba0ed0a805b16536d11efd7454
Gist:+3354
{"url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454","forks_url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454/forks","commits_url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454/commits","id":"285a79ba0ed0a805b16536d11efd7454","node_id":"MDQ6R2lzdDI4NWE3OWJhMGVkMGE4MDViMTY1MzZkMTFlZmQ3NDU0","git_pull_url":"https://gist.github.com/285a79ba0ed0a805b16536d11efd7454.git","git_push_url":"https://gist.github.com/285a79ba0ed0a805b16536d11efd7454.git","html_url":"https://gist.github.com/285a79ba0ed0a805b16536d11efd7454","files":{"read from stdin.go":{"filename":"read from stdin.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/285a79ba0ed0a805b16536d11efd7454/raw/8fe2f7ebc2fefd94a502b47e6a15f8e31d6b89f8/read%20from%20stdin.go","size":222,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    // :show start\n    var line string\n    fmt.Scanln(&line)\n    fmt.Printf(\"Entered line: '%s'\\n\", line)\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:04:47Z","updated_at":"2019-11-06T01:04:47Z","description":"use fmt.Scanln to read a line from stdin","comments":0,"user":null,"comments_url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"cc6974a6123979756ee5180e9b175605730e3c54","committed_at":"2019-11-06T01:04:46Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454/cc6974a6123979756ee5180e9b175605730e3c54"}],"truncated":false}
3398 1573006669557 gistoutput
Gist:+3354
{"url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454","forks_url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454/forks","commits_url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454/commits","id":"285a79ba0ed0a805b16536d11efd7454","node_id":"MDQ6R2lzdDI4NWE3OWJhMGVkMGE4MDViMTY1MzZkMTFlZmQ3NDU0","git_pull_url":"https://gist.github.com/285a79ba0ed0a805b16536d11efd7454.git","git_push_url":"https://gist.github.com/285a79ba0ed0a805b16536d11efd7454.git","html_url":"https://gist.github.com/285a79ba0ed0a805b16536d11efd7454","files":{"read from stdin.go":{"filename":"read from stdin.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/285a79ba0ed0a805b16536d11efd7454/raw/8fe2f7ebc2fefd94a502b47e6a15f8e31d6b89f8/read%20from%20stdin.go","size":222,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    // :show start\n    var line string\n    fmt.Scanln(&line)\n    fmt.Printf(\"Entered line: '%s'\\n\", line)\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:04:47Z","updated_at":"2019-11-06T01:04:47Z","description":"use fmt.Scanln to read a line from stdin","comments":0,"user":null,"comments_url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"cc6974a6123979756ee5180e9b175605730e3c54","committed_at":"2019-11-06T01:04:46Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/285a79ba0ed0a805b16536d11efd7454/cc6974a6123979756ee5180e9b175605730e3c54"}],"truncated":false}
GistOutput:+17
Entered line: ''
3602 1573006669751 gist
GistID: 0d65a1c55c361c4a74166b623f28dd63
Gist:+3549
{"url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63","forks_url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63/forks","commits_url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63/commits","id":"0d65a1c55c361c4a74166b623f28dd63","node_id":"MDQ6R2lzdDBkNjVhMWM1NWMzNjFjNGE3NDE2NmI2MjNmMjhkZDYz","git_pull_url":"https://gist.github.com/0d65a1c55c361c4a74166b623f28dd63.git","git_push_url":"https://gist.github.com/0d65a1c55c361c4a74166b623f28dd63.git","html_url":"https://gist.github.com/0d65a1c55c361c4a74166b623f28dd63","files":{"read line from stdin.go":{"filename":"read line from stdin.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0d65a1c55c361c4a74166b623f28dd63/raw/d0454be4facfa3ed817d309d484a128849adc7a8/read%20line%20from%20stdin.go","size":384,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    reader := bufio.NewReader(os.Stdin)\n    if line, err := reader.ReadString('\\n'); err != nil {\n        fmt.Printf(\"ReadString failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    \n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:05:48Z","updated_at":"2019-11-06T01:05:48Z","description":"use bufio.Reader to read a line from stdin","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"90df06a1ea77d9944b57c1391c9820be2a9d8770","committed_at":"2019-11-06T01:05:47Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63/90df06a1ea77d9944b57c1391c9820be2a9d8770"}],"truncated":false}
3605 1573006671133 gistoutput
Gist:+3549
{"url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63","forks_url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63/forks","commits_url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63/commits","id":"0d65a1c55c361c4a74166b623f28dd63","node_id":"MDQ6R2lzdDBkNjVhMWM1NWMzNjFjNGE3NDE2NmI2MjNmMjhkZDYz","git_pull_url":"https://gist.github.com/0d65a1c55c361c4a74166b623f28dd63.git","git_push_url":"https://gist.github.com/0d65a1c55c361c4a74166b623f28dd63.git","html_url":"https://gist.github.com/0d65a1c55c361c4a74166b623f28dd63","files":{"read line from stdin.go":{"filename":"read line from stdin.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0d65a1c55c361c4a74166b623f28dd63/raw/d0454be4facfa3ed817d309d484a128849adc7a8/read%20line%20from%20stdin.go","size":384,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    reader := bufio.NewReader(os.Stdin)\n    if line, err := reader.ReadString('\\n'); err != nil {\n        fmt.Printf(\"ReadString failed with '%s'\\n\", err)\n    } else {\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    \n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:05:48Z","updated_at":"2019-11-06T01:05:48Z","description":"use bufio.Reader to read a line from stdin","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"90df06a1ea77d9944b57c1391c9820be2a9d8770","committed_at":"2019-11-06T01:05:47Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/0d65a1c55c361c4a74166b623f28dd63/90df06a1ea77d9944b57c1391c9820be2a9d8770"}],"truncated":false}
GistOutput:+29
ReadString failed with 'EOF'
3425 1573006671308 gist
GistID: 938018c3da000a294f81d8c222cba33f
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
3398 1573006672740 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
4478 1573006673382 gist
GistID: bdf433fe2a19710909938b4e4f883882
Gist:+4425
{"url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882","forks_url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882/forks","commits_url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882/commits","id":"bdf433fe2a19710909938b4e4f883882","node_id":"MDQ6R2lzdGJkZjQzM2ZlMmExOTcxMDkwOTkzOGI0ZTRmODgzODgy","git_pull_url":"https://gist.github.com/bdf433fe2a19710909938b4e4f883882.git","git_push_url":"https://gist.github.com/bdf433fe2a19710909938b4e4f883882.git","html_url":"https://gist.github.com/bdf433fe2a19710909938b4e4f883882","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/bdf433fe2a19710909938b4e4f883882/raw/03d174b9de7cd268b82d2c8dd443701df0707576/main.go","size":1322,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n    \"bytes\"\n    \"fmt\"\n    \"sync\"\n)\n\nvar pool = sync.Pool{\n    // New creates an object when the pool has nothing available to return.\n    // New must return an interface{} to make it flexible. You have to cast\n    // your type after getting it.\n    New: func() interface{} {\n        // Pools often contain things like *bytes.Buffer, which are\n        // temporary and re-usable.\n        return &bytes.Buffer{}\n    },\n}\n\nfunc main() {\n    // When getting from a Pool, you need to cast\n    s := pool.Get().(*bytes.Buffer)\n    // We write to the object\n    s.Write([]byte(\"dirty\"))\n    // Then put it back\n    pool.Put(s)\n\n    // Pools can return dirty results\n\n    // Get 'another' buffer\n    s = pool.Get().(*bytes.Buffer)\n    // Write to it\n    s.Write([]byte(\"append\"))\n    // At this point, if GC ran, this buffer *might* exist already, in\n    // which case it will contain the bytes of the string \"dirtyappend\"\n    fmt.Println(s)\n    // So use pools wisely, and clean up after yourself\n    s.Reset()\n    pool.Put(s)\n\n    // When you clean up, your buffer should be empty\n    s = pool.Get().(*bytes.Buffer)\n    // Defer your Puts to make sure you don't leak!\n    defer pool.Put(s)\n    s.Write([]byte(\"reset!\"))\n    // This prints \"reset!\", and not \"dirtyappendreset!\"\n    fmt.Println(s)\n}"}},"public":true,"created_at":"2019-11-06T01:08:47Z","updated_at":"2019-11-06T01:08:48Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"79b6d500b4aec37fe29be8c42a1e2c7383061623","committed_at":"2019-11-06T01:08:47Z","change_status":{"total":49,"additions":49,"deletions":0},"url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882/79b6d500b4aec37fe29be8c42a1e2c7383061623"}],"truncated":false}
4471 1573006674820 gistoutput
Gist:+4425
{"url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882","forks_url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882/forks","commits_url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882/commits","id":"bdf433fe2a19710909938b4e4f883882","node_id":"MDQ6R2lzdGJkZjQzM2ZlMmExOTcxMDkwOTkzOGI0ZTRmODgzODgy","git_pull_url":"https://gist.github.com/bdf433fe2a19710909938b4e4f883882.git","git_push_url":"https://gist.github.com/bdf433fe2a19710909938b4e4f883882.git","html_url":"https://gist.github.com/bdf433fe2a19710909938b4e4f883882","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/bdf433fe2a19710909938b4e4f883882/raw/03d174b9de7cd268b82d2c8dd443701df0707576/main.go","size":1322,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n    \"bytes\"\n    \"fmt\"\n    \"sync\"\n)\n\nvar pool = sync.Pool{\n    // New creates an object when the pool has nothing available to return.\n    // New must return an interface{} to make it flexible. You have to cast\n    // your type after getting it.\n    New: func() interface{} {\n        // Pools often contain things like *bytes.Buffer, which are\n        // temporary and re-usable.\n        return &bytes.Buffer{}\n    },\n}\n\nfunc main() {\n    // When getting from a Pool, you need to cast\n    s := pool.Get().(*bytes.Buffer)\n    // We write to the object\n    s.Write([]byte(\"dirty\"))\n    // Then put it back\n    pool.Put(s)\n\n    // Pools can return dirty results\n\n    // Get 'another' buffer\n    s = pool.Get().(*bytes.Buffer)\n    // Write to it\n    s.Write([]byte(\"append\"))\n    // At this point, if GC ran, this buffer *might* exist already, in\n    // which case it will contain the bytes of the string \"dirtyappend\"\n    fmt.Println(s)\n    // So use pools wisely, and clean up after yourself\n    s.Reset()\n    pool.Put(s)\n\n    // When you clean up, your buffer should be empty\n    s = pool.Get().(*bytes.Buffer)\n    // Defer your Puts to make sure you don't leak!\n    defer pool.Put(s)\n    s.Write([]byte(\"reset!\"))\n    // This prints \"reset!\", and not \"dirtyappendreset!\"\n    fmt.Println(s)\n}"}},"public":true,"created_at":"2019-11-06T01:08:47Z","updated_at":"2019-11-06T01:08:48Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"79b6d500b4aec37fe29be8c42a1e2c7383061623","committed_at":"2019-11-06T01:08:47Z","change_status":{"total":49,"additions":49,"deletions":0},"url":"https://api.github.com/gists/bdf433fe2a19710909938b4e4f883882/79b6d500b4aec37fe29be8c42a1e2c7383061623"}],"truncated":false}
GistOutput:+19
dirtyappend
reset!
3463 1573006675226 gist
GistID: 3b1a53c71e2ad9a43ad51c385fcd5c14
Gist:+3410
{"url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14","forks_url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14/forks","commits_url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14/commits","id":"3b1a53c71e2ad9a43ad51c385fcd5c14","node_id":"MDQ6R2lzdDNiMWE1M2M3MWUyYWQ5YTQzYWQ1MWMzODVmY2Q1YzE0","git_pull_url":"https://gist.github.com/3b1a53c71e2ad9a43ad51c385fcd5c14.git","git_push_url":"https://gist.github.com/3b1a53c71e2ad9a43ad51c385fcd5c14.git","html_url":"https://gist.github.com/3b1a53c71e2ad9a43ad51c385fcd5c14","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3b1a53c71e2ad9a43ad51c385fcd5c14/raw/4cfec6b67ff6cc326a65b5ddca3770d5776ad8b0/main.go","size":342,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tslice := make([]int, 0, 5)\n\t// append element to end of slice\n\tslice = append(slice, 5)\n\t// append multiple elements to end\n\tslice = append(slice, 3, 4)\n\tfmt.Printf(\"length of slice is: %d\\n\", len(slice))\n\tfmt.Printf(\"capacity of slice is: %d\\n\", cap(slice))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:09:15Z","updated_at":"2019-11-06T01:09:15Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4343d171af73f3b3db23188c81c6cc9104033430","committed_at":"2019-11-06T01:09:14Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14/4343d171af73f3b3db23188c81c6cc9104033430"}],"truncated":false}
3483 1573006676592 gistoutput
Gist:+3410
{"url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14","forks_url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14/forks","commits_url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14/commits","id":"3b1a53c71e2ad9a43ad51c385fcd5c14","node_id":"MDQ6R2lzdDNiMWE1M2M3MWUyYWQ5YTQzYWQ1MWMzODVmY2Q1YzE0","git_pull_url":"https://gist.github.com/3b1a53c71e2ad9a43ad51c385fcd5c14.git","git_push_url":"https://gist.github.com/3b1a53c71e2ad9a43ad51c385fcd5c14.git","html_url":"https://gist.github.com/3b1a53c71e2ad9a43ad51c385fcd5c14","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3b1a53c71e2ad9a43ad51c385fcd5c14/raw/4cfec6b67ff6cc326a65b5ddca3770d5776ad8b0/main.go","size":342,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tslice := make([]int, 0, 5)\n\t// append element to end of slice\n\tslice = append(slice, 5)\n\t// append multiple elements to end\n\tslice = append(slice, 3, 4)\n\tfmt.Printf(\"length of slice is: %d\\n\", len(slice))\n\tfmt.Printf(\"capacity of slice is: %d\\n\", cap(slice))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:09:15Z","updated_at":"2019-11-06T01:09:15Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4343d171af73f3b3db23188c81c6cc9104033430","committed_at":"2019-11-06T01:09:14Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/3b1a53c71e2ad9a43ad51c385fcd5c14/4343d171af73f3b3db23188c81c6cc9104033430"}],"truncated":false}
GistOutput:+46
length of slice is: 3
capacity of slice is: 5
3258 1573006676973 gist
GistID: 4257222a6ccfa6b3d3f03b9c1bb1bfb8
Gist:+3205
{"url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8","forks_url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8/forks","commits_url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8/commits","id":"4257222a6ccfa6b3d3f03b9c1bb1bfb8","node_id":"MDQ6R2lzdDQyNTcyMjJhNmNjZmE2YjNkM2YwM2I5YzFiYjFiZmI4","git_pull_url":"https://gist.github.com/4257222a6ccfa6b3d3f03b9c1bb1bfb8.git","git_push_url":"https://gist.github.com/4257222a6ccfa6b3d3f03b9c1bb1bfb8.git","html_url":"https://gist.github.com/4257222a6ccfa6b3d3f03b9c1bb1bfb8","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/4257222a6ccfa6b3d3f03b9c1bb1bfb8/raw/e1eec2459f18a38bc080551dff187351ccff7ed1/main.go","size":148,"truncated":false,"content":"// :glot, :allow error\npackage main\n\nimport \"log\"\n\nfunc main() {\n\t// :show start\n\tlog.Printf(\"Logging\")\n\tlog.Printf(\"Second line\\n\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:09:52Z","updated_at":"2019-11-06T01:09:53Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"ecb14631ac34097e39896adc0fcc143639c404d4","committed_at":"2019-11-06T01:09:52Z","change_status":{"total":11,"additions":11,"deletions":0},"url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8/ecb14631ac34097e39896adc0fcc143639c404d4"}],"truncated":false}
3292 1573006678364 gistoutput
Gist:+3205
{"url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8","forks_url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8/forks","commits_url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8/commits","id":"4257222a6ccfa6b3d3f03b9c1bb1bfb8","node_id":"MDQ6R2lzdDQyNTcyMjJhNmNjZmE2YjNkM2YwM2I5YzFiYjFiZmI4","git_pull_url":"https://gist.github.com/4257222a6ccfa6b3d3f03b9c1bb1bfb8.git","git_push_url":"https://gist.github.com/4257222a6ccfa6b3d3f03b9c1bb1bfb8.git","html_url":"https://gist.github.com/4257222a6ccfa6b3d3f03b9c1bb1bfb8","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/4257222a6ccfa6b3d3f03b9c1bb1bfb8/raw/e1eec2459f18a38bc080551dff187351ccff7ed1/main.go","size":148,"truncated":false,"content":"// :glot, :allow error\npackage main\n\nimport \"log\"\n\nfunc main() {\n\t// :show start\n\tlog.Printf(\"Logging\")\n\tlog.Printf(\"Second line\\n\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:09:52Z","updated_at":"2019-11-06T01:09:53Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"ecb14631ac34097e39896adc0fcc143639c404d4","committed_at":"2019-11-06T01:09:52Z","change_status":{"total":11,"additions":11,"deletions":0},"url":"https://api.github.com/gists/4257222a6ccfa6b3d3f03b9c1bb1bfb8/ecb14631ac34097e39896adc0fcc143639c404d4"}],"truncated":false}
GistOutput:+60
2019/11/06 02:17:58 Logging
2019/11/06 02:17:58 Second line
3494 1573006678541 gist
GistID: ed234fc34e1a96fe5aa93f8f975f0da2
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
3467 1573006679975 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3398 1573006680136 gist
GistID: 86f6bc6fc2186d2fba22a0f5db9128c1
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
3371 1573006681957 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3317 1573006682447 gist
GistID: 021df9cdced87d8f2f3ff4fdd9779824
Gist:+3264
{"url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824","forks_url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824/forks","commits_url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824/commits","id":"021df9cdced87d8f2f3ff4fdd9779824","node_id":"MDQ6R2lzdDAyMWRmOWNkY2VkODdkOGYyZjNmZjRmZGQ5Nzc5ODI0","git_pull_url":"https://gist.github.com/021df9cdced87d8f2f3ff4fdd9779824.git","git_push_url":"https://gist.github.com/021df9cdced87d8f2f3ff4fdd9779824.git","html_url":"https://gist.github.com/021df9cdced87d8f2f3ff4fdd9779824","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/021df9cdced87d8f2f3ff4fdd9779824/raw/b83c09633f3d81f73941b726b84440cf8f3637ea/main.go","size":194,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ta := 5\n\tb := 6\n\tif a == b {\n\t\tfmt.Print(\"a is equal to b\\n\")\n\t} else {\n\t\tfmt.Print(\"a is not equal to b\\n\")\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:12:39Z","updated_at":"2019-11-06T01:12:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"8758b9883b9e45e6f9a2ebd070b6e2b2e366e33e","committed_at":"2019-11-06T01:12:39Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824/8758b9883b9e45e6f9a2ebd070b6e2b2e366e33e"}],"truncated":false}
3311 1573006683891 gistoutput
Gist:+3264
{"url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824","forks_url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824/forks","commits_url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824/commits","id":"021df9cdced87d8f2f3ff4fdd9779824","node_id":"MDQ6R2lzdDAyMWRmOWNkY2VkODdkOGYyZjNmZjRmZGQ5Nzc5ODI0","git_pull_url":"https://gist.github.com/021df9cdced87d8f2f3ff4fdd9779824.git","git_push_url":"https://gist.github.com/021df9cdced87d8f2f3ff4fdd9779824.git","html_url":"https://gist.github.com/021df9cdced87d8f2f3ff4fdd9779824","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/021df9cdced87d8f2f3ff4fdd9779824/raw/b83c09633f3d81f73941b726b84440cf8f3637ea/main.go","size":194,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ta := 5\n\tb := 6\n\tif a == b {\n\t\tfmt.Print(\"a is equal to b\\n\")\n\t} else {\n\t\tfmt.Print(\"a is not equal to b\\n\")\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:12:39Z","updated_at":"2019-11-06T01:12:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"8758b9883b9e45e6f9a2ebd070b6e2b2e366e33e","committed_at":"2019-11-06T01:12:39Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/021df9cdced87d8f2f3ff4fdd9779824/8758b9883b9e45e6f9a2ebd070b6e2b2e366e33e"}],"truncated":false}
GistOutput:+20
a is not equal to b
3426 1573006684441 gist
GistID: 3a06f43db182d4331a1da637f25a588c
Gist:+3373
{"url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c","forks_url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c/forks","commits_url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c/commits","id":"3a06f43db182d4331a1da637f25a588c","node_id":"MDQ6R2lzdDNhMDZmNDNkYjE4MmQ0MzMxYTFkYTYzN2YyNWE1ODhj","git_pull_url":"https://gist.github.com/3a06f43db182d4331a1da637f25a588c.git","git_push_url":"https://gist.github.com/3a06f43db182d4331a1da637f25a588c.git","html_url":"https://gist.github.com/3a06f43db182d4331a1da637f25a588c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3a06f43db182d4331a1da637f25a588c/raw/a277be135863c013e6c7f57aa55fa72c7d428437/main.go","size":287,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tstmt := \"if\"\n\tswitch stmt {\n\tcase \"if\", \"for\":\n\t\tfmt.Printf(\"stmt ('%s') is either 'if' or 'for'\\n\", stmt)\n\tcase \"else\":\n\t\tfmt.Printf(\"stmt is 'else'\\n\")\n\tdefault:\n\t\tfmt.Printf(\"stmt is '%s'\\n\", stmt)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:13:29Z","updated_at":"2019-11-06T01:13:29Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f3cca4e57cb7283301b8891f704ecf95d8e9b0d6","committed_at":"2019-11-06T01:13:28Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c/f3cca4e57cb7283301b8891f704ecf95d8e9b0d6"}],"truncated":false}
3436 1573006685853 gistoutput
Gist:+3373
{"url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c","forks_url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c/forks","commits_url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c/commits","id":"3a06f43db182d4331a1da637f25a588c","node_id":"MDQ6R2lzdDNhMDZmNDNkYjE4MmQ0MzMxYTFkYTYzN2YyNWE1ODhj","git_pull_url":"https://gist.github.com/3a06f43db182d4331a1da637f25a588c.git","git_push_url":"https://gist.github.com/3a06f43db182d4331a1da637f25a588c.git","html_url":"https://gist.github.com/3a06f43db182d4331a1da637f25a588c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3a06f43db182d4331a1da637f25a588c/raw/a277be135863c013e6c7f57aa55fa72c7d428437/main.go","size":287,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tstmt := \"if\"\n\tswitch stmt {\n\tcase \"if\", \"for\":\n\t\tfmt.Printf(\"stmt ('%s') is either 'if' or 'for'\\n\", stmt)\n\tcase \"else\":\n\t\tfmt.Printf(\"stmt is 'else'\\n\")\n\tdefault:\n\t\tfmt.Printf(\"stmt is '%s'\\n\", stmt)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:13:29Z","updated_at":"2019-11-06T01:13:29Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f3cca4e57cb7283301b8891f704ecf95d8e9b0d6","committed_at":"2019-11-06T01:13:28Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/3a06f43db182d4331a1da637f25a588c/f3cca4e57cb7283301b8891f704ecf95d8e9b0d6"}],"truncated":false}
GistOutput:+36
stmt ('if') is either 'if' or 'for'
4516 1573006686219 gist
GistID: 05dbb9a96658059fb7937ba1164e71e5
Gist:+4463
{"url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5","forks_url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/forks","commits_url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/commits","id":"05dbb9a96658059fb7937ba1164e71e5","node_id":"MDQ6R2lzdDA1ZGJiOWE5NjY1ODA1OWZiNzkzN2JhMTE2NGU3MWU1","git_pull_url":"https://gist.github.com/05dbb9a96658059fb7937ba1164e71e5.git","git_push_url":"https://gist.github.com/05dbb9a96658059fb7937ba1164e71e5.git","html_url":"https://gist.github.com/05dbb9a96658059fb7937ba1164e71e5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/05dbb9a96658059fb7937ba1164e71e5/raw/62222c7ee988e05f2831651cd633aef75a697fa1/main.go","size":288,"truncated":false,"content":"// :run go run main.go -echo echo-arg additional arg\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n)\n\n// :show start\nfunc main() {\n\tfmt.Printf(\"Name of executable: '%s'\\n\", os.Args[0])\n\targs := os.Args[1:]\n\tfor i, arg := range args {\n\t\tfmt.Printf(\"Arg %d, value: '%s'\\n\", i, arg)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:14:11Z","updated_at":"2019-11-06T01:14:30Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"65d4d7fbeaf74f25076b485475ea6a3235b76287","committed_at":"2019-11-06T01:14:30Z","change_status":{"total":1,"additions":0,"deletions":1},"url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/65d4d7fbeaf74f25076b485475ea6a3235b76287"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"8089f59335287f17c222474f69cb5db2722fe6d7","committed_at":"2019-11-06T01:14:10Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/8089f59335287f17c222474f69cb5db2722fe6d7"}],"truncated":false}
4644 1573006687257 gistoutput
Gist:+4463
{"url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5","forks_url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/forks","commits_url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/commits","id":"05dbb9a96658059fb7937ba1164e71e5","node_id":"MDQ6R2lzdDA1ZGJiOWE5NjY1ODA1OWZiNzkzN2JhMTE2NGU3MWU1","git_pull_url":"https://gist.github.com/05dbb9a96658059fb7937ba1164e71e5.git","git_push_url":"https://gist.github.com/05dbb9a96658059fb7937ba1164e71e5.git","html_url":"https://gist.github.com/05dbb9a96658059fb7937ba1164e71e5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/05dbb9a96658059fb7937ba1164e71e5/raw/62222c7ee988e05f2831651cd633aef75a697fa1/main.go","size":288,"truncated":false,"content":"// :run go run main.go -echo echo-arg additional arg\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n)\n\n// :show start\nfunc main() {\n\tfmt.Printf(\"Name of executable: '%s'\\n\", os.Args[0])\n\targs := os.Args[1:]\n\tfor i, arg := range args {\n\t\tfmt.Printf(\"Arg %d, value: '%s'\\n\", i, arg)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:14:11Z","updated_at":"2019-11-06T01:14:30Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"65d4d7fbeaf74f25076b485475ea6a3235b76287","committed_at":"2019-11-06T01:14:30Z","change_status":{"total":1,"additions":0,"deletions":1},"url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/65d4d7fbeaf74f25076b485475ea6a3235b76287"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"8089f59335287f17c222474f69cb5db2722fe6d7","committed_at":"2019-11-06T01:14:10Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/05dbb9a96658059fb7937ba1164e71e5/8089f59335287f17c222474f69cb5db2722fe6d7"}],"truncated":false}
GistOutput:+153
Name of executable: '/tmp/go-build870077205/b001/exe/main'
Arg 0, value: '-echo'
Arg 1, value: 'echo-arg'
Arg 2, value: 'additional'
Arg 3, value: 'arg'
4115 1573006687855 gist
GistID: 8c3713ac5adce674867670ab881fb5ad
Gist:+4062
{"url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad","forks_url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad/forks","commits_url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad/commits","id":"8c3713ac5adce674867670ab881fb5ad","node_id":"MDQ6R2lzdDhjMzcxM2FjNWFkY2U2NzQ4Njc2NzBhYjg4MWZiNWFk","git_pull_url":"https://gist.github.com/8c3713ac5adce674867670ab881fb5ad.git","git_push_url":"https://gist.github.com/8c3713ac5adce674867670ab881fb5ad.git","html_url":"https://gist.github.com/8c3713ac5adce674867670ab881fb5ad","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8c3713ac5adce674867670ab881fb5ad/raw/2aa76e523260e98de4125a6e095d8dbe36c728bd/main.go","size":889,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\t\"text/tabwriter\"\n)\n\n// :show start\nfunc printSerialized(v interface{}, w io.Writer) {\n\td, err := json.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Fprintf(w, \"%T\\t%s\\n\", v, string(d))\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tw := new(tabwriter.Writer)\n\tw.Init(os.Stdout, 5, 0, 1, ' ', 0)\n\tfmt.Fprint(w, \"Go type:\\tJSON value:\\n\")\n\tfmt.Fprint(w, \"\\t\\n\")\n\tprintSerialized(nil, w)\n\tprintSerialized(5, w)\n\tprintSerialized(8.23, w)\n\tprintSerialized(\"john\", w)\n\tai := []int{5, 4, 18}\n\tprintSerialized(ai, w)\n\ta := []interface{}{4, \"string\"}\n\tprintSerialized(a, w)\n\td := map[string]interface{}{\n\t\t\"i\": 5,\n\t\t\"s\": \"foo\",\n\t}\n\tprintSerialized(d, w)\n\ts := struct {\n\t\tName string\n\t\tAge  int\n\t}{\n\t\tName: \"John\",\n\t\tAge:  37,\n\t}\n\tprintSerialized(s, w)\n\tw.Flush()\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:15:31Z","updated_at":"2019-11-06T01:15:31Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5b132301ef84e9c919e7128a1523affadaef0964","committed_at":"2019-11-06T01:15:30Z","change_status":{"total":53,"additions":53,"deletions":0},"url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad/5b132301ef84e9c919e7128a1523affadaef0964"}],"truncated":false}
4507 1573006689370 gistoutput
Gist:+4062
{"url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad","forks_url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad/forks","commits_url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad/commits","id":"8c3713ac5adce674867670ab881fb5ad","node_id":"MDQ6R2lzdDhjMzcxM2FjNWFkY2U2NzQ4Njc2NzBhYjg4MWZiNWFk","git_pull_url":"https://gist.github.com/8c3713ac5adce674867670ab881fb5ad.git","git_push_url":"https://gist.github.com/8c3713ac5adce674867670ab881fb5ad.git","html_url":"https://gist.github.com/8c3713ac5adce674867670ab881fb5ad","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8c3713ac5adce674867670ab881fb5ad/raw/2aa76e523260e98de4125a6e095d8dbe36c728bd/main.go","size":889,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\t\"text/tabwriter\"\n)\n\n// :show start\nfunc printSerialized(v interface{}, w io.Writer) {\n\td, err := json.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Fprintf(w, \"%T\\t%s\\n\", v, string(d))\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tw := new(tabwriter.Writer)\n\tw.Init(os.Stdout, 5, 0, 1, ' ', 0)\n\tfmt.Fprint(w, \"Go type:\\tJSON value:\\n\")\n\tfmt.Fprint(w, \"\\t\\n\")\n\tprintSerialized(nil, w)\n\tprintSerialized(5, w)\n\tprintSerialized(8.23, w)\n\tprintSerialized(\"john\", w)\n\tai := []int{5, 4, 18}\n\tprintSerialized(ai, w)\n\ta := []interface{}{4, \"string\"}\n\tprintSerialized(a, w)\n\td := map[string]interface{}{\n\t\t\"i\": 5,\n\t\t\"s\": \"foo\",\n\t}\n\tprintSerialized(d, w)\n\ts := struct {\n\t\tName string\n\t\tAge  int\n\t}{\n\t\tName: \"John\",\n\t\tAge:  37,\n\t}\n\tprintSerialized(s, w)\n\tw.Flush()\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:15:31Z","updated_at":"2019-11-06T01:15:31Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5b132301ef84e9c919e7128a1523affadaef0964","committed_at":"2019-11-06T01:15:30Z","change_status":{"total":53,"additions":53,"deletions":0},"url":"https://api.github.com/gists/8c3713ac5adce674867670ab881fb5ad/5b132301ef84e9c919e7128a1523affadaef0964"}],"truncated":false}
GistOutput:+417
Go type:                        JSON value:
                                
<nil>                           null
int                             5
float64                         8.23
string                          "john"
[]int                           [5,4,18]
[]interface {}                  [4,"string"]
map[string]interface {}         {"i":5,"s":"foo"}
struct { Name string; Age int } {"Name":"John","Age":37}
4689 1573006689729 gist
GistID: 686e8b7952bf3a78c3dd27fe2b759f36
Gist:+4636
{"url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36","forks_url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36/forks","commits_url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36/commits","id":"686e8b7952bf3a78c3dd27fe2b759f36","node_id":"MDQ6R2lzdDY4NmU4Yjc5NTJiZjNhNzhjM2RkMjdmZTJiNzU5ZjM2","git_pull_url":"https://gist.github.com/686e8b7952bf3a78c3dd27fe2b759f36.git","git_push_url":"https://gist.github.com/686e8b7952bf3a78c3dd27fe2b759f36.git","html_url":"https://gist.github.com/686e8b7952bf3a78c3dd27fe2b759f36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/686e8b7952bf3a78c3dd27fe2b759f36/raw/07af7e8831fe4216b9d2a10127ed964f8e70955c/main.go","size":1423,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n\t\"time\"\n)\n\nfunc notCustom() {\n\t// :show start\n\ttype Event struct {\n\t\tWhat string\n\t\tWhen time.Time\n\t}\n\te := Event{\n\t\tWhat: \"earthquake\",\n\t\tWhen: time.Now(),\n\t}\n\td, err := json.Marshal(&e)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Standard time JSON: %s\\n\", string(d))\n\t// :show end\n}\n\n// :show start\ntype customTime time.Time\n\nconst customTimeFormat = `\"2006-02-01\"`\n\nfunc (ct customTime) MarshalJSON() ([]byte, error) {\n\tt := time.Time(ct)\n\ts := t.Format(customTimeFormat)\n\treturn []byte(s), nil\n}\n\nfunc (ct *customTime) UnmarshalJSON(d []byte) error {\n\tt, err := time.Parse(customTimeFormat, string(d))\n\tif err != nil {\n\t\treturn err\n\t}\n\t*ct = customTime(t)\n\treturn nil\n}\n\ntype Event2 struct {\n\tWhat string\n\tWhen customTime\n}\n\n// :show end\n\nfunc custom() {\n\t// :show start\n\te := Event2{\n\t\tWhat: \"earthquake\",\n\t\tWhen: customTime(time.Now()),\n\t}\n\td, err := json.Marshal(&e)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"\\nCustom time JSON: %s\\n\", string(d))\n\tvar decoded Event2\n\terr = json.Unmarshal(d, &decoded)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Unmarshal failed with '%s'\\n\", err)\n\t}\n\tt := time.Time(decoded.When)\n\tfmt.Printf(\"Decoded custom time: %s\\n\", t.Format(customTimeFormat))\n\t// :show end\n}\n\nfunc main() {\n\t// :show start\n\tnotCustom()\n\tcustom()\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:16:08Z","updated_at":"2019-11-06T01:16:08Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2c43439f98170320cc9b49869fae0a9d855f3399","committed_at":"2019-11-06T01:16:07Z","change_status":{"total":82,"additions":82,"deletions":0},"url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36/2c43439f98170320cc9b49869fae0a9d855f3399"}],"truncated":false}
4841 1573006691286 gistoutput
Gist:+4636
{"url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36","forks_url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36/forks","commits_url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36/commits","id":"686e8b7952bf3a78c3dd27fe2b759f36","node_id":"MDQ6R2lzdDY4NmU4Yjc5NTJiZjNhNzhjM2RkMjdmZTJiNzU5ZjM2","git_pull_url":"https://gist.github.com/686e8b7952bf3a78c3dd27fe2b759f36.git","git_push_url":"https://gist.github.com/686e8b7952bf3a78c3dd27fe2b759f36.git","html_url":"https://gist.github.com/686e8b7952bf3a78c3dd27fe2b759f36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/686e8b7952bf3a78c3dd27fe2b759f36/raw/07af7e8831fe4216b9d2a10127ed964f8e70955c/main.go","size":1423,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n\t\"time\"\n)\n\nfunc notCustom() {\n\t// :show start\n\ttype Event struct {\n\t\tWhat string\n\t\tWhen time.Time\n\t}\n\te := Event{\n\t\tWhat: \"earthquake\",\n\t\tWhen: time.Now(),\n\t}\n\td, err := json.Marshal(&e)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Standard time JSON: %s\\n\", string(d))\n\t// :show end\n}\n\n// :show start\ntype customTime time.Time\n\nconst customTimeFormat = `\"2006-02-01\"`\n\nfunc (ct customTime) MarshalJSON() ([]byte, error) {\n\tt := time.Time(ct)\n\ts := t.Format(customTimeFormat)\n\treturn []byte(s), nil\n}\n\nfunc (ct *customTime) UnmarshalJSON(d []byte) error {\n\tt, err := time.Parse(customTimeFormat, string(d))\n\tif err != nil {\n\t\treturn err\n\t}\n\t*ct = customTime(t)\n\treturn nil\n}\n\ntype Event2 struct {\n\tWhat string\n\tWhen customTime\n}\n\n// :show end\n\nfunc custom() {\n\t// :show start\n\te := Event2{\n\t\tWhat: \"earthquake\",\n\t\tWhen: customTime(time.Now()),\n\t}\n\td, err := json.Marshal(&e)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"\\nCustom time JSON: %s\\n\", string(d))\n\tvar decoded Event2\n\terr = json.Unmarshal(d, &decoded)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Unmarshal failed with '%s'\\n\", err)\n\t}\n\tt := time.Time(decoded.When)\n\tfmt.Printf(\"Decoded custom time: %s\\n\", t.Format(customTimeFormat))\n\t// :show end\n}\n\nfunc main() {\n\t// :show start\n\tnotCustom()\n\tcustom()\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:16:08Z","updated_at":"2019-11-06T01:16:08Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2c43439f98170320cc9b49869fae0a9d855f3399","committed_at":"2019-11-06T01:16:07Z","change_status":{"total":82,"additions":82,"deletions":0},"url":"https://api.github.com/gists/686e8b7952bf3a78c3dd27fe2b759f36/2c43439f98170320cc9b49869fae0a9d855f3399"}],"truncated":false}
GistOutput:+177
Standard time JSON: {"What":"earthquake","When":"2019-11-06T02:18:11.203193337Z"}

Custom time JSON: {"What":"earthquake","When":"2019-06-11"}
Decoded custom time: "2019-06-11"
3801 1573006691485 gist
GistID: 9dc69d886e9faf8db3d8315decb3d075
Gist:+3748
{"url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075","forks_url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075/forks","commits_url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075/commits","id":"9dc69d886e9faf8db3d8315decb3d075","node_id":"MDQ6R2lzdDlkYzY5ZDg4NmU5ZmFmOGRiM2Q4MzE1ZGVjYjNkMDc1","git_pull_url":"https://gist.github.com/9dc69d886e9faf8db3d8315decb3d075.git","git_push_url":"https://gist.github.com/9dc69d886e9faf8db3d8315decb3d075.git","html_url":"https://gist.github.com/9dc69d886e9faf8db3d8315decb3d075","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9dc69d886e9faf8db3d8315decb3d075/raw/0f3e90017b95bceef9f24e89840e616dd05e9884/main.go","size":617,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype MyStruct struct {\n\tuuid string\n\tName string\n}\n\nfunc (m MyStruct) MarshalJSON() ([]byte, error) {\n\tj, err := json.Marshal(struct {\n\t\tUuid string\n\t\tName string\n\t}{\n\t\tUuid: m.uuid,\n\t\tName: m.Name,\n\t})\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn j, nil\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\ts := MyStruct{\n\t\tuuid: \"uid-john\",\n\t\tName: \"John\",\n\t}\n\td, err := json.Marshal(&s)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Person in compact JSON: %s\\n\", string(d))\n\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:16:44Z","updated_at":"2019-11-06T01:16:44Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5f862d9cfe430eba27e03ca47ca355446c893394","committed_at":"2019-11-06T01:16:43Z","change_status":{"total":45,"additions":45,"deletions":0},"url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075/5f862d9cfe430eba27e03ca47ca355446c893394"}],"truncated":false}
3833 1573006693027 gistoutput
Gist:+3748
{"url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075","forks_url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075/forks","commits_url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075/commits","id":"9dc69d886e9faf8db3d8315decb3d075","node_id":"MDQ6R2lzdDlkYzY5ZDg4NmU5ZmFmOGRiM2Q4MzE1ZGVjYjNkMDc1","git_pull_url":"https://gist.github.com/9dc69d886e9faf8db3d8315decb3d075.git","git_push_url":"https://gist.github.com/9dc69d886e9faf8db3d8315decb3d075.git","html_url":"https://gist.github.com/9dc69d886e9faf8db3d8315decb3d075","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9dc69d886e9faf8db3d8315decb3d075/raw/0f3e90017b95bceef9f24e89840e616dd05e9884/main.go","size":617,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\ntype MyStruct struct {\n\tuuid string\n\tName string\n}\n\nfunc (m MyStruct) MarshalJSON() ([]byte, error) {\n\tj, err := json.Marshal(struct {\n\t\tUuid string\n\t\tName string\n\t}{\n\t\tUuid: m.uuid,\n\t\tName: m.Name,\n\t})\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn j, nil\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\ts := MyStruct{\n\t\tuuid: \"uid-john\",\n\t\tName: \"John\",\n\t}\n\td, err := json.Marshal(&s)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.MarshalIndent failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Person in compact JSON: %s\\n\", string(d))\n\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:16:44Z","updated_at":"2019-11-06T01:16:44Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5f862d9cfe430eba27e03ca47ca355446c893394","committed_at":"2019-11-06T01:16:43Z","change_status":{"total":45,"additions":45,"deletions":0},"url":"https://api.github.com/gists/9dc69d886e9faf8db3d8315decb3d075/5f862d9cfe430eba27e03ca47ca355446c893394"}],"truncated":false}
GistOutput:+58
Person in compact JSON: {"Uuid":"uid-john","Name":"John"}
4552 1573006693405 gist
GistID: f7dd274f7df6fe0d6e02305476618bf7
Gist:+4499
{"url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7","forks_url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7/forks","commits_url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7/commits","id":"f7dd274f7df6fe0d6e02305476618bf7","node_id":"MDQ6R2lzdGY3ZGQyNzRmN2RmNmZlMGQ2ZTAyMzA1NDc2NjE4YmY3","git_pull_url":"https://gist.github.com/f7dd274f7df6fe0d6e02305476618bf7.git","git_push_url":"https://gist.github.com/f7dd274f7df6fe0d6e02305476618bf7.git","html_url":"https://gist.github.com/f7dd274f7df6fe0d6e02305476618bf7","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f7dd274f7df6fe0d6e02305476618bf7/raw/3464e2e5649425d2a9d4d81eb15a3f6e131796ce/main.go","size":1252,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n)\n\n// :show start\nvar jsonBlob = []byte(`\n{\n  \"_total\": 1,\n  \"_links\": {\n\t\"self\": \"https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=0\",\n\t\"next\": \"https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=25\"\n  },\n  \"subscriptions\": [\n\t{\n\t  \"created_at\": \"2011-11-23T02:53:17Z\",\n\t  \"_id\": \"abcdef0000000000000000000000000000000000\",\n\t  \"_links\": {\n\t\t\"self\": \"https://api.twitch.tv/kraken/channels/foo/subscriptions/bar\"\n\t  },\n\t  \"user\": {\n\t\t\"display_name\": \"bar\",\n\t\t\"_id\": 123456,\n\t\t\"name\": \"bar\",\n\t\t\"created_at\": \"2011-06-16T18:23:11Z\",\n\t\t\"updated_at\": \"2014-10-23T02:20:51Z\",\n\t\t\"_links\": {\n\t\t  \"self\": \"https://api.twitch.tv/kraken/users/bar\"\n\t\t}\n\t  }\n\t}\n  ]\n}\n`)\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar js struct {\n\t\tTotal int `json:\"_total\"`\n\t\tLinks struct {\n\t\t\tNext string `json:\"next\"`\n\t\t} `json:\"_links\"`\n\t\tSubs []struct {\n\t\t\tCreated string `json:\"created_at\"`\n\t\t\tUser    struct {\n\t\t\t\tName string `json:\"name\"`\n\t\t\t\tID   int    `json:\"_id\"`\n\t\t\t} `json:\"user\"`\n\t\t} `json:\"subscriptions\"`\n\t}\n\n\terr := json.Unmarshal(jsonBlob, &js)\n\tif err != nil {\n\t\tfmt.Println(\"error:\", err)\n\t}\n\tfmt.Printf(\"%+v\", js)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:17:15Z","updated_at":"2019-11-06T01:17:15Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c88dd7eddd1e09a3ca4ada3e7c902c98f98e0706","committed_at":"2019-11-06T01:17:15Z","change_status":{"total":63,"additions":63,"deletions":0},"url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7/c88dd7eddd1e09a3ca4ada3e7c902c98f98e0706"}],"truncated":false}
4703 1573006694937 gistoutput
Gist:+4499
{"url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7","forks_url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7/forks","commits_url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7/commits","id":"f7dd274f7df6fe0d6e02305476618bf7","node_id":"MDQ6R2lzdGY3ZGQyNzRmN2RmNmZlMGQ2ZTAyMzA1NDc2NjE4YmY3","git_pull_url":"https://gist.github.com/f7dd274f7df6fe0d6e02305476618bf7.git","git_push_url":"https://gist.github.com/f7dd274f7df6fe0d6e02305476618bf7.git","html_url":"https://gist.github.com/f7dd274f7df6fe0d6e02305476618bf7","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f7dd274f7df6fe0d6e02305476618bf7/raw/3464e2e5649425d2a9d4d81eb15a3f6e131796ce/main.go","size":1252,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n)\n\n// :show start\nvar jsonBlob = []byte(`\n{\n  \"_total\": 1,\n  \"_links\": {\n\t\"self\": \"https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=0\",\n\t\"next\": \"https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=25\"\n  },\n  \"subscriptions\": [\n\t{\n\t  \"created_at\": \"2011-11-23T02:53:17Z\",\n\t  \"_id\": \"abcdef0000000000000000000000000000000000\",\n\t  \"_links\": {\n\t\t\"self\": \"https://api.twitch.tv/kraken/channels/foo/subscriptions/bar\"\n\t  },\n\t  \"user\": {\n\t\t\"display_name\": \"bar\",\n\t\t\"_id\": 123456,\n\t\t\"name\": \"bar\",\n\t\t\"created_at\": \"2011-06-16T18:23:11Z\",\n\t\t\"updated_at\": \"2014-10-23T02:20:51Z\",\n\t\t\"_links\": {\n\t\t  \"self\": \"https://api.twitch.tv/kraken/users/bar\"\n\t\t}\n\t  }\n\t}\n  ]\n}\n`)\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar js struct {\n\t\tTotal int `json:\"_total\"`\n\t\tLinks struct {\n\t\t\tNext string `json:\"next\"`\n\t\t} `json:\"_links\"`\n\t\tSubs []struct {\n\t\t\tCreated string `json:\"created_at\"`\n\t\t\tUser    struct {\n\t\t\t\tName string `json:\"name\"`\n\t\t\t\tID   int    `json:\"_id\"`\n\t\t\t} `json:\"user\"`\n\t\t} `json:\"subscriptions\"`\n\t}\n\n\terr := json.Unmarshal(jsonBlob, &js)\n\tif err != nil {\n\t\tfmt.Println(\"error:\", err)\n\t}\n\tfmt.Printf(\"%+v\", js)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:17:15Z","updated_at":"2019-11-06T01:17:15Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c88dd7eddd1e09a3ca4ada3e7c902c98f98e0706","committed_at":"2019-11-06T01:17:15Z","change_status":{"total":63,"additions":63,"deletions":0},"url":"https://api.github.com/gists/f7dd274f7df6fe0d6e02305476618bf7/c88dd7eddd1e09a3ca4ada3e7c902c98f98e0706"}],"truncated":false}
GistOutput:+175
{Total:1 Links:{Next:https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=25} Subs:[{Created:2011-11-23T02:53:17Z User:{Name:bar ID:123456}}]}
3705 1573006695335 gist
GistID: d6c8c4a63a57fb264e105b568bbf176d
Gist:+3652
{"url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d","forks_url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d/forks","commits_url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d/commits","id":"d6c8c4a63a57fb264e105b568bbf176d","node_id":"MDQ6R2lzdGQ2YzhjNGE2M2E1N2ZiMjY0ZTEwNWI1NjhiYmYxNzZk","git_pull_url":"https://gist.github.com/d6c8c4a63a57fb264e105b568bbf176d.git","git_push_url":"https://gist.github.com/d6c8c4a63a57fb264e105b568bbf176d.git","html_url":"https://gist.github.com/d6c8c4a63a57fb264e105b568bbf176d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d6c8c4a63a57fb264e105b568bbf176d/raw/4ba832a10d0460c388d97fbdde51e228db52ad12/main.go","size":534,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\nvar jsonStr = `{\n\t\"name\": \"Jane\",\n\t\"age\": 24,\n\t\"city\": \"ny\"\n}`\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar doc map[string]interface{}\n\terr := json.Unmarshal([]byte(jsonStr), &doc)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Unmarshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"doc: %#v\\n\", doc)\n\tname, ok := doc[\"name\"].(string)\n\tif !ok {\n\t\tlog.Fatalf(\"doc has no key 'name' or its value is not string\\n\")\n\t}\n\tfmt.Printf(\"name: %#v\\n\", name)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:17:52Z","updated_at":"2019-11-06T01:17:53Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"486675c46765f3e925d5bbf202e1b76857ed338d","committed_at":"2019-11-06T01:17:51Z","change_status":{"total":32,"additions":32,"deletions":0},"url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d/486675c46765f3e925d5bbf202e1b76857ed338d"}],"truncated":false}
3759 1573006696854 gistoutput
Gist:+3652
{"url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d","forks_url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d/forks","commits_url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d/commits","id":"d6c8c4a63a57fb264e105b568bbf176d","node_id":"MDQ6R2lzdGQ2YzhjNGE2M2E1N2ZiMjY0ZTEwNWI1NjhiYmYxNzZk","git_pull_url":"https://gist.github.com/d6c8c4a63a57fb264e105b568bbf176d.git","git_push_url":"https://gist.github.com/d6c8c4a63a57fb264e105b568bbf176d.git","html_url":"https://gist.github.com/d6c8c4a63a57fb264e105b568bbf176d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d6c8c4a63a57fb264e105b568bbf176d/raw/4ba832a10d0460c388d97fbdde51e228db52ad12/main.go","size":534,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\nvar jsonStr = `{\n\t\"name\": \"Jane\",\n\t\"age\": 24,\n\t\"city\": \"ny\"\n}`\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar doc map[string]interface{}\n\terr := json.Unmarshal([]byte(jsonStr), &doc)\n\tif err != nil {\n\t\tlog.Fatalf(\"json.Unmarshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"doc: %#v\\n\", doc)\n\tname, ok := doc[\"name\"].(string)\n\tif !ok {\n\t\tlog.Fatalf(\"doc has no key 'name' or its value is not string\\n\")\n\t}\n\tfmt.Printf(\"name: %#v\\n\", name)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:17:52Z","updated_at":"2019-11-06T01:17:53Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"486675c46765f3e925d5bbf202e1b76857ed338d","committed_at":"2019-11-06T01:17:51Z","change_status":{"total":32,"additions":32,"deletions":0},"url":"https://api.github.com/gists/d6c8c4a63a57fb264e105b568bbf176d/486675c46765f3e925d5bbf202e1b76857ed338d"}],"truncated":false}
GistOutput:+80
doc: map[string]interface {}{"age":24, "city":"ny", "name":"Jane"}
name: "Jane"
4438 1573006697264 gist
GistID: d2d3c04db6ff36b41cb6be224fe6885f
Gist:+4385
{"url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f","forks_url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f/forks","commits_url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f/commits","id":"d2d3c04db6ff36b41cb6be224fe6885f","node_id":"MDQ6R2lzdGQyZDNjMDRkYjZmZjM2YjQxY2I2YmUyMjRmZTY4ODVm","git_pull_url":"https://gist.github.com/d2d3c04db6ff36b41cb6be224fe6885f.git","git_push_url":"https://gist.github.com/d2d3c04db6ff36b41cb6be224fe6885f.git","html_url":"https://gist.github.com/d2d3c04db6ff36b41cb6be224fe6885f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d2d3c04db6ff36b41cb6be224fe6885f/raw/85dabacdf3072797c3cc2f1b84710f0f21db6ec9/main.go","size":1202,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\n// :show start\ntype Student struct {\n\tName     string\n\tStandard int `json:\"Standard\"`\n}\n\nfunc decodeFromReader(r io.Reader) ([]*Student, error) {\n\tvar res []*Student\n\n\tdec := json.NewDecoder(r)\n\terr := dec.Decode(&res)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn res, nil\n}\n\nfunc decodeFromString(s string) ([]*Student, error) {\n\tr := bytes.NewBufferString(s)\n\treturn decodeFromReader(r)\n}\n\nfunc decodeFromFile(path string) ([]*Student, error) {\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer f.Close()\n\treturn decodeFromReader(f)\n}\n\n// :show end\n\nconst jsonStr = `\n[\n    {\n        \"Name\" : \"John Doe\",\n        \"Standard\" : 4\n    },\n    {\n        \"Name\" : \"Peter Parker\",\n        \"Standard\" : 11\n    },\n    {\n        \"Name\" : \"Bilbo Baggins\",\n        \"Standard\" : 150\n    }\n]\n`\n\nfunc main() {\n\t// studentList, err := decodeFromFile(\"data.json\")\n\tstudentList, err := decodeFromString(jsonStr)\n\tif err != nil {\n\t\tlog.Fatalf(\"decodeFromString() failed with '%s'\\n\", err)\n\t}\n\tfor _, student := range studentList {\n\t\tfmt.Printf(\"Student: %s, standard: %d\\n\", student.Name, student.Standard)\n\t}\n}"}},"public":true,"created_at":"2019-11-06T01:18:22Z","updated_at":"2019-11-06T01:18:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"02c1dc96f3ee40e4782c70e602e5b2548f5c6d9b","committed_at":"2019-11-06T01:18:21Z","change_status":{"total":72,"additions":72,"deletions":0},"url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f/02c1dc96f3ee40e4782c70e602e5b2548f5c6d9b"}],"truncated":false}
4518 1573006698819 gistoutput
Gist:+4385
{"url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f","forks_url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f/forks","commits_url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f/commits","id":"d2d3c04db6ff36b41cb6be224fe6885f","node_id":"MDQ6R2lzdGQyZDNjMDRkYjZmZjM2YjQxY2I2YmUyMjRmZTY4ODVm","git_pull_url":"https://gist.github.com/d2d3c04db6ff36b41cb6be224fe6885f.git","git_push_url":"https://gist.github.com/d2d3c04db6ff36b41cb6be224fe6885f.git","html_url":"https://gist.github.com/d2d3c04db6ff36b41cb6be224fe6885f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d2d3c04db6ff36b41cb6be224fe6885f/raw/85dabacdf3072797c3cc2f1b84710f0f21db6ec9/main.go","size":1202,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\n// :show start\ntype Student struct {\n\tName     string\n\tStandard int `json:\"Standard\"`\n}\n\nfunc decodeFromReader(r io.Reader) ([]*Student, error) {\n\tvar res []*Student\n\n\tdec := json.NewDecoder(r)\n\terr := dec.Decode(&res)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn res, nil\n}\n\nfunc decodeFromString(s string) ([]*Student, error) {\n\tr := bytes.NewBufferString(s)\n\treturn decodeFromReader(r)\n}\n\nfunc decodeFromFile(path string) ([]*Student, error) {\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer f.Close()\n\treturn decodeFromReader(f)\n}\n\n// :show end\n\nconst jsonStr = `\n[\n    {\n        \"Name\" : \"John Doe\",\n        \"Standard\" : 4\n    },\n    {\n        \"Name\" : \"Peter Parker\",\n        \"Standard\" : 11\n    },\n    {\n        \"Name\" : \"Bilbo Baggins\",\n        \"Standard\" : 150\n    }\n]\n`\n\nfunc main() {\n\t// studentList, err := decodeFromFile(\"data.json\")\n\tstudentList, err := decodeFromString(jsonStr)\n\tif err != nil {\n\t\tlog.Fatalf(\"decodeFromString() failed with '%s'\\n\", err)\n\t}\n\tfor _, student := range studentList {\n\t\tfmt.Printf(\"Student: %s, standard: %d\\n\", student.Name, student.Standard)\n\t}\n}"}},"public":true,"created_at":"2019-11-06T01:18:22Z","updated_at":"2019-11-06T01:18:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"02c1dc96f3ee40e4782c70e602e5b2548f5c6d9b","committed_at":"2019-11-06T01:18:21Z","change_status":{"total":72,"additions":72,"deletions":0},"url":"https://api.github.com/gists/d2d3c04db6ff36b41cb6be224fe6885f/02c1dc96f3ee40e4782c70e602e5b2548f5c6d9b"}],"truncated":false}
GistOutput:+105
Student: John Doe, standard: 4
Student: Peter Parker, standard: 11
Student: Bilbo Baggins, standard: 150
3499 1573006699274 gist
GistID: 9f1830214f32bfa45f6bc52d72d24abb
Gist:+3446
{"url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb","forks_url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb/forks","commits_url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb/commits","id":"9f1830214f32bfa45f6bc52d72d24abb","node_id":"MDQ6R2lzdDlmMTgzMDIxNGYzMmJmYTQ1ZjZiYzUyZDcyZDI0YWJi","git_pull_url":"https://gist.github.com/9f1830214f32bfa45f6bc52d72d24abb.git","git_push_url":"https://gist.github.com/9f1830214f32bfa45f6bc52d72d24abb.git","html_url":"https://gist.github.com/9f1830214f32bfa45f6bc52d72d24abb","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9f1830214f32bfa45f6bc52d72d24abb/raw/0441b378a88ff2fbffdd4ba89813d691daa838e0/main.go","size":371,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\nfunc mult(x, y int) {\n\tfmt.Printf(\"%d * %d = %d\\n\", x, y, x*y)\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tgo mult(1, 2) // first execution, non-blocking\n\tgo mult(3, 4) // second execution, also non-blocking\n\t// :show end\n\n\t// that's not how you do it in real code\n\ttime.Sleep(200 * time.Millisecond)\n}"}},"public":true,"created_at":"2019-11-06T01:18:59Z","updated_at":"2019-11-06T01:19:00Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5e4696ec55f631e98832581156909408f0a6cc15","committed_at":"2019-11-06T01:18:59Z","change_status":{"total":24,"additions":24,"deletions":0},"url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb/5e4696ec55f631e98832581156909408f0a6cc15"}],"truncated":false}
3494 1573006700843 gistoutput
Gist:+3446
{"url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb","forks_url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb/forks","commits_url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb/commits","id":"9f1830214f32bfa45f6bc52d72d24abb","node_id":"MDQ6R2lzdDlmMTgzMDIxNGYzMmJmYTQ1ZjZiYzUyZDcyZDI0YWJi","git_pull_url":"https://gist.github.com/9f1830214f32bfa45f6bc52d72d24abb.git","git_push_url":"https://gist.github.com/9f1830214f32bfa45f6bc52d72d24abb.git","html_url":"https://gist.github.com/9f1830214f32bfa45f6bc52d72d24abb","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9f1830214f32bfa45f6bc52d72d24abb/raw/0441b378a88ff2fbffdd4ba89813d691daa838e0/main.go","size":371,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\nfunc mult(x, y int) {\n\tfmt.Printf(\"%d * %d = %d\\n\", x, y, x*y)\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tgo mult(1, 2) // first execution, non-blocking\n\tgo mult(3, 4) // second execution, also non-blocking\n\t// :show end\n\n\t// that's not how you do it in real code\n\ttime.Sleep(200 * time.Millisecond)\n}"}},"public":true,"created_at":"2019-11-06T01:18:59Z","updated_at":"2019-11-06T01:19:00Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5e4696ec55f631e98832581156909408f0a6cc15","committed_at":"2019-11-06T01:18:59Z","change_status":{"total":24,"additions":24,"deletions":0},"url":"https://api.github.com/gists/9f1830214f32bfa45f6bc52d72d24abb/5e4696ec55f631e98832581156909408f0a6cc15"}],"truncated":false}
GistOutput:+21
1 * 2 = 2
3 * 4 = 12
4172 1573006701216 gist
GistID: 7a156c60e212611cc366000fe4938c1e
Gist:+4119
{"url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e","forks_url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e/forks","commits_url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e/commits","id":"7a156c60e212611cc366000fe4938c1e","node_id":"MDQ6R2lzdDdhMTU2YzYwZTIxMjYxMWNjMzY2MDAwZmU0OTM4YzFl","git_pull_url":"https://gist.github.com/7a156c60e212611cc366000fe4938c1e.git","git_push_url":"https://gist.github.com/7a156c60e212611cc366000fe4938c1e.git","html_url":"https://gist.github.com/7a156c60e212611cc366000fe4938c1e","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7a156c60e212611cc366000fe4938c1e/raw/67bb3112378cf093a67ba2e9fb47582ef8bb209c/main.go","size":960,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n)\n\n// :show start\n\nvar (\n\tsemaphoreSize = 4\n\n\tmu                 sync.Mutex\n\ttotalTasks         int\n\tcurConcurrentTasks int\n\tmaxConcurrentTasks int\n)\n\nfunc timeConsumingTask() {\n\tmu.Lock()\n\ttotalTasks++\n\tcurConcurrentTasks++\n\tif curConcurrentTasks > maxConcurrentTasks {\n\t\tmaxConcurrentTasks = curConcurrentTasks\n\t}\n\tmu.Unlock()\n\n\t// in real system this would be a CPU intensive operation\n\ttime.Sleep(10 * time.Millisecond)\n\n\tmu.Lock()\n\tcurConcurrentTasks--\n\tmu.Unlock()\n}\n\nfunc main() {\n\tsem := make(chan struct{}, semaphoreSize)\n\tvar wg sync.WaitGroup\n\tfor i := 0; i < 32; i++ {\n\t\t// acquire semaphore\n\t\tsem <- struct{}{}\n\t\twg.Add(1)\n\n\t\tgo func() {\n\t\t\ttimeConsumingTask()\n\t\t\t// release semaphore\n\t\t\t<-sem\n\t\t\twg.Done()\n\t\t}()\n\t}\n\n\t// wait for all task to finish\n\twg.Wait()\n\n\tfmt.Printf(\"total tasks         : %d\\n\", totalTasks)\n\tfmt.Printf(\"max concurrent tasks: %d\\n\", maxConcurrentTasks)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:20:42Z","updated_at":"2019-11-06T01:20:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6c23b91ee47619809ca388117b5a5ab11f3c21d5","committed_at":"2019-11-06T01:20:42Z","change_status":{"total":61,"additions":61,"deletions":0},"url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e/6c23b91ee47619809ca388117b5a5ab11f3c21d5"}],"truncated":false}
4195 1573006702701 gistoutput
Gist:+4119
{"url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e","forks_url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e/forks","commits_url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e/commits","id":"7a156c60e212611cc366000fe4938c1e","node_id":"MDQ6R2lzdDdhMTU2YzYwZTIxMjYxMWNjMzY2MDAwZmU0OTM4YzFl","git_pull_url":"https://gist.github.com/7a156c60e212611cc366000fe4938c1e.git","git_push_url":"https://gist.github.com/7a156c60e212611cc366000fe4938c1e.git","html_url":"https://gist.github.com/7a156c60e212611cc366000fe4938c1e","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7a156c60e212611cc366000fe4938c1e/raw/67bb3112378cf093a67ba2e9fb47582ef8bb209c/main.go","size":960,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n)\n\n// :show start\n\nvar (\n\tsemaphoreSize = 4\n\n\tmu                 sync.Mutex\n\ttotalTasks         int\n\tcurConcurrentTasks int\n\tmaxConcurrentTasks int\n)\n\nfunc timeConsumingTask() {\n\tmu.Lock()\n\ttotalTasks++\n\tcurConcurrentTasks++\n\tif curConcurrentTasks > maxConcurrentTasks {\n\t\tmaxConcurrentTasks = curConcurrentTasks\n\t}\n\tmu.Unlock()\n\n\t// in real system this would be a CPU intensive operation\n\ttime.Sleep(10 * time.Millisecond)\n\n\tmu.Lock()\n\tcurConcurrentTasks--\n\tmu.Unlock()\n}\n\nfunc main() {\n\tsem := make(chan struct{}, semaphoreSize)\n\tvar wg sync.WaitGroup\n\tfor i := 0; i < 32; i++ {\n\t\t// acquire semaphore\n\t\tsem <- struct{}{}\n\t\twg.Add(1)\n\n\t\tgo func() {\n\t\t\ttimeConsumingTask()\n\t\t\t// release semaphore\n\t\t\t<-sem\n\t\t\twg.Done()\n\t\t}()\n\t}\n\n\t// wait for all task to finish\n\twg.Wait()\n\n\tfmt.Printf(\"total tasks         : %d\\n\", totalTasks)\n\tfmt.Printf(\"max concurrent tasks: %d\\n\", maxConcurrentTasks)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:20:42Z","updated_at":"2019-11-06T01:20:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6c23b91ee47619809ca388117b5a5ab11f3c21d5","committed_at":"2019-11-06T01:20:42Z","change_status":{"total":61,"additions":61,"deletions":0},"url":"https://api.github.com/gists/7a156c60e212611cc366000fe4938c1e/6c23b91ee47619809ca388117b5a5ab11f3c21d5"}],"truncated":false}
GistOutput:+49
total tasks         : 32
max concurrent tasks: 4
3516 1573006703050 gist
GistID: 014c3b0bba31bb1ca239ac5fbc77010e
Gist:+3463
{"url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e","forks_url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e/forks","commits_url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e/commits","id":"014c3b0bba31bb1ca239ac5fbc77010e","node_id":"MDQ6R2lzdDAxNGMzYjBiYmEzMWJiMWNhMjM5YWM1ZmJjNzcwMTBl","git_pull_url":"https://gist.github.com/014c3b0bba31bb1ca239ac5fbc77010e.git","git_push_url":"https://gist.github.com/014c3b0bba31bb1ca239ac5fbc77010e.git","html_url":"https://gist.github.com/014c3b0bba31bb1ca239ac5fbc77010e","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/014c3b0bba31bb1ca239ac5fbc77010e/raw/3b06b254f4abc347598daa8418df27ece7503ffa/main.go","size":376,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\nfunc main() {\n\t// create new channel of type string\n\tch := make(chan string)\n\n\t// start new anonymous goroutine\n\tgo func() {\n\t\ttime.Sleep(time.Second)\n\t\t// send \"Hello World\" to channel\n\t\tch <- \"Hello World\"\n\t}()\n\t// read from channel\n\tmsg, ok := <-ch\n\tfmt.Printf(\"msg='%s', ok='%v'\\n\", msg, ok)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:21:17Z","updated_at":"2019-11-06T01:21:17Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"78b35536b8c693ef33618b730b0b56f01bfa8435","committed_at":"2019-11-06T01:21:16Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e/78b35536b8c693ef33618b730b0b56f01bfa8435"}],"truncated":false}
3519 1573006705418 gistoutput
Gist:+3463
{"url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e","forks_url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e/forks","commits_url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e/commits","id":"014c3b0bba31bb1ca239ac5fbc77010e","node_id":"MDQ6R2lzdDAxNGMzYjBiYmEzMWJiMWNhMjM5YWM1ZmJjNzcwMTBl","git_pull_url":"https://gist.github.com/014c3b0bba31bb1ca239ac5fbc77010e.git","git_push_url":"https://gist.github.com/014c3b0bba31bb1ca239ac5fbc77010e.git","html_url":"https://gist.github.com/014c3b0bba31bb1ca239ac5fbc77010e","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/014c3b0bba31bb1ca239ac5fbc77010e/raw/3b06b254f4abc347598daa8418df27ece7503ffa/main.go","size":376,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\nfunc main() {\n\t// create new channel of type string\n\tch := make(chan string)\n\n\t// start new anonymous goroutine\n\tgo func() {\n\t\ttime.Sleep(time.Second)\n\t\t// send \"Hello World\" to channel\n\t\tch <- \"Hello World\"\n\t}()\n\t// read from channel\n\tmsg, ok := <-ch\n\tfmt.Printf(\"msg='%s', ok='%v'\\n\", msg, ok)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:21:17Z","updated_at":"2019-11-06T01:21:17Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"78b35536b8c693ef33618b730b0b56f01bfa8435","committed_at":"2019-11-06T01:21:16Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/014c3b0bba31bb1ca239ac5fbc77010e/78b35536b8c693ef33618b730b0b56f01bfa8435"}],"truncated":false}
GistOutput:+29
msg='Hello World', ok='true'
3457 1573006705814 gist
GistID: 73bce646ebd886cfd4ec13d9d1482b64
Gist:+3404
{"url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64","forks_url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64/forks","commits_url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64/commits","id":"73bce646ebd886cfd4ec13d9d1482b64","node_id":"MDQ6R2lzdDczYmNlNjQ2ZWJkODg2Y2ZkNGVjMTNkOWQxNDgyYjY0","git_pull_url":"https://gist.github.com/73bce646ebd886cfd4ec13d9d1482b64.git","git_push_url":"https://gist.github.com/73bce646ebd886cfd4ec13d9d1482b64.git","html_url":"https://gist.github.com/73bce646ebd886cfd4ec13d9d1482b64","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/73bce646ebd886cfd4ec13d9d1482b64/raw/bd393d1e89998ef169894bcb0aef86d80d6f38a8/main.go","size":323,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n)\n\n// :show start\nvar wg sync.WaitGroup // 1\n\nfunc routine(i int) {\n\tdefer wg.Done() // 3\n\tfmt.Printf(\"routine %v finished\\n\", i)\n}\n\nfunc main() {\n\twg.Add(10) // 2\n\tfor i := 0; i < 10; i++ {\n\t\tgo routine(i) // *\n\t}\n\twg.Wait() // 4\n\tfmt.Println(\"main finished\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:22:07Z","updated_at":"2019-11-06T01:22:07Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"8489fdf289d8c3ac8ff510f58d48be8e265bcf36","committed_at":"2019-11-06T01:22:06Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64/8489fdf289d8c3ac8ff510f58d48be8e265bcf36"}],"truncated":false}
3636 1573006707127 gistoutput
Gist:+3404
{"url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64","forks_url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64/forks","commits_url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64/commits","id":"73bce646ebd886cfd4ec13d9d1482b64","node_id":"MDQ6R2lzdDczYmNlNjQ2ZWJkODg2Y2ZkNGVjMTNkOWQxNDgyYjY0","git_pull_url":"https://gist.github.com/73bce646ebd886cfd4ec13d9d1482b64.git","git_push_url":"https://gist.github.com/73bce646ebd886cfd4ec13d9d1482b64.git","html_url":"https://gist.github.com/73bce646ebd886cfd4ec13d9d1482b64","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/73bce646ebd886cfd4ec13d9d1482b64/raw/bd393d1e89998ef169894bcb0aef86d80d6f38a8/main.go","size":323,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n)\n\n// :show start\nvar wg sync.WaitGroup // 1\n\nfunc routine(i int) {\n\tdefer wg.Done() // 3\n\tfmt.Printf(\"routine %v finished\\n\", i)\n}\n\nfunc main() {\n\twg.Add(10) // 2\n\tfor i := 0; i < 10; i++ {\n\t\tgo routine(i) // *\n\t}\n\twg.Wait() // 4\n\tfmt.Println(\"main finished\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:22:07Z","updated_at":"2019-11-06T01:22:07Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"8489fdf289d8c3ac8ff510f58d48be8e265bcf36","committed_at":"2019-11-06T01:22:06Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/73bce646ebd886cfd4ec13d9d1482b64/8489fdf289d8c3ac8ff510f58d48be8e265bcf36"}],"truncated":false}
GistOutput:+204
routine 3 finished
routine 9 finished
routine 0 finished
routine 4 finished
routine 5 finished
routine 6 finished
routine 7 finished
routine 8 finished
routine 1 finished
routine 2 finished
main finished
3871 1573006707456 gist
GistID: 08711992585c137e36db943ccee6ac36
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
3844 1573006708022 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
4335 1573006708229 gist
GistID: 8ad73e5d3b4bdfc3aae03bbefd766b35
Gist:+4282
{"url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35","forks_url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35/forks","commits_url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35/commits","id":"8ad73e5d3b4bdfc3aae03bbefd766b35","node_id":"MDQ6R2lzdDhhZDczZTVkM2I0YmRmYzNhYWUwM2JiZWZkNzY2YjM1","git_pull_url":"https://gist.github.com/8ad73e5d3b4bdfc3aae03bbefd766b35.git","git_push_url":"https://gist.github.com/8ad73e5d3b4bdfc3aae03bbefd766b35.git","html_url":"https://gist.github.com/8ad73e5d3b4bdfc3aae03bbefd766b35","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8ad73e5d3b4bdfc3aae03bbefd766b35/raw/c309d2a5c716e578cf7c1bd8c6ffa10ce8c27e64/main.go","size":1171,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\nfunc main() {\n\t// :show start\n\ti := 1\n\tfmt.Println(\"initial:\", i)\n\n\tzeroval(i)\n\tfmt.Println(\"zeroval:\", i)\n\t// `i` is still equal to 1 because `zeroval` edited\n\t// a \"copy\" of `i`, not the original.\n\n\t// The `&i` syntax gives the memory address of `i`,\n\t// i.e. a pointer to `i`. When calling `zeroptr`,\n\t// it will edit the \"original\" `i`.\n\tzeroptr(&i)\n\tfmt.Println(\"zeroptr:\", i)\n\n\t// Pointers can be printed too.\n\tfmt.Println(\"pointer:\", &i)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:22:59Z","updated_at":"2019-11-06T01:23:00Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"0ee3c82666f52a9faed84db2f0da73df74b03714","committed_at":"2019-11-06T01:22:59Z","change_status":{"total":44,"additions":44,"deletions":0},"url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35/0ee3c82666f52a9faed84db2f0da73df74b03714"}],"truncated":false}
4364 1573006709635 gistoutput
Gist:+4282
{"url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35","forks_url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35/forks","commits_url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35/commits","id":"8ad73e5d3b4bdfc3aae03bbefd766b35","node_id":"MDQ6R2lzdDhhZDczZTVkM2I0YmRmYzNhYWUwM2JiZWZkNzY2YjM1","git_pull_url":"https://gist.github.com/8ad73e5d3b4bdfc3aae03bbefd766b35.git","git_push_url":"https://gist.github.com/8ad73e5d3b4bdfc3aae03bbefd766b35.git","html_url":"https://gist.github.com/8ad73e5d3b4bdfc3aae03bbefd766b35","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8ad73e5d3b4bdfc3aae03bbefd766b35/raw/c309d2a5c716e578cf7c1bd8c6ffa10ce8c27e64/main.go","size":1171,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\nfunc main() {\n\t// :show start\n\ti := 1\n\tfmt.Println(\"initial:\", i)\n\n\tzeroval(i)\n\tfmt.Println(\"zeroval:\", i)\n\t// `i` is still equal to 1 because `zeroval` edited\n\t// a \"copy\" of `i`, not the original.\n\n\t// The `&i` syntax gives the memory address of `i`,\n\t// i.e. a pointer to `i`. When calling `zeroptr`,\n\t// it will edit the \"original\" `i`.\n\tzeroptr(&i)\n\tfmt.Println(\"zeroptr:\", i)\n\n\t// Pointers can be printed too.\n\tfmt.Println(\"pointer:\", &i)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:22:59Z","updated_at":"2019-11-06T01:23:00Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"0ee3c82666f52a9faed84db2f0da73df74b03714","committed_at":"2019-11-06T01:22:59Z","change_status":{"total":44,"additions":44,"deletions":0},"url":"https://api.github.com/gists/8ad73e5d3b4bdfc3aae03bbefd766b35/0ee3c82666f52a9faed84db2f0da73df74b03714"}],"truncated":false}
GistOutput:+55
initial: 1
zeroval: 1
zeroptr: 0
pointer: 0xc00007e000
3625 1573006709985 gist
GistID: 92f412d59fdd2a855d1161f4c33f5c40
Gist:+3572
{"url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40","forks_url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40/forks","commits_url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40/commits","id":"92f412d59fdd2a855d1161f4c33f5c40","node_id":"MDQ6R2lzdDkyZjQxMmQ1OWZkZDJhODU1ZDExNjFmNGMzM2Y1YzQw","git_pull_url":"https://gist.github.com/92f412d59fdd2a855d1161f4c33f5c40.git","git_push_url":"https://gist.github.com/92f412d59fdd2a855d1161f4c33f5c40.git","html_url":"https://gist.github.com/92f412d59fdd2a855d1161f4c33f5c40","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/92f412d59fdd2a855d1161f4c33f5c40/raw/92f2c8acde6e1d89ee079f214e0b862e48ecee76/main.go","size":490,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Person struct {\n\tName string\n}\n\nfunc main() {\n\tc := new(Person) // returns pointer\n\tc.Name = \"Catherine\"\n\tfmt.Println(c.Name) // prints: Catherine\n\td := c\n\td.Name = \"Daniel\"\n\tfmt.Println(c.Name) // prints: Daniel\n\t// Adding an Asterix before a pointer dereferences the pointer\n\ti := *d\n\ti.Name = \"Ines\"\n\tfmt.Println(c.Name) // prints: Daniel\n\tfmt.Println(d.Name) // prints: Daniel\n\tfmt.Println(i.Name) // prints: Ines\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:24:40Z","updated_at":"2019-11-06T01:24:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"803171d7d7978f86bf64a93e939ac38b9d9f44cf","committed_at":"2019-11-06T01:24:39Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40/803171d7d7978f86bf64a93e939ac38b9d9f44cf"}],"truncated":false}
3635 1573006711368 gistoutput
Gist:+3572
{"url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40","forks_url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40/forks","commits_url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40/commits","id":"92f412d59fdd2a855d1161f4c33f5c40","node_id":"MDQ6R2lzdDkyZjQxMmQ1OWZkZDJhODU1ZDExNjFmNGMzM2Y1YzQw","git_pull_url":"https://gist.github.com/92f412d59fdd2a855d1161f4c33f5c40.git","git_push_url":"https://gist.github.com/92f412d59fdd2a855d1161f4c33f5c40.git","html_url":"https://gist.github.com/92f412d59fdd2a855d1161f4c33f5c40","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/92f412d59fdd2a855d1161f4c33f5c40/raw/92f2c8acde6e1d89ee079f214e0b862e48ecee76/main.go","size":490,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Person struct {\n\tName string\n}\n\nfunc main() {\n\tc := new(Person) // returns pointer\n\tc.Name = \"Catherine\"\n\tfmt.Println(c.Name) // prints: Catherine\n\td := c\n\td.Name = \"Daniel\"\n\tfmt.Println(c.Name) // prints: Daniel\n\t// Adding an Asterix before a pointer dereferences the pointer\n\ti := *d\n\ti.Name = \"Ines\"\n\tfmt.Println(c.Name) // prints: Daniel\n\tfmt.Println(d.Name) // prints: Daniel\n\tfmt.Println(i.Name) // prints: Ines\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:24:40Z","updated_at":"2019-11-06T01:24:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"803171d7d7978f86bf64a93e939ac38b9d9f44cf","committed_at":"2019-11-06T01:24:39Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/92f412d59fdd2a855d1161f4c33f5c40/803171d7d7978f86bf64a93e939ac38b9d9f44cf"}],"truncated":false}
GistOutput:+36
Catherine
Daniel
Daniel
Daniel
Ines
3672 1573006711746 gist
GistID: 1da06f458ae88e108d654b3a89aeedb3
Gist:+3619
{"url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3","forks_url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3/forks","commits_url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3/commits","id":"1da06f458ae88e108d654b3a89aeedb3","node_id":"MDQ6R2lzdDFkYTA2ZjQ1OGFlODhlMTA4ZDY1NGIzYTg5YWVlZGIz","git_pull_url":"https://gist.github.com/1da06f458ae88e108d654b3a89aeedb3.git","git_push_url":"https://gist.github.com/1da06f458ae88e108d654b3a89aeedb3.git","html_url":"https://gist.github.com/1da06f458ae88e108d654b3a89aeedb3","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1da06f458ae88e108d654b3a89aeedb3/raw/f2cb19a46523a7c0e477e416bc097f46ad6f39ad/main.go","size":526,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Foo struct {\n\tBar int\n}\n\nfunc (f *Foo) Increment() {\n\tf.Bar++\n}\n\nfunc main() {\n\tvar f Foo\n\n\t// Calling `f.Increment` is automatically changed to `(&f).Increment` by the compiler.\n\tf = Foo{}\n\tfmt.Printf(\"f.Bar is %d\\n\", f.Bar)\n\tf.Increment()\n\tfmt.Printf(\"f.Bar is %d\\n\", f.Bar)\n\n\t// As you can see, calling `(&f).Increment` directly does the same thing.\n\tf = Foo{}\n\tfmt.Printf(\"f.Bar is %d\\n\", f.Bar)\n\t(&f).Increment()\n\tfmt.Printf(\"f.Bar is %d\\n\", f.Bar)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:25:10Z","updated_at":"2019-11-06T01:25:10Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4bd998772a52f1630d2a46c5f8cc281ab2a7b5d0","committed_at":"2019-11-06T01:25:09Z","change_status":{"total":31,"additions":31,"deletions":0},"url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3/4bd998772a52f1630d2a46c5f8cc281ab2a7b5d0"}],"truncated":false}
3690 1573006713064 gistoutput
Gist:+3619
{"url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3","forks_url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3/forks","commits_url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3/commits","id":"1da06f458ae88e108d654b3a89aeedb3","node_id":"MDQ6R2lzdDFkYTA2ZjQ1OGFlODhlMTA4ZDY1NGIzYTg5YWVlZGIz","git_pull_url":"https://gist.github.com/1da06f458ae88e108d654b3a89aeedb3.git","git_push_url":"https://gist.github.com/1da06f458ae88e108d654b3a89aeedb3.git","html_url":"https://gist.github.com/1da06f458ae88e108d654b3a89aeedb3","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1da06f458ae88e108d654b3a89aeedb3/raw/f2cb19a46523a7c0e477e416bc097f46ad6f39ad/main.go","size":526,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Foo struct {\n\tBar int\n}\n\nfunc (f *Foo) Increment() {\n\tf.Bar++\n}\n\nfunc main() {\n\tvar f Foo\n\n\t// Calling `f.Increment` is automatically changed to `(&f).Increment` by the compiler.\n\tf = Foo{}\n\tfmt.Printf(\"f.Bar is %d\\n\", f.Bar)\n\tf.Increment()\n\tfmt.Printf(\"f.Bar is %d\\n\", f.Bar)\n\n\t// As you can see, calling `(&f).Increment` directly does the same thing.\n\tf = Foo{}\n\tfmt.Printf(\"f.Bar is %d\\n\", f.Bar)\n\t(&f).Increment()\n\tfmt.Printf(\"f.Bar is %d\\n\", f.Bar)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:25:10Z","updated_at":"2019-11-06T01:25:10Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4bd998772a52f1630d2a46c5f8cc281ab2a7b5d0","committed_at":"2019-11-06T01:25:09Z","change_status":{"total":31,"additions":31,"deletions":0},"url":"https://api.github.com/gists/1da06f458ae88e108d654b3a89aeedb3/4bd998772a52f1630d2a46c5f8cc281ab2a7b5d0"}],"truncated":false}
GistOutput:+44
f.Bar is 0
f.Bar is 1
f.Bar is 0
f.Bar is 1
3812 1573006713228 gist
GistID: ac2ff33cb0d9d006ee9aacdf2f5b537d
Gist:+3759
{"url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d","forks_url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d/forks","commits_url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d/commits","id":"ac2ff33cb0d9d006ee9aacdf2f5b537d","node_id":"MDQ6R2lzdGFjMmZmMzNjYjBkOWQwMDZlZTlhYWNkZjJmNWI1Mzdk","git_pull_url":"https://gist.github.com/ac2ff33cb0d9d006ee9aacdf2f5b537d.git","git_push_url":"https://gist.github.com/ac2ff33cb0d9d006ee9aacdf2f5b537d.git","html_url":"https://gist.github.com/ac2ff33cb0d9d006ee9aacdf2f5b537d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ac2ff33cb0d9d006ee9aacdf2f5b537d/raw/2067d1175965c205d3249991d52fc161a6d95859/main.go","size":664,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Foo struct {\n\tBar int\n}\n\nfunc (f Foo) Increment() {\n\tf.Bar++\n}\n\nfunc main() {\n\tvar p *Foo\n\n\t// Calling `p.Increment` is automatically changed to `(*p).Increment` by the compiler.\n\t// (Note that `*p` is going to remain at 0 because a copy of `*p`, and not the original `*p` are being edited)\n\tp = &Foo{}\n\tfmt.Printf(\"(*p).Bar is %d\\n\", (*p).Bar)\n\tp.Increment()\n\tfmt.Printf(\"(*p).Bar is %d\\n\", (*p).Bar)\n\n\t// As you can see, calling `(*p).Increment` directly does the same thing.\n\tp = &Foo{}\n\tfmt.Printf(\"(*p).Bar is %d\\n\", (*p).Bar)\n\t(*p).Increment()\n\tfmt.Printf(\"(*p).Bar is %d\\n\", (*p).Bar)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:25:35Z","updated_at":"2019-11-06T01:25:36Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"1af0519bb995399cdb788502dde2d74f43c2ce46","committed_at":"2019-11-06T01:25:35Z","change_status":{"total":32,"additions":32,"deletions":0},"url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d/1af0519bb995399cdb788502dde2d74f43c2ce46"}],"truncated":false}
3842 1573006714631 gistoutput
Gist:+3759
{"url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d","forks_url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d/forks","commits_url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d/commits","id":"ac2ff33cb0d9d006ee9aacdf2f5b537d","node_id":"MDQ6R2lzdGFjMmZmMzNjYjBkOWQwMDZlZTlhYWNkZjJmNWI1Mzdk","git_pull_url":"https://gist.github.com/ac2ff33cb0d9d006ee9aacdf2f5b537d.git","git_push_url":"https://gist.github.com/ac2ff33cb0d9d006ee9aacdf2f5b537d.git","html_url":"https://gist.github.com/ac2ff33cb0d9d006ee9aacdf2f5b537d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ac2ff33cb0d9d006ee9aacdf2f5b537d/raw/2067d1175965c205d3249991d52fc161a6d95859/main.go","size":664,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\ntype Foo struct {\n\tBar int\n}\n\nfunc (f Foo) Increment() {\n\tf.Bar++\n}\n\nfunc main() {\n\tvar p *Foo\n\n\t// Calling `p.Increment` is automatically changed to `(*p).Increment` by the compiler.\n\t// (Note that `*p` is going to remain at 0 because a copy of `*p`, and not the original `*p` are being edited)\n\tp = &Foo{}\n\tfmt.Printf(\"(*p).Bar is %d\\n\", (*p).Bar)\n\tp.Increment()\n\tfmt.Printf(\"(*p).Bar is %d\\n\", (*p).Bar)\n\n\t// As you can see, calling `(*p).Increment` directly does the same thing.\n\tp = &Foo{}\n\tfmt.Printf(\"(*p).Bar is %d\\n\", (*p).Bar)\n\t(*p).Increment()\n\tfmt.Printf(\"(*p).Bar is %d\\n\", (*p).Bar)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:25:35Z","updated_at":"2019-11-06T01:25:36Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"1af0519bb995399cdb788502dde2d74f43c2ce46","committed_at":"2019-11-06T01:25:35Z","change_status":{"total":32,"additions":32,"deletions":0},"url":"https://api.github.com/gists/ac2ff33cb0d9d006ee9aacdf2f5b537d/1af0519bb995399cdb788502dde2d74f43c2ce46"}],"truncated":false}
GistOutput:+56
(*p).Bar is 0
(*p).Bar is 0
(*p).Bar is 0
(*p).Bar is 0
3424 1573006715023 gist
GistID: 80abac053ba1f668811e32685d84882a
Gist:+3371
{"url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a","forks_url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a/forks","commits_url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a/commits","id":"80abac053ba1f668811e32685d84882a","node_id":"MDQ6R2lzdDgwYWJhYzA1M2JhMWY2Njg4MTFlMzI2ODVkODQ4ODJh","git_pull_url":"https://gist.github.com/80abac053ba1f668811e32685d84882a.git","git_push_url":"https://gist.github.com/80abac053ba1f668811e32685d84882a.git","html_url":"https://gist.github.com/80abac053ba1f668811e32685d84882a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/80abac053ba1f668811e32685d84882a/raw/2f6fcaf2ae9714e1d39fed1f43bb1fa7d8c09d87/main.go","size":304,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc logExit(name string) {\n\tfmt.Printf(\"Function %s returned\\n\", name)\n}\n\nfunc main() {\n\tfmt.Println(\"First main statement\")\n\tdefer logExit(\"main\") // position of defer statement here does not matter\n\tfmt.Println(\"Last main statement\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:26:02Z","updated_at":"2019-11-06T01:26:02Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18d6fec9016e2704bc5b1088777c0d3475ae7a91","committed_at":"2019-11-06T01:26:01Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a/18d6fec9016e2704bc5b1088777c0d3475ae7a91"}],"truncated":false}
3462 1573006716390 gistoutput
Gist:+3371
{"url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a","forks_url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a/forks","commits_url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a/commits","id":"80abac053ba1f668811e32685d84882a","node_id":"MDQ6R2lzdDgwYWJhYzA1M2JhMWY2Njg4MTFlMzI2ODVkODQ4ODJh","git_pull_url":"https://gist.github.com/80abac053ba1f668811e32685d84882a.git","git_push_url":"https://gist.github.com/80abac053ba1f668811e32685d84882a.git","html_url":"https://gist.github.com/80abac053ba1f668811e32685d84882a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/80abac053ba1f668811e32685d84882a/raw/2f6fcaf2ae9714e1d39fed1f43bb1fa7d8c09d87/main.go","size":304,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc logExit(name string) {\n\tfmt.Printf(\"Function %s returned\\n\", name)\n}\n\nfunc main() {\n\tfmt.Println(\"First main statement\")\n\tdefer logExit(\"main\") // position of defer statement here does not matter\n\tfmt.Println(\"Last main statement\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:26:02Z","updated_at":"2019-11-06T01:26:02Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18d6fec9016e2704bc5b1088777c0d3475ae7a91","committed_at":"2019-11-06T01:26:01Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/80abac053ba1f668811e32685d84882a/18d6fec9016e2704bc5b1088777c0d3475ae7a91"}],"truncated":false}
GistOutput:+64
First main statement
Last main statement
Function main returned
3525 1573006716559 gist
GistID: 229ee9bd2ba470d486599317fec212ff
Gist:+3472
{"url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff","forks_url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff/forks","commits_url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff/commits","id":"229ee9bd2ba470d486599317fec212ff","node_id":"MDQ6R2lzdDIyOWVlOWJkMmJhNDcwZDQ4NjU5OTMxN2ZlYzIxMmZm","git_pull_url":"https://gist.github.com/229ee9bd2ba470d486599317fec212ff.git","git_push_url":"https://gist.github.com/229ee9bd2ba470d486599317fec212ff.git","html_url":"https://gist.github.com/229ee9bd2ba470d486599317fec212ff","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/229ee9bd2ba470d486599317fec212ff/raw/aee97cc243e8ee696e1ca09ab64643223eb69601/main.go","size":392,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc logNum(i int) {\n\tfmt.Printf(\"Num %d\\n\", i)\n}\n\nfunc main() {\n\tdefer logNum(1)\n\tfmt.Println(\"First main statement\")\n\tdefer logNum(2)\n\tdefer logNum(3)\n\tpanic(\"panic occurred\")\n\n\tfmt.Println(\"Last main statement\") // not printed\n\n\t// not deferred since execution flow never reaches this line\n\tdefer logNum(4)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:26:31Z","updated_at":"2019-11-06T01:26:31Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"d2c2deed8c161d93fd36022edffb93bae3b41611","committed_at":"2019-11-06T01:26:30Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff/d2c2deed8c161d93fd36022edffb93bae3b41611"}],"truncated":false}
3648 1573006717956 gistoutput
Gist:+3472
{"url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff","forks_url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff/forks","commits_url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff/commits","id":"229ee9bd2ba470d486599317fec212ff","node_id":"MDQ6R2lzdDIyOWVlOWJkMmJhNDcwZDQ4NjU5OTMxN2ZlYzIxMmZm","git_pull_url":"https://gist.github.com/229ee9bd2ba470d486599317fec212ff.git","git_push_url":"https://gist.github.com/229ee9bd2ba470d486599317fec212ff.git","html_url":"https://gist.github.com/229ee9bd2ba470d486599317fec212ff","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/229ee9bd2ba470d486599317fec212ff/raw/aee97cc243e8ee696e1ca09ab64643223eb69601/main.go","size":392,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc logNum(i int) {\n\tfmt.Printf(\"Num %d\\n\", i)\n}\n\nfunc main() {\n\tdefer logNum(1)\n\tfmt.Println(\"First main statement\")\n\tdefer logNum(2)\n\tdefer logNum(3)\n\tpanic(\"panic occurred\")\n\n\tfmt.Println(\"Last main statement\") // not printed\n\n\t// not deferred since execution flow never reaches this line\n\tdefer logNum(4)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:26:31Z","updated_at":"2019-11-06T01:26:31Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"d2c2deed8c161d93fd36022edffb93bae3b41611","committed_at":"2019-11-06T01:26:30Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/229ee9bd2ba470d486599317fec212ff/d2c2deed8c161d93fd36022edffb93bae3b41611"}],"truncated":false}
GistOutput:+147
First main statement
Num 3
Num 2
Num 1
panic: panic occurred

goroutine 1 [running]:
main.main()
	/tmp/src963563549/main.go:17 +0x152
exit status 2
3476 1573006718160 gist
GistID: f75bfd0acd30591ee84a804744fb85b4
Gist:+3423
{"url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4","forks_url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4/forks","commits_url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4/commits","id":"f75bfd0acd30591ee84a804744fb85b4","node_id":"MDQ6R2lzdGY3NWJmZDBhY2QzMDU5MWVlODRhODA0NzQ0ZmI4NWI0","git_pull_url":"https://gist.github.com/f75bfd0acd30591ee84a804744fb85b4.git","git_push_url":"https://gist.github.com/f75bfd0acd30591ee84a804744fb85b4.git","html_url":"https://gist.github.com/f75bfd0acd30591ee84a804744fb85b4","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f75bfd0acd30591ee84a804744fb85b4/raw/7e6f394af172b2fa43c723d0ea8fce5aec2fa3e2/main.go","size":353,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc logNum(i int) {\n\tfmt.Printf(\"Num %d\\n\", i)\n}\n\nfunc main() {\n\ti := 1\n\tdefer logNum(i) // deferred function call: logNum(1)\n\tfmt.Println(\"First main statement\")\n\ti++\n\tdefer logNum(i)     // deferred function call: logNum(2)\n\tdefer logNum(i * i) // deferred function call: logNum(4)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:26:57Z","updated_at":"2019-11-06T01:26:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b622b267a3822bd88824f494e7d0284c9c4eaad9","committed_at":"2019-11-06T01:26:57Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4/b622b267a3822bd88824f494e7d0284c9c4eaad9"}],"truncated":false}
3489 1573006720130 gistoutput
Gist:+3423
{"url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4","forks_url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4/forks","commits_url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4/commits","id":"f75bfd0acd30591ee84a804744fb85b4","node_id":"MDQ6R2lzdGY3NWJmZDBhY2QzMDU5MWVlODRhODA0NzQ0ZmI4NWI0","git_pull_url":"https://gist.github.com/f75bfd0acd30591ee84a804744fb85b4.git","git_push_url":"https://gist.github.com/f75bfd0acd30591ee84a804744fb85b4.git","html_url":"https://gist.github.com/f75bfd0acd30591ee84a804744fb85b4","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f75bfd0acd30591ee84a804744fb85b4/raw/7e6f394af172b2fa43c723d0ea8fce5aec2fa3e2/main.go","size":353,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc logNum(i int) {\n\tfmt.Printf(\"Num %d\\n\", i)\n}\n\nfunc main() {\n\ti := 1\n\tdefer logNum(i) // deferred function call: logNum(1)\n\tfmt.Println(\"First main statement\")\n\ti++\n\tdefer logNum(i)     // deferred function call: logNum(2)\n\tdefer logNum(i * i) // deferred function call: logNum(4)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:26:57Z","updated_at":"2019-11-06T01:26:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b622b267a3822bd88824f494e7d0284c9c4eaad9","committed_at":"2019-11-06T01:26:57Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/f75bfd0acd30591ee84a804744fb85b4/b622b267a3822bd88824f494e7d0284c9c4eaad9"}],"truncated":false}
GistOutput:+39
First main statement
Num 4
Num 2
Num 1
3467 1573006720317 gist
GistID: cc83ce8f06dd9c490987e7b91d6fcbce
Gist:+3414
{"url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce","forks_url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce/forks","commits_url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce/commits","id":"cc83ce8f06dd9c490987e7b91d6fcbce","node_id":"MDQ6R2lzdGNjODNjZThmMDZkZDljNDkwOTg3ZTdiOTFkNmZjYmNl","git_pull_url":"https://gist.github.com/cc83ce8f06dd9c490987e7b91d6fcbce.git","git_push_url":"https://gist.github.com/cc83ce8f06dd9c490987e7b91d6fcbce.git","html_url":"https://gist.github.com/cc83ce8f06dd9c490987e7b91d6fcbce","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/cc83ce8f06dd9c490987e7b91d6fcbce/raw/05da6538004ab2985fc71bfeec075a08a358d7da/main.go","size":350,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc plusOne(i int) (result int) {\n\t// anonymous function must be called by adding ()\n\tdefer func() { result++ }()\n\n\t// i is returned as result, which is updated by deferred function above\n\t// after execution of below return\n\treturn i\n}\n\nfunc main() {\n\tfmt.Println(plusOne(1)) // 2\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:27:19Z","updated_at":"2019-11-06T01:27:19Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"8664a4a8de7f757627581b0991ca7b42b1290725","committed_at":"2019-11-06T01:27:18Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce/8664a4a8de7f757627581b0991ca7b42b1290725"}],"truncated":false}
3442 1573006722283 gistoutput
Gist:+3414
{"url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce","forks_url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce/forks","commits_url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce/commits","id":"cc83ce8f06dd9c490987e7b91d6fcbce","node_id":"MDQ6R2lzdGNjODNjZThmMDZkZDljNDkwOTg3ZTdiOTFkNmZjYmNl","git_pull_url":"https://gist.github.com/cc83ce8f06dd9c490987e7b91d6fcbce.git","git_push_url":"https://gist.github.com/cc83ce8f06dd9c490987e7b91d6fcbce.git","html_url":"https://gist.github.com/cc83ce8f06dd9c490987e7b91d6fcbce","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/cc83ce8f06dd9c490987e7b91d6fcbce/raw/05da6538004ab2985fc71bfeec075a08a358d7da/main.go","size":350,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc plusOne(i int) (result int) {\n\t// anonymous function must be called by adding ()\n\tdefer func() { result++ }()\n\n\t// i is returned as result, which is updated by deferred function above\n\t// after execution of below return\n\treturn i\n}\n\nfunc main() {\n\tfmt.Println(plusOne(1)) // 2\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:27:19Z","updated_at":"2019-11-06T01:27:19Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"8664a4a8de7f757627581b0991ca7b42b1290725","committed_at":"2019-11-06T01:27:18Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/cc83ce8f06dd9c490987e7b91d6fcbce/8664a4a8de7f757627581b0991ca7b42b1290725"}],"truncated":false}
GistOutput:+2
2
3302 1573006722636 gist
GistID: 6550d53e2a0b05e2ae6097b3a5bb62ef
Gist:+3249
{"url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef","forks_url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef/forks","commits_url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef/commits","id":"6550d53e2a0b05e2ae6097b3a5bb62ef","node_id":"MDQ6R2lzdDY1NTBkNTNlMmEwYjA1ZTJhZTYwOTdiM2E1YmI2MmVm","git_pull_url":"https://gist.github.com/6550d53e2a0b05e2ae6097b3a5bb62ef.git","git_push_url":"https://gist.github.com/6550d53e2a0b05e2ae6097b3a5bb62ef.git","html_url":"https://gist.github.com/6550d53e2a0b05e2ae6097b3a5bb62ef","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/6550d53e2a0b05e2ae6097b3a5bb62ef/raw/4b90bc838c23ff7abe81798e16ad67dd65ca93fb/main.go","size":180,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc main() {\n\tfmt.Print(\"Before if\\n\")\n\tif true {\n\t\tdefer fmt.Print(\"inside if\\n\")\n\t}\n\n\tfmt.Print(\"Ater if\\n\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:27:49Z","updated_at":"2019-11-06T01:27:50Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6c94ad572d5ffb54fbc7d3012d51dc5f9fc73d80","committed_at":"2019-11-06T01:27:49Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef/6c94ad572d5ffb54fbc7d3012d51dc5f9fc73d80"}],"truncated":false}
3304 1573006724646 gistoutput
Gist:+3249
{"url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef","forks_url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef/forks","commits_url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef/commits","id":"6550d53e2a0b05e2ae6097b3a5bb62ef","node_id":"MDQ6R2lzdDY1NTBkNTNlMmEwYjA1ZTJhZTYwOTdiM2E1YmI2MmVm","git_pull_url":"https://gist.github.com/6550d53e2a0b05e2ae6097b3a5bb62ef.git","git_push_url":"https://gist.github.com/6550d53e2a0b05e2ae6097b3a5bb62ef.git","html_url":"https://gist.github.com/6550d53e2a0b05e2ae6097b3a5bb62ef","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/6550d53e2a0b05e2ae6097b3a5bb62ef/raw/4b90bc838c23ff7abe81798e16ad67dd65ca93fb/main.go","size":180,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc main() {\n\tfmt.Print(\"Before if\\n\")\n\tif true {\n\t\tdefer fmt.Print(\"inside if\\n\")\n\t}\n\n\tfmt.Print(\"Ater if\\n\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:27:49Z","updated_at":"2019-11-06T01:27:50Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6c94ad572d5ffb54fbc7d3012d51dc5f9fc73d80","committed_at":"2019-11-06T01:27:49Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/6550d53e2a0b05e2ae6097b3a5bb62ef/6c94ad572d5ffb54fbc7d3012d51dc5f9fc73d80"}],"truncated":false}
GistOutput:+28
Before if
Ater if
inside if
3277 1573006724823 gist
GistID: 8ddf998e7edb105cc3e0255c6711d89a
Gist:+3224
{"url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a","forks_url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a/forks","commits_url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a/commits","id":"8ddf998e7edb105cc3e0255c6711d89a","node_id":"MDQ6R2lzdDhkZGY5OThlN2VkYjEwNWNjM2UwMjU1YzY3MTFkODlh","git_pull_url":"https://gist.github.com/8ddf998e7edb105cc3e0255c6711d89a.git","git_push_url":"https://gist.github.com/8ddf998e7edb105cc3e0255c6711d89a.git","html_url":"https://gist.github.com/8ddf998e7edb105cc3e0255c6711d89a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8ddf998e7edb105cc3e0255c6711d89a/raw/7cb952bc791f8e47979c2069defe788e3afd7ccc/main.go","size":159,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc main() {\n\tfor i := 0; i < 2; i++ {\n\t\tdefer func() {\n\t\t\tfmt.Printf(\"%d\\n\", i)\n\t\t}()\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:28:14Z","updated_at":"2019-11-06T01:28:14Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"cac9eb84ea64426b23a22c0fdb6dc2b8d19d4efb","committed_at":"2019-11-06T01:28:13Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a/cac9eb84ea64426b23a22c0fdb6dc2b8d19d4efb"}],"truncated":false}
3254 1573006726152 gistoutput
Gist:+3224
{"url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a","forks_url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a/forks","commits_url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a/commits","id":"8ddf998e7edb105cc3e0255c6711d89a","node_id":"MDQ6R2lzdDhkZGY5OThlN2VkYjEwNWNjM2UwMjU1YzY3MTFkODlh","git_pull_url":"https://gist.github.com/8ddf998e7edb105cc3e0255c6711d89a.git","git_push_url":"https://gist.github.com/8ddf998e7edb105cc3e0255c6711d89a.git","html_url":"https://gist.github.com/8ddf998e7edb105cc3e0255c6711d89a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8ddf998e7edb105cc3e0255c6711d89a/raw/7cb952bc791f8e47979c2069defe788e3afd7ccc/main.go","size":159,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc main() {\n\tfor i := 0; i < 2; i++ {\n\t\tdefer func() {\n\t\t\tfmt.Printf(\"%d\\n\", i)\n\t\t}()\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:28:14Z","updated_at":"2019-11-06T01:28:14Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"cac9eb84ea64426b23a22c0fdb6dc2b8d19d4efb","committed_at":"2019-11-06T01:28:13Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/8ddf998e7edb105cc3e0255c6711d89a/cac9eb84ea64426b23a22c0fdb6dc2b8d19d4efb"}],"truncated":false}
GistOutput:+4
2
2
3285 1573006726346 gist
GistID: 8eeb536e05f82db13271ae0df6ce9272
Gist:+3232
{"url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272","forks_url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272/forks","commits_url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272/commits","id":"8eeb536e05f82db13271ae0df6ce9272","node_id":"MDQ6R2lzdDhlZWI1MzZlMDVmODJkYjEzMjcxYWUwZGY2Y2U5Mjcy","git_pull_url":"https://gist.github.com/8eeb536e05f82db13271ae0df6ce9272.git","git_push_url":"https://gist.github.com/8eeb536e05f82db13271ae0df6ce9272.git","html_url":"https://gist.github.com/8eeb536e05f82db13271ae0df6ce9272","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8eeb536e05f82db13271ae0df6ce9272/raw/c4ada2468c9fa09ac4b70deb9cc67539ed78abd7/main.go","size":167,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc main() {\n\tfor i := 0; i < 2; i++ {\n\t\tdefer func(i2 int) {\n\t\t\tfmt.Printf(\"%d\\n\", i2)\n\t\t}(i)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:28:49Z","updated_at":"2019-11-06T01:28:50Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e8433d7c19554d1f72fd9687a27a5cb61e8e4ae7","committed_at":"2019-11-06T01:28:49Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272/e8433d7c19554d1f72fd9687a27a5cb61e8e4ae7"}],"truncated":false}
3262 1573006727678 gistoutput
Gist:+3232
{"url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272","forks_url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272/forks","commits_url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272/commits","id":"8eeb536e05f82db13271ae0df6ce9272","node_id":"MDQ6R2lzdDhlZWI1MzZlMDVmODJkYjEzMjcxYWUwZGY2Y2U5Mjcy","git_pull_url":"https://gist.github.com/8eeb536e05f82db13271ae0df6ce9272.git","git_push_url":"https://gist.github.com/8eeb536e05f82db13271ae0df6ce9272.git","html_url":"https://gist.github.com/8eeb536e05f82db13271ae0df6ce9272","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8eeb536e05f82db13271ae0df6ce9272/raw/c4ada2468c9fa09ac4b70deb9cc67539ed78abd7/main.go","size":167,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\nfunc main() {\n\tfor i := 0; i < 2; i++ {\n\t\tdefer func(i2 int) {\n\t\t\tfmt.Printf(\"%d\\n\", i2)\n\t\t}(i)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:28:49Z","updated_at":"2019-11-06T01:28:50Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e8433d7c19554d1f72fd9687a27a5cb61e8e4ae7","committed_at":"2019-11-06T01:28:49Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/8eeb536e05f82db13271ae0df6ce9272/e8433d7c19554d1f72fd9687a27a5cb61e8e4ae7"}],"truncated":false}
GistOutput:+4
1
0
3295 1573006728038 gist
GistID: 38716aa4a1102085d3c990d2c616348c
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
3268 1573006728624 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
5705 1573007486008 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573007487507 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573007489047 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573007494299 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573007495091 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573007495635 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
5705 1573007538705 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573007540164 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573007541710 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573007543552 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573007544251 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573007544773 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3317 1573007545312 gist
GistID: ecb398f0f39d4385a15a54f1bf5c0661
Gist:+3264
{"url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661","forks_url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661/forks","commits_url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661/commits","id":"ecb398f0f39d4385a15a54f1bf5c0661","node_id":"MDQ6R2lzdGVjYjM5OGYwZjM5ZDQzODVhMTVhNTRmMWJmNWMwNjYx","git_pull_url":"https://gist.github.com/ecb398f0f39d4385a15a54f1bf5c0661.git","git_push_url":"https://gist.github.com/ecb398f0f39d4385a15a54f1bf5c0661.git","html_url":"https://gist.github.com/ecb398f0f39d4385a15a54f1bf5c0661","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ecb398f0f39d4385a15a54f1bf5c0661/raw/f5ff9316b150386e08369109871c37d1c681ddf0/main.go","size":199,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := \"str\"\n\tfor i := 0; i < len(s); i++ {\n\t\tc := s[i]\n\t\tfmt.Printf(\"Byte at index %d is '%c' (0x%x)\\n\", i, c, c)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:29:57Z","updated_at":"2019-11-06T01:29:57Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4f46ac91c5aa332b318522eaae3ea33e024bb6dc","committed_at":"2019-11-06T01:29:56Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661/4f46ac91c5aa332b318522eaae3ea33e024bb6dc"}],"truncated":false}
3381 1573007546659 gistoutput
Gist:+3264
{"url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661","forks_url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661/forks","commits_url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661/commits","id":"ecb398f0f39d4385a15a54f1bf5c0661","node_id":"MDQ6R2lzdGVjYjM5OGYwZjM5ZDQzODVhMTVhNTRmMWJmNWMwNjYx","git_pull_url":"https://gist.github.com/ecb398f0f39d4385a15a54f1bf5c0661.git","git_push_url":"https://gist.github.com/ecb398f0f39d4385a15a54f1bf5c0661.git","html_url":"https://gist.github.com/ecb398f0f39d4385a15a54f1bf5c0661","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ecb398f0f39d4385a15a54f1bf5c0661/raw/f5ff9316b150386e08369109871c37d1c681ddf0/main.go","size":199,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := \"str\"\n\tfor i := 0; i < len(s); i++ {\n\t\tc := s[i]\n\t\tfmt.Printf(\"Byte at index %d is '%c' (0x%x)\\n\", i, c, c)\n\t}\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:29:57Z","updated_at":"2019-11-06T01:29:57Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4f46ac91c5aa332b318522eaae3ea33e024bb6dc","committed_at":"2019-11-06T01:29:56Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/ecb398f0f39d4385a15a54f1bf5c0661/4f46ac91c5aa332b318522eaae3ea33e024bb6dc"}],"truncated":false}
GistOutput:+90
Byte at index 0 is 's' (0x73)
Byte at index 1 is 't' (0x74)
Byte at index 2 is 'r' (0x72)
3313 1573007546874 gist
GistID: 8f1de8d5bc674ca214bb18095db20d87
Gist:+3260
{"url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87","forks_url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87/forks","commits_url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87/commits","id":"8f1de8d5bc674ca214bb18095db20d87","node_id":"MDQ6R2lzdDhmMWRlOGQ1YmM2NzRjYTIxNGJiMTgwOTVkYjIwZDg3","git_pull_url":"https://gist.github.com/8f1de8d5bc674ca214bb18095db20d87.git","git_push_url":"https://gist.github.com/8f1de8d5bc674ca214bb18095db20d87.git","html_url":"https://gist.github.com/8f1de8d5bc674ca214bb18095db20d87","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8f1de8d5bc674ca214bb18095db20d87/raw/246a95be03df004adb7426d4725f96d493b7e2f1/main.go","size":197,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := \"日本語\"\n\tfor i, runeChar := range s {\n\t\tfmt.Printf(\"Rune at byte position %d is %#U\\n\", i, runeChar)\n\t}\n\t// :show end\n}\n"}},"public":true,"created_at":"2019-11-06T01:30:18Z","updated_at":"2019-11-06T01:30:19Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f6062533a8b7fdf8f8506f1a41a809a5f3c5edbf","committed_at":"2019-11-06T01:30:18Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87/f6062533a8b7fdf8f8506f1a41a809a5f3c5edbf"}],"truncated":false}
3408 1573007548302 gistoutput
Gist:+3260
{"url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87","forks_url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87/forks","commits_url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87/commits","id":"8f1de8d5bc674ca214bb18095db20d87","node_id":"MDQ6R2lzdDhmMWRlOGQ1YmM2NzRjYTIxNGJiMTgwOTVkYjIwZDg3","git_pull_url":"https://gist.github.com/8f1de8d5bc674ca214bb18095db20d87.git","git_push_url":"https://gist.github.com/8f1de8d5bc674ca214bb18095db20d87.git","html_url":"https://gist.github.com/8f1de8d5bc674ca214bb18095db20d87","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/8f1de8d5bc674ca214bb18095db20d87/raw/246a95be03df004adb7426d4725f96d493b7e2f1/main.go","size":197,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\ts := \"日本語\"\n\tfor i, runeChar := range s {\n\t\tfmt.Printf(\"Rune at byte position %d is %#U\\n\", i, runeChar)\n\t}\n\t// :show end\n}\n"}},"public":true,"created_at":"2019-11-06T01:30:18Z","updated_at":"2019-11-06T01:30:19Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f6062533a8b7fdf8f8506f1a41a809a5f3c5edbf","committed_at":"2019-11-06T01:30:18Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/8f1de8d5bc674ca214bb18095db20d87/f6062533a8b7fdf8f8506f1a41a809a5f3c5edbf"}],"truncated":false}
GistOutput:+120
Rune at byte position 0 is U+65E5 '日'
Rune at byte position 3 is U+672C '本'
Rune at byte position 6 is U+8A9E '語'
3299 1573007548647 gist
GistID: 5cca1f06d44820bfc8c7e18713b91c35
Gist:+3246
{"url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35","forks_url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35/forks","commits_url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35/commits","id":"5cca1f06d44820bfc8c7e18713b91c35","node_id":"MDQ6R2lzdDVjY2ExZjA2ZDQ0ODIwYmZjOGM3ZTE4NzEzYjkxYzM1","git_pull_url":"https://gist.github.com/5cca1f06d44820bfc8c7e18713b91c35.git","git_push_url":"https://gist.github.com/5cca1f06d44820bfc8c7e18713b91c35.git","html_url":"https://gist.github.com/5cca1f06d44820bfc8c7e18713b91c35","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5cca1f06d44820bfc8c7e18713b91c35/raw/59ed676b6aabed23d5085b3d334ccb6c9e29ebe5/main.go","size":189,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar a int = 4\n\tpa := &a\n\tfmt.Printf(\"Address of a variable in memory is %p. Its value is: %d\\n\", pa, *pa)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:32:44Z","updated_at":"2019-11-06T01:32:45Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a48f7262ac8046e46706b55c72734d9a24f2c0fd","committed_at":"2019-11-06T01:32:44Z","change_status":{"total":12,"additions":12,"deletions":0},"url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35/a48f7262ac8046e46706b55c72734d9a24f2c0fd"}],"truncated":false}
3338 1573007550063 gistoutput
Gist:+3246
{"url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35","forks_url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35/forks","commits_url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35/commits","id":"5cca1f06d44820bfc8c7e18713b91c35","node_id":"MDQ6R2lzdDVjY2ExZjA2ZDQ0ODIwYmZjOGM3ZTE4NzEzYjkxYzM1","git_pull_url":"https://gist.github.com/5cca1f06d44820bfc8c7e18713b91c35.git","git_push_url":"https://gist.github.com/5cca1f06d44820bfc8c7e18713b91c35.git","html_url":"https://gist.github.com/5cca1f06d44820bfc8c7e18713b91c35","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5cca1f06d44820bfc8c7e18713b91c35/raw/59ed676b6aabed23d5085b3d334ccb6c9e29ebe5/main.go","size":189,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar a int = 4\n\tpa := &a\n\tfmt.Printf(\"Address of a variable in memory is %p. Its value is: %d\\n\", pa, *pa)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:32:44Z","updated_at":"2019-11-06T01:32:45Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a48f7262ac8046e46706b55c72734d9a24f2c0fd","committed_at":"2019-11-06T01:32:44Z","change_status":{"total":12,"additions":12,"deletions":0},"url":"https://api.github.com/gists/5cca1f06d44820bfc8c7e18713b91c35/a48f7262ac8046e46706b55c72734d9a24f2c0fd"}],"truncated":false}
GistOutput:+65
Address of a variable in memory is 0xc00007c010. Its value is: 4
3492 1573007550486 gist
GistID: 5162213db9cda1eab9d5e7ae801f052a
Gist:+3439
{"url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a","forks_url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a/forks","commits_url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a/commits","id":"5162213db9cda1eab9d5e7ae801f052a","node_id":"MDQ6R2lzdDUxNjIyMTNkYjljZGExZWFiOWQ1ZTdhZTgwMWYwNTJh","git_pull_url":"https://gist.github.com/5162213db9cda1eab9d5e7ae801f052a.git","git_push_url":"https://gist.github.com/5162213db9cda1eab9d5e7ae801f052a.git","html_url":"https://gist.github.com/5162213db9cda1eab9d5e7ae801f052a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5162213db9cda1eab9d5e7ae801f052a/raw/1de04bb3dc94d44bdb6b39e5926e4ee5fe83206a/main.go","size":372,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\t// create unbuffered channel of int values with capacity of 1\n\tch := make(chan int)\n\t// start a new goroutine that sends value 3 over a channel\n\tgo func() { ch <- 3 }()\n\t// read the value from a channel\n\t// it waits until goroutine above sends a value\n\tn := <-ch\n\tfmt.Printf(\"n: %d\\n\", n)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:32:14Z","updated_at":"2019-11-06T01:32:14Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f53757a953012eb0669fd8228732fec8ef910b0d","committed_at":"2019-11-06T01:32:13Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a/f53757a953012eb0669fd8228732fec8ef910b0d"}],"truncated":false}
3470 1573007551932 gistoutput
Gist:+3439
{"url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a","forks_url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a/forks","commits_url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a/commits","id":"5162213db9cda1eab9d5e7ae801f052a","node_id":"MDQ6R2lzdDUxNjIyMTNkYjljZGExZWFiOWQ1ZTdhZTgwMWYwNTJh","git_pull_url":"https://gist.github.com/5162213db9cda1eab9d5e7ae801f052a.git","git_push_url":"https://gist.github.com/5162213db9cda1eab9d5e7ae801f052a.git","html_url":"https://gist.github.com/5162213db9cda1eab9d5e7ae801f052a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5162213db9cda1eab9d5e7ae801f052a/raw/1de04bb3dc94d44bdb6b39e5926e4ee5fe83206a/main.go","size":372,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\t// create unbuffered channel of int values with capacity of 1\n\tch := make(chan int)\n\t// start a new goroutine that sends value 3 over a channel\n\tgo func() { ch <- 3 }()\n\t// read the value from a channel\n\t// it waits until goroutine above sends a value\n\tn := <-ch\n\tfmt.Printf(\"n: %d\\n\", n)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:32:14Z","updated_at":"2019-11-06T01:32:14Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"f53757a953012eb0669fd8228732fec8ef910b0d","committed_at":"2019-11-06T01:32:13Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/5162213db9cda1eab9d5e7ae801f052a/f53757a953012eb0669fd8228732fec8ef910b0d"}],"truncated":false}
GistOutput:+5
n: 3
3475 1573007552375 gist
GistID: 266779f2c4f399ade5b270b0cd59b52f
Gist:+3422
{"url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f","forks_url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f/forks","commits_url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f/commits","id":"266779f2c4f399ade5b270b0cd59b52f","node_id":"MDQ6R2lzdDI2Njc3OWYyYzRmMzk5YWRlNWIyNzBiMGNkNTliNTJm","git_pull_url":"https://gist.github.com/266779f2c4f399ade5b270b0cd59b52f.git","git_push_url":"https://gist.github.com/266779f2c4f399ade5b270b0cd59b52f.git","html_url":"https://gist.github.com/266779f2c4f399ade5b270b0cd59b52f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/266779f2c4f399ade5b270b0cd59b52f/raw/a0bc92518f67b380129258b17c657dbfc60bf8d9/main.go","size":344,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\t// :show start\n\tvar f32 float32 = 1.3\n\tbitSize := 32\n\ts1 := strconv.FormatFloat(float64(f32), 'E', -1, bitSize)\n\tfmt.Printf(\"f32: %s\\n\", s1)\n\n\tvar f64 float64 = 8.1234\n\tbitSize = 64\n\ts2 := strconv.FormatFloat(f64, 'e', -1, bitSize)\n\tfmt.Printf(\"f64: %s\\n\", s2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:33:13Z","updated_at":"2019-11-06T01:33:14Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"735ea04bfd4a12cadf3d781349cbd64a3a85bc5b","committed_at":"2019-11-06T01:33:13Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f/735ea04bfd4a12cadf3d781349cbd64a3a85bc5b"}],"truncated":false}
3478 1573007553827 gistoutput
Gist:+3422
{"url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f","forks_url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f/forks","commits_url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f/commits","id":"266779f2c4f399ade5b270b0cd59b52f","node_id":"MDQ6R2lzdDI2Njc3OWYyYzRmMzk5YWRlNWIyNzBiMGNkNTliNTJm","git_pull_url":"https://gist.github.com/266779f2c4f399ade5b270b0cd59b52f.git","git_push_url":"https://gist.github.com/266779f2c4f399ade5b270b0cd59b52f.git","html_url":"https://gist.github.com/266779f2c4f399ade5b270b0cd59b52f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/266779f2c4f399ade5b270b0cd59b52f/raw/a0bc92518f67b380129258b17c657dbfc60bf8d9/main.go","size":344,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\t// :show start\n\tvar f32 float32 = 1.3\n\tbitSize := 32\n\ts1 := strconv.FormatFloat(float64(f32), 'E', -1, bitSize)\n\tfmt.Printf(\"f32: %s\\n\", s1)\n\n\tvar f64 float64 = 8.1234\n\tbitSize = 64\n\ts2 := strconv.FormatFloat(f64, 'e', -1, bitSize)\n\tfmt.Printf(\"f64: %s\\n\", s2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:33:13Z","updated_at":"2019-11-06T01:33:14Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"735ea04bfd4a12cadf3d781349cbd64a3a85bc5b","committed_at":"2019-11-06T01:33:13Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/266779f2c4f399ade5b270b0cd59b52f/735ea04bfd4a12cadf3d781349cbd64a3a85bc5b"}],"truncated":false}
GistOutput:+29
f32: 1.3E+00
f64: 8.1234e+00
3278 1573007554032 gist
GistID: 63ea1a0e8e3655ddeef2686984d3b0f8
Gist:+3225
{"url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8","forks_url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8/forks","commits_url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8/commits","id":"63ea1a0e8e3655ddeef2686984d3b0f8","node_id":"MDQ6R2lzdDYzZWExYTBlOGUzNjU1ZGRlZWYyNjg2OTg0ZDNiMGY4","git_pull_url":"https://gist.github.com/63ea1a0e8e3655ddeef2686984d3b0f8.git","git_push_url":"https://gist.github.com/63ea1a0e8e3655ddeef2686984d3b0f8.git","html_url":"https://gist.github.com/63ea1a0e8e3655ddeef2686984d3b0f8","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/63ea1a0e8e3655ddeef2686984d3b0f8/raw/a6e98605ef50fd033f9b0b8771a4d97ec98e8825/main.go","size":166,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar f64 float64 = 1.54\n\ts := fmt.Sprintf(\"%f\", f64)\n\tfmt.Printf(\"f is: '%s'\\n\", s)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:33:46Z","updated_at":"2019-11-06T01:33:47Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6c46f5f389cb20d97f36f07bbee71923ac03d478","committed_at":"2019-11-06T01:33:46Z","change_status":{"total":12,"additions":12,"deletions":0},"url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8/6c46f5f389cb20d97f36f07bbee71923ac03d478"}],"truncated":false}
3269 1573007555408 gistoutput
Gist:+3225
{"url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8","forks_url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8/forks","commits_url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8/commits","id":"63ea1a0e8e3655ddeef2686984d3b0f8","node_id":"MDQ6R2lzdDYzZWExYTBlOGUzNjU1ZGRlZWYyNjg2OTg0ZDNiMGY4","git_pull_url":"https://gist.github.com/63ea1a0e8e3655ddeef2686984d3b0f8.git","git_push_url":"https://gist.github.com/63ea1a0e8e3655ddeef2686984d3b0f8.git","html_url":"https://gist.github.com/63ea1a0e8e3655ddeef2686984d3b0f8","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/63ea1a0e8e3655ddeef2686984d3b0f8/raw/a6e98605ef50fd033f9b0b8771a4d97ec98e8825/main.go","size":166,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar f64 float64 = 1.54\n\ts := fmt.Sprintf(\"%f\", f64)\n\tfmt.Printf(\"f is: '%s'\\n\", s)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:33:46Z","updated_at":"2019-11-06T01:33:47Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6c46f5f389cb20d97f36f07bbee71923ac03d478","committed_at":"2019-11-06T01:33:46Z","change_status":{"total":12,"additions":12,"deletions":0},"url":"https://api.github.com/gists/63ea1a0e8e3655ddeef2686984d3b0f8/6c46f5f389cb20d97f36f07bbee71923ac03d478"}],"truncated":false}
GistOutput:+17
f is: '1.540000'
3404 1573007555597 gist
GistID: 04188c93abbc4b60d602a5ae4b1edb34
Gist:+3351
{"url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34","forks_url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34/forks","commits_url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34/commits","id":"04188c93abbc4b60d602a5ae4b1edb34","node_id":"MDQ6R2lzdDA0MTg4YzkzYWJiYzRiNjBkNjAyYTVhZTRiMWVkYjM0","git_pull_url":"https://gist.github.com/04188c93abbc4b60d602a5ae4b1edb34.git","git_push_url":"https://gist.github.com/04188c93abbc4b60d602a5ae4b1edb34.git","html_url":"https://gist.github.com/04188c93abbc4b60d602a5ae4b1edb34","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/04188c93abbc4b60d602a5ae4b1edb34/raw/f7b8c4dc4ce1bc15534770227cbb25cde2f42122/main.go","size":271,"truncated":false,"content":"// :glot,\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"strconv\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"1.2341\"\n\tf64, err := strconv.ParseFloat(s, 64)\n\tif err != nil {\n\t\tlog.Fatalf(\"strconv.ParseFloat() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"f64: %f\\n\", f64)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:35:08Z","updated_at":"2019-11-06T01:35:09Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"12e4a41b7c83c16eb0bac54d3c57cb6659d00f5b","committed_at":"2019-11-06T01:35:08Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34/12e4a41b7c83c16eb0bac54d3c57cb6659d00f5b"}],"truncated":false}
3392 1573007557030 gistoutput
Gist:+3351
{"url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34","forks_url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34/forks","commits_url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34/commits","id":"04188c93abbc4b60d602a5ae4b1edb34","node_id":"MDQ6R2lzdDA0MTg4YzkzYWJiYzRiNjBkNjAyYTVhZTRiMWVkYjM0","git_pull_url":"https://gist.github.com/04188c93abbc4b60d602a5ae4b1edb34.git","git_push_url":"https://gist.github.com/04188c93abbc4b60d602a5ae4b1edb34.git","html_url":"https://gist.github.com/04188c93abbc4b60d602a5ae4b1edb34","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/04188c93abbc4b60d602a5ae4b1edb34/raw/f7b8c4dc4ce1bc15534770227cbb25cde2f42122/main.go","size":271,"truncated":false,"content":"// :glot,\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"strconv\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"1.2341\"\n\tf64, err := strconv.ParseFloat(s, 64)\n\tif err != nil {\n\t\tlog.Fatalf(\"strconv.ParseFloat() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"f64: %f\\n\", f64)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:35:08Z","updated_at":"2019-11-06T01:35:09Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"12e4a41b7c83c16eb0bac54d3c57cb6659d00f5b","committed_at":"2019-11-06T01:35:08Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/04188c93abbc4b60d602a5ae4b1edb34/12e4a41b7c83c16eb0bac54d3c57cb6659d00f5b"}],"truncated":false}
GistOutput:+14
f64: 1.234100
3389 1573007557207 gist
GistID: 54345930c4959590eac6b6f3881ae501
Gist:+3336
{"url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501","forks_url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501/forks","commits_url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501/commits","id":"54345930c4959590eac6b6f3881ae501","node_id":"MDQ6R2lzdDU0MzQ1OTMwYzQ5NTk1OTBlYWM2YjZmMzg4MWFlNTAx","git_pull_url":"https://gist.github.com/54345930c4959590eac6b6f3881ae501.git","git_push_url":"https://gist.github.com/54345930c4959590eac6b6f3881ae501.git","html_url":"https://gist.github.com/54345930c4959590eac6b6f3881ae501","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/54345930c4959590eac6b6f3881ae501/raw/633b4d8c01cf4238cdc348a23a74690ea0ef8446/main.go","size":256,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"1.2341\"\n\tvar f float64\n\t_, err := fmt.Sscanf(s, \"%f\", &f)\n\tif err != nil {\n\t\tlog.Fatalf(\"fmt.Sscanf failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"f: %f\\n\", f)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:35:28Z","updated_at":"2019-11-06T01:35:28Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6e75680b85c1f954ade8631d0155a3aed1194340","committed_at":"2019-11-06T01:35:27Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501/6e75680b85c1f954ade8631d0155a3aed1194340"}],"truncated":false}
3375 1573007558618 gistoutput
Gist:+3336
{"url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501","forks_url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501/forks","commits_url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501/commits","id":"54345930c4959590eac6b6f3881ae501","node_id":"MDQ6R2lzdDU0MzQ1OTMwYzQ5NTk1OTBlYWM2YjZmMzg4MWFlNTAx","git_pull_url":"https://gist.github.com/54345930c4959590eac6b6f3881ae501.git","git_push_url":"https://gist.github.com/54345930c4959590eac6b6f3881ae501.git","html_url":"https://gist.github.com/54345930c4959590eac6b6f3881ae501","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/54345930c4959590eac6b6f3881ae501/raw/633b4d8c01cf4238cdc348a23a74690ea0ef8446/main.go","size":256,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"1.2341\"\n\tvar f float64\n\t_, err := fmt.Sscanf(s, \"%f\", &f)\n\tif err != nil {\n\t\tlog.Fatalf(\"fmt.Sscanf failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"f: %f\\n\", f)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:35:28Z","updated_at":"2019-11-06T01:35:28Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6e75680b85c1f954ade8631d0155a3aed1194340","committed_at":"2019-11-06T01:35:27Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/54345930c4959590eac6b6f3881ae501/6e75680b85c1f954ade8631d0155a3aed1194340"}],"truncated":false}
GistOutput:+12
f: 1.234100
3540 1573007558998 gist
GistID: 1c12e021c60d98d9cfc0d067d2f806ca
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
3513 1573007559605 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3718 1573007559954 gist
GistID: efa502a0cd7da4b46ec390b2933b895d
Gist:+3665
{"url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d","forks_url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d/forks","commits_url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d/commits","id":"efa502a0cd7da4b46ec390b2933b895d","node_id":"MDQ6R2lzdGVmYTUwMmEwY2Q3ZGE0YjQ2ZWMzOTBiMjkzM2I4OTVk","git_pull_url":"https://gist.github.com/efa502a0cd7da4b46ec390b2933b895d.git","git_push_url":"https://gist.github.com/efa502a0cd7da4b46ec390b2933b895d.git","html_url":"https://gist.github.com/efa502a0cd7da4b46ec390b2933b895d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/efa502a0cd7da4b46ec390b2933b895d/raw/c72990c183fa3e2e38023a2d86700a5171b4366a/main.go","size":553,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tm := make(map[string]int)\n\tm[\"number3\"] = 3\n\n\tcheckKey := func(k string) {\n\t\tif n, ok := m[k]; ok {\n\t\t\tfmt.Printf(\"value for key '%s' is %d\\n\", k, n)\n\t\t} else {\n\t\t\tfmt.Printf(\"key '%s' doesn't exist in map\\n\", k)\n\t\t}\n\t}\n\n\t// get value for a key that exists\n\tcheckKey(\"number3\")\n\n\t// get value for a key that doesn't exist\n\tcheckKey(\"number4\")\n\n\t// remove a key\n\tdelete(m, \"number3\")\n\tfmt.Printf(\"deleted key 'number3\\n\")\n\tcheckKey(\"number3\") // and now it doesn't exist\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:36:31Z","updated_at":"2019-11-06T01:36:31Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"bee4d1f1ac624494ca3e60d818128298053825e1","committed_at":"2019-11-06T01:36:30Z","change_status":{"total":30,"additions":30,"deletions":0},"url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d/bee4d1f1ac624494ca3e60d818128298053825e1"}],"truncated":false}
3813 1573007561357 gistoutput
Gist:+3665
{"url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d","forks_url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d/forks","commits_url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d/commits","id":"efa502a0cd7da4b46ec390b2933b895d","node_id":"MDQ6R2lzdGVmYTUwMmEwY2Q3ZGE0YjQ2ZWMzOTBiMjkzM2I4OTVk","git_pull_url":"https://gist.github.com/efa502a0cd7da4b46ec390b2933b895d.git","git_push_url":"https://gist.github.com/efa502a0cd7da4b46ec390b2933b895d.git","html_url":"https://gist.github.com/efa502a0cd7da4b46ec390b2933b895d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/efa502a0cd7da4b46ec390b2933b895d/raw/c72990c183fa3e2e38023a2d86700a5171b4366a/main.go","size":553,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tm := make(map[string]int)\n\tm[\"number3\"] = 3\n\n\tcheckKey := func(k string) {\n\t\tif n, ok := m[k]; ok {\n\t\t\tfmt.Printf(\"value for key '%s' is %d\\n\", k, n)\n\t\t} else {\n\t\t\tfmt.Printf(\"key '%s' doesn't exist in map\\n\", k)\n\t\t}\n\t}\n\n\t// get value for a key that exists\n\tcheckKey(\"number3\")\n\n\t// get value for a key that doesn't exist\n\tcheckKey(\"number4\")\n\n\t// remove a key\n\tdelete(m, \"number3\")\n\tfmt.Printf(\"deleted key 'number3\\n\")\n\tcheckKey(\"number3\") // and now it doesn't exist\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:36:31Z","updated_at":"2019-11-06T01:36:31Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"bee4d1f1ac624494ca3e60d818128298053825e1","committed_at":"2019-11-06T01:36:30Z","change_status":{"total":30,"additions":30,"deletions":0},"url":"https://api.github.com/gists/efa502a0cd7da4b46ec390b2933b895d/bee4d1f1ac624494ca3e60d818128298053825e1"}],"truncated":false}
GistOutput:+120
value for key 'number3' is 3
key 'number4' doesn't exist in map
deleted key 'number3
key 'number3' doesn't exist in map
3418 1573007561710 gist
GistID: bc0b54e050c069fcabe960c675035079
Gist:+3365
{"url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079","forks_url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079/forks","commits_url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079/commits","id":"bc0b54e050c069fcabe960c675035079","node_id":"MDQ6R2lzdGJjMGI1NGUwNTBjMDY5ZmNhYmU5NjBjNjc1MDM1MDc5","git_pull_url":"https://gist.github.com/bc0b54e050c069fcabe960c675035079.git","git_push_url":"https://gist.github.com/bc0b54e050c069fcabe960c675035079.git","html_url":"https://gist.github.com/bc0b54e050c069fcabe960c675035079","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/bc0b54e050c069fcabe960c675035079/raw/8eda89eec6ade2c74e5b4eb6a540fd2d5fb90e57/main.go","size":294,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s string // empty string \"\"\n\ts1 := \"string\\nliteral\\nwith\\tescape characters\\n\"\n\ts2 := `raw string literal\nwhich doesnt't recgonize escape characters like \\n\n`\n\tfmt.Printf(\"sum of strings\\n'%s'\\n\", s+s1+s2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:37:00Z","updated_at":"2019-11-06T01:37:00Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b5e76c0156c4f74d0e1655225c4ff774c55d5f30","committed_at":"2019-11-06T01:36:59Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079/b5e76c0156c4f74d0e1655225c4ff774c55d5f30"}],"truncated":false}
3519 1573007563216 gistoutput
Gist:+3365
{"url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079","forks_url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079/forks","commits_url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079/commits","id":"bc0b54e050c069fcabe960c675035079","node_id":"MDQ6R2lzdGJjMGI1NGUwNTBjMDY5ZmNhYmU5NjBjNjc1MDM1MDc5","git_pull_url":"https://gist.github.com/bc0b54e050c069fcabe960c675035079.git","git_push_url":"https://gist.github.com/bc0b54e050c069fcabe960c675035079.git","html_url":"https://gist.github.com/bc0b54e050c069fcabe960c675035079","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/bc0b54e050c069fcabe960c675035079/raw/8eda89eec6ade2c74e5b4eb6a540fd2d5fb90e57/main.go","size":294,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar s string // empty string \"\"\n\ts1 := \"string\\nliteral\\nwith\\tescape characters\\n\"\n\ts2 := `raw string literal\nwhich doesnt't recgonize escape characters like \\n\n`\n\tfmt.Printf(\"sum of strings\\n'%s'\\n\", s+s1+s2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:37:00Z","updated_at":"2019-11-06T01:37:00Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b5e76c0156c4f74d0e1655225c4ff774c55d5f30","committed_at":"2019-11-06T01:36:59Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/bc0b54e050c069fcabe960c675035079/b5e76c0156c4f74d0e1655225c4ff774c55d5f30"}],"truncated":false}
GistOutput:+126
sum of strings
'string
literal
with	escape characters
raw string literal
which doesnt't recgonize escape characters like \n
'
4247 1573007563724 gist
GistID: 6a023a01868aa24ef3876adc59a313e5
Gist:+4194
{"url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5","forks_url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5/forks","commits_url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5/commits","id":"6a023a01868aa24ef3876adc59a313e5","node_id":"MDQ6R2lzdDZhMDIzYTAxODY4YWEyNGVmMzg3NmFkYzU5YTMxM2U1","git_pull_url":"https://gist.github.com/6a023a01868aa24ef3876adc59a313e5.git","git_push_url":"https://gist.github.com/6a023a01868aa24ef3876adc59a313e5.git","html_url":"https://gist.github.com/6a023a01868aa24ef3876adc59a313e5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/6a023a01868aa24ef3876adc59a313e5/raw/1fbd5de6062ad62cb0b7d9e9baf0146519ea16aa/main.go","size":1028,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n  fmt.Println(\"zero values for basic types:\")\n\n\tvar zeroBool bool\n\tfmt.Printf(\"bool:       %v\\n\", zeroBool)\n\n\tvar zeroInt int\n\tfmt.Printf(\"int:        %v\\n\", zeroInt)\n\n\tvar zeroF32 float32\n\tfmt.Printf(\"float32:    %v\\n\", zeroF32)\n\n\tvar zeroF64 float64\n\tfmt.Printf(\"float64:    %v\\n\", zeroF64)\n\n\tvar zeroStr string\n\tfmt.Printf(\"string:     %#v\\n\", zeroStr)\n\n\tvar zeroPtr *int\n\tfmt.Printf(\"pointer:    %v\\n\", zeroPtr)\n\n\tvar zeroSlice []uint32\n\tfmt.Printf(\"slice:      %v\\n\", zeroSlice)\n\n\tvar zeroMap map[string]int\n\tfmt.Printf(\"map:        %#v\\n\", zeroMap)\n\n\tvar zeroInterface interface{}\n\tfmt.Printf(\"interface:  %v\\n\", zeroInterface)\n\n\tvar zeroChan chan bool\n\tfmt.Printf(\"channel:    %v\\n\", zeroChan)\n\n\tvar zeroArray [5]int\n\tfmt.Printf(\"array:      %v\\n\", zeroArray)\n\n\ttype struc struct {\n\t\ta int\n\t\tb string\n\t}\n\tvar zeroStruct struc\n\tfmt.Printf(\"struct:     %#v\\n\", zeroStruct)\n\n\tvar zeroFunc func(bool)\n\tfmt.Printf(\"function:   %v\\n\", zeroFunc)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:37:38Z","updated_at":"2019-11-06T01:37:39Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5acdafedc265531bccd80f131e40f51e8e3daaf8","committed_at":"2019-11-06T01:37:38Z","change_status":{"total":53,"additions":53,"deletions":0},"url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5/5acdafedc265531bccd80f131e40f51e8e3daaf8"}],"truncated":false}
4503 1573007565130 gistoutput
Gist:+4194
{"url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5","forks_url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5/forks","commits_url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5/commits","id":"6a023a01868aa24ef3876adc59a313e5","node_id":"MDQ6R2lzdDZhMDIzYTAxODY4YWEyNGVmMzg3NmFkYzU5YTMxM2U1","git_pull_url":"https://gist.github.com/6a023a01868aa24ef3876adc59a313e5.git","git_push_url":"https://gist.github.com/6a023a01868aa24ef3876adc59a313e5.git","html_url":"https://gist.github.com/6a023a01868aa24ef3876adc59a313e5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/6a023a01868aa24ef3876adc59a313e5/raw/1fbd5de6062ad62cb0b7d9e9baf0146519ea16aa/main.go","size":1028,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n  fmt.Println(\"zero values for basic types:\")\n\n\tvar zeroBool bool\n\tfmt.Printf(\"bool:       %v\\n\", zeroBool)\n\n\tvar zeroInt int\n\tfmt.Printf(\"int:        %v\\n\", zeroInt)\n\n\tvar zeroF32 float32\n\tfmt.Printf(\"float32:    %v\\n\", zeroF32)\n\n\tvar zeroF64 float64\n\tfmt.Printf(\"float64:    %v\\n\", zeroF64)\n\n\tvar zeroStr string\n\tfmt.Printf(\"string:     %#v\\n\", zeroStr)\n\n\tvar zeroPtr *int\n\tfmt.Printf(\"pointer:    %v\\n\", zeroPtr)\n\n\tvar zeroSlice []uint32\n\tfmt.Printf(\"slice:      %v\\n\", zeroSlice)\n\n\tvar zeroMap map[string]int\n\tfmt.Printf(\"map:        %#v\\n\", zeroMap)\n\n\tvar zeroInterface interface{}\n\tfmt.Printf(\"interface:  %v\\n\", zeroInterface)\n\n\tvar zeroChan chan bool\n\tfmt.Printf(\"channel:    %v\\n\", zeroChan)\n\n\tvar zeroArray [5]int\n\tfmt.Printf(\"array:      %v\\n\", zeroArray)\n\n\ttype struc struct {\n\t\ta int\n\t\tb string\n\t}\n\tvar zeroStruct struc\n\tfmt.Printf(\"struct:     %#v\\n\", zeroStruct)\n\n\tvar zeroFunc func(bool)\n\tfmt.Printf(\"function:   %v\\n\", zeroFunc)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:37:38Z","updated_at":"2019-11-06T01:37:39Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5acdafedc265531bccd80f131e40f51e8e3daaf8","committed_at":"2019-11-06T01:37:38Z","change_status":{"total":53,"additions":53,"deletions":0},"url":"https://api.github.com/gists/6a023a01868aa24ef3876adc59a313e5/5acdafedc265531bccd80f131e40f51e8e3daaf8"}],"truncated":false}
GistOutput:+281
zero values for basic types:
bool:       false
int:        0
float32:    0
float64:    0
string:     ""
pointer:    <nil>
slice:      []
map:        map[string]int(nil)
interface:  <nil>
channel:    <nil>
array:      [0 0 0 0 0]
struct:     main.struc{a:0, b:""}
function:   <nil>
3412 1573007565661 gist
GistID: 7ceecf84840854ee6b9da4d97f41255a
Gist:+3359
{"url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a","forks_url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a/forks","commits_url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a/commits","id":"7ceecf84840854ee6b9da4d97f41255a","node_id":"MDQ6R2lzdDdjZWVjZjg0ODQwODU0ZWU2YjlkYTRkOTdmNDEyNTVh","git_pull_url":"https://gist.github.com/7ceecf84840854ee6b9da4d97f41255a.git","git_push_url":"https://gist.github.com/7ceecf84840854ee6b9da4d97f41255a.git","html_url":"https://gist.github.com/7ceecf84840854ee6b9da4d97f41255a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7ceecf84840854ee6b9da4d97f41255a/raw/a075748beec7acd17a4b075b634147846e80adaf/main.go","size":298,"truncated":false,"content":"// :glot,\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar a1 = [2]byte{3, 8} // array of 2 bytes\n\t// when using [...] size will be deduced from { ... }\n\ta2 := [...]int{1, 2, 3} // array of 3 integers\n\n\tfmt.Printf(\"Size of a1: %d.\\nSize of a2: %d\\n\", len(a1), len(a2))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:38:07Z","updated_at":"2019-11-06T01:38:07Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e0be357f82632c38863409706e573c9bd036c945","committed_at":"2019-11-06T01:38:06Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a/e0be357f82632c38863409706e573c9bd036c945"}],"truncated":false}
3415 1573007567030 gistoutput
Gist:+3359
{"url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a","forks_url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a/forks","commits_url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a/commits","id":"7ceecf84840854ee6b9da4d97f41255a","node_id":"MDQ6R2lzdDdjZWVjZjg0ODQwODU0ZWU2YjlkYTRkOTdmNDEyNTVh","git_pull_url":"https://gist.github.com/7ceecf84840854ee6b9da4d97f41255a.git","git_push_url":"https://gist.github.com/7ceecf84840854ee6b9da4d97f41255a.git","html_url":"https://gist.github.com/7ceecf84840854ee6b9da4d97f41255a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7ceecf84840854ee6b9da4d97f41255a/raw/a075748beec7acd17a4b075b634147846e80adaf/main.go","size":298,"truncated":false,"content":"// :glot,\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar a1 = [2]byte{3, 8} // array of 2 bytes\n\t// when using [...] size will be deduced from { ... }\n\ta2 := [...]int{1, 2, 3} // array of 3 integers\n\n\tfmt.Printf(\"Size of a1: %d.\\nSize of a2: %d\\n\", len(a1), len(a2))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:38:07Z","updated_at":"2019-11-06T01:38:07Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e0be357f82632c38863409706e573c9bd036c945","committed_at":"2019-11-06T01:38:06Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/7ceecf84840854ee6b9da4d97f41255a/e0be357f82632c38863409706e573c9bd036c945"}],"truncated":false}
GistOutput:+29
Size of a1: 2.
Size of a2: 3
3358 1573007567409 gist
GistID: 09bea09b2d80e5317ca402e4f4982ec5
Gist:+3305
{"url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5","forks_url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5/forks","commits_url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5/commits","id":"09bea09b2d80e5317ca402e4f4982ec5","node_id":"MDQ6R2lzdDA5YmVhMDliMmQ4MGU1MzE3Y2E0MDJlNGY0OTgyZWM1","git_pull_url":"https://gist.github.com/09bea09b2d80e5317ca402e4f4982ec5.git","git_push_url":"https://gist.github.com/09bea09b2d80e5317ca402e4f4982ec5.git","html_url":"https://gist.github.com/09bea09b2d80e5317ca402e4f4982ec5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/09bea09b2d80e5317ca402e4f4982ec5/raw/149a644661806505d8859976e414dd371f915682/main.go","size":236,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar b bool = true\n\tfmt.Printf(\"b is: '%v'\\n\", b)\n\tb = false\n\tfmt.Printf(\"b is: '%v'\\n\", b)\n\tvar b2 bool\n\tfmt.Printf(\"zero value of bool is: '%v'\\n\", b2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:38:39Z","updated_at":"2019-11-06T01:38:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4aa45ac4e4eca1d40b01c033d2b76bc9ca262702","committed_at":"2019-11-06T01:38:39Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5/4aa45ac4e4eca1d40b01c033d2b76bc9ca262702"}],"truncated":false}
3390 1573007568817 gistoutput
Gist:+3305
{"url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5","forks_url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5/forks","commits_url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5/commits","id":"09bea09b2d80e5317ca402e4f4982ec5","node_id":"MDQ6R2lzdDA5YmVhMDliMmQ4MGU1MzE3Y2E0MDJlNGY0OTgyZWM1","git_pull_url":"https://gist.github.com/09bea09b2d80e5317ca402e4f4982ec5.git","git_push_url":"https://gist.github.com/09bea09b2d80e5317ca402e4f4982ec5.git","html_url":"https://gist.github.com/09bea09b2d80e5317ca402e4f4982ec5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/09bea09b2d80e5317ca402e4f4982ec5/raw/149a644661806505d8859976e414dd371f915682/main.go","size":236,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar b bool = true\n\tfmt.Printf(\"b is: '%v'\\n\", b)\n\tb = false\n\tfmt.Printf(\"b is: '%v'\\n\", b)\n\tvar b2 bool\n\tfmt.Printf(\"zero value of bool is: '%v'\\n\", b2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:38:39Z","updated_at":"2019-11-06T01:38:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4aa45ac4e4eca1d40b01c033d2b76bc9ca262702","committed_at":"2019-11-06T01:38:39Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/09bea09b2d80e5317ca402e4f4982ec5/4aa45ac4e4eca1d40b01c033d2b76bc9ca262702"}],"truncated":false}
GistOutput:+58
b is: 'true'
b is: 'false'
zero value of bool is: 'false'
3278 1573007568997 gist
GistID: ed82d04270fd27094ef4a7a9dfda5b51
Gist:+3225
{"url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51","forks_url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51/forks","commits_url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51/commits","id":"ed82d04270fd27094ef4a7a9dfda5b51","node_id":"MDQ6R2lzdGVkODJkMDQyNzBmZDI3MDk0ZWY0YTdhOWRmZGE1YjUx","git_pull_url":"https://gist.github.com/ed82d04270fd27094ef4a7a9dfda5b51.git","git_push_url":"https://gist.github.com/ed82d04270fd27094ef4a7a9dfda5b51.git","html_url":"https://gist.github.com/ed82d04270fd27094ef4a7a9dfda5b51","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed82d04270fd27094ef4a7a9dfda5b51/raw/06f8cfb1fb2fd16812bca82bceac6a5a2608529c/main.go","size":163,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"unsafe\"\n)\n\nfunc main() {\n\t// :show start\n\tb := true\n\tfmt.Printf(\"size of bool is: %d\\n\", unsafe.Sizeof(b))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:39:14Z","updated_at":"2019-11-06T01:39:14Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"97939c1d47262e6103462d82650214a4273a4afb","committed_at":"2019-11-06T01:39:13Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51/97939c1d47262e6103462d82650214a4273a4afb"}],"truncated":false}
3271 1573007570417 gistoutput
Gist:+3225
{"url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51","forks_url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51/forks","commits_url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51/commits","id":"ed82d04270fd27094ef4a7a9dfda5b51","node_id":"MDQ6R2lzdGVkODJkMDQyNzBmZDI3MDk0ZWY0YTdhOWRmZGE1YjUx","git_pull_url":"https://gist.github.com/ed82d04270fd27094ef4a7a9dfda5b51.git","git_push_url":"https://gist.github.com/ed82d04270fd27094ef4a7a9dfda5b51.git","html_url":"https://gist.github.com/ed82d04270fd27094ef4a7a9dfda5b51","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed82d04270fd27094ef4a7a9dfda5b51/raw/06f8cfb1fb2fd16812bca82bceac6a5a2608529c/main.go","size":163,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"unsafe\"\n)\n\nfunc main() {\n\t// :show start\n\tb := true\n\tfmt.Printf(\"size of bool is: %d\\n\", unsafe.Sizeof(b))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:39:14Z","updated_at":"2019-11-06T01:39:14Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"97939c1d47262e6103462d82650214a4273a4afb","committed_at":"2019-11-06T01:39:13Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/ed82d04270fd27094ef4a7a9dfda5b51/97939c1d47262e6103462d82650214a4273a4afb"}],"truncated":false}
GistOutput:+19
size of bool is: 1
3349 1573007570813 gist
GistID: e2402a6b79ffd884231020bf7054d02b
Gist:+3296
{"url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b","forks_url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b/forks","commits_url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b/commits","id":"e2402a6b79ffd884231020bf7054d02b","node_id":"MDQ6R2lzdGUyNDAyYTZiNzlmZmQ4ODQyMzEwMjBiZjcwNTRkMDJi","git_pull_url":"https://gist.github.com/e2402a6b79ffd884231020bf7054d02b.git","git_push_url":"https://gist.github.com/e2402a6b79ffd884231020bf7054d02b.git","html_url":"https://gist.github.com/e2402a6b79ffd884231020bf7054d02b","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/e2402a6b79ffd884231020bf7054d02b/raw/51c514e0a95390b894b5c85051ca3e90ea8450c8/main.go","size":226,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\t// :show start\n\tvar i1 int = -38\n\tfmt.Printf(\"i1: %s\\n\", strconv.Itoa(i1))\n\n\tvar i2 int32 = 148\n\tfmt.Printf(\"i2: %s\\n\", strconv.Itoa(int(i2)))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:39:39Z","updated_at":"2019-11-06T01:39:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e739b5fded00efafa343fb97c0e2f298c1b72120","committed_at":"2019-11-06T01:39:39Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b/e739b5fded00efafa343fb97c0e2f298c1b72120"}],"truncated":false}
3339 1573007572260 gistoutput
Gist:+3296
{"url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b","forks_url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b/forks","commits_url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b/commits","id":"e2402a6b79ffd884231020bf7054d02b","node_id":"MDQ6R2lzdGUyNDAyYTZiNzlmZmQ4ODQyMzEwMjBiZjcwNTRkMDJi","git_pull_url":"https://gist.github.com/e2402a6b79ffd884231020bf7054d02b.git","git_push_url":"https://gist.github.com/e2402a6b79ffd884231020bf7054d02b.git","html_url":"https://gist.github.com/e2402a6b79ffd884231020bf7054d02b","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/e2402a6b79ffd884231020bf7054d02b/raw/51c514e0a95390b894b5c85051ca3e90ea8450c8/main.go","size":226,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\t// :show start\n\tvar i1 int = -38\n\tfmt.Printf(\"i1: %s\\n\", strconv.Itoa(i1))\n\n\tvar i2 int32 = 148\n\tfmt.Printf(\"i2: %s\\n\", strconv.Itoa(int(i2)))\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:39:39Z","updated_at":"2019-11-06T01:39:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e739b5fded00efafa343fb97c0e2f298c1b72120","committed_at":"2019-11-06T01:39:39Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/e2402a6b79ffd884231020bf7054d02b/e739b5fded00efafa343fb97c0e2f298c1b72120"}],"truncated":false}
GistOutput:+16
i1: -38
i2: 148
3367 1573007572446 gist
GistID: deca0b5f45db59db49bf9b812d66d897
Gist:+3314
{"url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897","forks_url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897/forks","commits_url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897/commits","id":"deca0b5f45db59db49bf9b812d66d897","node_id":"MDQ6R2lzdGRlY2EwYjVmNDVkYjU5ZGI0OWJmOWI4MTJkNjZkODk3","git_pull_url":"https://gist.github.com/deca0b5f45db59db49bf9b812d66d897.git","git_push_url":"https://gist.github.com/deca0b5f45db59db49bf9b812d66d897.git","html_url":"https://gist.github.com/deca0b5f45db59db49bf9b812d66d897","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/deca0b5f45db59db49bf9b812d66d897/raw/7707c8ad2e78433fc110ce9d4c035ffe24063dc3/main.go","size":240,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t// :show start\n\tvar i1 int = -38\n\ts1 := fmt.Sprintf(\"%d\", i1)\n\tfmt.Printf(\"i1: %s\\n\", s1)\n\n\tvar i2 int32 = 148\n\ts2 := fmt.Sprintf(\"%d\", i2)\n\tfmt.Printf(\"i2: %s\\n\", s2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:39:56Z","updated_at":"2019-11-06T01:39:56Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"ec1891bf7affab627e7d893c2b92040c0cce7830","committed_at":"2019-11-06T01:39:55Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897/ec1891bf7affab627e7d893c2b92040c0cce7830"}],"truncated":false}
3357 1573007573919 gistoutput
Gist:+3314
{"url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897","forks_url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897/forks","commits_url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897/commits","id":"deca0b5f45db59db49bf9b812d66d897","node_id":"MDQ6R2lzdGRlY2EwYjVmNDVkYjU5ZGI0OWJmOWI4MTJkNjZkODk3","git_pull_url":"https://gist.github.com/deca0b5f45db59db49bf9b812d66d897.git","git_push_url":"https://gist.github.com/deca0b5f45db59db49bf9b812d66d897.git","html_url":"https://gist.github.com/deca0b5f45db59db49bf9b812d66d897","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/deca0b5f45db59db49bf9b812d66d897/raw/7707c8ad2e78433fc110ce9d4c035ffe24063dc3/main.go","size":240,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t// :show start\n\tvar i1 int = -38\n\ts1 := fmt.Sprintf(\"%d\", i1)\n\tfmt.Printf(\"i1: %s\\n\", s1)\n\n\tvar i2 int32 = 148\n\ts2 := fmt.Sprintf(\"%d\", i2)\n\tfmt.Printf(\"i2: %s\\n\", s2)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:39:56Z","updated_at":"2019-11-06T01:39:56Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"ec1891bf7affab627e7d893c2b92040c0cce7830","committed_at":"2019-11-06T01:39:55Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/deca0b5f45db59db49bf9b812d66d897/ec1891bf7affab627e7d893c2b92040c0cce7830"}],"truncated":false}
GistOutput:+16
i1: -38
i2: 148
3379 1573007574103 gist
GistID: e7a9aeacf18465f8c8c3da328fcaa931
Gist:+3326
{"url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931","forks_url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931/forks","commits_url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931/commits","id":"e7a9aeacf18465f8c8c3da328fcaa931","node_id":"MDQ6R2lzdGU3YTlhZWFjZjE4NDY1ZjhjOGMzZGEzMjhmY2FhOTMx","git_pull_url":"https://gist.github.com/e7a9aeacf18465f8c8c3da328fcaa931.git","git_push_url":"https://gist.github.com/e7a9aeacf18465f8c8c3da328fcaa931.git","html_url":"https://gist.github.com/e7a9aeacf18465f8c8c3da328fcaa931","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/e7a9aeacf18465f8c8c3da328fcaa931/raw/8114d6e582ebd35b90e8edb07310f1a2e7393c04/main.go","size":246,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"strconv\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"-48\"\n\ti1, err := strconv.Atoi(s)\n\tif err != nil {\n\t\tlog.Fatalf(\"strconv.Atoi() failed with %s\\n\", err)\n\t}\n\tfmt.Printf(\"i1: %d\\n\", i1)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:40:17Z","updated_at":"2019-11-06T01:40:18Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"66526c01a9ec8e42b1129086123f563ea04c0005","committed_at":"2019-11-06T01:40:17Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931/66526c01a9ec8e42b1129086123f563ea04c0005"}],"truncated":false}
3360 1573007575544 gistoutput
Gist:+3326
{"url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931","forks_url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931/forks","commits_url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931/commits","id":"e7a9aeacf18465f8c8c3da328fcaa931","node_id":"MDQ6R2lzdGU3YTlhZWFjZjE4NDY1ZjhjOGMzZGEzMjhmY2FhOTMx","git_pull_url":"https://gist.github.com/e7a9aeacf18465f8c8c3da328fcaa931.git","git_push_url":"https://gist.github.com/e7a9aeacf18465f8c8c3da328fcaa931.git","html_url":"https://gist.github.com/e7a9aeacf18465f8c8c3da328fcaa931","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/e7a9aeacf18465f8c8c3da328fcaa931/raw/8114d6e582ebd35b90e8edb07310f1a2e7393c04/main.go","size":246,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"strconv\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"-48\"\n\ti1, err := strconv.Atoi(s)\n\tif err != nil {\n\t\tlog.Fatalf(\"strconv.Atoi() failed with %s\\n\", err)\n\t}\n\tfmt.Printf(\"i1: %d\\n\", i1)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:40:17Z","updated_at":"2019-11-06T01:40:18Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"66526c01a9ec8e42b1129086123f563ea04c0005","committed_at":"2019-11-06T01:40:17Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/e7a9aeacf18465f8c8c3da328fcaa931/66526c01a9ec8e42b1129086123f563ea04c0005"}],"truncated":false}
GistOutput:+8
i1: -48
3383 1573007575742 gist
GistID: 7e5cd5825ec1ab76ffe13036728a346d
Gist:+3330
{"url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d","forks_url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d/forks","commits_url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d/commits","id":"7e5cd5825ec1ab76ffe13036728a346d","node_id":"MDQ6R2lzdDdlNWNkNTgyNWVjMWFiNzZmZmUxMzAzNjcyOGEzNDZk","git_pull_url":"https://gist.github.com/7e5cd5825ec1ab76ffe13036728a346d.git","git_push_url":"https://gist.github.com/7e5cd5825ec1ab76ffe13036728a346d.git","html_url":"https://gist.github.com/7e5cd5825ec1ab76ffe13036728a346d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7e5cd5825ec1ab76ffe13036728a346d/raw/7687240799d1bc1fca37287f0e205f8f9b0b5995/main.go","size":250,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"348\"\n\tvar i int\n\t_, err := fmt.Sscanf(s, \"%d\", &i)\n\tif err != nil {\n\t\tlog.Fatalf(\"fmt.Sscanf failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"i1: %d\\n\", i)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:40:33Z","updated_at":"2019-11-06T01:40:34Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"15f615868ff0f7677dd03b1a06ab14580e8a04c9","committed_at":"2019-11-06T01:40:33Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d/15f615868ff0f7677dd03b1a06ab14580e8a04c9"}],"truncated":false}
3364 1573007577318 gistoutput
Gist:+3330
{"url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d","forks_url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d/forks","commits_url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d/commits","id":"7e5cd5825ec1ab76ffe13036728a346d","node_id":"MDQ6R2lzdDdlNWNkNTgyNWVjMWFiNzZmZmUxMzAzNjcyOGEzNDZk","git_pull_url":"https://gist.github.com/7e5cd5825ec1ab76ffe13036728a346d.git","git_push_url":"https://gist.github.com/7e5cd5825ec1ab76ffe13036728a346d.git","html_url":"https://gist.github.com/7e5cd5825ec1ab76ffe13036728a346d","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7e5cd5825ec1ab76ffe13036728a346d/raw/7687240799d1bc1fca37287f0e205f8f9b0b5995/main.go","size":250,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\t// :show start\n\ts := \"348\"\n\tvar i int\n\t_, err := fmt.Sscanf(s, \"%d\", &i)\n\tif err != nil {\n\t\tlog.Fatalf(\"fmt.Sscanf failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"i1: %d\\n\", i)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:40:33Z","updated_at":"2019-11-06T01:40:34Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"15f615868ff0f7677dd03b1a06ab14580e8a04c9","committed_at":"2019-11-06T01:40:33Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/7e5cd5825ec1ab76ffe13036728a346d/15f615868ff0f7677dd03b1a06ab14580e8a04c9"}],"truncated":false}
GistOutput:+8
i1: 348
3646 1573007577712 gist
GistID: 0fb6b8c471dae1132303140325ed22c5
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
3619 1573007578310 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
3458 1573007578803 gist
GistID: 05256b6d9a98579b1ca37941284934f9
Gist:+3405
{"url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9","forks_url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9/forks","commits_url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9/commits","id":"05256b6d9a98579b1ca37941284934f9","node_id":"MDQ6R2lzdDA1MjU2YjZkOWE5ODU3OWIxY2EzNzk0MTI4NDkzNGY5","git_pull_url":"https://gist.github.com/05256b6d9a98579b1ca37941284934f9.git","git_push_url":"https://gist.github.com/05256b6d9a98579b1ca37941284934f9.git","html_url":"https://gist.github.com/05256b6d9a98579b1ca37941284934f9","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/05256b6d9a98579b1ca37941284934f9/raw/fdd0de27dedf2dc2fc662b78a81a142ec2eee0a8/main.go","size":330,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\n\n// MyError is a custom error type\ntype MyError struct {\n\tmsg string\n}\n\nfunc (e *MyError) Error() string {\n\treturn e.msg\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar err error = &MyError{msg: \"This is custom error type\"}\n\tfmt.Printf(\"err: %s\\n\", err)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:43:46Z","updated_at":"2019-11-06T01:43:46Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"217e3c3546b4960f0ac01352f62e0af7396a6500","committed_at":"2019-11-06T01:43:45Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9/217e3c3546b4960f0ac01352f62e0af7396a6500"}],"truncated":false}
3463 1573007580182 gistoutput
Gist:+3405
{"url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9","forks_url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9/forks","commits_url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9/commits","id":"05256b6d9a98579b1ca37941284934f9","node_id":"MDQ6R2lzdDA1MjU2YjZkOWE5ODU3OWIxY2EzNzk0MTI4NDkzNGY5","git_pull_url":"https://gist.github.com/05256b6d9a98579b1ca37941284934f9.git","git_push_url":"https://gist.github.com/05256b6d9a98579b1ca37941284934f9.git","html_url":"https://gist.github.com/05256b6d9a98579b1ca37941284934f9","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/05256b6d9a98579b1ca37941284934f9/raw/fdd0de27dedf2dc2fc662b78a81a142ec2eee0a8/main.go","size":330,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\n\n// MyError is a custom error type\ntype MyError struct {\n\tmsg string\n}\n\nfunc (e *MyError) Error() string {\n\treturn e.msg\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tvar err error = &MyError{msg: \"This is custom error type\"}\n\tfmt.Printf(\"err: %s\\n\", err)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:43:46Z","updated_at":"2019-11-06T01:43:46Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"217e3c3546b4960f0ac01352f62e0af7396a6500","committed_at":"2019-11-06T01:43:45Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/05256b6d9a98579b1ca37941284934f9/217e3c3546b4960f0ac01352f62e0af7396a6500"}],"truncated":false}
GistOutput:+31
err: This is custom error type
4206 1573007580615 gist
GistID: 7a604ace0129bb6cea464e447bca5a60
Gist:+4153
{"url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60","forks_url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60/forks","commits_url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60/commits","id":"7a604ace0129bb6cea464e447bca5a60","node_id":"MDQ6R2lzdDdhNjA0YWNlMDEyOWJiNmNlYTQ2NGU0NDdiY2E1YTYw","git_pull_url":"https://gist.github.com/7a604ace0129bb6cea464e447bca5a60.git","git_push_url":"https://gist.github.com/7a604ace0129bb6cea464e447bca5a60.git","html_url":"https://gist.github.com/7a604ace0129bb6cea464e447bca5a60","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7a604ace0129bb6cea464e447bca5a60/raw/d695f1dd74d736d70141a66867a4344d075eaf55/main.go","size":1017,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n)\n\n// :show start\n// FmtArgs formats args as a string. First argument should be format string\n// and the rest are arguments to the format\nfunc FmtArgs(args ...interface{}) string {\n\tif len(args) == 0 {\n\t\treturn \"\"\n\t}\n\tformat := args[0].(string)\n\tif len(args) == 1 {\n\t\treturn format\n\t}\n\treturn fmt.Sprintf(format, args[1:]...)\n}\n\nfunc panicWithMsg(defaultMsg string, args ...interface{}) {\n\ts := FmtArgs(args...)\n\tif s == \"\" {\n\t\ts = defaultMsg\n\t}\n\tfmt.Printf(\"%s\\n\", s)\n\tpanic(s)\n}\n\n// PanicIf panics if cond is true\nfunc PanicIf(cond bool, args ...interface{}) {\n\tif !cond {\n\t\treturn\n\t}\n\tpanicWithMsg(\"PanicIf: condition failed\", args...)\n}\n\n// PanicIfErr panics if err is not nil\nfunc PanicIfErr(err error, args ...interface{}) {\n\tif err == nil {\n\t\treturn\n\t}\n\tpanicWithMsg(err.Error(), args...)\n}\n\nfunc main() {\n\tPanicIfErr(nil)                              // nothing happens\n\tPanicIfErr(errors.New(\"there was an error\")) // will panic\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:44:12Z","updated_at":"2019-11-06T01:44:12Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7acc80df33b8e0a297422f9ec4fc438b78aa3d5f","committed_at":"2019-11-06T01:44:11Z","change_status":{"total":54,"additions":54,"deletions":0},"url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60/7acc80df33b8e0a297422f9ec4fc438b78aa3d5f"}],"truncated":false}
4489 1573007582041 gistoutput
Gist:+4153
{"url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60","forks_url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60/forks","commits_url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60/commits","id":"7a604ace0129bb6cea464e447bca5a60","node_id":"MDQ6R2lzdDdhNjA0YWNlMDEyOWJiNmNlYTQ2NGU0NDdiY2E1YTYw","git_pull_url":"https://gist.github.com/7a604ace0129bb6cea464e447bca5a60.git","git_push_url":"https://gist.github.com/7a604ace0129bb6cea464e447bca5a60.git","html_url":"https://gist.github.com/7a604ace0129bb6cea464e447bca5a60","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/7a604ace0129bb6cea464e447bca5a60/raw/d695f1dd74d736d70141a66867a4344d075eaf55/main.go","size":1017,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n)\n\n// :show start\n// FmtArgs formats args as a string. First argument should be format string\n// and the rest are arguments to the format\nfunc FmtArgs(args ...interface{}) string {\n\tif len(args) == 0 {\n\t\treturn \"\"\n\t}\n\tformat := args[0].(string)\n\tif len(args) == 1 {\n\t\treturn format\n\t}\n\treturn fmt.Sprintf(format, args[1:]...)\n}\n\nfunc panicWithMsg(defaultMsg string, args ...interface{}) {\n\ts := FmtArgs(args...)\n\tif s == \"\" {\n\t\ts = defaultMsg\n\t}\n\tfmt.Printf(\"%s\\n\", s)\n\tpanic(s)\n}\n\n// PanicIf panics if cond is true\nfunc PanicIf(cond bool, args ...interface{}) {\n\tif !cond {\n\t\treturn\n\t}\n\tpanicWithMsg(\"PanicIf: condition failed\", args...)\n}\n\n// PanicIfErr panics if err is not nil\nfunc PanicIfErr(err error, args ...interface{}) {\n\tif err == nil {\n\t\treturn\n\t}\n\tpanicWithMsg(err.Error(), args...)\n}\n\nfunc main() {\n\tPanicIfErr(nil)                              // nothing happens\n\tPanicIfErr(errors.New(\"there was an error\")) // will panic\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:44:12Z","updated_at":"2019-11-06T01:44:12Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7acc80df33b8e0a297422f9ec4fc438b78aa3d5f","committed_at":"2019-11-06T01:44:11Z","change_status":{"total":54,"additions":54,"deletions":0},"url":"https://api.github.com/gists/7a604ace0129bb6cea464e447bca5a60/7acc80df33b8e0a297422f9ec4fc438b78aa3d5f"}],"truncated":false}
GistOutput:+307
there was an error
panic: there was an error

goroutine 1 [running]:
main.panicWithMsg(0x4c4e61, 0x12, 0x0, 0x0, 0x0)
	/tmp/src313740862/main.go:30 +0x126
main.PanicIfErr(0x4dc660, 0xc00005a1e0, 0x0, 0x0, 0x0)
	/tmp/src313740862/main.go:46 +0x6c
main.main()
	/tmp/src313740862/main.go:51 +0x84
exit status 2
3999 1573007582531 gist
GistID: c095af4710a7aaa2c6146ebe60dabbba
Gist:+3946
{"url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba","forks_url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba/forks","commits_url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba/commits","id":"c095af4710a7aaa2c6146ebe60dabbba","node_id":"MDQ6R2lzdGMwOTVhZjQ3MTBhN2FhYTJjNjE0NmViZTYwZGFiYmJh","git_pull_url":"https://gist.github.com/c095af4710a7aaa2c6146ebe60dabbba.git","git_push_url":"https://gist.github.com/c095af4710a7aaa2c6146ebe60dabbba.git","html_url":"https://gist.github.com/c095af4710a7aaa2c6146ebe60dabbba","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/c095af4710a7aaa2c6146ebe60dabbba/raw/676dac49d832a1b3852cd60fc07b69fae5d02a5c/main.go","size":811,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n)\n\n// :show start\nvar cache map[int]int\nvar mu sync.RWMutex\n\nfunc expensiveOperation(n int) int {\n\t// in real code this operation would be very expensive\n\treturn n * n\n}\n\nfunc getCached(n int) int {\n\tmu.RLock()\n\tv, isCached := cache[n]\n\tmu.RUnlock()\n\tif isCached {\n\t\treturn v\n\t}\n\n\tv = expensiveOperation(n)\n\n\tmu.Lock()\n\tcache[n] = v\n\tmu.Unlock()\n\treturn v\n}\n\nfunc accessCache() {\n\ttotal := 0\n\tfor i := 0; i < 5; i++ {\n\t\tn := getCached(i)\n\t\ttotal += n\n\t}\n\tfmt.Printf(\"total: %d\\n\", total)\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tcache = make(map[int]int)\n\tgo accessCache()\n\taccessCache()\n\t// :show end\n\n\t// for simplicity of the example\n\t// don't use time.Sleep() to coordinate goroutines\n\t// in production code\n\ttime.Sleep(100 * time.Millisecond)\n}"}},"public":true,"created_at":"2019-11-06T01:45:29Z","updated_at":"2019-11-06T01:45:29Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"48961e0c296aa1eee444675ae4c83fc20d5eb8eb","committed_at":"2019-11-06T01:45:28Z","change_status":{"total":57,"additions":57,"deletions":0},"url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba/48961e0c296aa1eee444675ae4c83fc20d5eb8eb"}],"truncated":false}
3993 1573007584140 gistoutput
Gist:+3946
{"url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba","forks_url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba/forks","commits_url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba/commits","id":"c095af4710a7aaa2c6146ebe60dabbba","node_id":"MDQ6R2lzdGMwOTVhZjQ3MTBhN2FhYTJjNjE0NmViZTYwZGFiYmJh","git_pull_url":"https://gist.github.com/c095af4710a7aaa2c6146ebe60dabbba.git","git_push_url":"https://gist.github.com/c095af4710a7aaa2c6146ebe60dabbba.git","html_url":"https://gist.github.com/c095af4710a7aaa2c6146ebe60dabbba","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/c095af4710a7aaa2c6146ebe60dabbba/raw/676dac49d832a1b3852cd60fc07b69fae5d02a5c/main.go","size":811,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n\t\"time\"\n)\n\n// :show start\nvar cache map[int]int\nvar mu sync.RWMutex\n\nfunc expensiveOperation(n int) int {\n\t// in real code this operation would be very expensive\n\treturn n * n\n}\n\nfunc getCached(n int) int {\n\tmu.RLock()\n\tv, isCached := cache[n]\n\tmu.RUnlock()\n\tif isCached {\n\t\treturn v\n\t}\n\n\tv = expensiveOperation(n)\n\n\tmu.Lock()\n\tcache[n] = v\n\tmu.Unlock()\n\treturn v\n}\n\nfunc accessCache() {\n\ttotal := 0\n\tfor i := 0; i < 5; i++ {\n\t\tn := getCached(i)\n\t\ttotal += n\n\t}\n\tfmt.Printf(\"total: %d\\n\", total)\n}\n\n// :show end\n\nfunc main() {\n\t// :show start\n\tcache = make(map[int]int)\n\tgo accessCache()\n\taccessCache()\n\t// :show end\n\n\t// for simplicity of the example\n\t// don't use time.Sleep() to coordinate goroutines\n\t// in production code\n\ttime.Sleep(100 * time.Millisecond)\n}"}},"public":true,"created_at":"2019-11-06T01:45:29Z","updated_at":"2019-11-06T01:45:29Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"48961e0c296aa1eee444675ae4c83fc20d5eb8eb","committed_at":"2019-11-06T01:45:28Z","change_status":{"total":57,"additions":57,"deletions":0},"url":"https://api.github.com/gists/c095af4710a7aaa2c6146ebe60dabbba/48961e0c296aa1eee444675ae4c83fc20d5eb8eb"}],"truncated":false}
GistOutput:+20
total: 30
total: 30
3628 1573007584606 gist
GistID: c5fce4941219e0ec33c4a45bffde6054
Gist:+3575
{"url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054","forks_url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054/forks","commits_url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054/commits","id":"c5fce4941219e0ec33c4a45bffde6054","node_id":"MDQ6R2lzdGM1ZmNlNDk0MTIxOWUwZWMzM2M0YTQ1YmZmZGU2MDU0","git_pull_url":"https://gist.github.com/c5fce4941219e0ec33c4a45bffde6054.git","git_push_url":"https://gist.github.com/c5fce4941219e0ec33c4a45bffde6054.git","html_url":"https://gist.github.com/c5fce4941219e0ec33c4a45bffde6054","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/c5fce4941219e0ec33c4a45bffde6054/raw/d2ff3c10ce1dbf2d4d756bcd578296f85987a2c3/main.go","size":459,"truncated":false,"content":"// :run go run -race main.go\n// :allow error\npackage main\n\nimport (\n\t\"fmt\"\n\t\"runtime\"\n\t\"sync\"\n\t\"time\"\n)\n\n// :show start\nvar (\n\tn int\n)\n\nfunc main() {\n\tvar wg sync.WaitGroup\n\tnCPU := runtime.NumCPU()\n\tnIter := 10\n\tfor i := 0; i < nCPU; i++ {\n\t\twg.Add(1)\n\t\tgo func() {\n\t\t\tdefer wg.Done()\n\t\t\tfor j := 0; j < nIter; j++ {\n\t\t\t\tn++\n\t\t\t\ttime.Sleep(time.Microsecond * 10)\n\t\t\t}\n\t\t}()\n\t}\n\twg.Wait()\n\tfmt.Printf(\"n is: %d, expected: %d\\n\", n, nCPU*nIter)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:46:08Z","updated_at":"2019-11-06T01:46:08Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"69dad136c1cf505ad6ddbe5a6987d6930dfa7e01","committed_at":"2019-11-06T01:46:07Z","change_status":{"total":35,"additions":35,"deletions":0},"url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054/69dad136c1cf505ad6ddbe5a6987d6930dfa7e01"}],"truncated":false}
3678 1573007585531 gistoutput
Gist:+3575
{"url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054","forks_url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054/forks","commits_url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054/commits","id":"c5fce4941219e0ec33c4a45bffde6054","node_id":"MDQ6R2lzdGM1ZmNlNDk0MTIxOWUwZWMzM2M0YTQ1YmZmZGU2MDU0","git_pull_url":"https://gist.github.com/c5fce4941219e0ec33c4a45bffde6054.git","git_push_url":"https://gist.github.com/c5fce4941219e0ec33c4a45bffde6054.git","html_url":"https://gist.github.com/c5fce4941219e0ec33c4a45bffde6054","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/c5fce4941219e0ec33c4a45bffde6054/raw/d2ff3c10ce1dbf2d4d756bcd578296f85987a2c3/main.go","size":459,"truncated":false,"content":"// :run go run -race main.go\n// :allow error\npackage main\n\nimport (\n\t\"fmt\"\n\t\"runtime\"\n\t\"sync\"\n\t\"time\"\n)\n\n// :show start\nvar (\n\tn int\n)\n\nfunc main() {\n\tvar wg sync.WaitGroup\n\tnCPU := runtime.NumCPU()\n\tnIter := 10\n\tfor i := 0; i < nCPU; i++ {\n\t\twg.Add(1)\n\t\tgo func() {\n\t\t\tdefer wg.Done()\n\t\t\tfor j := 0; j < nIter; j++ {\n\t\t\t\tn++\n\t\t\t\ttime.Sleep(time.Microsecond * 10)\n\t\t\t}\n\t\t}()\n\t}\n\twg.Wait()\n\tfmt.Printf(\"n is: %d, expected: %d\\n\", n, nCPU*nIter)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:46:08Z","updated_at":"2019-11-06T01:46:08Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"69dad136c1cf505ad6ddbe5a6987d6930dfa7e01","committed_at":"2019-11-06T01:46:07Z","change_status":{"total":35,"additions":35,"deletions":0},"url":"https://api.github.com/gists/c5fce4941219e0ec33c4a45bffde6054/69dad136c1cf505ad6ddbe5a6987d6930dfa7e01"}],"truncated":false}
GistOutput:+75
# runtime/cgo
exec: "gcc": executable file not found in $PATH
exit status 2
3347 1573007585984 gist
GistID: 3fe118001acb85a15b853107801cb079
Gist:+3294
{"url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079","forks_url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079/forks","commits_url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079/commits","id":"3fe118001acb85a15b853107801cb079","node_id":"MDQ6R2lzdDNmZTExODAwMWFjYjg1YTE1Yjg1MzEwNzgwMWNiMDc5","git_pull_url":"https://gist.github.com/3fe118001acb85a15b853107801cb079.git","git_push_url":"https://gist.github.com/3fe118001acb85a15b853107801cb079.git","html_url":"https://gist.github.com/3fe118001acb85a15b853107801cb079","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3fe118001acb85a15b853107801cb079/raw/599ccb6600a2e68120ebc3bf06b6bf63f06881e8/main.go","size":236,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nimport \"io\"\n\n// :show start\ntype MyReadCloser struct {\n}\n\nfunc (rc *MyReadCloser) Read(d []byte) (int, error) {\n\treturn 0, nil\n}\n\nvar _ io.ReadCloser = &MyReadCloser{}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:51:02Z","updated_at":"2019-11-06T01:51:02Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9d80fa574cb4eb93ab316fb5d6768098f4ea4096","committed_at":"2019-11-06T01:51:01Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079/9d80fa574cb4eb93ab316fb5d6768098f4ea4096"}],"truncated":false}
3521 1573007586437 gistoutput
Gist:+3294
{"url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079","forks_url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079/forks","commits_url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079/commits","id":"3fe118001acb85a15b853107801cb079","node_id":"MDQ6R2lzdDNmZTExODAwMWFjYjg1YTE1Yjg1MzEwNzgwMWNiMDc5","git_pull_url":"https://gist.github.com/3fe118001acb85a15b853107801cb079.git","git_push_url":"https://gist.github.com/3fe118001acb85a15b853107801cb079.git","html_url":"https://gist.github.com/3fe118001acb85a15b853107801cb079","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3fe118001acb85a15b853107801cb079/raw/599ccb6600a2e68120ebc3bf06b6bf63f06881e8/main.go","size":236,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nimport \"io\"\n\n// :show start\ntype MyReadCloser struct {\n}\n\nfunc (rc *MyReadCloser) Read(d []byte) (int, error) {\n\treturn 0, nil\n}\n\nvar _ io.ReadCloser = &MyReadCloser{}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:51:02Z","updated_at":"2019-11-06T01:51:02Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9d80fa574cb4eb93ab316fb5d6768098f4ea4096","committed_at":"2019-11-06T01:51:01Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/3fe118001acb85a15b853107801cb079/9d80fa574cb4eb93ab316fb5d6768098f4ea4096"}],"truncated":false}
GistOutput:+198
# test
./main.go:15:5: cannot use &MyReadCloser literal (type *MyReadCloser) as type io.ReadCloser in assignment:
	*MyReadCloser does not implement io.ReadCloser (missing Close method)
exit status 2
3546 1573007586830 gist
GistID: 12ace93c5db6fa934ba022a212bbba47
Gist:+3493
{"url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47","forks_url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47/forks","commits_url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47/commits","id":"12ace93c5db6fa934ba022a212bbba47","node_id":"MDQ6R2lzdDEyYWNlOTNjNWRiNmZhOTM0YmEwMjJhMjEyYmJiYTQ3","git_pull_url":"https://gist.github.com/12ace93c5db6fa934ba022a212bbba47.git","git_push_url":"https://gist.github.com/12ace93c5db6fa934ba022a212bbba47.git","html_url":"https://gist.github.com/12ace93c5db6fa934ba022a212bbba47","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/12ace93c5db6fa934ba022a212bbba47/raw/0511fbb8781273a8e5c000b16ffb4c7df25624ec/main.go","size":399,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\n\nfunc main() {\n\tchResult := make(chan int, 1)\n\n\tgo func() {\n\t\ttime.Sleep(1 * time.Second)\n\t\tchResult <- 5\n\t\tfmt.Printf(\"Worker finished\")\n\t}()\n\n\tselect {\n\tcase res := <-chResult:\n\t\tfmt.Printf(\"Got %d from worker\\n\", res)\n\tcase <-time.After(100 * time.Millisecond):\n\t\tfmt.Printf(\"Timed out before worker finished\\n\")\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:51:40Z","updated_at":"2019-11-06T01:51:41Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2b881aab1b1ff09f5cf58c405403a89ef0fae46c","committed_at":"2019-11-06T01:51:40Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47/2b881aab1b1ff09f5cf58c405403a89ef0fae46c"}],"truncated":false}
3553 1573007588347 gistoutput
Gist:+3493
{"url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47","forks_url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47/forks","commits_url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47/commits","id":"12ace93c5db6fa934ba022a212bbba47","node_id":"MDQ6R2lzdDEyYWNlOTNjNWRiNmZhOTM0YmEwMjJhMjEyYmJiYTQ3","git_pull_url":"https://gist.github.com/12ace93c5db6fa934ba022a212bbba47.git","git_push_url":"https://gist.github.com/12ace93c5db6fa934ba022a212bbba47.git","html_url":"https://gist.github.com/12ace93c5db6fa934ba022a212bbba47","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/12ace93c5db6fa934ba022a212bbba47/raw/0511fbb8781273a8e5c000b16ffb4c7df25624ec/main.go","size":399,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\n\nfunc main() {\n\tchResult := make(chan int, 1)\n\n\tgo func() {\n\t\ttime.Sleep(1 * time.Second)\n\t\tchResult <- 5\n\t\tfmt.Printf(\"Worker finished\")\n\t}()\n\n\tselect {\n\tcase res := <-chResult:\n\t\tfmt.Printf(\"Got %d from worker\\n\", res)\n\tcase <-time.After(100 * time.Millisecond):\n\t\tfmt.Printf(\"Timed out before worker finished\\n\")\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:51:40Z","updated_at":"2019-11-06T01:51:41Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"2b881aab1b1ff09f5cf58c405403a89ef0fae46c","committed_at":"2019-11-06T01:51:40Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/12ace93c5db6fa934ba022a212bbba47/2b881aab1b1ff09f5cf58c405403a89ef0fae46c"}],"truncated":false}
GistOutput:+33
Timed out before worker finished
3585 1573007588780 gist
GistID: aa8c428498bec53fdb448567c4b3f658
Gist:+3532
{"url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658","forks_url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658/forks","commits_url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658/commits","id":"aa8c428498bec53fdb448567c4b3f658","node_id":"MDQ6R2lzdGFhOGM0Mjg0OThiZWM1M2ZkYjQ0ODU2N2M0YjNmNjU4","git_pull_url":"https://gist.github.com/aa8c428498bec53fdb448567c4b3f658.git","git_push_url":"https://gist.github.com/aa8c428498bec53fdb448567c4b3f658.git","html_url":"https://gist.github.com/aa8c428498bec53fdb448567c4b3f658","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/aa8c428498bec53fdb448567c4b3f658/raw/7d9d21fbfe3ef80da9da077fb8929c214f027a0b/main.go","size":427,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\nfunc main() {\n\tch := make(chan int, 1)\n\nend:\n\tfor {\n\t\tselect {\n\t\tcase n := <-ch:\n\t\t\tfmt.Printf(\"Received %d from a channel\\n\", n)\n\t\t\tbreak end\n\t\tdefault:\n\t\t\tfmt.Print(\"Channel is empty\\n\")\n\t\t\tch <- 8\n\t\t}\n\t\t// wait for channel to be filled with values\n\t\t// don't use time.Sleep() like that in production code\n\t\ttime.Sleep(20 * time.Millisecond)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:52:40Z","updated_at":"2019-11-06T01:52:41Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5aa58ecd432ed78eabe38039e90634d6d324ce43","committed_at":"2019-11-06T01:52:40Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658/5aa58ecd432ed78eabe38039e90634d6d324ce43"}],"truncated":false}
3602 1573007590169 gistoutput
Gist:+3532
{"url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658","forks_url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658/forks","commits_url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658/commits","id":"aa8c428498bec53fdb448567c4b3f658","node_id":"MDQ6R2lzdGFhOGM0Mjg0OThiZWM1M2ZkYjQ0ODU2N2M0YjNmNjU4","git_pull_url":"https://gist.github.com/aa8c428498bec53fdb448567c4b3f658.git","git_push_url":"https://gist.github.com/aa8c428498bec53fdb448567c4b3f658.git","html_url":"https://gist.github.com/aa8c428498bec53fdb448567c4b3f658","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/aa8c428498bec53fdb448567c4b3f658/raw/7d9d21fbfe3ef80da9da077fb8929c214f027a0b/main.go","size":427,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\nfunc main() {\n\tch := make(chan int, 1)\n\nend:\n\tfor {\n\t\tselect {\n\t\tcase n := <-ch:\n\t\t\tfmt.Printf(\"Received %d from a channel\\n\", n)\n\t\t\tbreak end\n\t\tdefault:\n\t\t\tfmt.Print(\"Channel is empty\\n\")\n\t\t\tch <- 8\n\t\t}\n\t\t// wait for channel to be filled with values\n\t\t// don't use time.Sleep() like that in production code\n\t\ttime.Sleep(20 * time.Millisecond)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:52:40Z","updated_at":"2019-11-06T01:52:41Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"5aa58ecd432ed78eabe38039e90634d6d324ce43","committed_at":"2019-11-06T01:52:40Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/aa8c428498bec53fdb448567c4b3f658/5aa58ecd432ed78eabe38039e90634d6d324ce43"}],"truncated":false}
GistOutput:+43
Channel is empty
Received 8 from a channel
3384 1573007590538 gist
GistID: 4787e53410ebd82b3f4856eb274eaafe
Gist:+3331
{"url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe","forks_url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe/forks","commits_url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe/commits","id":"4787e53410ebd82b3f4856eb274eaafe","node_id":"MDQ6R2lzdDQ3ODdlNTM0MTBlYmQ4MmIzZjQ4NTZlYjI3NGVhYWZl","git_pull_url":"https://gist.github.com/4787e53410ebd82b3f4856eb274eaafe.git","git_push_url":"https://gist.github.com/4787e53410ebd82b3f4856eb274eaafe.git","html_url":"https://gist.github.com/4787e53410ebd82b3f4856eb274eaafe","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/4787e53410ebd82b3f4856eb274eaafe/raw/b88aba60bf36a97131e15fe29424749bfe2918da/main.go","size":256,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\n\nfunc foo(ch chan int) {\n\tch <- 1\n\tch <- 2\n\tclose(ch)\n}\n\nfunc main() {\n\tch := make(chan int)\n\tgo foo(ch)\n\tfor n := range ch {\n\t\tfmt.Println(n)\n\t}\n\tfmt.Println(\"channel is now closed\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:53:21Z","updated_at":"2019-11-06T01:53:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"38a6cbfa15fa75f4664716e035daccf22c9dae8a","committed_at":"2019-11-06T01:53:21Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe/38a6cbfa15fa75f4664716e035daccf22c9dae8a"}],"truncated":false}
3384 1573007591921 gistoutput
Gist:+3331
{"url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe","forks_url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe/forks","commits_url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe/commits","id":"4787e53410ebd82b3f4856eb274eaafe","node_id":"MDQ6R2lzdDQ3ODdlNTM0MTBlYmQ4MmIzZjQ4NTZlYjI3NGVhYWZl","git_pull_url":"https://gist.github.com/4787e53410ebd82b3f4856eb274eaafe.git","git_push_url":"https://gist.github.com/4787e53410ebd82b3f4856eb274eaafe.git","html_url":"https://gist.github.com/4787e53410ebd82b3f4856eb274eaafe","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/4787e53410ebd82b3f4856eb274eaafe/raw/b88aba60bf36a97131e15fe29424749bfe2918da/main.go","size":256,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\n\nfunc foo(ch chan int) {\n\tch <- 1\n\tch <- 2\n\tclose(ch)\n}\n\nfunc main() {\n\tch := make(chan int)\n\tgo foo(ch)\n\tfor n := range ch {\n\t\tfmt.Println(n)\n\t}\n\tfmt.Println(\"channel is now closed\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T01:53:21Z","updated_at":"2019-11-06T01:53:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"38a6cbfa15fa75f4664716e035daccf22c9dae8a","committed_at":"2019-11-06T01:53:21Z","change_status":{"total":25,"additions":25,"deletions":0},"url":"https://api.github.com/gists/4787e53410ebd82b3f4856eb274eaafe/38a6cbfa15fa75f4664716e035daccf22c9dae8a"}],"truncated":false}
GistOutput:+26
1
2
channel is now closed
3568 1573007592518 gist
GistID: 3cbab9f0627d362f3be4d52be763a3d9
Gist:+3515
{"url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9","forks_url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9/forks","commits_url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9/commits","id":"3cbab9f0627d362f3be4d52be763a3d9","node_id":"MDQ6R2lzdDNjYmFiOWYwNjI3ZDM2MmYzYmU0ZDUyYmU3NjNhM2Q5","git_pull_url":"https://gist.github.com/3cbab9f0627d362f3be4d52be763a3d9.git","git_push_url":"https://gist.github.com/3cbab9f0627d362f3be4d52be763a3d9.git","html_url":"https://gist.github.com/3cbab9f0627d362f3be4d52be763a3d9","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3cbab9f0627d362f3be4d52be763a3d9/raw/c0c727fd0f3f1ee510c272452b67b9890e70f51c/main.go","size":419,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\t// :show start\n\tch := make(chan string)\n\n\tgo func() {\n\t\tfor s := range ch {\n\t\t\tfmt.Printf(\"received from channel: %s\\n\", s)\n\t\t}\n\t\tfmt.Print(\"range loop finished because ch was closed\\n\")\n\t}()\n\n\tch <- \"foo\"\n\tclose(ch)\n\t// :show end\n\n\t// only to simplify example, don't sleep to coordinate\n\t// goroutines in real code\n\ttime.Sleep(100 * time.Millisecond)\n}\n"}},"public":true,"created_at":"2019-11-06T01:53:48Z","updated_at":"2019-11-06T01:53:49Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"55234b96ca78f476952ccb9c17a62c584330cda7","committed_at":"2019-11-06T01:53:48Z","change_status":{"total":27,"additions":27,"deletions":0},"url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9/55234b96ca78f476952ccb9c17a62c584330cda7"}],"truncated":false}
3611 1573007594659 gistoutput
Gist:+3515
{"url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9","forks_url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9/forks","commits_url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9/commits","id":"3cbab9f0627d362f3be4d52be763a3d9","node_id":"MDQ6R2lzdDNjYmFiOWYwNjI3ZDM2MmYzYmU0ZDUyYmU3NjNhM2Q5","git_pull_url":"https://gist.github.com/3cbab9f0627d362f3be4d52be763a3d9.git","git_push_url":"https://gist.github.com/3cbab9f0627d362f3be4d52be763a3d9.git","html_url":"https://gist.github.com/3cbab9f0627d362f3be4d52be763a3d9","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3cbab9f0627d362f3be4d52be763a3d9/raw/c0c727fd0f3f1ee510c272452b67b9890e70f51c/main.go","size":419,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\t// :show start\n\tch := make(chan string)\n\n\tgo func() {\n\t\tfor s := range ch {\n\t\t\tfmt.Printf(\"received from channel: %s\\n\", s)\n\t\t}\n\t\tfmt.Print(\"range loop finished because ch was closed\\n\")\n\t}()\n\n\tch <- \"foo\"\n\tclose(ch)\n\t// :show end\n\n\t// only to simplify example, don't sleep to coordinate\n\t// goroutines in real code\n\ttime.Sleep(100 * time.Millisecond)\n}\n"}},"public":true,"created_at":"2019-11-06T01:53:48Z","updated_at":"2019-11-06T01:53:49Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"55234b96ca78f476952ccb9c17a62c584330cda7","committed_at":"2019-11-06T01:53:48Z","change_status":{"total":27,"additions":27,"deletions":0},"url":"https://api.github.com/gists/3cbab9f0627d362f3be4d52be763a3d9/55234b96ca78f476952ccb9c17a62c584330cda7"}],"truncated":false}
GistOutput:+69
received from channel: foo
range loop finished because ch was closed
3345 1573007594830 gist
GistID: a52e1e0b966a13e645f79f1719b9e37a
Gist:+3292
{"url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a","forks_url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a/forks","commits_url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a/commits","id":"a52e1e0b966a13e645f79f1719b9e37a","node_id":"MDQ6R2lzdGE1MmUxZTBiOTY2YTEzZTY0NWY3OWYxNzE5YjllMzdh","git_pull_url":"https://gist.github.com/a52e1e0b966a13e645f79f1719b9e37a.git","git_push_url":"https://gist.github.com/a52e1e0b966a13e645f79f1719b9e37a.git","html_url":"https://gist.github.com/a52e1e0b966a13e645f79f1719b9e37a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/a52e1e0b966a13e645f79f1719b9e37a/raw/95e55ff80121b6e6dd5450865ddcb8f35ef5f26b/main.go","size":230,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t// :show start\n\tch := make(chan string)\n\tclose(ch)\n\tv := <-ch\n\tfmt.Printf(\"Receive from closed channel immediately returns zero value of the type: %#v\\n\", v)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:54:03Z","updated_at":"2019-11-06T01:54:03Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"ec784312c8e9e64e03ee386050a39543a652c4ff","committed_at":"2019-11-06T01:54:02Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a/ec784312c8e9e64e03ee386050a39543a652c4ff"}],"truncated":false}
3394 1573007596915 gistoutput
Gist:+3292
{"url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a","forks_url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a/forks","commits_url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a/commits","id":"a52e1e0b966a13e645f79f1719b9e37a","node_id":"MDQ6R2lzdGE1MmUxZTBiOTY2YTEzZTY0NWY3OWYxNzE5YjllMzdh","git_pull_url":"https://gist.github.com/a52e1e0b966a13e645f79f1719b9e37a.git","git_push_url":"https://gist.github.com/a52e1e0b966a13e645f79f1719b9e37a.git","html_url":"https://gist.github.com/a52e1e0b966a13e645f79f1719b9e37a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/a52e1e0b966a13e645f79f1719b9e37a/raw/95e55ff80121b6e6dd5450865ddcb8f35ef5f26b/main.go","size":230,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t// :show start\n\tch := make(chan string)\n\tclose(ch)\n\tv := <-ch\n\tfmt.Printf(\"Receive from closed channel immediately returns zero value of the type: %#v\\n\", v)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:54:03Z","updated_at":"2019-11-06T01:54:03Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"ec784312c8e9e64e03ee386050a39543a652c4ff","committed_at":"2019-11-06T01:54:02Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/a52e1e0b966a13e645f79f1719b9e37a/ec784312c8e9e64e03ee386050a39543a652c4ff"}],"truncated":false}
GistOutput:+75
Receive from closed channel immediately returns zero value of the type: ""
3450 1573007597100 gist
GistID: 09a10fcdb162600e022305447a332d42
Gist:+3397
{"url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42","forks_url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42/forks","commits_url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42/commits","id":"09a10fcdb162600e022305447a332d42","node_id":"MDQ6R2lzdDA5YTEwZmNkYjE2MjYwMGUwMjIzMDU0NDdhMzMyZDQy","git_pull_url":"https://gist.github.com/09a10fcdb162600e022305447a332d42.git","git_push_url":"https://gist.github.com/09a10fcdb162600e022305447a332d42.git","html_url":"https://gist.github.com/09a10fcdb162600e022305447a332d42","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/09a10fcdb162600e022305447a332d42/raw/7a0b09336efaf8207114077a910359f4adf474cd/main.go","size":320,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t// :show start\n\tch := make(chan int)\n\tgo func() {\n\t\tch <- 1\n\t\tclose(ch)\n\t}()\n\tv, isClosed := <-ch\n\tfmt.Printf(\"received %d, is channel closed: %v\\n\", v, isClosed)\n\tv, isClosed = <-ch\n\tfmt.Printf(\"received %d, is channel closed: %v\\n\", v, isClosed)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:54:20Z","updated_at":"2019-11-06T01:54:20Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"65fd35c10a08c0affdcf372f48f21b2a17e9ea9b","committed_at":"2019-11-06T01:54:19Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42/65fd35c10a08c0affdcf372f48f21b2a17e9ea9b"}],"truncated":false}
3497 1573007599066 gistoutput
Gist:+3397
{"url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42","forks_url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42/forks","commits_url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42/commits","id":"09a10fcdb162600e022305447a332d42","node_id":"MDQ6R2lzdDA5YTEwZmNkYjE2MjYwMGUwMjIzMDU0NDdhMzMyZDQy","git_pull_url":"https://gist.github.com/09a10fcdb162600e022305447a332d42.git","git_push_url":"https://gist.github.com/09a10fcdb162600e022305447a332d42.git","html_url":"https://gist.github.com/09a10fcdb162600e022305447a332d42","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/09a10fcdb162600e022305447a332d42/raw/7a0b09336efaf8207114077a910359f4adf474cd/main.go","size":320,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t// :show start\n\tch := make(chan int)\n\tgo func() {\n\t\tch <- 1\n\t\tclose(ch)\n\t}()\n\tv, isClosed := <-ch\n\tfmt.Printf(\"received %d, is channel closed: %v\\n\", v, isClosed)\n\tv, isClosed = <-ch\n\tfmt.Printf(\"received %d, is channel closed: %v\\n\", v, isClosed)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:54:20Z","updated_at":"2019-11-06T01:54:20Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"65fd35c10a08c0affdcf372f48f21b2a17e9ea9b","committed_at":"2019-11-06T01:54:19Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/09a10fcdb162600e022305447a332d42/65fd35c10a08c0affdcf372f48f21b2a17e9ea9b"}],"truncated":false}
GistOutput:+73
received 1, is channel closed: true
received 0, is channel closed: false
3234 1573007599267 gist
GistID: 9c75200b2936076cc4aa769d30e2b0b7
Gist:+3181
{"url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7","forks_url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7/forks","commits_url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7/commits","id":"9c75200b2936076cc4aa769d30e2b0b7","node_id":"MDQ6R2lzdDljNzUyMDBiMjkzNjA3NmNjNGFhNzY5ZDMwZTJiMGI3","git_pull_url":"https://gist.github.com/9c75200b2936076cc4aa769d30e2b0b7.git","git_push_url":"https://gist.github.com/9c75200b2936076cc4aa769d30e2b0b7.git","html_url":"https://gist.github.com/9c75200b2936076cc4aa769d30e2b0b7","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9c75200b2936076cc4aa769d30e2b0b7/raw/13693d3dc1a614e23fef16cc216ba29a4bc65981/main.go","size":130,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nfunc main() {\n\t// :show start\n\tch := make(chan string)\n\tclose(ch)\n\tclose(ch)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:54:39Z","updated_at":"2019-11-06T01:54:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3110cba80f188c5c82a3acd5fc53a15e7ad4f580","committed_at":"2019-11-06T01:54:39Z","change_status":{"total":11,"additions":11,"deletions":0},"url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7/3110cba80f188c5c82a3acd5fc53a15e7ad4f580"}],"truncated":false}
3325 1573007599845 gistoutput
Gist:+3181
{"url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7","forks_url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7/forks","commits_url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7/commits","id":"9c75200b2936076cc4aa769d30e2b0b7","node_id":"MDQ6R2lzdDljNzUyMDBiMjkzNjA3NmNjNGFhNzY5ZDMwZTJiMGI3","git_pull_url":"https://gist.github.com/9c75200b2936076cc4aa769d30e2b0b7.git","git_push_url":"https://gist.github.com/9c75200b2936076cc4aa769d30e2b0b7.git","html_url":"https://gist.github.com/9c75200b2936076cc4aa769d30e2b0b7","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9c75200b2936076cc4aa769d30e2b0b7/raw/13693d3dc1a614e23fef16cc216ba29a4bc65981/main.go","size":130,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nfunc main() {\n\t// :show start\n\tch := make(chan string)\n\tclose(ch)\n\tclose(ch)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:54:39Z","updated_at":"2019-11-06T01:54:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3110cba80f188c5c82a3acd5fc53a15e7ad4f580","committed_at":"2019-11-06T01:54:39Z","change_status":{"total":11,"additions":11,"deletions":0},"url":"https://api.github.com/gists/9c75200b2936076cc4aa769d30e2b0b7/3110cba80f188c5c82a3acd5fc53a15e7ad4f580"}],"truncated":false}
GistOutput:+115
panic: close of closed channel

goroutine 1 [running]:
main.main()
	/tmp/src438901704/main.go:9 +0x57
exit status 2
3239 1573007600032 gist
GistID: df40d5529787c57261ba73bf9d854a05
Gist:+3186
{"url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05","forks_url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05/forks","commits_url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05/commits","id":"df40d5529787c57261ba73bf9d854a05","node_id":"MDQ6R2lzdGRmNDBkNTUyOTc4N2M1NzI2MWJhNzNiZjlkODU0YTA1","git_pull_url":"https://gist.github.com/df40d5529787c57261ba73bf9d854a05.git","git_push_url":"https://gist.github.com/df40d5529787c57261ba73bf9d854a05.git","html_url":"https://gist.github.com/df40d5529787c57261ba73bf9d854a05","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/df40d5529787c57261ba73bf9d854a05/raw/45fd0a79f113ffb57b7e809afd281caf48638dd5/main.go","size":135,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nfunc main() {\n\t// :show start\n\tch := make(chan int)\n\tclose(ch)\n\tch <- 5 // panics\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:54:59Z","updated_at":"2019-11-06T01:54:59Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6a148e23200dda384a4607e6d70b0220984ebaff","committed_at":"2019-11-06T01:54:59Z","change_status":{"total":11,"additions":11,"deletions":0},"url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05/6a148e23200dda384a4607e6d70b0220984ebaff"}],"truncated":false}
3329 1573007600524 gistoutput
Gist:+3186
{"url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05","forks_url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05/forks","commits_url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05/commits","id":"df40d5529787c57261ba73bf9d854a05","node_id":"MDQ6R2lzdGRmNDBkNTUyOTc4N2M1NzI2MWJhNzNiZjlkODU0YTA1","git_pull_url":"https://gist.github.com/df40d5529787c57261ba73bf9d854a05.git","git_push_url":"https://gist.github.com/df40d5529787c57261ba73bf9d854a05.git","html_url":"https://gist.github.com/df40d5529787c57261ba73bf9d854a05","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/df40d5529787c57261ba73bf9d854a05/raw/45fd0a79f113ffb57b7e809afd281caf48638dd5/main.go","size":135,"truncated":false,"content":"// :glot\n// allow error\npackage main\n\nfunc main() {\n\t// :show start\n\tch := make(chan int)\n\tclose(ch)\n\tch <- 5 // panics\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:54:59Z","updated_at":"2019-11-06T01:54:59Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"6a148e23200dda384a4607e6d70b0220984ebaff","committed_at":"2019-11-06T01:54:59Z","change_status":{"total":11,"additions":11,"deletions":0},"url":"https://api.github.com/gists/df40d5529787c57261ba73bf9d854a05/6a148e23200dda384a4607e6d70b0220984ebaff"}],"truncated":false}
GistOutput:+114
panic: send on closed channel

goroutine 1 [running]:
main.main()
	/tmp/src194641031/main.go:9 +0x63
exit status 2
5705 1573011953739 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573011955419 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573011957159 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573011959238 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573011960025 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573011960852 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573011961410 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573011961934 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
5705 1573012128770 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573012131131 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573012133385 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573012135553 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573012136170 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573012137690 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573012138235 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573012138741 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
5705 1573012235161 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573012236509 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573012237789 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573012240320 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573012241825 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573012242350 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573012242870 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573012243424 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
5705 1573012504533 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573012506047 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573012507655 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573012510429 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573012511275 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573012511935 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573012512470 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573012513032 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
4086 1573012513754 gist
GistID: 3dbe3587170883f7b8e95da26c8a30dd
Gist:+4033
{"url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd","forks_url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd/forks","commits_url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd/commits","id":"3dbe3587170883f7b8e95da26c8a30dd","node_id":"MDQ6R2lzdDNkYmUzNTg3MTcwODgzZjdiOGU5NWRhMjZjOGEzMGRk","git_pull_url":"https://gist.github.com/3dbe3587170883f7b8e95da26c8a30dd.git","git_push_url":"https://gist.github.com/3dbe3587170883f7b8e95da26c8a30dd.git","html_url":"https://gist.github.com/3dbe3587170883f7b8e95da26c8a30dd","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3dbe3587170883f7b8e95da26c8a30dd/raw/be3cc03b5eeeea8cec11172309a84adc16060289/main.go","size":824,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\n\nfunc producer(ch chan int) {\n\tfor i := 0; i < 5; i++ {\n\t\tif i%2 == 0 {\n\t\t\ttime.Sleep(10 * time.Millisecond)\n\t\t} else {\n\t\t\ttime.Sleep(1 * time.Millisecond)\n\t\t}\n\t\tch <- i\n\t}\n}\n\nfunc consumer(ch chan int) {\n\ttotal := 0\n\tfor i := 0; i < 5; i++ {\n\t\tif i%2 == 1 {\n\t\t\ttime.Sleep(10 * time.Millisecond)\n\t\t} else {\n\t\t\ttime.Sleep(1 * time.Millisecond)\n\t\t}\n\t\ttotal += <-ch\n\t}\n}\n\nfunc unbuffered() {\n\ttimeStart := time.Now()\n\tch := make(chan int)\n\tgo producer(ch)\n\tconsumer(ch)\n\tfmt.Printf(\"Unbuffered version took %s\\n\", time.Since(timeStart))\n}\n\nfunc buffered() {\n\ttimeStart := time.Now()\n\tch := make(chan int, 5)\n\tgo producer(ch)\n\tconsumer(ch)\n\tfmt.Printf(\"Buffered version took %s\\n\", time.Since(timeStart))\n}\n\nfunc main() {\n\tunbuffered()\n\tbuffered()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T03:50:44Z","updated_at":"2019-11-06T03:50:45Z","description":"example for https://notion.so/7ba79d8c31914d0995e7a93a6ebf4dd2","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"60167412a2d46caa3f6fb2d82a3680c8d3887cf7","committed_at":"2019-11-06T03:50:44Z","change_status":{"total":55,"additions":55,"deletions":0},"url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd/60167412a2d46caa3f6fb2d82a3680c8d3887cf7"}],"truncated":false}
4130 1573012514922 gistoutput
Gist:+4033
{"url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd","forks_url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd/forks","commits_url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd/commits","id":"3dbe3587170883f7b8e95da26c8a30dd","node_id":"MDQ6R2lzdDNkYmUzNTg3MTcwODgzZjdiOGU5NWRhMjZjOGEzMGRk","git_pull_url":"https://gist.github.com/3dbe3587170883f7b8e95da26c8a30dd.git","git_push_url":"https://gist.github.com/3dbe3587170883f7b8e95da26c8a30dd.git","html_url":"https://gist.github.com/3dbe3587170883f7b8e95da26c8a30dd","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3dbe3587170883f7b8e95da26c8a30dd/raw/be3cc03b5eeeea8cec11172309a84adc16060289/main.go","size":824,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// :show start\n\nfunc producer(ch chan int) {\n\tfor i := 0; i < 5; i++ {\n\t\tif i%2 == 0 {\n\t\t\ttime.Sleep(10 * time.Millisecond)\n\t\t} else {\n\t\t\ttime.Sleep(1 * time.Millisecond)\n\t\t}\n\t\tch <- i\n\t}\n}\n\nfunc consumer(ch chan int) {\n\ttotal := 0\n\tfor i := 0; i < 5; i++ {\n\t\tif i%2 == 1 {\n\t\t\ttime.Sleep(10 * time.Millisecond)\n\t\t} else {\n\t\t\ttime.Sleep(1 * time.Millisecond)\n\t\t}\n\t\ttotal += <-ch\n\t}\n}\n\nfunc unbuffered() {\n\ttimeStart := time.Now()\n\tch := make(chan int)\n\tgo producer(ch)\n\tconsumer(ch)\n\tfmt.Printf(\"Unbuffered version took %s\\n\", time.Since(timeStart))\n}\n\nfunc buffered() {\n\ttimeStart := time.Now()\n\tch := make(chan int, 5)\n\tgo producer(ch)\n\tconsumer(ch)\n\tfmt.Printf(\"Buffered version took %s\\n\", time.Since(timeStart))\n}\n\nfunc main() {\n\tunbuffered()\n\tbuffered()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T03:50:44Z","updated_at":"2019-11-06T03:50:45Z","description":"example for https://notion.so/7ba79d8c31914d0995e7a93a6ebf4dd2","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"60167412a2d46caa3f6fb2d82a3680c8d3887cf7","committed_at":"2019-11-06T03:50:44Z","change_status":{"total":55,"additions":55,"deletions":0},"url":"https://api.github.com/gists/3dbe3587170883f7b8e95da26c8a30dd/60167412a2d46caa3f6fb2d82a3680c8d3887cf7"}],"truncated":false}
GistOutput:+70
Unbuffered version took 50.854313ms
Buffered version took 32.800727ms
5705 1573012576465 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573012578231 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573012579827 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573012581427 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573012582100 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573012582729 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573012583253 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573012583768 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
3700 1573012584563 gist
GistID: 468d22a3462a7a649db1b11c2819830a
Gist:+3647
{"url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a","forks_url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a/forks","commits_url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a/commits","id":"468d22a3462a7a649db1b11c2819830a","node_id":"MDQ6R2lzdDQ2OGQyMmEzNDYyYTdhNjQ5ZGIxYjExYzI4MTk4MzBh","git_pull_url":"https://gist.github.com/468d22a3462a7a649db1b11c2819830a.git","git_push_url":"https://gist.github.com/468d22a3462a7a649db1b11c2819830a.git","html_url":"https://gist.github.com/468d22a3462a7a649db1b11c2819830a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/468d22a3462a7a649db1b11c2819830a/raw/a7a2d1eec90468f5b00111e4344957fa43005ce3/main.go","size":482,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc worker(ch chan int, chQuit chan struct{}) {\n\tfor {\n\t\tselect {\n\t\tcase v := <-ch:\n\t\t\tfmt.Printf(\"Got value %d\\n\", v)\n\t\tcase <-chQuit:\n\t\t\tfmt.Printf(\"Signalled on quit channel. Finishing\\n\")\n\t\t\tchQuit <- struct{}{}\n\t\t\treturn\n\t\t}\n\t}\n}\nfunc main() {\n\tch, chQuit := make(chan int), make(chan struct{})\n\tgo worker(ch, chQuit)\n\tch <- 3\n\tchQuit <- struct{}{}\n\n\t// wait to be signalled back by the worker\n\t<-chQuit\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T03:55:15Z","updated_at":"2019-11-06T03:55:16Z","description":"example for https://notion.so/f5daa999f5134b9ba9f2d69916df292a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b96206376ec13ef35b41c631dd31b589af4739fa","committed_at":"2019-11-06T03:55:15Z","change_status":{"total":31,"additions":31,"deletions":0},"url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a/b96206376ec13ef35b41c631dd31b589af4739fa"}],"truncated":false}
3723 1573012585642 gistoutput
Gist:+3647
{"url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a","forks_url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a/forks","commits_url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a/commits","id":"468d22a3462a7a649db1b11c2819830a","node_id":"MDQ6R2lzdDQ2OGQyMmEzNDYyYTdhNjQ5ZGIxYjExYzI4MTk4MzBh","git_pull_url":"https://gist.github.com/468d22a3462a7a649db1b11c2819830a.git","git_push_url":"https://gist.github.com/468d22a3462a7a649db1b11c2819830a.git","html_url":"https://gist.github.com/468d22a3462a7a649db1b11c2819830a","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/468d22a3462a7a649db1b11c2819830a/raw/a7a2d1eec90468f5b00111e4344957fa43005ce3/main.go","size":482,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc worker(ch chan int, chQuit chan struct{}) {\n\tfor {\n\t\tselect {\n\t\tcase v := <-ch:\n\t\t\tfmt.Printf(\"Got value %d\\n\", v)\n\t\tcase <-chQuit:\n\t\t\tfmt.Printf(\"Signalled on quit channel. Finishing\\n\")\n\t\t\tchQuit <- struct{}{}\n\t\t\treturn\n\t\t}\n\t}\n}\nfunc main() {\n\tch, chQuit := make(chan int), make(chan struct{})\n\tgo worker(ch, chQuit)\n\tch <- 3\n\tchQuit <- struct{}{}\n\n\t// wait to be signalled back by the worker\n\t<-chQuit\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T03:55:15Z","updated_at":"2019-11-06T03:55:16Z","description":"example for https://notion.so/f5daa999f5134b9ba9f2d69916df292a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b96206376ec13ef35b41c631dd31b589af4739fa","committed_at":"2019-11-06T03:55:15Z","change_status":{"total":31,"additions":31,"deletions":0},"url":"https://api.github.com/gists/468d22a3462a7a649db1b11c2819830a/b96206376ec13ef35b41c631dd31b589af4739fa"}],"truncated":false}
GistOutput:+49
Got value 3
Signalled on quit channel. Finishing
5705 1573012714855 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573012716261 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573012717427 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573012718855 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573012719476 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573012720063 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573012720586 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573012721066 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
3693 1573012721844 gist
GistID: 5530895d5617a87977d602183d9eeefd
Gist:+3640
{"url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd","forks_url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd/forks","commits_url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd/commits","id":"5530895d5617a87977d602183d9eeefd","node_id":"MDQ6R2lzdDU1MzA4OTVkNTYxN2E4Nzk3N2Q2MDIxODNkOWVlZWZk","git_pull_url":"https://gist.github.com/5530895d5617a87977d602183d9eeefd.git","git_push_url":"https://gist.github.com/5530895d5617a87977d602183d9eeefd.git","html_url":"https://gist.github.com/5530895d5617a87977d602183d9eeefd","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5530895d5617a87977d602183d9eeefd/raw/f98dad626c8e05818f783b3efca9c400cccbe802/main.go","size":502,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\t// Defining a 2d Array to represent a matrix like\n\t// 1 2 3     So with 2 lines and 3 columns;\n\t// 4 5 6\n\tmultiDimArray := [2][3]int{[3]int{1, 2, 3}, [3]int{4, 5, 6}}\n\n\t// That can be simplified like this:\n\tvar simplified = [2][3]int{{1, 2, 3}, {4, 5, 6}}\n\n\tfmt.Println(multiDimArray)\n\n\tfmt.Println(multiDimArray[0])\n\n\tfmt.Println(multiDimArray[0][1])\n\n\t// :show end\n\n\t// silence compiler error about unused variable\n\t_ = simplified\n}"}},"public":true,"created_at":"2019-11-06T03:56:26Z","updated_at":"2019-11-06T03:56:27Z","description":"example for https://notion.so/5d1e0e149020438abb82dde5c020cbd2","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"cf041d01ce9a3f0aeb636c7eba10979ca4091a9c","committed_at":"2019-11-06T03:56:26Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd/cf041d01ce9a3f0aeb636c7eba10979ca4091a9c"}],"truncated":false}
3695 1573012722838 gistoutput
Gist:+3640
{"url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd","forks_url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd/forks","commits_url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd/commits","id":"5530895d5617a87977d602183d9eeefd","node_id":"MDQ6R2lzdDU1MzA4OTVkNTYxN2E4Nzk3N2Q2MDIxODNkOWVlZWZk","git_pull_url":"https://gist.github.com/5530895d5617a87977d602183d9eeefd.git","git_push_url":"https://gist.github.com/5530895d5617a87977d602183d9eeefd.git","html_url":"https://gist.github.com/5530895d5617a87977d602183d9eeefd","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/5530895d5617a87977d602183d9eeefd/raw/f98dad626c8e05818f783b3efca9c400cccbe802/main.go","size":502,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\t// Defining a 2d Array to represent a matrix like\n\t// 1 2 3     So with 2 lines and 3 columns;\n\t// 4 5 6\n\tmultiDimArray := [2][3]int{[3]int{1, 2, 3}, [3]int{4, 5, 6}}\n\n\t// That can be simplified like this:\n\tvar simplified = [2][3]int{{1, 2, 3}, {4, 5, 6}}\n\n\tfmt.Println(multiDimArray)\n\n\tfmt.Println(multiDimArray[0])\n\n\tfmt.Println(multiDimArray[0][1])\n\n\t// :show end\n\n\t// silence compiler error about unused variable\n\t_ = simplified\n}"}},"public":true,"created_at":"2019-11-06T03:56:26Z","updated_at":"2019-11-06T03:56:27Z","description":"example for https://notion.so/5d1e0e149020438abb82dde5c020cbd2","comments":0,"user":null,"comments_url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"cf041d01ce9a3f0aeb636c7eba10979ca4091a9c","committed_at":"2019-11-06T03:56:26Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/5530895d5617a87977d602183d9eeefd/cf041d01ce9a3f0aeb636c7eba10979ca4091a9c"}],"truncated":false}
GistOutput:+28
[[1 2 3] [4 5 6]]
[1 2 3]
2
5705 1573013037399 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573013038555 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573013039705 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573013041148 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573013041761 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573013042291 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573013042783 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573013043284 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
3435 1573013045126 gist
GistID: 208e6956b0cb44a2f2726597c3961d49
Gist:+3382
{"url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49","forks_url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49/forks","commits_url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49/commits","id":"208e6956b0cb44a2f2726597c3961d49","node_id":"MDQ6R2lzdDIwOGU2OTU2YjBjYjQ0YTJmMjcyNjU5N2MzOTYxZDQ5","git_pull_url":"https://gist.github.com/208e6956b0cb44a2f2726597c3961d49.git","git_push_url":"https://gist.github.com/208e6956b0cb44a2f2726597c3961d49.git","html_url":"https://gist.github.com/208e6956b0cb44a2f2726597c3961d49","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/208e6956b0cb44a2f2726597c3961d49/raw/68f0300a8c6eab9e5dfc251a74e1383aa1978447/main.go","size":261,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\t// We can also define array with as much dimensions as we need\n\t// here, initialized with all zeros\n\tvar multiDimArray = [2][4][3][2]string{}\n\tfmt.Printf(\"%#v\\n\", multiDimArray)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:43Z","updated_at":"2019-11-06T03:58:44Z","description":"example for https://notion.so/5d1e0e149020438abb82dde5c020cbd2","comments":0,"user":null,"comments_url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"1af9d33521db696bea87c9b4444636c93ec3a58c","committed_at":"2019-11-06T03:58:43Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49/1af9d33521db696bea87c9b4444636c93ec3a58c"}],"truncated":false}
4031 1573013046787 gistoutput
Gist:+3382
{"url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49","forks_url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49/forks","commits_url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49/commits","id":"208e6956b0cb44a2f2726597c3961d49","node_id":"MDQ6R2lzdDIwOGU2OTU2YjBjYjQ0YTJmMjcyNjU5N2MzOTYxZDQ5","git_pull_url":"https://gist.github.com/208e6956b0cb44a2f2726597c3961d49.git","git_push_url":"https://gist.github.com/208e6956b0cb44a2f2726597c3961d49.git","html_url":"https://gist.github.com/208e6956b0cb44a2f2726597c3961d49","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/208e6956b0cb44a2f2726597c3961d49/raw/68f0300a8c6eab9e5dfc251a74e1383aa1978447/main.go","size":261,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\t// We can also define array with as much dimensions as we need\n\t// here, initialized with all zeros\n\tvar multiDimArray = [2][4][3][2]string{}\n\tfmt.Printf(\"%#v\\n\", multiDimArray)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:43Z","updated_at":"2019-11-06T03:58:44Z","description":"example for https://notion.so/5d1e0e149020438abb82dde5c020cbd2","comments":0,"user":null,"comments_url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"1af9d33521db696bea87c9b4444636c93ec3a58c","committed_at":"2019-11-06T03:58:43Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/208e6956b0cb44a2f2726597c3961d49/1af9d33521db696bea87c9b4444636c93ec3a58c"}],"truncated":false}
GistOutput:+621
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}}
3483 1573013046971 gist
GistID: 0c265cceee605c370fe1e77b30dd02a0
Gist:+3430
{"url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0","forks_url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0/forks","commits_url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0/commits","id":"0c265cceee605c370fe1e77b30dd02a0","node_id":"MDQ6R2lzdDBjMjY1Y2NlZWU2MDVjMzcwZmUxZTc3YjMwZGQwMmEw","git_pull_url":"https://gist.github.com/0c265cceee605c370fe1e77b30dd02a0.git","git_push_url":"https://gist.github.com/0c265cceee605c370fe1e77b30dd02a0.git","html_url":"https://gist.github.com/0c265cceee605c370fe1e77b30dd02a0","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0c265cceee605c370fe1e77b30dd02a0/raw/d961fe55ab9e667218bb4c41427de2f9b5a3c15b/main.go","size":301,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\n\tvar multiDimArray = [2][4][3][2]string{}\n\n\t// setting values at various locations:\n\tmultiDimArray[0][0][0][0] = \"All zero indexes\"\n\tmultiDimArray[1][3][2][1] = \"All indexes to max\"\n\tfmt.Printf(\"%#v\\n\", multiDimArray)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:45Z","updated_at":"2019-11-06T03:58:45Z","description":"example for https://notion.so/5d1e0e149020438abb82dde5c020cbd2","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e67364cbbec6a932709f216f198379a48228b99a","committed_at":"2019-11-06T03:58:44Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0/e67364cbbec6a932709f216f198379a48228b99a"}],"truncated":false}
4113 1573013049897 gistoutput
Gist:+3430
{"url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0","forks_url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0/forks","commits_url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0/commits","id":"0c265cceee605c370fe1e77b30dd02a0","node_id":"MDQ6R2lzdDBjMjY1Y2NlZWU2MDVjMzcwZmUxZTc3YjMwZGQwMmEw","git_pull_url":"https://gist.github.com/0c265cceee605c370fe1e77b30dd02a0.git","git_push_url":"https://gist.github.com/0c265cceee605c370fe1e77b30dd02a0.git","html_url":"https://gist.github.com/0c265cceee605c370fe1e77b30dd02a0","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0c265cceee605c370fe1e77b30dd02a0/raw/d961fe55ab9e667218bb4c41427de2f9b5a3c15b/main.go","size":301,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\n\tvar multiDimArray = [2][4][3][2]string{}\n\n\t// setting values at various locations:\n\tmultiDimArray[0][0][0][0] = \"All zero indexes\"\n\tmultiDimArray[1][3][2][1] = \"All indexes to max\"\n\tfmt.Printf(\"%#v\\n\", multiDimArray)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:45Z","updated_at":"2019-11-06T03:58:45Z","description":"example for https://notion.so/5d1e0e149020438abb82dde5c020cbd2","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"e67364cbbec6a932709f216f198379a48228b99a","committed_at":"2019-11-06T03:58:44Z","change_status":{"total":16,"additions":16,"deletions":0},"url":"https://api.github.com/gists/0c265cceee605c370fe1e77b30dd02a0/e67364cbbec6a932709f216f198379a48228b99a"}],"truncated":false}
GistOutput:+655
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"All zero indexes", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", "All indexes to max"}}}}
4534 1573013050217 gist
GistID: ee660a31384d3b2326abbc8972d48589
Gist:+4481
{"url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589","forks_url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589/forks","commits_url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589/commits","id":"ee660a31384d3b2326abbc8972d48589","node_id":"MDQ6R2lzdGVlNjYwYTMxMzg0ZDNiMjMyNmFiYmM4OTcyZDQ4NTg5","git_pull_url":"https://gist.github.com/ee660a31384d3b2326abbc8972d48589.git","git_push_url":"https://gist.github.com/ee660a31384d3b2326abbc8972d48589.git","html_url":"https://gist.github.com/ee660a31384d3b2326abbc8972d48589","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ee660a31384d3b2326abbc8972d48589/raw/0e8ef032cf70046d8cf8ec9f1351b05d7c6f11e4/main.go","size":1294,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\t// Creating arrays of 6 elements of type int\n\tvar array1 = [6]int{1, 2, 3, 4, 5, 6}\n\t// the compiler will derive the size of the array\n\tvar array2 = [...]int{1, 2, 3, 4, 5, 6} \n\n\tfmt.Println(\"array1:\", array1)\n\tfmt.Println(\"array2:\", array2)\n\n\t// Creating arrays with default values inside:\n\tzeros := [8]int{}       // Create a list of 8 int filled with 0\n\tptrs := [8]*int{}       // a list of int pointers, filled with 8 nil references ( <nil> )\n\temptystr := [8]string{} // a list of string filled with 8 times \"\"\n\n\tfmt.Println(\"zeroes:\", zeros)      // > [0 0 0 0 0 0 0 0]\n\tfmt.Println(\"ptrs:\", ptrs)         // > [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]\n\tfmt.Println(\"emptystr:\", emptystr) // > [       ]\n\t// values are empty strings, separated by spaces,\n\t// so we can just see separating spaces\n\n\t// Arrays are also working with a personalized type\n\ttype Data struct {\n\t\tNumber int\n\t\tText   string\n\t}\n\n\t// Creating an array with 8 'Data' elements\n\t// All the 8 elements will be like {0, \"\"} (Number = 0, Text = \"\")\n\tstructs := [8]Data{}\n\n\tfmt.Println(\"structs:\", structs) // > [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]\n\t// prints {0 } because Number are 0 and Text are empty; separated by a space\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:46Z","updated_at":"2019-11-06T03:58:47Z","description":"example for https://notion.so/89d6d347230a430786cc19ee9eef0390","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"56540c82e3e708bf97d8624a63c602167f188961","committed_at":"2019-11-06T03:58:46Z","change_status":{"total":40,"additions":40,"deletions":0},"url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589/56540c82e3e708bf97d8624a63c602167f188961"}],"truncated":false}
4706 1573013051334 gistoutput
Gist:+4481
{"url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589","forks_url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589/forks","commits_url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589/commits","id":"ee660a31384d3b2326abbc8972d48589","node_id":"MDQ6R2lzdGVlNjYwYTMxMzg0ZDNiMjMyNmFiYmM4OTcyZDQ4NTg5","git_pull_url":"https://gist.github.com/ee660a31384d3b2326abbc8972d48589.git","git_push_url":"https://gist.github.com/ee660a31384d3b2326abbc8972d48589.git","html_url":"https://gist.github.com/ee660a31384d3b2326abbc8972d48589","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ee660a31384d3b2326abbc8972d48589/raw/0e8ef032cf70046d8cf8ec9f1351b05d7c6f11e4/main.go","size":1294,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\t// Creating arrays of 6 elements of type int\n\tvar array1 = [6]int{1, 2, 3, 4, 5, 6}\n\t// the compiler will derive the size of the array\n\tvar array2 = [...]int{1, 2, 3, 4, 5, 6} \n\n\tfmt.Println(\"array1:\", array1)\n\tfmt.Println(\"array2:\", array2)\n\n\t// Creating arrays with default values inside:\n\tzeros := [8]int{}       // Create a list of 8 int filled with 0\n\tptrs := [8]*int{}       // a list of int pointers, filled with 8 nil references ( <nil> )\n\temptystr := [8]string{} // a list of string filled with 8 times \"\"\n\n\tfmt.Println(\"zeroes:\", zeros)      // > [0 0 0 0 0 0 0 0]\n\tfmt.Println(\"ptrs:\", ptrs)         // > [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]\n\tfmt.Println(\"emptystr:\", emptystr) // > [       ]\n\t// values are empty strings, separated by spaces,\n\t// so we can just see separating spaces\n\n\t// Arrays are also working with a personalized type\n\ttype Data struct {\n\t\tNumber int\n\t\tText   string\n\t}\n\n\t// Creating an array with 8 'Data' elements\n\t// All the 8 elements will be like {0, \"\"} (Number = 0, Text = \"\")\n\tstructs := [8]Data{}\n\n\tfmt.Println(\"structs:\", structs) // > [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]\n\t// prints {0 } because Number are 0 and Text are empty; separated by a space\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:46Z","updated_at":"2019-11-06T03:58:47Z","description":"example for https://notion.so/89d6d347230a430786cc19ee9eef0390","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"56540c82e3e708bf97d8624a63c602167f188961","committed_at":"2019-11-06T03:58:46Z","change_status":{"total":40,"additions":40,"deletions":0},"url":"https://api.github.com/gists/ee660a31384d3b2326abbc8972d48589/56540c82e3e708bf97d8624a63c602167f188961"}],"truncated":false}
GistOutput:+197
array1: [1 2 3 4 5 6]
array2: [1 2 3 4 5 6]
zeroes: [0 0 0 0 0 0 0 0]
ptrs: [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
emptystr: [       ]
structs: [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]
3686 1573013052034 gist
GistID: f51bad5fa647eb82079c4030ea73dc7c
Gist:+3633
{"url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c","forks_url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c/forks","commits_url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c/commits","id":"f51bad5fa647eb82079c4030ea73dc7c","node_id":"MDQ6R2lzdGY1MWJhZDVmYTY0N2ViODIwNzljNDAzMGVhNzNkYzdj","git_pull_url":"https://gist.github.com/f51bad5fa647eb82079c4030ea73dc7c.git","git_push_url":"https://gist.github.com/f51bad5fa647eb82079c4030ea73dc7c.git","html_url":"https://gist.github.com/f51bad5fa647eb82079c4030ea73dc7c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f51bad5fa647eb82079c4030ea73dc7c/raw/4185ee9154f4b0677c6e32e155ecd00ab3e4700b/main.go","size":500,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar array = [6]int{1, 2, 3, 4, 5, 6}\n\n\t// doesn't work: invalid array index -1 (index must be non-negative)\n\t// fmt.Println(array[-42])\n\tfmt.Println(array[0]) // > 1\n\tfmt.Println(array[1]) // > 2\n\tfmt.Println(array[2]) // > 3\n\tfmt.Println(array[3]) // > 4\n\tfmt.Println(array[4]) // > 5\n\tfmt.Println(array[5]) // > 6\n\t// doesn't work: invalid array index 6 (out of bounds for 6-element array)\n\t//fmt.Println(array[6])\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:48Z","updated_at":"2019-11-06T03:58:48Z","description":"example for https://notion.so/f9ebde1b6f7b4ac49a7a4693f0f19a6a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e14bacfeff598672c95538c79e836bff916512a","committed_at":"2019-11-06T03:58:47Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c/7e14bacfeff598672c95538c79e836bff916512a"}],"truncated":false}
3672 1573013053391 gistoutput
Gist:+3633
{"url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c","forks_url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c/forks","commits_url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c/commits","id":"f51bad5fa647eb82079c4030ea73dc7c","node_id":"MDQ6R2lzdGY1MWJhZDVmYTY0N2ViODIwNzljNDAzMGVhNzNkYzdj","git_pull_url":"https://gist.github.com/f51bad5fa647eb82079c4030ea73dc7c.git","git_push_url":"https://gist.github.com/f51bad5fa647eb82079c4030ea73dc7c.git","html_url":"https://gist.github.com/f51bad5fa647eb82079c4030ea73dc7c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/f51bad5fa647eb82079c4030ea73dc7c/raw/4185ee9154f4b0677c6e32e155ecd00ab3e4700b/main.go","size":500,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar array = [6]int{1, 2, 3, 4, 5, 6}\n\n\t// doesn't work: invalid array index -1 (index must be non-negative)\n\t// fmt.Println(array[-42])\n\tfmt.Println(array[0]) // > 1\n\tfmt.Println(array[1]) // > 2\n\tfmt.Println(array[2]) // > 3\n\tfmt.Println(array[3]) // > 4\n\tfmt.Println(array[4]) // > 5\n\tfmt.Println(array[5]) // > 6\n\t// doesn't work: invalid array index 6 (out of bounds for 6-element array)\n\t//fmt.Println(array[6])\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:48Z","updated_at":"2019-11-06T03:58:48Z","description":"example for https://notion.so/f9ebde1b6f7b4ac49a7a4693f0f19a6a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e14bacfeff598672c95538c79e836bff916512a","committed_at":"2019-11-06T03:58:47Z","change_status":{"total":21,"additions":21,"deletions":0},"url":"https://api.github.com/gists/f51bad5fa647eb82079c4030ea73dc7c/7e14bacfeff598672c95538c79e836bff916512a"}],"truncated":false}
GistOutput:+12
1
2
3
4
5
6
3682 1573013053567 gist
GistID: 9098c731e9e983118fa137dcce34fd80
Gist:+3629
{"url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80","forks_url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80/forks","commits_url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80/commits","id":"9098c731e9e983118fa137dcce34fd80","node_id":"MDQ6R2lzdDkwOThjNzMxZTllOTgzMTE4ZmExMzdkY2NlMzRmZDgw","git_pull_url":"https://gist.github.com/9098c731e9e983118fa137dcce34fd80.git","git_push_url":"https://gist.github.com/9098c731e9e983118fa137dcce34fd80.git","html_url":"https://gist.github.com/9098c731e9e983118fa137dcce34fd80","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9098c731e9e983118fa137dcce34fd80/raw/1e4e8f4be464366059cb592862e49610e66347c7/main.go","size":484,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar array = [6]int{1, 2, 3, 4, 5, 6}\n\n\tfmt.Println(array) // > [1 2 3 4 5 6]\n\n\tarray[0] = 6\n\tfmt.Println(array) // > [6 2 3 4 5 6]\n\n\tarray[1] = 5\n\tfmt.Println(array) // > [6 5 3 4 5 6]\n\n\tarray[2] = 4\n\tfmt.Println(array) // > [6 5 4 4 5 6]\n\n\tarray[3] = 3\n\tfmt.Println(array) // > [6 5 4 3 5 6]\n\n\tarray[4] = 2\n\tfmt.Println(array) // > [6 5 4 3 2 6]\n\n\tarray[5] = 1\n\tfmt.Println(array) // > [6 5 4 3 2 1]\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:49Z","updated_at":"2019-11-06T03:58:50Z","description":"example for https://notion.so/f9ebde1b6f7b4ac49a7a4693f0f19a6a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"612d9119fcb4ca822357098c807219f39325e7c6","committed_at":"2019-11-06T03:58:49Z","change_status":{"total":30,"additions":30,"deletions":0},"url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80/612d9119fcb4ca822357098c807219f39325e7c6"}],"truncated":false}
3754 1573013055031 gistoutput
Gist:+3629
{"url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80","forks_url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80/forks","commits_url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80/commits","id":"9098c731e9e983118fa137dcce34fd80","node_id":"MDQ6R2lzdDkwOThjNzMxZTllOTgzMTE4ZmExMzdkY2NlMzRmZDgw","git_pull_url":"https://gist.github.com/9098c731e9e983118fa137dcce34fd80.git","git_push_url":"https://gist.github.com/9098c731e9e983118fa137dcce34fd80.git","html_url":"https://gist.github.com/9098c731e9e983118fa137dcce34fd80","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9098c731e9e983118fa137dcce34fd80/raw/1e4e8f4be464366059cb592862e49610e66347c7/main.go","size":484,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tvar array = [6]int{1, 2, 3, 4, 5, 6}\n\n\tfmt.Println(array) // > [1 2 3 4 5 6]\n\n\tarray[0] = 6\n\tfmt.Println(array) // > [6 2 3 4 5 6]\n\n\tarray[1] = 5\n\tfmt.Println(array) // > [6 5 3 4 5 6]\n\n\tarray[2] = 4\n\tfmt.Println(array) // > [6 5 4 4 5 6]\n\n\tarray[3] = 3\n\tfmt.Println(array) // > [6 5 4 3 5 6]\n\n\tarray[4] = 2\n\tfmt.Println(array) // > [6 5 4 3 2 6]\n\n\tarray[5] = 1\n\tfmt.Println(array) // > [6 5 4 3 2 1]\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T03:58:49Z","updated_at":"2019-11-06T03:58:50Z","description":"example for https://notion.so/f9ebde1b6f7b4ac49a7a4693f0f19a6a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"612d9119fcb4ca822357098c807219f39325e7c6","committed_at":"2019-11-06T03:58:49Z","change_status":{"total":30,"additions":30,"deletions":0},"url":"https://api.github.com/gists/9098c731e9e983118fa137dcce34fd80/612d9119fcb4ca822357098c807219f39325e7c6"}],"truncated":false}
GistOutput:+98
[1 2 3 4 5 6]
[6 2 3 4 5 6]
[6 5 3 4 5 6]
[6 5 4 4 5 6]
[6 5 4 3 5 6]
[6 5 4 3 2 6]
[6 5 4 3 2 1]
5705 1573013377453 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573013378592 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573013379846 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573013381239 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573013381846 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573013382341 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573013382855 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573013383343 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
3433 1573013383970 gist
GistID: 9d4e139f994501de5abdb484b72aa517
Gist:+3380
{"url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517","forks_url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517/forks","commits_url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517/commits","id":"9d4e139f994501de5abdb484b72aa517","node_id":"MDQ6R2lzdDlkNGUxMzlmOTk0NTAxZGU1YWJkYjQ4NGI3MmFhNTE3","git_pull_url":"https://gist.github.com/9d4e139f994501de5abdb484b72aa517.git","git_push_url":"https://gist.github.com/9d4e139f994501de5abdb484b72aa517.git","html_url":"https://gist.github.com/9d4e139f994501de5abdb484b72aa517","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9d4e139f994501de5abdb484b72aa517/raw/a3ca516e79573b06568ae3c9eb0f15ca13bb924d/main.go","size":260,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc SumProduct(a, b int) (int, int) {\n\treturn a + b, a * b\n}\n\nfunc main() {\n\t// only need the sum\n\tsum, _ := SumProduct(1, 2) // the product gets discarded\n\tfmt.Println(sum)           // -> 3\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:16Z","updated_at":"2019-11-06T04:04:16Z","description":"example for https://notion.so/1ac7536809074689b3f8041d7a2b1e4a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"309a80c57207ab2ddec52623aa122d1842f99c27","committed_at":"2019-11-06T04:04:15Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517/309a80c57207ab2ddec52623aa122d1842f99c27"}],"truncated":false}
3408 1573013385139 gistoutput
Gist:+3380
{"url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517","forks_url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517/forks","commits_url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517/commits","id":"9d4e139f994501de5abdb484b72aa517","node_id":"MDQ6R2lzdDlkNGUxMzlmOTk0NTAxZGU1YWJkYjQ4NGI3MmFhNTE3","git_pull_url":"https://gist.github.com/9d4e139f994501de5abdb484b72aa517.git","git_push_url":"https://gist.github.com/9d4e139f994501de5abdb484b72aa517.git","html_url":"https://gist.github.com/9d4e139f994501de5abdb484b72aa517","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9d4e139f994501de5abdb484b72aa517/raw/a3ca516e79573b06568ae3c9eb0f15ca13bb924d/main.go","size":260,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc SumProduct(a, b int) (int, int) {\n\treturn a + b, a * b\n}\n\nfunc main() {\n\t// only need the sum\n\tsum, _ := SumProduct(1, 2) // the product gets discarded\n\tfmt.Println(sum)           // -> 3\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:16Z","updated_at":"2019-11-06T04:04:16Z","description":"example for https://notion.so/1ac7536809074689b3f8041d7a2b1e4a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"309a80c57207ab2ddec52623aa122d1842f99c27","committed_at":"2019-11-06T04:04:15Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/9d4e139f994501de5abdb484b72aa517/309a80c57207ab2ddec52623aa122d1842f99c27"}],"truncated":false}
GistOutput:+2
3
3453 1573013385318 gist
GistID: 3951ac0d73ce4e54dd3bedb584eaf9e2
Gist:+3400
{"url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2","forks_url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2/forks","commits_url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2/commits","id":"3951ac0d73ce4e54dd3bedb584eaf9e2","node_id":"MDQ6R2lzdDM5NTFhYzBkNzNjZTRlNTRkZDNiZWRiNTg0ZWFmOWUy","git_pull_url":"https://gist.github.com/3951ac0d73ce4e54dd3bedb584eaf9e2.git","git_push_url":"https://gist.github.com/3951ac0d73ce4e54dd3bedb584eaf9e2.git","html_url":"https://gist.github.com/3951ac0d73ce4e54dd3bedb584eaf9e2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3951ac0d73ce4e54dd3bedb584eaf9e2/raw/fe98d83d4be4eab955a028a710b25bd14ef81db6/main.go","size":271,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc main() {\n\tpets := []string{\"dog\", \"cat\", \"fish\"}\n\n\t// range returns both the current index and value\n\t// but sometimes we only need one or the other\n\tfor _, pet := range pets {\n\t\tfmt.Println(pet)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:17Z","updated_at":"2019-11-06T04:04:18Z","description":"example for https://notion.so/1ac7536809074689b3f8041d7a2b1e4a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"15741e806202004a0c0f9dbef5daf1692540123a","committed_at":"2019-11-06T04:04:17Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2/15741e806202004a0c0f9dbef5daf1692540123a"}],"truncated":false}
3440 1573013387681 gistoutput
Gist:+3400
{"url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2","forks_url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2/forks","commits_url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2/commits","id":"3951ac0d73ce4e54dd3bedb584eaf9e2","node_id":"MDQ6R2lzdDM5NTFhYzBkNzNjZTRlNTRkZDNiZWRiNTg0ZWFmOWUy","git_pull_url":"https://gist.github.com/3951ac0d73ce4e54dd3bedb584eaf9e2.git","git_push_url":"https://gist.github.com/3951ac0d73ce4e54dd3bedb584eaf9e2.git","html_url":"https://gist.github.com/3951ac0d73ce4e54dd3bedb584eaf9e2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3951ac0d73ce4e54dd3bedb584eaf9e2/raw/fe98d83d4be4eab955a028a710b25bd14ef81db6/main.go","size":271,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc main() {\n\tpets := []string{\"dog\", \"cat\", \"fish\"}\n\n\t// range returns both the current index and value\n\t// but sometimes we only need one or the other\n\tfor _, pet := range pets {\n\t\tfmt.Println(pet)\n\t}\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:17Z","updated_at":"2019-11-06T04:04:18Z","description":"example for https://notion.so/1ac7536809074689b3f8041d7a2b1e4a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"15741e806202004a0c0f9dbef5daf1692540123a","committed_at":"2019-11-06T04:04:17Z","change_status":{"total":17,"additions":17,"deletions":0},"url":"https://api.github.com/gists/3951ac0d73ce4e54dd3bedb584eaf9e2/15741e806202004a0c0f9dbef5daf1692540123a"}],"truncated":false}
GistOutput:+13
dog
cat
fish
3904 1573013388059 gist
GistID: 1fcd079b482bee52512520a793290255
Gist:+3851
{"url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255","forks_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/forks","commits_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/commits","id":"1fcd079b482bee52512520a793290255","node_id":"MDQ6R2lzdDFmY2QwNzliNDgyYmVlNTI1MTI1MjBhNzkzMjkwMjU1","git_pull_url":"https://gist.github.com/1fcd079b482bee52512520a793290255.git","git_push_url":"https://gist.github.com/1fcd079b482bee52512520a793290255.git","html_url":"https://gist.github.com/1fcd079b482bee52512520a793290255","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1fcd079b482bee52512520a793290255/raw/6370d4ca3fea79eac9af940b11e792eb289162df/main.go","size":708,"truncated":false,"content":"// :glot, no output\npackage main\n\ntype Person struct {\n\tFirstName string\n\tLastName  string\n}\n\nfunc main() {\n\t// :show start\n\t// Basic variable declaration. Declares a variable of type specified on the right.\n\t// The variable is initialized to the zero value of the respective type.\n\tvar x int\n\tvar s string\n\tvar p Person // Assuming type Person struct {}\n\n\t// Assignment of a value to a variable\n\tx = 3\n\n\t// Short declaration using := infers the type\n\ty := 4\n\n\tu := int64(100)    // declare variable of type int64 and init with 100\n\tvar u2 int64 = 100 // declare variable of type int64 and init with 100\n\t// :show end\n\n\t// silence compiler error about unused variables\n\t_, _, _, _, _, _ = x, s, p, y, u, u2\n}"}},"public":true,"created_at":"2019-11-06T04:04:19Z","updated_at":"2019-11-06T04:04:19Z","description":"example for https://notion.so/393a471743304998b25d388a8ff7556f","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a474fe7237d55aff198ce2178c49dcdf8d7bda5b","committed_at":"2019-11-06T04:04:18Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/a474fe7237d55aff198ce2178c49dcdf8d7bda5b"}],"truncated":false}
3877 1573013389249 gistoutput
Gist:+3851
{"url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255","forks_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/forks","commits_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/commits","id":"1fcd079b482bee52512520a793290255","node_id":"MDQ6R2lzdDFmY2QwNzliNDgyYmVlNTI1MTI1MjBhNzkzMjkwMjU1","git_pull_url":"https://gist.github.com/1fcd079b482bee52512520a793290255.git","git_push_url":"https://gist.github.com/1fcd079b482bee52512520a793290255.git","html_url":"https://gist.github.com/1fcd079b482bee52512520a793290255","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1fcd079b482bee52512520a793290255/raw/6370d4ca3fea79eac9af940b11e792eb289162df/main.go","size":708,"truncated":false,"content":"// :glot, no output\npackage main\n\ntype Person struct {\n\tFirstName string\n\tLastName  string\n}\n\nfunc main() {\n\t// :show start\n\t// Basic variable declaration. Declares a variable of type specified on the right.\n\t// The variable is initialized to the zero value of the respective type.\n\tvar x int\n\tvar s string\n\tvar p Person // Assuming type Person struct {}\n\n\t// Assignment of a value to a variable\n\tx = 3\n\n\t// Short declaration using := infers the type\n\ty := 4\n\n\tu := int64(100)    // declare variable of type int64 and init with 100\n\tvar u2 int64 = 100 // declare variable of type int64 and init with 100\n\t// :show end\n\n\t// silence compiler error about unused variables\n\t_, _, _, _, _, _ = x, s, p, y, u, u2\n}"}},"public":true,"created_at":"2019-11-06T04:04:19Z","updated_at":"2019-11-06T04:04:19Z","description":"example for https://notion.so/393a471743304998b25d388a8ff7556f","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a474fe7237d55aff198ce2178c49dcdf8d7bda5b","committed_at":"2019-11-06T04:04:18Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/a474fe7237d55aff198ce2178c49dcdf8d7bda5b"}],"truncated":false}
GistOutput:+0
3667 1573013389805 gist
GistID: 3d4d71bde8ed6d052d42d6f77a67386f
Gist:+3614
{"url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f","forks_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/forks","commits_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/commits","id":"3d4d71bde8ed6d052d42d6f77a67386f","node_id":"MDQ6R2lzdDNkNGQ3MWJkZThlZDZkMDUyZDQyZDZmNzdhNjczODZm","git_pull_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f.git","git_push_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f.git","html_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3d4d71bde8ed6d052d42d6f77a67386f/raw/308bf3a58e940ea1f1fb36bcd861776059024cb0/main.go","size":482,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// You can declare multiple variables of the same type in one line\n\tvar a, b, c string\n\n\tvar d, e string = \"Hello\", \"world!\"\n\n\t// You can also use short declaration to assign multiple variables\n\tx, y, z := 1, 2, 3\n\n\tfoo, bar := 4, \"stack\" // `foo` is type `int`, `bar` is type `string`\n\t// :show end\n\n\t// silence compiler error about unused variables\n\t_, _, _, _, _, _, _, _, _, _ = a, b, c, d, e, x, y, z, foo, bar\n}"}},"public":true,"created_at":"2019-11-06T04:04:20Z","updated_at":"2019-11-06T04:04:21Z","description":"example for https://notion.so/e6085895f34a4fb7beb55f0e460ea905","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a8e347f1d2961f9601b5070cff91df78b383b0e4","committed_at":"2019-11-06T04:04:20Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/a8e347f1d2961f9601b5070cff91df78b383b0e4"}],"truncated":false}
3640 1573013390270 gistoutput
Gist:+3614
{"url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f","forks_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/forks","commits_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/commits","id":"3d4d71bde8ed6d052d42d6f77a67386f","node_id":"MDQ6R2lzdDNkNGQ3MWJkZThlZDZkMDUyZDQyZDZmNzdhNjczODZm","git_pull_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f.git","git_push_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f.git","html_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3d4d71bde8ed6d052d42d6f77a67386f/raw/308bf3a58e940ea1f1fb36bcd861776059024cb0/main.go","size":482,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// You can declare multiple variables of the same type in one line\n\tvar a, b, c string\n\n\tvar d, e string = \"Hello\", \"world!\"\n\n\t// You can also use short declaration to assign multiple variables\n\tx, y, z := 1, 2, 3\n\n\tfoo, bar := 4, \"stack\" // `foo` is type `int`, `bar` is type `string`\n\t// :show end\n\n\t// silence compiler error about unused variables\n\t_, _, _, _, _, _, _, _, _, _ = a, b, c, d, e, x, y, z, foo, bar\n}"}},"public":true,"created_at":"2019-11-06T04:04:20Z","updated_at":"2019-11-06T04:04:21Z","description":"example for https://notion.so/e6085895f34a4fb7beb55f0e460ea905","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a8e347f1d2961f9601b5070cff91df78b383b0e4","committed_at":"2019-11-06T04:04:20Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/a8e347f1d2961f9601b5070cff91df78b383b0e4"}],"truncated":false}
GistOutput:+0
3525 1573013390449 gist
GistID: b45d550e208b5ac0b2dc61a27f769721
Gist:+3472
{"url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721","forks_url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721/forks","commits_url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721/commits","id":"b45d550e208b5ac0b2dc61a27f769721","node_id":"MDQ6R2lzdGI0NWQ1NTBlMjA4YjVhYzBiMmRjNjFhMjdmNzY5NzIx","git_pull_url":"https://gist.github.com/b45d550e208b5ac0b2dc61a27f769721.git","git_push_url":"https://gist.github.com/b45d550e208b5ac0b2dc61a27f769721.git","html_url":"https://gist.github.com/b45d550e208b5ac0b2dc61a27f769721","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b45d550e208b5ac0b2dc61a27f769721/raw/1beefc07d5703dfc513889bf6188171e27041fae/main.go","size":339,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc multipleReturn() (int, int) {\n\treturn 1, 2\n}\n\nfunc multipleReturn2() (a int, b int) {\n\ta = 3\n\tb = 4\n\treturn\n}\n\nfunc main() {\n\tx, y := multipleReturn()  // x = 1, y = 2\n\tw, z := multipleReturn2() // w = 3, z = 4\n\tfmt.Printf(\"x: %d, y: %d\\nw: %d, z: %d\\n\", x, y, w, z)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T04:04:22Z","updated_at":"2019-11-06T04:04:22Z","description":"example for https://notion.so/e6085895f34a4fb7beb55f0e460ea905","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"943b66888f929b10fda70788cbc628615e02746c","committed_at":"2019-11-06T04:04:21Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721/943b66888f929b10fda70788cbc628615e02746c"}],"truncated":false}
3521 1573013391551 gistoutput
Gist:+3472
{"url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721","forks_url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721/forks","commits_url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721/commits","id":"b45d550e208b5ac0b2dc61a27f769721","node_id":"MDQ6R2lzdGI0NWQ1NTBlMjA4YjVhYzBiMmRjNjFhMjdmNzY5NzIx","git_pull_url":"https://gist.github.com/b45d550e208b5ac0b2dc61a27f769721.git","git_push_url":"https://gist.github.com/b45d550e208b5ac0b2dc61a27f769721.git","html_url":"https://gist.github.com/b45d550e208b5ac0b2dc61a27f769721","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/b45d550e208b5ac0b2dc61a27f769721/raw/1beefc07d5703dfc513889bf6188171e27041fae/main.go","size":339,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc multipleReturn() (int, int) {\n\treturn 1, 2\n}\n\nfunc multipleReturn2() (a int, b int) {\n\ta = 3\n\tb = 4\n\treturn\n}\n\nfunc main() {\n\tx, y := multipleReturn()  // x = 1, y = 2\n\tw, z := multipleReturn2() // w = 3, z = 4\n\tfmt.Printf(\"x: %d, y: %d\\nw: %d, z: %d\\n\", x, y, w, z)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T04:04:22Z","updated_at":"2019-11-06T04:04:22Z","description":"example for https://notion.so/e6085895f34a4fb7beb55f0e460ea905","comments":0,"user":null,"comments_url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"943b66888f929b10fda70788cbc628615e02746c","committed_at":"2019-11-06T04:04:21Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/b45d550e208b5ac0b2dc61a27f769721/943b66888f929b10fda70788cbc628615e02746c"}],"truncated":false}
GistOutput:+22
x: 1, y: 2
w: 3, z: 4
3383 1573013391910 gist
GistID: 44366273815c46ebccdd3fd61d0069df
Gist:+3330
{"url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df","forks_url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df/forks","commits_url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df/commits","id":"44366273815c46ebccdd3fd61d0069df","node_id":"MDQ6R2lzdDQ0MzY2MjczODE1YzQ2ZWJjY2RkM2ZkNjFkMDA2OWRm","git_pull_url":"https://gist.github.com/44366273815c46ebccdd3fd61d0069df.git","git_push_url":"https://gist.github.com/44366273815c46ebccdd3fd61d0069df.git","html_url":"https://gist.github.com/44366273815c46ebccdd3fd61d0069df","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/44366273815c46ebccdd3fd61d0069df/raw/28ff6beddee172a57835c39a1345ec0998632a0a/main.go","size":194,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tdata := struct {\n\t\tNumber int\n\t\tText   string\n\t}{\n\t\t42,\n\t\t\"Hello world!\",\n\t}\n\n\tfmt.Printf(\"data: %+v\\n\", data)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T04:04:23Z","updated_at":"2019-11-06T04:04:24Z","description":"example for https://notion.so/4eb5f7b0ca13495997e624a6639d3eea","comments":0,"user":null,"comments_url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"95f2a0663decf25fd2d66387c6884d1100a011ef","committed_at":"2019-11-06T04:04:23Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df/95f2a0663decf25fd2d66387c6884d1100a011ef"}],"truncated":false}
3393 1573013393056 gistoutput
Gist:+3330
{"url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df","forks_url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df/forks","commits_url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df/commits","id":"44366273815c46ebccdd3fd61d0069df","node_id":"MDQ6R2lzdDQ0MzY2MjczODE1YzQ2ZWJjY2RkM2ZkNjFkMDA2OWRm","git_pull_url":"https://gist.github.com/44366273815c46ebccdd3fd61d0069df.git","git_push_url":"https://gist.github.com/44366273815c46ebccdd3fd61d0069df.git","html_url":"https://gist.github.com/44366273815c46ebccdd3fd61d0069df","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/44366273815c46ebccdd3fd61d0069df/raw/28ff6beddee172a57835c39a1345ec0998632a0a/main.go","size":194,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t// :show start\n\tdata := struct {\n\t\tNumber int\n\t\tText   string\n\t}{\n\t\t42,\n\t\t\"Hello world!\",\n\t}\n\n\tfmt.Printf(\"data: %+v\\n\", data)\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T04:04:23Z","updated_at":"2019-11-06T04:04:24Z","description":"example for https://notion.so/4eb5f7b0ca13495997e624a6639d3eea","comments":0,"user":null,"comments_url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"95f2a0663decf25fd2d66387c6884d1100a011ef","committed_at":"2019-11-06T04:04:23Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/44366273815c46ebccdd3fd61d0069df/95f2a0663decf25fd2d66387c6884d1100a011ef"}],"truncated":false}
GistOutput:+36
data: {Number:42 Text:Hello world!}
3494 1573013393648 gist
GistID: d379d12ca75a4ca278f26479ae9b7eeb
Gist:+3441
{"url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb","forks_url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb/forks","commits_url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb/commits","id":"d379d12ca75a4ca278f26479ae9b7eeb","node_id":"MDQ6R2lzdGQzNzlkMTJjYTc1YTRjYTI3OGYyNjQ3OWFlOWI3ZWVi","git_pull_url":"https://gist.github.com/d379d12ca75a4ca278f26479ae9b7eeb.git","git_push_url":"https://gist.github.com/d379d12ca75a4ca278f26479ae9b7eeb.git","html_url":"https://gist.github.com/d379d12ca75a4ca278f26479ae9b7eeb","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d379d12ca75a4ca278f26479ae9b7eeb/raw/e6e78ceabfedd1d9b7f6c8319eba7516a1238ad2/main.go","size":305,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\ntype User struct {\n\tname string\n}\n\nfunc (u User) Name() string {\n\treturn u.name\n}\n\nfunc (u *User) SetName(newName string) {\n\tu.name = newName\n}\n\nfunc main() {\n\tvar me User\n\n\tme.SetName(\"Slim Shady\")\n\tfmt.Println(\"My name is\", me.Name())\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:25Z","updated_at":"2019-11-06T04:04:25Z","description":"example for https://notion.so/8b26a9ed0b0b4c6eb4f8cbc4a523dd28","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4ad5b017130f25e5896ee573829c5c95ea67e92e","committed_at":"2019-11-06T04:04:24Z","change_status":{"total":27,"additions":27,"deletions":0},"url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb/4ad5b017130f25e5896ee573829c5c95ea67e92e"}],"truncated":false}
3490 1573013394948 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb","forks_url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb/forks","commits_url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb/commits","id":"d379d12ca75a4ca278f26479ae9b7eeb","node_id":"MDQ6R2lzdGQzNzlkMTJjYTc1YTRjYTI3OGYyNjQ3OWFlOWI3ZWVi","git_pull_url":"https://gist.github.com/d379d12ca75a4ca278f26479ae9b7eeb.git","git_push_url":"https://gist.github.com/d379d12ca75a4ca278f26479ae9b7eeb.git","html_url":"https://gist.github.com/d379d12ca75a4ca278f26479ae9b7eeb","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d379d12ca75a4ca278f26479ae9b7eeb/raw/e6e78ceabfedd1d9b7f6c8319eba7516a1238ad2/main.go","size":305,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n\ntype User struct {\n\tname string\n}\n\nfunc (u User) Name() string {\n\treturn u.name\n}\n\nfunc (u *User) SetName(newName string) {\n\tu.name = newName\n}\n\nfunc main() {\n\tvar me User\n\n\tme.SetName(\"Slim Shady\")\n\tfmt.Println(\"My name is\", me.Name())\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:25Z","updated_at":"2019-11-06T04:04:25Z","description":"example for https://notion.so/8b26a9ed0b0b4c6eb4f8cbc4a523dd28","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4ad5b017130f25e5896ee573829c5c95ea67e92e","committed_at":"2019-11-06T04:04:24Z","change_status":{"total":27,"additions":27,"deletions":0},"url":"https://api.github.com/gists/d379d12ca75a4ca278f26479ae9b7eeb/4ad5b017130f25e5896ee573829c5c95ea67e92e"}],"truncated":false}
GistOutput:+22
My name is Slim Shady
3966 1573013395304 gist
GistID: d504481a04da95d927b0712ccb1fb480
Gist:+3913
{"url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480","forks_url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480/forks","commits_url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480/commits","id":"d504481a04da95d927b0712ccb1fb480","node_id":"MDQ6R2lzdGQ1MDQ0ODFhMDRkYTk1ZDkyN2IwNzEyY2NiMWZiNDgw","git_pull_url":"https://gist.github.com/d504481a04da95d927b0712ccb1fb480.git","git_push_url":"https://gist.github.com/d504481a04da95d927b0712ccb1fb480.git","html_url":"https://gist.github.com/d504481a04da95d927b0712ccb1fb480","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d504481a04da95d927b0712ccb1fb480/raw/0c1c3c33e8235f5ad4b1557671842baf143e0349/main.go","size":735,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\n// User describes a user\ntype User struct {\n\tFirstName, LastName string\n\tEmail               string\n\tAge                 int\n\tuserID              int\n}\n\n// FullName returns full name of a user\nfunc (u *User) FullName() string {\n\treturn fmt.Sprintf(\"%s %s\", u.FirstName, u.LastName)\n}\n\nfunc main() {\n\t// zero value of struct\n\tvar u User\n\tfmt.Printf(\"u: %#v\\n\\n\", u)\n\n\t// pu is *User i.e. a pointer to User struct\n\tpu := new(User)\n\tpu.Age = 33\n\tfmt.Printf(\"*pu: %#v\\n\", *pu)\n\n\t// &User{} is the same as new(User)\n\tpu = &User{}\n\tpu.Age = 18\n\tfmt.Printf(\"*pu: %#v\\n\", *pu)\n\n\tpu.FirstName, pu.LastName = \"Jane\", \"Doe\"\n\tfmt.Printf(\"pu.FullName(): %s\\n\", pu.FullName())\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:27Z","updated_at":"2019-11-06T04:04:27Z","description":"example for https://notion.so/c5f5ee8760b7465e969734239b08e612","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"1f8bffae5032d162d48d7ed49b1861d86560ed84","committed_at":"2019-11-06T04:04:26Z","change_status":{"total":41,"additions":41,"deletions":0},"url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480/1f8bffae5032d162d48d7ed49b1861d86560ed84"}],"truncated":false}
4173 1573013396745 gistoutput
Gist:+3913
{"url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480","forks_url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480/forks","commits_url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480/commits","id":"d504481a04da95d927b0712ccb1fb480","node_id":"MDQ6R2lzdGQ1MDQ0ODFhMDRkYTk1ZDkyN2IwNzEyY2NiMWZiNDgw","git_pull_url":"https://gist.github.com/d504481a04da95d927b0712ccb1fb480.git","git_push_url":"https://gist.github.com/d504481a04da95d927b0712ccb1fb480.git","html_url":"https://gist.github.com/d504481a04da95d927b0712ccb1fb480","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/d504481a04da95d927b0712ccb1fb480/raw/0c1c3c33e8235f5ad4b1557671842baf143e0349/main.go","size":735,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\n// User describes a user\ntype User struct {\n\tFirstName, LastName string\n\tEmail               string\n\tAge                 int\n\tuserID              int\n}\n\n// FullName returns full name of a user\nfunc (u *User) FullName() string {\n\treturn fmt.Sprintf(\"%s %s\", u.FirstName, u.LastName)\n}\n\nfunc main() {\n\t// zero value of struct\n\tvar u User\n\tfmt.Printf(\"u: %#v\\n\\n\", u)\n\n\t// pu is *User i.e. a pointer to User struct\n\tpu := new(User)\n\tpu.Age = 33\n\tfmt.Printf(\"*pu: %#v\\n\", *pu)\n\n\t// &User{} is the same as new(User)\n\tpu = &User{}\n\tpu.Age = 18\n\tfmt.Printf(\"*pu: %#v\\n\", *pu)\n\n\tpu.FirstName, pu.LastName = \"Jane\", \"Doe\"\n\tfmt.Printf(\"pu.FullName(): %s\\n\", pu.FullName())\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:27Z","updated_at":"2019-11-06T04:04:27Z","description":"example for https://notion.so/c5f5ee8760b7465e969734239b08e612","comments":0,"user":null,"comments_url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"1f8bffae5032d162d48d7ed49b1861d86560ed84","committed_at":"2019-11-06T04:04:26Z","change_status":{"total":41,"additions":41,"deletions":0},"url":"https://api.github.com/gists/d504481a04da95d927b0712ccb1fb480/1f8bffae5032d162d48d7ed49b1861d86560ed84"}],"truncated":false}
GistOutput:+232
u: main.User{FirstName:"", LastName:"", Email:"", Age:0, userID:0}

*pu: main.User{FirstName:"", LastName:"", Email:"", Age:33, userID:0}
*pu: main.User{FirstName:"", LastName:"", Email:"", Age:18, userID:0}
pu.FullName(): Jane Doe
3291 1573013397152 gist
GistID: 3a02983deb343336377cdff9ea63f274
Gist:+3238
{"url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274","forks_url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274/forks","commits_url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274/commits","id":"3a02983deb343336377cdff9ea63f274","node_id":"MDQ6R2lzdDNhMDI5ODNkZWIzNDMzMzYzNzdjZGZmOWVhNjNmMjc0","git_pull_url":"https://gist.github.com/3a02983deb343336377cdff9ea63f274.git","git_push_url":"https://gist.github.com/3a02983deb343336377cdff9ea63f274.git","html_url":"https://gist.github.com/3a02983deb343336377cdff9ea63f274","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3a02983deb343336377cdff9ea63f274/raw/2a259335116c849583cc30bc2f3ca61e14d857e7/main.go","size":120,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc main() {\n\tfunc() {\n\t\tfmt.Println(\"Hello!\")\n\t}()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:28Z","updated_at":"2019-11-06T04:04:29Z","description":"example for https://notion.so/3d3b05f8d86e4c308f5ba6e874e9a90a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"81f33302991e859a88677ba4d4467a63680cfe3d","committed_at":"2019-11-06T04:04:28Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274/81f33302991e859a88677ba4d4467a63680cfe3d"}],"truncated":false}
3271 1573013398561 gistoutput
Gist:+3238
{"url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274","forks_url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274/forks","commits_url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274/commits","id":"3a02983deb343336377cdff9ea63f274","node_id":"MDQ6R2lzdDNhMDI5ODNkZWIzNDMzMzYzNzdjZGZmOWVhNjNmMjc0","git_pull_url":"https://gist.github.com/3a02983deb343336377cdff9ea63f274.git","git_push_url":"https://gist.github.com/3a02983deb343336377cdff9ea63f274.git","html_url":"https://gist.github.com/3a02983deb343336377cdff9ea63f274","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3a02983deb343336377cdff9ea63f274/raw/2a259335116c849583cc30bc2f3ca61e14d857e7/main.go","size":120,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc main() {\n\tfunc() {\n\t\tfmt.Println(\"Hello!\")\n\t}()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:28Z","updated_at":"2019-11-06T04:04:29Z","description":"example for https://notion.so/3d3b05f8d86e4c308f5ba6e874e9a90a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"81f33302991e859a88677ba4d4467a63680cfe3d","committed_at":"2019-11-06T04:04:28Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/3a02983deb343336377cdff9ea63f274/81f33302991e859a88677ba4d4467a63680cfe3d"}],"truncated":false}
GistOutput:+7
Hello!
3304 1573013398778 gist
GistID: 791cebf84b67c63f01cad7950bc74d7f
Gist:+3251
{"url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f","forks_url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f/forks","commits_url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f/commits","id":"791cebf84b67c63f01cad7950bc74d7f","node_id":"MDQ6R2lzdDc5MWNlYmY4NGI2N2M2M2YwMWNhZDc5NTBiYzc0ZDdm","git_pull_url":"https://gist.github.com/791cebf84b67c63f01cad7950bc74d7f.git","git_push_url":"https://gist.github.com/791cebf84b67c63f01cad7950bc74d7f.git","html_url":"https://gist.github.com/791cebf84b67c63f01cad7950bc74d7f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/791cebf84b67c63f01cad7950bc74d7f/raw/776953bbb584b82952abaea35fce3b93ef95c0d2/main.go","size":133,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc main() {\n\tfunc(str string) {\n\t\tfmt.Println(str)\n\t}(\"Hello!\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:30Z","updated_at":"2019-11-06T04:04:30Z","description":"example for https://notion.so/3d3b05f8d86e4c308f5ba6e874e9a90a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"19714cef4b1b1bd45b316a3714f836e9ca98f476","committed_at":"2019-11-06T04:04:29Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f/19714cef4b1b1bd45b316a3714f836e9ca98f476"}],"truncated":false}
3284 1573013399793 gistoutput
Gist:+3251
{"url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f","forks_url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f/forks","commits_url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f/commits","id":"791cebf84b67c63f01cad7950bc74d7f","node_id":"MDQ6R2lzdDc5MWNlYmY4NGI2N2M2M2YwMWNhZDc5NTBiYzc0ZDdm","git_pull_url":"https://gist.github.com/791cebf84b67c63f01cad7950bc74d7f.git","git_push_url":"https://gist.github.com/791cebf84b67c63f01cad7950bc74d7f.git","html_url":"https://gist.github.com/791cebf84b67c63f01cad7950bc74d7f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/791cebf84b67c63f01cad7950bc74d7f/raw/776953bbb584b82952abaea35fce3b93ef95c0d2/main.go","size":133,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc main() {\n\tfunc(str string) {\n\t\tfmt.Println(str)\n\t}(\"Hello!\")\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:04:30Z","updated_at":"2019-11-06T04:04:30Z","description":"example for https://notion.so/3d3b05f8d86e4c308f5ba6e874e9a90a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"19714cef4b1b1bd45b316a3714f836e9ca98f476","committed_at":"2019-11-06T04:04:29Z","change_status":{"total":13,"additions":13,"deletions":0},"url":"https://api.github.com/gists/791cebf84b67c63f01cad7950bc74d7f/19714cef4b1b1bd45b316a3714f836e9ca98f476"}],"truncated":false}
GistOutput:+7
Hello!
5705 1573013703464 gistoutput
Gist:+5679
{"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110","forks_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/forks","commits_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/commits","id":"26ed4afc610949390fcd2efab4326110","node_id":"MDQ6R2lzdDI2ZWQ0YWZjNjEwOTQ5MzkwZmNkMmVmYWI0MzI2MTEw","git_pull_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","git_push_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110.git","html_url":"https://gist.github.com/26ed4afc610949390fcd2efab4326110","files":{"constants basics.go":{"filename":"constants basics.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26ed4afc610949390fcd2efab4326110/raw/f82bd14906a77e58d8ce2c39cc89d0f330f76924/constants%20basics.go","size":353,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\n// :show start\n// Greeting is an exported (public) string constant\nconst Greeting string = \"Hello World\"\n\n// we can group const declarations\nconst (\n\t// years is an unexported (package private) int constant\n\tyears int  = 10\n\ttruth bool = true\n)\n\n// :show end\n\nfunc main() {\n\t// do  nothing\n}"}},"public":true,"created_at":"2019-11-05T23:49:06Z","updated_at":"2019-11-06T01:57:03Z","description":"Constant basics","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3729b278aaef9eea6f62dd9ee8f551d16cf27b30","committed_at":"2019-11-06T01:57:03Z","change_status":{"total":19,"additions":0,"deletions":19},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/3729b278aaef9eea6f62dd9ee8f551d16cf27b30"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"4c43878607cac6895b2e7a6cbfde7c17498c91f8","committed_at":"2019-11-05T23:49:42Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/4c43878607cac6895b2e7a6cbfde7c17498c91f8"},{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"c061bdd4895e74c39433b4864567298952d0641f","committed_at":"2019-11-05T23:49:06Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/26ed4afc610949390fcd2efab4326110/c061bdd4895e74c39433b4864567298952d0641f"}],"truncated":false}
GistOutput:+0
3398 1573013704653 gistoutput
Gist:+3372
{"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f","forks_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/forks","commits_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/commits","id":"938018c3da000a294f81d8c222cba33f","node_id":"MDQ6R2lzdDkzODAxOGMzZGEwMDBhMjk0ZjgxZDhjMjIyY2JhMzNm","git_pull_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","git_push_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f.git","html_url":"https://gist.github.com/938018c3da000a294f81d8c222cba33f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/938018c3da000a294f81d8c222cba33f/raw/c535c77c9e3b79ca15bbace4ac83ccd47076d7d9/main.go","size":309,"truncated":false,"content":"// :glot, no output\n// collection: Essential Go\npackage main\n\nimport (\n    \"fmt\"\n    \"bufio\"\n    \"os\"\n)\n\nfunc main() {\n    // :show start\n    scanner := bufio.NewScanner(os.Stdin)\n    for scanner.Scan() {\n        line := scanner.Text()\n        fmt.Printf(\"Entered line: '%s'\\n\", line)\n    }\n    // :show end\n}"}},"public":true,"created_at":"2019-11-06T01:06:42Z","updated_at":"2019-11-06T01:06:43Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"18a543b3d394931f50550ad41e7e8a20ddb983d5","committed_at":"2019-11-06T01:06:42Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/938018c3da000a294f81d8c222cba33f/18a543b3d394931f50550ad41e7e8a20ddb983d5"}],"truncated":false}
GistOutput:+0
3467 1573013705844 gistoutput
Gist:+3441
{"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2","forks_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/forks","commits_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/commits","id":"ed234fc34e1a96fe5aa93f8f975f0da2","node_id":"MDQ6R2lzdGVkMjM0ZmMzNGUxYTk2ZmU1YWE5M2Y4Zjk3NWYwZGEy","git_pull_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","git_push_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2.git","html_url":"https://gist.github.com/ed234fc34e1a96fe5aa93f8f975f0da2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/ed234fc34e1a96fe5aa93f8f975f0da2/raw/d865c89f7022767bc752c886094fa3f1a97d09e4/main.go","size":358,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tlogfile, err := os.OpenFile(\"test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tlog.Fatalf(\"os.OpenFile() failed with '%s\\n\", err)\n\t}\n\tdefer logfile.Close()\n\n\tlog.SetOutput(logfile)\n\tlog.Println(\"Log entry\")\n\t// :show end\n\tos.Remove(\"test.log\")\n}"}},"public":true,"created_at":"2019-11-06T01:10:40Z","updated_at":"2019-11-06T01:10:40Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b27dbad4cff3ea8b9d9592c9e41be7297602a847","committed_at":"2019-11-06T01:10:39Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/ed234fc34e1a96fe5aa93f8f975f0da2/b27dbad4cff3ea8b9d9592c9e41be7297602a847"}],"truncated":false}
GistOutput:+0
3371 1573013707288 gistoutput
Gist:+3345
{"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1","forks_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/forks","commits_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/commits","id":"86f6bc6fc2186d2fba22a0f5db9128c1","node_id":"MDQ6R2lzdDg2ZjZiYzZmYzIxODZkMmZiYTIyYTBmNWRiOTEyOGMx","git_pull_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","git_push_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1.git","html_url":"https://gist.github.com/86f6bc6fc2186d2fba22a0f5db9128c1","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/86f6bc6fc2186d2fba22a0f5db9128c1/raw/edd382d0f0b970bd6594839eb039bac1a993d915/main.go","size":271,"truncated":false,"content":"// :glot\n// no output\npackage main\n\nimport (\n\t\"log\"\n\t\"log/syslog\"\n)\n\nfunc main() {\n\t// :show start\n\tsyslogger, err := syslog.New(syslog.LOG_INFO, \"syslog_example\")\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlog.SetOutput(syslogger)\n\tlog.Println(\"Log entry\")\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T01:11:53Z","updated_at":"2019-11-06T01:11:54Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a5ee5efce3aac83856a2ee967f5cfe533fac35da","committed_at":"2019-11-06T01:11:53Z","change_status":{"total":20,"additions":20,"deletions":0},"url":"https://api.github.com/gists/86f6bc6fc2186d2fba22a0f5db9128c1/a5ee5efce3aac83856a2ee967f5cfe533fac35da"}],"truncated":false}
GistOutput:+0
3844 1573013707892 gistoutput
Gist:+3818
{"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36","forks_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/forks","commits_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/commits","id":"08711992585c137e36db943ccee6ac36","node_id":"MDQ6R2lzdDA4NzExOTkyNTg1YzEzN2UzNmRiOTQzY2NlZTZhYzM2","git_pull_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","git_push_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36.git","html_url":"https://gist.github.com/08711992585c137e36db943ccee6ac36","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/08711992585c137e36db943ccee6ac36/raw/39e327e0894e7db843c77144880182ae67687ba4/main.go","size":753,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\n\n// We'll show how pointers work in contrast to values with\n// 2 functions: `zeroval` and `zeroptr`. `zeroval` has an\n// `int` parameter, so arguments will be passed to it by\n// value. `zeroval` will get a copy of `ival` distinct\n// from the one in the calling function.\nfunc zeroval(ival int) {\n\tival = 0\n}\n\n// `zeroptr` in contrast has an `*int` parameter, meaning\n// that it takes an `int` pointer. The `*iptr` code in the\n// function body then _dereferences_ the pointer from its\n// memory address to the current value at that address.\n// Assigning a value to a dereferenced pointer changes the\n// value at the referenced address.\nfunc zeroptr(iptr *int) {\n\t*iptr = 0\n}\n\n// :show end\n\nfunc main() {\n}"}},"public":true,"created_at":"2019-11-06T01:22:38Z","updated_at":"2019-11-06T01:22:38Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3535edcd1a9f26aa8666d8048db4ab9069286255","committed_at":"2019-11-06T01:22:37Z","change_status":{"total":28,"additions":28,"deletions":0},"url":"https://api.github.com/gists/08711992585c137e36db943ccee6ac36/3535edcd1a9f26aa8666d8048db4ab9069286255"}],"truncated":false}
GistOutput:+0
3268 1573013708397 gistoutput
Gist:+3242
{"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c","forks_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/forks","commits_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/commits","id":"38716aa4a1102085d3c990d2c616348c","node_id":"MDQ6R2lzdDM4NzE2YWE0YTExMDIwODVkM2M5OTBkMmM2MTYzNDhj","git_pull_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","git_push_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c.git","html_url":"https://gist.github.com/38716aa4a1102085d3c990d2c616348c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/38716aa4a1102085d3c990d2c616348c/raw/0252349db235a92b55e457fd844c825c6773559a/main.go","size":188,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\ntype MyStruct struct {\n\tIntVal           int\n\tStringVal        string\n\tunexportedIntVal int\n}\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:29:20Z","updated_at":"2019-11-06T01:29:21Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"7e04ec0a506fecf8a357c6463771ac4ac622448d","committed_at":"2019-11-06T01:29:20Z","change_status":{"total":15,"additions":15,"deletions":0},"url":"https://api.github.com/gists/38716aa4a1102085d3c990d2c616348c/7e04ec0a506fecf8a357c6463771ac4ac622448d"}],"truncated":false}
GistOutput:+0
3513 1573013709543 gistoutput
Gist:+3487
{"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca","forks_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/forks","commits_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/commits","id":"1c12e021c60d98d9cfc0d067d2f806ca","node_id":"MDQ6R2lzdDFjMTJlMDIxYzYwZDk4ZDljZmMwZDA2N2QyZjgwNmNh","git_pull_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","git_push_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca.git","html_url":"https://gist.github.com/1c12e021c60d98d9cfc0d067d2f806ca","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1c12e021c60d98d9cfc0d067d2f806ca/raw/87a105362535e91f056a1d92713fe41888262e4b/main.go","size":420,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n\n// :show end\n\nfunc main() {\n\t// do nothing\n}"}},"public":true,"created_at":"2019-11-06T01:35:57Z","updated_at":"2019-11-06T01:35:58Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9a86ab0e128d7fef81938972ce9cb7793f9a6f3e","committed_at":"2019-11-06T01:35:57Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/1c12e021c60d98d9cfc0d067d2f806ca/9a86ab0e128d7fef81938972ce9cb7793f9a6f3e"}],"truncated":false}
GistOutput:+0
3619 1573013710099 gistoutput
Gist:+3593
{"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5","forks_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/forks","commits_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/commits","id":"0fb6b8c471dae1132303140325ed22c5","node_id":"MDQ6R2lzdDBmYjZiOGM0NzFkYWUxMTMyMzAzMTQwMzI1ZWQyMmM1","git_pull_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","git_push_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5.git","html_url":"https://gist.github.com/0fb6b8c471dae1132303140325ed22c5","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/0fb6b8c471dae1132303140325ed22c5/raw/394c595491d379f82e0f7e7440f66e4b3a177b82/main.go","size":527,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// you can cast between numbers i.e. integers of various sizes and floating point numbers\n\tvar i1 int32 = 3\n\tvar i2 int = int(i1) // we must explicitly cast from int32 to int\n\tvar f float64 = float64(i1)\n\n\ts := \"string\"\n\t// we can cast between string and []byte and vice-versa\n\t// note that unless optimizted by the compiler, this involves allocation\n\tvar d []byte = []byte(s)\n\t// :show end\n\n\t_, _, _ = i2, f, d // silence compiler error about unused variables\n}"}},"public":true,"created_at":"2019-11-06T01:43:22Z","updated_at":"2019-11-06T01:43:22Z","description":"","comments":0,"user":null,"comments_url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"da0ac1cab27151411a6a950df6b3bc375bcf9f42","committed_at":"2019-11-06T01:43:21Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/0fb6b8c471dae1132303140325ed22c5/da0ac1cab27151411a6a950df6b3bc375bcf9f42"}],"truncated":false}
GistOutput:+0
3877 1573013710887 gistoutput
Gist:+3851
{"url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255","forks_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/forks","commits_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/commits","id":"1fcd079b482bee52512520a793290255","node_id":"MDQ6R2lzdDFmY2QwNzliNDgyYmVlNTI1MTI1MjBhNzkzMjkwMjU1","git_pull_url":"https://gist.github.com/1fcd079b482bee52512520a793290255.git","git_push_url":"https://gist.github.com/1fcd079b482bee52512520a793290255.git","html_url":"https://gist.github.com/1fcd079b482bee52512520a793290255","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/1fcd079b482bee52512520a793290255/raw/6370d4ca3fea79eac9af940b11e792eb289162df/main.go","size":708,"truncated":false,"content":"// :glot, no output\npackage main\n\ntype Person struct {\n\tFirstName string\n\tLastName  string\n}\n\nfunc main() {\n\t// :show start\n\t// Basic variable declaration. Declares a variable of type specified on the right.\n\t// The variable is initialized to the zero value of the respective type.\n\tvar x int\n\tvar s string\n\tvar p Person // Assuming type Person struct {}\n\n\t// Assignment of a value to a variable\n\tx = 3\n\n\t// Short declaration using := infers the type\n\ty := 4\n\n\tu := int64(100)    // declare variable of type int64 and init with 100\n\tvar u2 int64 = 100 // declare variable of type int64 and init with 100\n\t// :show end\n\n\t// silence compiler error about unused variables\n\t_, _, _, _, _, _ = x, s, p, y, u, u2\n}"}},"public":true,"created_at":"2019-11-06T04:04:19Z","updated_at":"2019-11-06T04:04:19Z","description":"example for https://notion.so/393a471743304998b25d388a8ff7556f","comments":0,"user":null,"comments_url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a474fe7237d55aff198ce2178c49dcdf8d7bda5b","committed_at":"2019-11-06T04:04:18Z","change_status":{"total":29,"additions":29,"deletions":0},"url":"https://api.github.com/gists/1fcd079b482bee52512520a793290255/a474fe7237d55aff198ce2178c49dcdf8d7bda5b"}],"truncated":false}
GistOutput:+0
3640 1573013711637 gistoutput
Gist:+3614
{"url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f","forks_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/forks","commits_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/commits","id":"3d4d71bde8ed6d052d42d6f77a67386f","node_id":"MDQ6R2lzdDNkNGQ3MWJkZThlZDZkMDUyZDQyZDZmNzdhNjczODZm","git_pull_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f.git","git_push_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f.git","html_url":"https://gist.github.com/3d4d71bde8ed6d052d42d6f77a67386f","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/3d4d71bde8ed6d052d42d6f77a67386f/raw/308bf3a58e940ea1f1fb36bcd861776059024cb0/main.go","size":482,"truncated":false,"content":"// :glot, no output\npackage main\n\nfunc main() {\n\t// :show start\n\t// You can declare multiple variables of the same type in one line\n\tvar a, b, c string\n\n\tvar d, e string = \"Hello\", \"world!\"\n\n\t// You can also use short declaration to assign multiple variables\n\tx, y, z := 1, 2, 3\n\n\tfoo, bar := 4, \"stack\" // `foo` is type `int`, `bar` is type `string`\n\t// :show end\n\n\t// silence compiler error about unused variables\n\t_, _, _, _, _, _, _, _, _, _ = a, b, c, d, e, x, y, z, foo, bar\n}"}},"public":true,"created_at":"2019-11-06T04:04:20Z","updated_at":"2019-11-06T04:04:21Z","description":"example for https://notion.so/e6085895f34a4fb7beb55f0e460ea905","comments":0,"user":null,"comments_url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"a8e347f1d2961f9601b5070cff91df78b383b0e4","committed_at":"2019-11-06T04:04:20Z","change_status":{"total":19,"additions":19,"deletions":0},"url":"https://api.github.com/gists/3d4d71bde8ed6d052d42d6f77a67386f/a8e347f1d2961f9601b5070cff91df78b383b0e4"}],"truncated":false}
GistOutput:+0
3305 1573013712221 gist
GistID: cf283cbfbb8807cdf5d433f81b1dabf3
Gist:+3252
{"url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3","forks_url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3/forks","commits_url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3/commits","id":"cf283cbfbb8807cdf5d433f81b1dabf3","node_id":"MDQ6R2lzdGNmMjgzY2JmYmI4ODA3Y2RmNWQ0MzNmODFiMWRhYmYz","git_pull_url":"https://gist.github.com/cf283cbfbb8807cdf5d433f81b1dabf3.git","git_push_url":"https://gist.github.com/cf283cbfbb8807cdf5d433f81b1dabf3.git","html_url":"https://gist.github.com/cf283cbfbb8807cdf5d433f81b1dabf3","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/cf283cbfbb8807cdf5d433f81b1dabf3/raw/30e9dd50a2c3370729689b35995fef1948fcd58a/main.go","size":132,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc main() {\n\tstr := \"Hello!\"\n\tfunc() {\n\t\tfmt.Println(str)\n\t}()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:00Z","updated_at":"2019-11-06T04:10:01Z","description":"example for https://notion.so/3d3b05f8d86e4c308f5ba6e874e9a90a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"552716f5fb095e644e7351b10ec45c273ba2854a","committed_at":"2019-11-06T04:10:00Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3/552716f5fb095e644e7351b10ec45c273ba2854a"}],"truncated":false}
3285 1573013713291 gistoutput
Gist:+3252
{"url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3","forks_url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3/forks","commits_url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3/commits","id":"cf283cbfbb8807cdf5d433f81b1dabf3","node_id":"MDQ6R2lzdGNmMjgzY2JmYmI4ODA3Y2RmNWQ0MzNmODFiMWRhYmYz","git_pull_url":"https://gist.github.com/cf283cbfbb8807cdf5d433f81b1dabf3.git","git_push_url":"https://gist.github.com/cf283cbfbb8807cdf5d433f81b1dabf3.git","html_url":"https://gist.github.com/cf283cbfbb8807cdf5d433f81b1dabf3","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/cf283cbfbb8807cdf5d433f81b1dabf3/raw/30e9dd50a2c3370729689b35995fef1948fcd58a/main.go","size":132,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc main() {\n\tstr := \"Hello!\"\n\tfunc() {\n\t\tfmt.Println(str)\n\t}()\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:00Z","updated_at":"2019-11-06T04:10:01Z","description":"example for https://notion.so/3d3b05f8d86e4c308f5ba6e874e9a90a","comments":0,"user":null,"comments_url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"552716f5fb095e644e7351b10ec45c273ba2854a","committed_at":"2019-11-06T04:10:00Z","change_status":{"total":14,"additions":14,"deletions":0},"url":"https://api.github.com/gists/cf283cbfbb8807cdf5d433f81b1dabf3/552716f5fb095e644e7351b10ec45c273ba2854a"}],"truncated":false}
GistOutput:+7
Hello!
3659 1573013713638 gist
GistID: 87fdc3f90307e8bec73a33f24028ba14
Gist:+3606
{"url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14","forks_url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14/forks","commits_url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14/commits","id":"87fdc3f90307e8bec73a33f24028ba14","node_id":"MDQ6R2lzdDg3ZmRjM2Y5MDMwN2U4YmVjNzNhMzNmMjQwMjhiYTE0","git_pull_url":"https://gist.github.com/87fdc3f90307e8bec73a33f24028ba14.git","git_push_url":"https://gist.github.com/87fdc3f90307e8bec73a33f24028ba14.git","html_url":"https://gist.github.com/87fdc3f90307e8bec73a33f24028ba14","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/87fdc3f90307e8bec73a33f24028ba14/raw/7a118961b1b7d3165d12fae3e1cb49e6e12662b1/main.go","size":466,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n// intOp is a variable whose type is function that takes\n// 2 integers as arguments and returns an integer\nvar intOp func(int, int) int\n\nfunc intAdd(a, b int) int {\n\treturn a + b\n}\n\nfunc main() {\n\tintOp = intAdd\n\tfmt.Printf(\"intOp(2, 3) = %d\\n\", intOp(2, 3))\n\n\t// we can assign literal functions as well\n\tintOp = func(a, b int) int {\n\t\treturn a * b\n\t}\n\tfmt.Printf(\"intOp(2, 3) = %d\\n\", intOp(2, 3))\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:02Z","updated_at":"2019-11-06T04:10:02Z","description":"example for https://notion.so/4c4df97de2e241dabade237cefe4c6d4","comments":0,"user":null,"comments_url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"42b34b3db8cadebc4a97415bbc500a768e46fd1a","committed_at":"2019-11-06T04:10:01Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14/42b34b3db8cadebc4a97415bbc500a768e46fd1a"}],"truncated":false}
3665 1573013714755 gistoutput
Gist:+3606
{"url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14","forks_url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14/forks","commits_url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14/commits","id":"87fdc3f90307e8bec73a33f24028ba14","node_id":"MDQ6R2lzdDg3ZmRjM2Y5MDMwN2U4YmVjNzNhMzNmMjQwMjhiYTE0","git_pull_url":"https://gist.github.com/87fdc3f90307e8bec73a33f24028ba14.git","git_push_url":"https://gist.github.com/87fdc3f90307e8bec73a33f24028ba14.git","html_url":"https://gist.github.com/87fdc3f90307e8bec73a33f24028ba14","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/87fdc3f90307e8bec73a33f24028ba14/raw/7a118961b1b7d3165d12fae3e1cb49e6e12662b1/main.go","size":466,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\n// intOp is a variable whose type is function that takes\n// 2 integers as arguments and returns an integer\nvar intOp func(int, int) int\n\nfunc intAdd(a, b int) int {\n\treturn a + b\n}\n\nfunc main() {\n\tintOp = intAdd\n\tfmt.Printf(\"intOp(2, 3) = %d\\n\", intOp(2, 3))\n\n\t// we can assign literal functions as well\n\tintOp = func(a, b int) int {\n\t\treturn a * b\n\t}\n\tfmt.Printf(\"intOp(2, 3) = %d\\n\", intOp(2, 3))\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:02Z","updated_at":"2019-11-06T04:10:02Z","description":"example for https://notion.so/4c4df97de2e241dabade237cefe4c6d4","comments":0,"user":null,"comments_url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"42b34b3db8cadebc4a97415bbc500a768e46fd1a","committed_at":"2019-11-06T04:10:01Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/87fdc3f90307e8bec73a33f24028ba14/42b34b3db8cadebc4a97415bbc500a768e46fd1a"}],"truncated":false}
GistOutput:+32
intOp(2, 3) = 5
intOp(2, 3) = 6
3545 1573013714928 gist
GistID: 9514f30e47d4708532d205a00b89fcfe
Gist:+3492
{"url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe","forks_url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe/forks","commits_url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe/commits","id":"9514f30e47d4708532d205a00b89fcfe","node_id":"MDQ6R2lzdDk1MTRmMzBlNDdkNDcwODUzMmQyMDVhMDBiODlmY2Zl","git_pull_url":"https://gist.github.com/9514f30e47d4708532d205a00b89fcfe.git","git_push_url":"https://gist.github.com/9514f30e47d4708532d205a00b89fcfe.git","html_url":"https://gist.github.com/9514f30e47d4708532d205a00b89fcfe","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9514f30e47d4708532d205a00b89fcfe/raw/3099ff8f206ff1447fa971f606d930a4bf481279/main.go","size":358,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc funcAdd(a, b int) int {\n\treturn a + b\n}\n\nfunc runFunc(a, b int, intOp func(int, int) int) {\n\tfmt.Printf(\"intOp(%d, %d) = %d\\n\", a, b, intOp(a, b))\n}\n\nfunc main() {\n\trunFunc(2, 3, funcAdd)\n\n\t// we can pass literal functions as well\n\trunFunc(2, 3, func(a, b int) int {\n\t\treturn a * b\n\t})\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:04Z","updated_at":"2019-11-06T04:10:04Z","description":"example for https://notion.so/4c4df97de2e241dabade237cefe4c6d4","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"be55c4c879785cc4576e497fab710a235456d220","committed_at":"2019-11-06T04:10:03Z","change_status":{"total":24,"additions":24,"deletions":0},"url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe/be55c4c879785cc4576e497fab710a235456d220"}],"truncated":false}
3551 1573013715965 gistoutput
Gist:+3492
{"url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe","forks_url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe/forks","commits_url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe/commits","id":"9514f30e47d4708532d205a00b89fcfe","node_id":"MDQ6R2lzdDk1MTRmMzBlNDdkNDcwODUzMmQyMDVhMDBiODlmY2Zl","git_pull_url":"https://gist.github.com/9514f30e47d4708532d205a00b89fcfe.git","git_push_url":"https://gist.github.com/9514f30e47d4708532d205a00b89fcfe.git","html_url":"https://gist.github.com/9514f30e47d4708532d205a00b89fcfe","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/9514f30e47d4708532d205a00b89fcfe/raw/3099ff8f206ff1447fa971f606d930a4bf481279/main.go","size":358,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc funcAdd(a, b int) int {\n\treturn a + b\n}\n\nfunc runFunc(a, b int, intOp func(int, int) int) {\n\tfmt.Printf(\"intOp(%d, %d) = %d\\n\", a, b, intOp(a, b))\n}\n\nfunc main() {\n\trunFunc(2, 3, funcAdd)\n\n\t// we can pass literal functions as well\n\trunFunc(2, 3, func(a, b int) int {\n\t\treturn a * b\n\t})\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:04Z","updated_at":"2019-11-06T04:10:04Z","description":"example for https://notion.so/4c4df97de2e241dabade237cefe4c6d4","comments":0,"user":null,"comments_url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"be55c4c879785cc4576e497fab710a235456d220","committed_at":"2019-11-06T04:10:03Z","change_status":{"total":24,"additions":24,"deletions":0},"url":"https://api.github.com/gists/9514f30e47d4708532d205a00b89fcfe/be55c4c879785cc4576e497fab710a235456d220"}],"truncated":false}
GistOutput:+32
intOp(2, 3) = 5
intOp(2, 3) = 6
3729 1573013716133 gist
GistID: 2adb79fbae704e427f415719ab498c3e
Gist:+3676
{"url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e","forks_url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e/forks","commits_url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e/commits","id":"2adb79fbae704e427f415719ab498c3e","node_id":"MDQ6R2lzdDJhZGI3OWZiYWU3MDRlNDI3ZjQxNTcxOWFiNDk4YzNl","git_pull_url":"https://gist.github.com/2adb79fbae704e427f415719ab498c3e.git","git_push_url":"https://gist.github.com/2adb79fbae704e427f415719ab498c3e.git","html_url":"https://gist.github.com/2adb79fbae704e427f415719ab498c3e","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/2adb79fbae704e427f415719ab498c3e/raw/a3da77476014478dc2e36a5661a54cc2029d9757/main.go","size":551,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nvar isUserAdminFn func(string) bool\n\nfunc isUserAdminProduction(userName string) bool {\n    // an real implementation that talks to database\n    return false\n}\n\nfunc isUserAdminMock(userName string) bool {\n    // a fake implementation used for tests\n    return userName == \"admin\"\n}\n\nfunc isUserAdmin(userName string) bool {\n    return isUserAdminFn(userName)\n}\n\nfunc main() {\n    isUserAdminFn = isUserAdminProduction\n    // in test you would use:\n    // isUserAdminFn = isUserAdminMock\n}\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:05Z","updated_at":"2019-11-06T04:10:06Z","description":"example for https://notion.so/4c4df97de2e241dabade237cefe4c6d4","comments":0,"user":null,"comments_url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"bc0d5866418b4c07994bf93e9c64ce527a7e686f","committed_at":"2019-11-06T04:10:05Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e/bc0d5866418b4c07994bf93e9c64ce527a7e686f"}],"truncated":false}
3702 1573013716669 gistoutput
Gist:+3676
{"url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e","forks_url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e/forks","commits_url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e/commits","id":"2adb79fbae704e427f415719ab498c3e","node_id":"MDQ6R2lzdDJhZGI3OWZiYWU3MDRlNDI3ZjQxNTcxOWFiNDk4YzNl","git_pull_url":"https://gist.github.com/2adb79fbae704e427f415719ab498c3e.git","git_push_url":"https://gist.github.com/2adb79fbae704e427f415719ab498c3e.git","html_url":"https://gist.github.com/2adb79fbae704e427f415719ab498c3e","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/2adb79fbae704e427f415719ab498c3e/raw/a3da77476014478dc2e36a5661a54cc2029d9757/main.go","size":551,"truncated":false,"content":"// :glot, no output\npackage main\n\n// :show start\nvar isUserAdminFn func(string) bool\n\nfunc isUserAdminProduction(userName string) bool {\n    // an real implementation that talks to database\n    return false\n}\n\nfunc isUserAdminMock(userName string) bool {\n    // a fake implementation used for tests\n    return userName == \"admin\"\n}\n\nfunc isUserAdmin(userName string) bool {\n    return isUserAdminFn(userName)\n}\n\nfunc main() {\n    isUserAdminFn = isUserAdminProduction\n    // in test you would use:\n    // isUserAdminFn = isUserAdminMock\n}\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:05Z","updated_at":"2019-11-06T04:10:06Z","description":"example for https://notion.so/4c4df97de2e241dabade237cefe4c6d4","comments":0,"user":null,"comments_url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"bc0d5866418b4c07994bf93e9c64ce527a7e686f","committed_at":"2019-11-06T04:10:05Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/2adb79fbae704e427f415719ab498c3e/bc0d5866418b4c07994bf93e9c64ce527a7e686f"}],"truncated":false}
GistOutput:+0
3533 1573013717176 gist
GistID: 70d1523c8b4c5bc79efc68e9f98b22c3
Gist:+3480
{"url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3","forks_url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3/forks","commits_url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3/commits","id":"70d1523c8b4c5bc79efc68e9f98b22c3","node_id":"MDQ6R2lzdDcwZDE1MjNjOGI0YzViYzc5ZWZjNjhlOWY5OGIyMmMz","git_pull_url":"https://gist.github.com/70d1523c8b4c5bc79efc68e9f98b22c3.git","git_push_url":"https://gist.github.com/70d1523c8b4c5bc79efc68e9f98b22c3.git","html_url":"https://gist.github.com/70d1523c8b4c5bc79efc68e9f98b22c3","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/70d1523c8b4c5bc79efc68e9f98b22c3/raw/9db0940be57f6ead38d67baaab848fb6beab0852/main.go","size":342,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc inverse(v float32) (reciprocal float32) {\n\tif v == 0 {\n\t\treturn\n\t}\n\treciprocal = 1 / v\n\treturn\n}\n\n// function can return multiple values\nfunc split(sum int) (x, y int) {\n\tx = sum * 4 / 9\n\ty = sum - x\n\treturn\n}\n\nfunc main() {\n\tfmt.Printf(\"inverse(5)=%.2f\\n\", inverse(5))\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:07Z","updated_at":"2019-11-06T04:10:07Z","description":"example for https://notion.so/4dcee4a1e84c4c058a7f4e0bdf5cfffe","comments":0,"user":null,"comments_url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3976a15a67658f3c254425ae2280fe2813a4d053","committed_at":"2019-11-06T04:10:06Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3/3976a15a67658f3c254425ae2280fe2813a4d053"}],"truncated":false}
3523 1573013718257 gistoutput
Gist:+3480
{"url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3","forks_url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3/forks","commits_url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3/commits","id":"70d1523c8b4c5bc79efc68e9f98b22c3","node_id":"MDQ6R2lzdDcwZDE1MjNjOGI0YzViYzc5ZWZjNjhlOWY5OGIyMmMz","git_pull_url":"https://gist.github.com/70d1523c8b4c5bc79efc68e9f98b22c3.git","git_push_url":"https://gist.github.com/70d1523c8b4c5bc79efc68e9f98b22c3.git","html_url":"https://gist.github.com/70d1523c8b4c5bc79efc68e9f98b22c3","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/70d1523c8b4c5bc79efc68e9f98b22c3/raw/9db0940be57f6ead38d67baaab848fb6beab0852/main.go","size":342,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc inverse(v float32) (reciprocal float32) {\n\tif v == 0 {\n\t\treturn\n\t}\n\treciprocal = 1 / v\n\treturn\n}\n\n// function can return multiple values\nfunc split(sum int) (x, y int) {\n\tx = sum * 4 / 9\n\ty = sum - x\n\treturn\n}\n\nfunc main() {\n\tfmt.Printf(\"inverse(5)=%.2f\\n\", inverse(5))\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:07Z","updated_at":"2019-11-06T04:10:07Z","description":"example for https://notion.so/4dcee4a1e84c4c058a7f4e0bdf5cfffe","comments":0,"user":null,"comments_url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"3976a15a67658f3c254425ae2280fe2813a4d053","committed_at":"2019-11-06T04:10:06Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/70d1523c8b4c5bc79efc68e9f98b22c3/3976a15a67658f3c254425ae2280fe2813a4d053"}],"truncated":false}
GistOutput:+16
inverse(5)=0.20
3502 1573013718590 gist
GistID: dd5d25485e5cccff6d1c8c10145a283c
Gist:+3449
{"url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c","forks_url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c/forks","commits_url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c/commits","id":"dd5d25485e5cccff6d1c8c10145a283c","node_id":"MDQ6R2lzdGRkNWQyNTQ4NWU1Y2NjZmY2ZDFjOGMxMDE0NWEyODNj","git_pull_url":"https://gist.github.com/dd5d25485e5cccff6d1c8c10145a283c.git","git_push_url":"https://gist.github.com/dd5d25485e5cccff6d1c8c10145a283c.git","html_url":"https://gist.github.com/dd5d25485e5cccff6d1c8c10145a283c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/dd5d25485e5cccff6d1c8c10145a283c/raw/759c5c9f6cc376ccdd40a06706780e6bafc913f8/main.go","size":316,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc Add(a, b int) int {\n\treturn a + b\n}\n\nfunc AddAndMultiply(a, b int) (int, int) {\n\treturn a + b, a * b\n}\n\nfunc main() {\n\tsum, mult := AddAndMultiply(5, 8)\n\tfmt.Printf(\"5+8=%d, 5*8=%d\\n\", sum, mult)\n\tsum = Add(6, 12)\n\tfmt.Printf(\"6+12=%d\\n\", sum)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:08Z","updated_at":"2019-11-06T04:10:09Z","description":"example for https://notion.so/b23413ff058645f7acd86257f70712ba","comments":0,"user":null,"comments_url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9104b032795500b68c48b107c77d4ba75a52cf9d","committed_at":"2019-11-06T04:10:08Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c/9104b032795500b68c48b107c77d4ba75a52cf9d"}],"truncated":false}
3499 1573013719637 gistoutput
Gist:+3449
{"url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c","forks_url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c/forks","commits_url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c/commits","id":"dd5d25485e5cccff6d1c8c10145a283c","node_id":"MDQ6R2lzdGRkNWQyNTQ4NWU1Y2NjZmY2ZDFjOGMxMDE0NWEyODNj","git_pull_url":"https://gist.github.com/dd5d25485e5cccff6d1c8c10145a283c.git","git_push_url":"https://gist.github.com/dd5d25485e5cccff6d1c8c10145a283c.git","html_url":"https://gist.github.com/dd5d25485e5cccff6d1c8c10145a283c","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/dd5d25485e5cccff6d1c8c10145a283c/raw/759c5c9f6cc376ccdd40a06706780e6bafc913f8/main.go","size":316,"truncated":false,"content":"// :glot\npackage main\n\nimport \"fmt\"\n\n// :show start\nfunc Add(a, b int) int {\n\treturn a + b\n}\n\nfunc AddAndMultiply(a, b int) (int, int) {\n\treturn a + b, a * b\n}\n\nfunc main() {\n\tsum, mult := AddAndMultiply(5, 8)\n\tfmt.Printf(\"5+8=%d, 5*8=%d\\n\", sum, mult)\n\tsum = Add(6, 12)\n\tfmt.Printf(\"6+12=%d\\n\", sum)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:08Z","updated_at":"2019-11-06T04:10:09Z","description":"example for https://notion.so/b23413ff058645f7acd86257f70712ba","comments":0,"user":null,"comments_url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"9104b032795500b68c48b107c77d4ba75a52cf9d","committed_at":"2019-11-06T04:10:08Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/dd5d25485e5cccff6d1c8c10145a283c/9104b032795500b68c48b107c77d4ba75a52cf9d"}],"truncated":false}
GistOutput:+23
5+8=13, 5*8=40
6+12=18
3620 1573013719963 gist
GistID: 485ce74c6a9b15b66e41283147febaa4
Gist:+3567
{"url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4","forks_url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4/forks","commits_url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4/commits","id":"485ce74c6a9b15b66e41283147febaa4","node_id":"MDQ6R2lzdDQ4NWNlNzRjNmE5YjE1YjY2ZTQxMjgzMTQ3ZmViYWE0","git_pull_url":"https://gist.github.com/485ce74c6a9b15b66e41283147febaa4.git","git_push_url":"https://gist.github.com/485ce74c6a9b15b66e41283147febaa4.git","html_url":"https://gist.github.com/485ce74c6a9b15b66e41283147febaa4","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/485ce74c6a9b15b66e41283147febaa4/raw/5dca69bc428b5bb84cc6f47ee511e5d78a1f3981/main.go","size":410,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc variadic(strs ...string) {\n\t// strs is a slice of string\n\tfor i, str := range strs {\n\t\tfmt.Printf(\"%d: %s\\n\", i, str)\n\t}\n\tfmt.Print(\"\\n\")\n}\n\nfunc main() {\n\tvariadic(\"Hello\", \"Goodbye\")\n\tvariadic(\"Str1\", \"Str2\", \"Str3\")\n\n\t// you can also give a slice to a variadic function, with `...`:\n\tstrs := []string{\"a\", \"b\"}\n\tvariadic(strs...)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:10Z","updated_at":"2019-11-06T04:10:10Z","description":"example for https://notion.so/b255ad4247814bc6b1df1fed7c5027c8","comments":0,"user":null,"comments_url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"0759559083d26ab4c8525c32f9c8137f98a80e1b","committed_at":"2019-11-06T04:10:10Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4/0759559083d26ab4c8525c32f9c8137f98a80e1b"}],"truncated":false}
3651 1573013721004 gistoutput
Gist:+3567
{"url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4","forks_url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4/forks","commits_url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4/commits","id":"485ce74c6a9b15b66e41283147febaa4","node_id":"MDQ6R2lzdDQ4NWNlNzRjNmE5YjE1YjY2ZTQxMjgzMTQ3ZmViYWE0","git_pull_url":"https://gist.github.com/485ce74c6a9b15b66e41283147febaa4.git","git_push_url":"https://gist.github.com/485ce74c6a9b15b66e41283147febaa4.git","html_url":"https://gist.github.com/485ce74c6a9b15b66e41283147febaa4","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/485ce74c6a9b15b66e41283147febaa4/raw/5dca69bc428b5bb84cc6f47ee511e5d78a1f3981/main.go","size":410,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc variadic(strs ...string) {\n\t// strs is a slice of string\n\tfor i, str := range strs {\n\t\tfmt.Printf(\"%d: %s\\n\", i, str)\n\t}\n\tfmt.Print(\"\\n\")\n}\n\nfunc main() {\n\tvariadic(\"Hello\", \"Goodbye\")\n\tvariadic(\"Str1\", \"Str2\", \"Str3\")\n\n\t// you can also give a slice to a variadic function, with `...`:\n\tstrs := []string{\"a\", \"b\"}\n\tvariadic(strs...)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:10Z","updated_at":"2019-11-06T04:10:10Z","description":"example for https://notion.so/b255ad4247814bc6b1df1fed7c5027c8","comments":0,"user":null,"comments_url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"0759559083d26ab4c8525c32f9c8137f98a80e1b","committed_at":"2019-11-06T04:10:10Z","change_status":{"total":26,"additions":26,"deletions":0},"url":"https://api.github.com/gists/485ce74c6a9b15b66e41283147febaa4/0759559083d26ab4c8525c32f9c8137f98a80e1b"}],"truncated":false}
GistOutput:+57
0: Hello
1: Goodbye

0: Str1
1: Str2
2: Str3

0: a
1: b

3448 1573013721352 gist
GistID: 26a4febfe8f8d87c01cd1c7bc9e86836
Gist:+3395
{"url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836","forks_url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836/forks","commits_url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836/commits","id":"26a4febfe8f8d87c01cd1c7bc9e86836","node_id":"MDQ6R2lzdDI2YTRmZWJmZThmOGQ4N2MwMWNkMWM3YmM5ZTg2ODM2","git_pull_url":"https://gist.github.com/26a4febfe8f8d87c01cd1c7bc9e86836.git","git_push_url":"https://gist.github.com/26a4febfe8f8d87c01cd1c7bc9e86836.git","html_url":"https://gist.github.com/26a4febfe8f8d87c01cd1c7bc9e86836","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26a4febfe8f8d87c01cd1c7bc9e86836/raw/584d9546d9fc560aa1132e4ae0736c03a59af5ca/main.go","size":264,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc SayHelloToMe(firstName, lastName string, age int) {\n\tfmt.Printf(\"Hello, %s %s!\\n\", firstName, lastName)\n\tfmt.Printf(\"You are %d\\n\", age)\n}\n\nfunc main() {\n\tSayHelloToMe(\"John\", \"Doe\", 35)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:12Z","updated_at":"2019-11-06T04:10:12Z","description":"example for https://notion.so/f492fb976806443082cfc09337f08e7b","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"432048b19c901b46a8c9a5c4c57f7e70e7092c91","committed_at":"2019-11-06T04:10:11Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836/432048b19c901b46a8c9a5c4c57f7e70e7092c91"}],"truncated":false}
3450 1573013722475 gistoutput
Gist:+3395
{"url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836","forks_url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836/forks","commits_url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836/commits","id":"26a4febfe8f8d87c01cd1c7bc9e86836","node_id":"MDQ6R2lzdDI2YTRmZWJmZThmOGQ4N2MwMWNkMWM3YmM5ZTg2ODM2","git_pull_url":"https://gist.github.com/26a4febfe8f8d87c01cd1c7bc9e86836.git","git_push_url":"https://gist.github.com/26a4febfe8f8d87c01cd1c7bc9e86836.git","html_url":"https://gist.github.com/26a4febfe8f8d87c01cd1c7bc9e86836","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/26a4febfe8f8d87c01cd1c7bc9e86836/raw/584d9546d9fc560aa1132e4ae0736c03a59af5ca/main.go","size":264,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"fmt\"\n)\n\n// :show start\nfunc SayHelloToMe(firstName, lastName string, age int) {\n\tfmt.Printf(\"Hello, %s %s!\\n\", firstName, lastName)\n\tfmt.Printf(\"You are %d\\n\", age)\n}\n\nfunc main() {\n\tSayHelloToMe(\"John\", \"Doe\", 35)\n}\n\n// :show end"}},"public":true,"created_at":"2019-11-06T04:10:12Z","updated_at":"2019-11-06T04:10:12Z","description":"example for https://notion.so/f492fb976806443082cfc09337f08e7b","comments":0,"user":null,"comments_url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"432048b19c901b46a8c9a5c4c57f7e70e7092c91","committed_at":"2019-11-06T04:10:11Z","change_status":{"total":18,"additions":18,"deletions":0},"url":"https://api.github.com/gists/26a4febfe8f8d87c01cd1c7bc9e86836/432048b19c901b46a8c9a5c4c57f7e70e7092c91"}],"truncated":false}
GistOutput:+28
Hello, John Doe!
You are 35
4576 1573013722811 gist
GistID: c93793e00c200635739337b99c7011f2
Gist:+4523
{"url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2","forks_url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2/forks","commits_url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2/commits","id":"c93793e00c200635739337b99c7011f2","node_id":"MDQ6R2lzdGM5Mzc5M2UwMGMyMDA2MzU3MzkzMzdiOTljNzAxMWYy","git_pull_url":"https://gist.github.com/c93793e00c200635739337b99c7011f2.git","git_push_url":"https://gist.github.com/c93793e00c200635739337b99c7011f2.git","html_url":"https://gist.github.com/c93793e00c200635739337b99c7011f2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/c93793e00c200635739337b99c7011f2/raw/aed42a5605dcffc2e22315188989511917fbe257/main.go","size":1261,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\nvar xmlStr = `\n<people>\n\t<person age=\"34\">\n\t\t<first-name>John</first-name>\n\t\t<address>\n\t\t\t<city>San Francisco</city>\n\t\t\t<state>CA</state>\n\t\t</address>\n\t</person>\n\n\t<person age=\"23\">\n\t\t<first-name>Julia</first-name>\n\t</person>\n</people>`\n\ntype People struct {\n\tPerson []Person `xml:\"person\"`\n}\n\ntype Person struct {\n\tAge       int     `xml:\"age,attr\"`\n\tFirstName string  `xml:\"first-name\"`\n\tAddress   Address `xml:\"address\"`\n}\n\ntype Address struct {\n\tCity  *string `xml:\"city\"`\n\tState string  `xml:\"state\"`\n}\n\n// :show start\nfunc decodeFromReader(r io.Reader) (*People, error) {\n\tvar people People\n\tdecoder := xml.NewDecoder(r)\n\terr := decoder.Decode(&people)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn &people, nil\n}\n\nfunc decodeFromString(s string) (*People, error) {\n\tr := bytes.NewBufferString(s)\n\treturn decodeFromReader(r)\n}\n\nfunc decodeFromFile(path string) (*People, error) {\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer f.Close()\n\treturn decodeFromReader(f)\n}\n\n// :show end\n\nfunc main() {\n\tpeople, err := decodeFromString(xmlStr)\n\tif err != nil {\n\t\tlog.Fatalf(\"decodeFromString failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"%#v\\n\\n\", people)\n}"}},"public":true,"created_at":"2019-11-06T04:10:13Z","updated_at":"2019-11-06T04:10:13Z","description":"example for https://notion.so/59e924ef82eb462a86a3fe905d13c2ce","comments":0,"user":null,"comments_url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b75ee472daef922ab93a7959e5607df417beebf5","committed_at":"2019-11-06T04:10:13Z","change_status":{"total":76,"additions":76,"deletions":0},"url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2/b75ee472daef922ab93a7959e5607df417beebf5"}],"truncated":false}
4783 1573013724056 gistoutput
Gist:+4523
{"url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2","forks_url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2/forks","commits_url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2/commits","id":"c93793e00c200635739337b99c7011f2","node_id":"MDQ6R2lzdGM5Mzc5M2UwMGMyMDA2MzU3MzkzMzdiOTljNzAxMWYy","git_pull_url":"https://gist.github.com/c93793e00c200635739337b99c7011f2.git","git_push_url":"https://gist.github.com/c93793e00c200635739337b99c7011f2.git","html_url":"https://gist.github.com/c93793e00c200635739337b99c7011f2","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/c93793e00c200635739337b99c7011f2/raw/aed42a5605dcffc2e22315188989511917fbe257/main.go","size":1261,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\nvar xmlStr = `\n<people>\n\t<person age=\"34\">\n\t\t<first-name>John</first-name>\n\t\t<address>\n\t\t\t<city>San Francisco</city>\n\t\t\t<state>CA</state>\n\t\t</address>\n\t</person>\n\n\t<person age=\"23\">\n\t\t<first-name>Julia</first-name>\n\t</person>\n</people>`\n\ntype People struct {\n\tPerson []Person `xml:\"person\"`\n}\n\ntype Person struct {\n\tAge       int     `xml:\"age,attr\"`\n\tFirstName string  `xml:\"first-name\"`\n\tAddress   Address `xml:\"address\"`\n}\n\ntype Address struct {\n\tCity  *string `xml:\"city\"`\n\tState string  `xml:\"state\"`\n}\n\n// :show start\nfunc decodeFromReader(r io.Reader) (*People, error) {\n\tvar people People\n\tdecoder := xml.NewDecoder(r)\n\terr := decoder.Decode(&people)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn &people, nil\n}\n\nfunc decodeFromString(s string) (*People, error) {\n\tr := bytes.NewBufferString(s)\n\treturn decodeFromReader(r)\n}\n\nfunc decodeFromFile(path string) (*People, error) {\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer f.Close()\n\treturn decodeFromReader(f)\n}\n\n// :show end\n\nfunc main() {\n\tpeople, err := decodeFromString(xmlStr)\n\tif err != nil {\n\t\tlog.Fatalf(\"decodeFromString failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"%#v\\n\\n\", people)\n}"}},"public":true,"created_at":"2019-11-06T04:10:13Z","updated_at":"2019-11-06T04:10:13Z","description":"example for https://notion.so/59e924ef82eb462a86a3fe905d13c2ce","comments":0,"user":null,"comments_url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"b75ee472daef922ab93a7959e5607df417beebf5","committed_at":"2019-11-06T04:10:13Z","change_status":{"total":76,"additions":76,"deletions":0},"url":"https://api.github.com/gists/c93793e00c200635739337b99c7011f2/b75ee472daef922ab93a7959e5607df417beebf5"}],"truncated":false}
GistOutput:+232
&main.People{Person:[]main.Person{main.Person{Age:34, FirstName:"John", Address:main.Address{City:(*string)(0xc000010430), State:"CA"}}, main.Person{Age:23, FirstName:"Julia", Address:main.Address{City:(*string)(nil), State:""}}}}

3663 1573013724392 gist
GistID: 39b623f6b95471c73801c86aa685d492
Gist:+3610
{"url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492","forks_url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492/forks","commits_url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492/commits","id":"39b623f6b95471c73801c86aa685d492","node_id":"MDQ6R2lzdDM5YjYyM2Y2Yjk1NDcxYzczODAxYzg2YWE2ODVkNDky","git_pull_url":"https://gist.github.com/39b623f6b95471c73801c86aa685d492.git","git_push_url":"https://gist.github.com/39b623f6b95471c73801c86aa685d492.git","html_url":"https://gist.github.com/39b623f6b95471c73801c86aa685d492","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/39b623f6b95471c73801c86aa685d492/raw/5157e5b4aeb9f5120b4801f3f5c0672c33788367/main.go","size":443,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowXMLName struct {\n\tXMLName xml.Name `xml:\"data\"`\n\tN       int      `xml:\"n\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := &ShowXMLName{\n\t\tN: 5,\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T04:10:15Z","updated_at":"2019-11-06T04:10:15Z","description":"example for https://notion.so/7d0ad68b65cd4074aa9885b63da9e3b0","comments":0,"user":null,"comments_url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"75bcd66abc08a31e0577b8f3f164d1a381b1376b","committed_at":"2019-11-06T04:10:14Z","change_status":{"total":35,"additions":35,"deletions":0},"url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492/75bcd66abc08a31e0577b8f3f164d1a381b1376b"}],"truncated":false}
3665 1573013725574 gistoutput
Gist:+3610
{"url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492","forks_url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492/forks","commits_url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492/commits","id":"39b623f6b95471c73801c86aa685d492","node_id":"MDQ6R2lzdDM5YjYyM2Y2Yjk1NDcxYzczODAxYzg2YWE2ODVkNDky","git_pull_url":"https://gist.github.com/39b623f6b95471c73801c86aa685d492.git","git_push_url":"https://gist.github.com/39b623f6b95471c73801c86aa685d492.git","html_url":"https://gist.github.com/39b623f6b95471c73801c86aa685d492","files":{"main.go":{"filename":"main.go","type":"text/plain","language":"Go","raw_url":"https://gist.githubusercontent.com/kjk/39b623f6b95471c73801c86aa685d492/raw/5157e5b4aeb9f5120b4801f3f5c0672c33788367/main.go","size":443,"truncated":false,"content":"// :glot\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"log\"\n)\n\n// :show start\n\ntype ShowXMLName struct {\n\tXMLName xml.Name `xml:\"data\"`\n\tN       int      `xml:\"n\"`\n}\n\n// :show end\n\nfunc printXML(v interface{}) {\n\td, err := xml.Marshal(v)\n\tif err != nil {\n\t\tlog.Fatalf(\"xml.Marshal failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"XML: %s\\n\\n\", string(d))\n}\n\nfunc main() {\n\t// :show start\n\tv := &ShowXMLName{\n\t\tN: 5,\n\t}\n\tprintXML(v)\n\n\t// :show end\n}"}},"public":true,"created_at":"2019-11-06T04:10:15Z","updated_at":"2019-11-06T04:10:15Z","description":"example for https://notion.so/7d0ad68b65cd4074aa9885b63da9e3b0","comments":0,"user":null,"comments_url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492/comments","owner":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"forks":[],"history":[{"user":{"login":"kjk","id":7935,"node_id":"MDQ6VXNlcjc5MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/7935?v=4","gravatar_id":"","url":"https://api.github.com/users/kjk","html_url":"https://github.com/kjk","followers_url":"https://api.github.com/users/kjk/followers","following_url":"https://api.github.com/users/kjk/following{/other_user}","gists_url":"https://api.github.com/users/kjk/gists{/gist_id}","starred_url":"https://api.github.com/users/kjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kjk/subscriptions","organizations_url":"https://api.github.com/users/kjk/orgs","repos_url":"https://api.github.com/users/kjk/repos","events_url":"https://api.github.com/users/kjk/events{/privacy}","received_events_url":"https://api.github.com/users/kjk/received_events","type":"User","site_admin":false},"version":"75bcd66abc08a31e0577b8f3f164d1a381b1376b","committed_at":"2019-11-06T04:10:14Z","change_status":{"total":35,"additions":35,"deletions":0},"url":"https://api.github.com/gists/39b623f6b95471c73801c86aa685d492/75bcd66abc08a31e0577b8f3f164d1a381b1376b"}],"truncated":false}
GistOutput:+28
XML: <data><n>5</n></data>

