00f43c9ab9f344df9daf1a81dcc6bfe1a3ed9d54:
v: 3
v: 4
v: 5

|======|
0185d03ae0806edfac79293f635228b5ff337c66:
i1: 348

|======|
0259a5524bb29389e4f81ea8743cfafc31f1ca9d:
5 is odd
18 is even

|======|
02e38ab505799be03dabeec8de0a5e154f8539d1:
panic: close of closed channel

goroutine 1 [running]:
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src878350153/main.go:8 +0x57
exit status 2

|======|
03a625cb629a04ae327b1b5d6476cac59b8e1e1c:
f32: 1.3E+00
f64: 8.1234e+00

|======|
03ed766a1f67638ffe2cf94ead362f031365e29e:
'hey' is in greetings

|======|
03fcce32bdd1fae72d4aa493f061d383259e7f5e:
Appends needed to re-allocate slice: 1
Appends needed to re-allocate slice: 1
Appends needed to re-allocate slice: 1
Appends needed to re-allocate slice: 2
Appends needed to re-allocate slice: 4
Appends needed to re-allocate slice: 8

|======|
04637ae2dbc73dcffb7a221171289a1569307c6b:
User kjk has 124 tweets.
Recent tweets:
Tweet 0 of 2: 'hello'
Tweet 1 of 2: 'there'
Most recent tweet: 'hello'
|======|
04c12e88600fa49a0638b96944d331762284bd70:
# command-line-arguments
./main.go:8:7: goto end jumps over declaration of a at ./main.go:9:4

|======|
054df6223c6765bbf594cade498ca06a94da4560:
key: john, value: 30
key: jane, value: 29
key: mark, value: 11

|======|
06091337ccb856b56117d5464cf4c7f5c34ddd09:
len(a): 3
cap(a): 3
slice kind: 'slice'
element type: 'int'
a[0]: 3
elRef.CanAddr(): true
elRef.CanSet(): true
a: [3 5 8]

|======|
06d2dfdefa89246b6ae5b8d81fd7ead7836158cf:
i: 1
i: 2

|======|
06d51f27fa295890b49d304a6db7d3bfd40de019:
zero bool:       false
zero int:        0
zero f32:        0
zero string:     ""
zero ptr:        <nil>
zero slice:      []uint32(nil)
zero map:        map[string]int(nil)
zero interface:  <nil>
zero channel:    <nil>
zero array:      [0 0 0 0 0]
zero struct:     main.struc{a:0, b:""}
zero function:   <nil>

|======|
06f98eaf3bbd2280e078b551dedfc3fea14b80f6:
idx: 0, element: 3
idx: 1, element: 15
idx: 2, element: 8

|======|
073b9baaf272070a3b24f8df5f3239c52f7d12ec:
total tasks         : 32
max concurrent tasks: 4

|======|
073f6e32bb8d01fdb862707962cd9b28fcca7e80:
KB: 1024

|======|
08b55761d6ef8babf30a852e475c72d149b24543:
First main statement
Num 4
Num 2
Num 1

|======|
092a152cfbe48e09413077a8da4717f7969aa5eb:
'hello' is in s starting at position 6
Index of non-existent substring is: -1

|======|
0a4d96b239d364da8a810babee45c611598da4bd:
Record: []string{"date", "open", "high", "low", "close", "volume", "Name"}
Record: []string{"2013-02-08", "15.07", "15.12", "14.63", "14.75", "8407500", "AAL"}
Record: []string{"2013-02-11", "14.89", "15.01", "14.26", "14.46", "8882000", "AAL"}
Record: []string{"2013-02-12", "14.45", "14.51", "14.1", "14.27", "8126000", "AAL"}
Read 5 records

|======|
0a513646faf47fedba70d8f8f8a28b25ac8e7cb8:
routine 5 finished
routine 1 finished
routine 0 finished
routine 7 finished
routine 6 finished
routine 9 finished
routine 3 finished
routine 8 finished
routine 4 finished
routine 2 finished
main finished

|======|
0a525b800e415f0d3c781d4db2180d514f717cd8:
'this is string' starts with 'this'

|======|
0ab4c2dc39440f80b07a45b2110eb00803faebed:
{Total:1 Links:{Next:https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=25} Subs:[{Created:2011-11-23T02:53:17Z User:{Name:bar ID:123456}}]}
|======|
0ae4b354db52c3dcd0c154b4d9807981e37909f3:
Before if
Ater if
inside if

|======|
0aeaaa7a4428d9980224b32758344e3364ebece1:
Student: John Doe, standard: 4
Student: Peter Parker, standard: 11
Student: Bilbo Baggins, standard: 150

|======|
0b3640d0d64a2725b73bb27a7af99e1b50edb185:
value: 3
value: 5

|======|
0b54f42e82271ce3b342ef79977c3b409f899360:
u: main.User{FirstName:"", LastName:"", Email:"", Age:0, userID:0}

*pu: main.User{FirstName:"", LastName:"", Email:"", Age:33, userID:0}
*pu: main.User{FirstName:"", LastName:"", Email:"", Age:18, userID:0}
pu.FullName(): Jane Doe

|======|
0bfdb6a8ef45665ba99db9d39cf78c21e0e666fe:
<nil>: null
int: 5
float64: 8.23
string: "john"
[]int: [5,4,18]
[]interface {}: [4,"string"]
map[string]interface {}: {"i":5,"s":"foo"}
struct { Name string; Age int }: {"Name":"John","Age":37}

|======|
0c2de79cf48552c63c9bbedd7c8173daf5123dc3:
main.People{Person:[]main.Person{main.Person{Age:34, FirstName:"John", Address:main.Address{City:(*string)(0xc00000e3f0), State:"CA"}}, main.Person{Age:23, FirstName:"Julia", Address:main.Address{City:(*string)(nil), State:""}}}}


|======|
0c48f39abb83bc4f9914d9a0d519d21c825c2c85:
panic: send on closed channel

goroutine 1 [running]:
main.main()
	/books/go/0220-channels-select/close5.go:7 +0x63
exit status 2

|======|
0d6c2d06722c404f2bf485611486a30f2156c253:
5 + 5 = 10

|======|
0e3f509342700d6bfa7fd1cfb85adf8eff0febd0:
First main statement
Num 3
Num 2
Num 1
panic: panic occurred

goroutine 1 [running]:
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src485930671/main.go:16 +0xf0
exit status 2

|======|
0e7ae2f99d56855d83e97c5285759f6e47cef5c2:
http.Get() returned content of type 'text/html; charset=utf-8' and size 3741 bytes.
Status code: 200

http.Get() returned content of type 'text/html' and size 3741 bytes.
Status code: 404

http.Get() failed with: 'Get http://website.not-exists.as/index.html: dial tcp: lookup website.not-exists.as: no such host'
resp: <nil>

|======|
0eb59d7fcb7a0e57751071ae8cfa281441e03dc2:
src: []int{1, 2, 3}
dst: []int{1, 2, 3}

|======|
0edcccdc78d1b655b85f7f78f29898ad8c219655:
Person struct parsed from JSON: main.Person{Name:(*string)(0xc42008a230), Age:24, City:"ny", Occupation:""}
Name: "Jane"

|======|
0f045979b35b7f07677173506a4e8c905592adc4:
Exiting foo
Exiting main
panic: bar

goroutine 1 [running]:
main.foo()
	/books/go/0200-panic-and-recover/panic.go:8 +0x95
main.main()
	/books/go/0200-panic-and-recover/panic.go:13 +0x7e
exit status 2

|======|
0f07d9089d8d2b71532099d2524664c3399ae357:
Hello, 世界

|======|
101aa08856ce1c98cb663b2c1ae0cb5367aad780:
"5" of type string converted to 5
4 of type int converted to 4
Failed to convert 8 to int
Failed to convert "not valid int" to int

|======|
103bc756ef6bba6be9cfab216017ae450df2197e:
total: 30
total: 30

|======|
10b430570d93377f5f74400a706778afc3b5be89:
m == nil ? true
len(m) = 0

|======|
10d5a043576e6a9a23e4a72e45fc167dbfb34edf:
Admin ==> Run()
User ==> Run()

|======|
11914bc067b8a8b4f6b0ba7009f2473ff9ffdb10:
received from channel: foo
range loop finished because ch was closed

|======|
11dcb3f249d25cb58b77ee89f8286c3d1b40b427:
n is 3, divisible by 3
n is 4 (>= 4)
n is 6, divisible by 3
default: n is 1

|======|
11e336bf2b4b9acc7849c10ea5b2fed515e491b3:
Receive from closed channel immediately returns zero value of the type: ""

|======|
1230e80222c43ad6a366102e4174ea3f208cd8c9:
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion(0x10a2a00, 0x10d8120)
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src712272704/main.go:10 +0xbd
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src712272704/main.go:15 +0x39
exit status 2

|======|
12b56d94694ebc470fdbab3a82273554bb5e4c7f:
a: 0, b: 2

|======|
133cb538d497460bc278d4772cb6d78583ad93f5:
Low: 0
Medium: 1
High: 2

|======|
13c25eef9774d5084b795085de5367a3f0891cc9:
# command-line-arguments
./goto2.go:8:7: goto end jumps over declaration of a at ./goto2.go:9:4

|======|
13f2d5701a48bb1e85a42763f6644adbe00b6aa7:
i5: 0
i5: 2
i5: 4

|======|
1413bec3806f04d888a50791a58ab2b816de1fdc:
[]int{1, 3}

|======|
147770295987255d31a88468f5848ec758def480:
dog
cat
fish

|======|
14a3b344c2ae52ed412ea296fbc0e04107f47ea1:
It took 1 appends to re-allocate slice
It took 1 appends to re-allocate slice
It took 1 appends to re-allocate slice
It took 2 appends to re-allocate slice
It took 4 appends to re-allocate slice
It took 8 appends to re-allocate slice

|======|
14c58a06b81ac3bf54644d673f687f2f3ecb5f18:
5+8=13, 5*8=40
6+12=18

|======|
153b1fa9f837bb292b3b709fd36e726b75aea83f:
Compact XML: <people><person age="34"><first-name>John</first-name><address><city>San Francisco</city><state>CA</state></address></person></people>

Pretty printed XML:
<people>
  <person age="34">
    <first-name>John</first-name>
    <address>
      <city>San Francisco</city>
      <state>CA</state>
    </address>
  </person>
</people>

|======|
1590d3022837413a07c86287f65976d205e96e46:
Type 'int' of size: 8 bytes
v contains value of type int

|======|
15b90a2e0835be914c04895630a8d3c100fa43b3:
Address of a variable in memory is 0xc0000180a0. Its value is: 4

|======|
15d1d8fe105399d14df46caee210d730a7f986ed:
Hex: 01ff3acd
3824 in hex is 0xef0

|======|
15f7084abd9083a2581eb83700074151ec3fc5f4:
Slice[0]: first
SliceNested[1][0]: 2
Map["key"]: 5

|======|
169850825fd409c180fd2da0721cbc5c08a5296d:
struct S, 5 field(s), size: 40 bytes
  name: 'Inner' type: 'struct Inner', offset: 0, 1 field(s), size: 8 bytes, embedded: true
     name: 'N' type: 'int', value: '0', offset: 0, size: 8
  name: 'NamedInner' type: 'struct Inner', offset: 8, 1 field(s), size: 8 bytes, embedded: false
     name: 'N' type: 'int', value: '0', offset: 0, size: 8
  pointer
   name: 'unexported' type: 'int', value: '0', offset: 24, size: 8
   name: 'N' type: 'int8', value: '0', offset: 32, size: 1

|======|
176fdfcdad35e87ba5c5d9212e299f1701faf122:
Unbuffered version took 60.521301ms
Buffered version took 38.647922ms

|======|
17bc8dd699452ad0543f33ef60250ff461791a59:
Person in YAML:
name: John
age: 37
city: SF


|======|
1857ee0b70dfb82252519f4cea9213490d4f008e:
i: 4, i2: 0, s: , err: <nil>

|======|
1858d24205e3b2b8508179e45ca100dea961b84e:
a: []string{"foo"}

|======|
1874121ab1c4312b30bdb08d614684bfc018b140:
value for key 'number3' is 3
key 'number4' doesn't exist in map
deleted key 'number3
key 'number3' doesn't exist in map

|======|
19bc00440658b23cc80841d71ca60dea924fcbd7:
msg='Hello World', ok='true'

|======|
1ae1038b3816cca619700eafba47b0cccdc3beef:
Name of executable: '/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/go-build482523970/b001/exe/main'
Arg 0, value: '-echo'
Arg 1, value: 'echo-arg'
Arg 2, value: 'additional'
Arg 3, value: 'arg'

|======|
1b0809fa3e95b6b18e7b8f24c7aafc62d587accc:
Response status code: 200, text:
{
  "user-agent": "Special Agent v 1.0.16"
}


|======|
1b21458b91e40a7da263d8f432e98459de9ee4e2:
Int value is: 3
Int value is: 4
panic: reflect: call of reflect.Value.Int on string Value

goroutine 1 [running]:
reflect.Value.Int(...)
	/usr/local/Cellar/go/1.11.1/libexec/src/reflect/value.go:961
main.getIntValue(0x10a2b80, 0x10d8340)
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src426831753/main.go:13 +0x1f3
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src426831753/main.go:23 +0x7b
exit status 2

|======|
1b4d839dcc48bd6980c42b2afe4bc4e93253e926:
Elements of map:
five: 5
one: 1

|======|
1b7ad5813d91b414240c7a276e5d3abf148040ae:
Key 'four' exists and maps to 4
Key 'five' doesn't exists

Value for non-existing key: 0

All keys and their values:
three => 3
four => 4

Before deletion: len(m)=2
After deletion: len(m)=1

|======|
1da065a9849f03dbc55dc00a2fc2af264e7dbe4f:
len(nil)       : 0
len(emptySlice): 0
len(slice)     : 3
len(map)       : 2

|======|
1dc009aaeb16951c481fad9da853ab7ff0b84c5d:
2

|======|
1e0751c9378986fc102b38b85107e1791c5f7d3f:
received 1, is channel closed: true
received 0, is channel closed: false

|======|
1e54cc4fad7b728448bc6162cf9d8a3b7abe8ffd:
idx: 0, element: 3
idx: 1, element: 15
idx: 2, element: 8

|======|
1e8a6ac64787b507444aeaaab33338d286d4538d:
Hex: 01ff3acd

|======|
1e904b60e405106847a29cbcfb49fa4655ba71f8:
2017-09-04 03:38:45

|======|
1effd55ec572bcd74c9cfc514e353c46c24944eb:
3

|======|
1f4c043ec90d65a6cf7bc1fc537160ebbd0c5672:
Top 10 most recently active StackOverflow posts:
Score Link
0 https://stackoverflow.com/q/49189560
2 https://stackoverflow.com/q/23843329
0 https://stackoverflow.com/a/49189697
0 https://stackoverflow.com/a/49189696
1 https://stackoverflow.com/q/49189079
0 https://stackoverflow.com/q/49189695
1 https://stackoverflow.com/q/49188898
0 https://stackoverflow.com/q/35025270
0 https://stackoverflow.com/a/49189631
0 https://stackoverflow.com/q/49189317

|======|
1fc271a43cbca95baed3e7733dc62e3510730d4d:
i1: -48

|======|
204ed89a73ff793637f37b8caf0d4cf131737685:
name: 'FirstName',	type: 'string', value: John,	tag: 'my_tag:"first-name"',	json tag: ''
name: 'lastName',	type: 'string',	value: not accessible
name: 'Age',	type: 'int', value: 27,	tag: 'json:"age",xml:"AgeXml',	json tag: 'age'

|======|
20f4a00a975001b02c5525fa3fc022b76f2a8805:
main.Address{City:"San Francisco", State:"CA"}
main.Address{City:"Austin", State:"TX"}

|======|
2153eccf7709fbac1ec9a4fea16f2044aebd941d:
total: 30
total: 30

|======|
21b54687f8dfad5c711d635732df1938ef89aef4:
My name is Slim Shady

|======|
222951dfcd630ed214dafb48301b6ea736f09961:
[[1 2 3] [4 5 6]]
[1 2 3]
2

|======|
22a33e214aa0407e033f397e487f28f2c5035e62:
    1 +     3 =     4, overflowed: false

65550 + 10000 =  9984, overflowed: true

|======|
22a380375bf7578506061d381180f39f55cde44a:
Key 'four' exists and maps to 4
Key 'five' doesn't exists

Value for non-existing key: 0

All keys and their values:
three => 3
four => 4

Before deletion: len(m)=2
After deletion: len(m)=1

|======|
23c411e74786ad05dece4dd5ca91fccc006473d9:
date,price,name
2013-02-08,"15,07",GOOG
2013-02-09,"15,09",GOOG


|======|
24006fb030f7c7fd3c25659bbc79527716059704:
1
2
3
4
5
6

|======|
241398057d65797cae16ae8d3ad3075f978028b1:
2017-04-09 03:38:45.000 UTC
2017-04-9 03am
Sep 17 Mon 4 09
September 6 Mon 4 9
Month: Sep '9', '09',  4

|======|
246a7fc2685076fc30e0042e9fa7444f5e7eac07:
*main.User: John
main.MyInt: 5

|======|
25927c339acb04af9d614dac64ea009bd2b5e872:
didTimeout: true, err: signal: killed

|======|
268a1450899952bb5e7cebdbe2e05edf03447d0b:
http.Get() returned content of type 'text/html; charset=utf-8' and size 3741 bytes.
Status code: 200

http.Get() returned content of type 'text/html' and size 3741 bytes.
Status code: 404

http.Get() failed with: 'Get http://website.not-exists.as/index.html: dial tcp: lookup website.not-exists.as: no such host'
resp: <nil>

|======|
26d3b14e64d541fd523eed8f7c46f802626d2573:
1
0

|======|
276ba4ee113e367675bf7c80d7d52de63fe8d0b5:
File 'file_exists.go' exists: true
File 'non-existent-file.txt' exists: false

|======|
282f9e0599d041bfab20c1607e3deb8637d7e41d:
2018/03/09 00:42:44 http.DefaultClient.Do() failed with:
'Get https://httpbin.org/delay/3: context deadline exceeded'
exit status 1

|======|
28e0f0c36375e990398d6cc171fc23dc207c88b0:
User: &main.User{Name:"John", IsLoggedIn:false}

|======|
2972d8ef930280fd617bbb6eafa87aa359f53a4c:
Unbuffered version took 54.719231ms
Buffered version took 35.392007ms

|======|
29c5a20fa545822aea8223c3f8b7fc396eab8f06:
array1: [1 2 3 4 5 6]
array2: [1 2 3 4 5 6]
array3: [1 2 3 4 5 6]
zeroes: [0 0 0 0 0 0 0 0]
ptrs: [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
emptystr: [       ]
structs: [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]

|======|
2a1b0c09c97740dc2ab925c139cb9187b663629b:
panic: send on closed channel

goroutine 1 [running]:
main.main()
	/books/go/0220-channels-select/close5.go:8 +0x63
exit status 2

|======|
2af8c9d06035a672e4010185a21b8dfc86a9e9b5:
XML: <ShowCData><![CDATA[cdata]]></ShowCData>


|======|
2afe02aa294adab5991ba2f5f55b9315b51e52fa:
2018/10/05 22:20:27 http.DefaultClient.Do() failed with:
'Get https://httpbin.org/delay/3: context deadline exceeded'
exit status 1

|======|
2b0415d879c83ed69dd4d9830e434df97c5e0f59:
n is 3, divisible by 3
n is 4 (>= 4)
n is 6, divisible by 3
default: n is 1

|======|
2b56deb559bda91a1712ec726d289bee750ffd24:
i: 0
i: 2
i: 4

|======|
2b77c2d6fece3602815cbd5dd2c20b20693905d1:
intOp(2, 3) = 5
intOp(2, 3) = 6

|======|
2cc2f8238bc7f32b3c710548bd4629edf9db8707:
XML: <ShowCharData>str</ShowCharData>


|======|
31590acc21855e9bdf07f6110e7530335b61e349:
i3: 0
i3: 2
i3: 4
i3: 6

|======|
3231bd96d702da064c60051effdba098f199c6b1:
case 1
caes 2

|======|
328c012a054f4db640168a6b7edc4e8e59668673:
John Doe

|======|
333ec896a2bdb094d2fbb410e413a65828d2fd18:
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"All zero indexes", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", "All indexes to max"}}}}

|======|
33e2b04bd5e94d2bcbb7ee4abb086ce0430211a8:
==================
WARNING: DATA RACE
Read at 0x000001217840 by goroutine 7:
  main.main.func1()
      /private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src658751559/main.go:26 +0x6d

Previous write at 0x000001217840 by goroutine 6:
  main.main.func1()
      /private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src658751559/main.go:26 +0x89

Goroutine 7 (running) created at:
  main.main()
      /private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src658751559/main.go:23 +0xcd

Goroutine 6 (running) created at:
  main.main()
      /private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src658751559/main.go:23 +0xcd
==================
n is: 548, expected: 800
Found 1 data race(s)
exit status 66

|======|
346c9a72236a69bcd7b9980fbd57dc612c354bb1:
date,price,name
2013-02-08,"15,07",GOOG
2013-02-09,"15,09",GOOG


|======|
34b3fc2dc2c63de23051cfe738dd083327eb5c21:
2018/10/18 02:25:05 second cmd.CombintedOutput() failed with 'exec: Stdout already set'
exit status 1

|======|
35c8f876ccb4600bbba3043bfa6e8fca3a6c2570:
http.Post() returned statuts code 200, truncated text:
{
  "args": {}, 
  "data": "text we send", 
  "files": {}, 
  "form": {}, 
  "headers": {
   ...

|======|
36a753077ca070cb9ec6f4f7eca2e87eecac0d27:
Hex: 01ff3acd

|======|
37413d7dc72c256f5c59e5cd0fbe11066bffbe31:
Data from a field: '5'
Data from a method: 'data from a method'

|======|
374e6589516c19fc36493be77d21c71e6e9634fd:
Byte at index 0 is 's' (0x73)
Byte at index 1 is 't' (0x74)
Byte at index 2 is 'r' (0x72)

|======|
37d9fe5f880349cad833e011cd1e77d20910fa37:
p: { }

p: {John Doe}

p.FullName(): John Doe

|======|
3858783ef327d2d261060ea6320ec168146d2206:
Entering main
Recovered with message bar
Exiting main the normal way

|======|
38b746151d0e5649095f070ec5606b17104a1ef0:
Name of executable: '/var/folders/v_/ksw1dqvd59v790zk2wqf_t_80000gn/T/go-build830406166/b001/exe/raw_cmd_line_args'
Arg 0, value: '-echo'
Arg 1, value: 'echo-arg'
Arg 2, value: 'additional'
Arg 3, value: 'arg'

|======|
3abdc550d411897a33e238410c3de736efb6d996:
XML: <ShowOmitEmpty><NonEmpty>non empty</NonEmpty></ShowOmitEmpty>


|======|
3abdfa118c0e5526b00ecc965e9999d26c19a846:
setIntPtr: n=4
setStructFieldDirect: n=5
setStructPtrField: s.N: 6
setInt panicked with 'reflect: call of reflect.Value.Elem on int Value'
setStructField panicked with 'reflect: call of reflect.Value.Elem on struct Value'
setIntPtrWithString panicked with 'reflect: call of reflect.Value.SetString on int Value'

|======|
3b927dcb304b2645a18fdb56e17599ade31b5ec8:
there was an error
panic: there was an error

goroutine 1 [running]:
main.panicWithMsg(0x10c58b4, 0x12, 0x0, 0x0, 0x0)
	/books/go/0180-error-handling/errors_in_short_programs.go:29 +0x144
main.PanicIfErr(0x10d8b80, 0xc00000e1e0, 0x0, 0x0, 0x0)
	/books/go/0180-error-handling/errors_in_short_programs.go:45 +0x6c
main.main()
	/books/go/0180-error-handling/errors_in_short_programs.go:50 +0x91
exit status 2

|======|
3c7e0a860a20eca837644bb2e33103661abee529:
f: 1.234100

|======|
3cf55b62a2efea5f78fe0916ea6345c3742b1b51:
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}}

|======|
3dcb9b70beb7ef43c5a4249787d9be3f49eb59f6:
doc: map[string]interface {}{"name":"Jane", "age":24, "city":"ny"}
name: "Jane"

|======|
3dde71755e9f5c1b567b97ebd4a5fdf2e3511525:
sqrtWorker started
Got sqrt: 4
Got sqrt: 16
sqrtWorker finished
sqrtWorker started
sqrtWorker finished

|======|
3e360f6b0e24e2fcbd9b8639be998263ccb1d4a7:
didTimeout: true, err: signal: killed

|======|
3f591ea9cfc7ee1356f79597765c719939c42620:
i: 0
i: 2
i: 4
i: 6

|======|
40dc6c3e37d5147d9010754a309b74556d1e043c:
1
2
3
4
5
6

|======|
41c50d55c01d3422f4a9ac501717ce7619bb3263:
XML: <ShowComment><!--comment--></ShowComment>


|======|
42f374083367e302c7e2dd19f40a1468489c35ce:
print:   str8
println: str 8

printf:  str "str" 8

|======|
43b387373ab6ff447882bdc5cc6d11509d2a109d:
Hello!

|======|
444e27f2dde5fcc12103ffb68d8398735da6ad74:
[]int{2, 4}

|======|
45a0940e7ae315dd74e55b91c35fcd4dfcf5fb9e:
err: Original error
main.wrappedError
	/books/go/0180-error-handling/add_callstack.go:16
main.main
	/books/go/0180-error-handling/add_callstack.go:21
runtime.main
	/usr/local/Cellar/go/1.10/libexec/src/runtime/proc.go:198
runtime.goexit
	/usr/local/Cellar/go/1.10/libexec/src/runtime/asm_amd64.s:2361

err: error created with pkg/errors
main.main
	/books/go/0180-error-handling/add_callstack.go:24
runtime.main
	/usr/local/Cellar/go/1.10/libexec/src/runtime/proc.go:198
runtime.goexit
	/usr/local/Cellar/go/1.10/libexec/src/runtime/asm_amd64.s:2361

|======|
45c18a40927f2ecaa7bf1642ce48d40dcefa75e3:
year: 2017, month: 9, day: 4

|======|
46a9313a24ff4ff8a968215b94047b8718978fde:
bool false       is: false
bool true        is: true
integer 0        is: false
integer 1        is: true
float32 0        is: false
float64 NaN      is: true
empty string     is: false
non-empty string is: true
nil slice        is: false
empty slice      is: false
non-empty slice  is: true
nil pointer      is: false

|======|
46afc79d2c07ce316bbc6122f6c5602a416f593e:
f is: '1.540000'

|======|
46afd167c461baec625d05b0ff509e6bbdef1da0:
Secure: 0x1 (0b001)
Authn: 0x2 (0b010)
ConnState: 0x3 (0b011)

|======|
46b5040617028d8ab095b4ca231aea15e669668a:
1
2
channel is now closed

|======|
46c3d5e89430894405e9cd53542da0664af5bdc6:
sum of strings: 'string
literal
with	escape charactersraw string literal
	which doesnt't recgonize escape characters like \n
	'

|======|
47652452fbaffca8993cb017cd28d2823507936e:
First main statement
Num 4
Num 2
Num 1

|======|
4840535a78e212bda6a399abb5dd89f5cc94f237:
err: This is custom error type

|======|
48a0bc1548d7b460696ab464e70ebbcbb4a6ee9c:
'Bridge' is not new
'Electric battery' is new

|======|
4921585d308811f1d58ad75d49db599bf6391d58:
TrimSpace('  str  '): 'str'

Trim('abacdda', 'ab'): 'cdd'

TrimLeft('abacdda', 'ab'): 'cdda'

TrimRight('abacdda', 'ab'): 'abacdd'

TrimSuffix('abacdda', 'ab'): 'abacdda'

TrimPrefix('abacdda', 'ab'): 'acdda'


|======|
4a200441ed265616145c140a34f5ee47e19caef1:
m["foo"] = 
ok: false
panic: assignment to entry in nil map

goroutine 1 [running]:
main.main()
	/books/go/0090-maps/zero_value2.go:16 +0x189
exit status 2

|======|
4a679e52b4f1347d5b26a1bdbf86f8051bedc970:
v is of type 'string'
v is of type 'int'
v is of type 'int32'

|======|
4a803dddae31ecf1c92dee8c7198fe90d37da2b8:
File index.go has 31 lines

|======|
4aa4ea214a639d0076ed429286a6bcff955ea64d:
f32: 1.3E+00
f64: 8.1234e+00

|======|
4ba0945f6f2c62c62c3b7efbf3d9db8e7a39f3d7:
case 1, 2, 3: n is 1

|======|
4c92a6ca3ea5b91850ba53b3f34ec5b098e43292:
sqrtWorker started
Got sqrt: 4
sqrtWorker started
Got sqrt: 16
sqrtWorker finished
sqrtWorker finished

|======|
4c937840feff21cd227fe44666adb4122a4b35af:
value of number3 is 3
key 'number4' doesn't exist in map m

|======|
4cb1a94bd8955095f0f7bd48d21949ef54bf0ea3:
<div onlick="foo"><span>text</span></div>

<div onlick="&#34;foo&#34;">&lt;span&gt;text&lt;/span&gt;</div>

|======|
4d0659410ed90e65b100dd2694ecb43dcdd3ac33:
Exiting foo
Exiting main
panic: bar

goroutine 1 [running]:
main.foo()
	/books/go/0200-panic-and-recover/panic.go:9 +0x95
main.main()
	/books/go/0200-panic-and-recover/panic.go:14 +0x7e
exit status 2

|======|
4d54bad263ca3e95f2325026984bd20a03d801dd:
sum of string: string
literal
with	escape charactersraw string literal
	which doesn't recgonize escape characters like \n
	
s1 is not equal to s2
substring of s1: in
byte (character) at position 3 in s1: 105
s: 1 + 3.000000 = 4

|======|
4ec9ed7ce83682f2269b7b47c2a85aa02986020b:
Top 10 most recently active StackOverflow posts:
Score Link
0 https://stackoverflow.com/a/52675953
-1 https://stackoverflow.com/q/52674906
0 https://stackoverflow.com/q/52675952
0 https://stackoverflow.com/q/52675819
0 https://stackoverflow.com/q/52675824
0 https://stackoverflow.com/q/52675951
0 https://stackoverflow.com/q/52666207
0 https://stackoverflow.com/q/52675812
1 https://stackoverflow.com/q/52675727
1 https://stackoverflow.com/a/52675872

|======|
4ed15f14f67d77fdb53b5e75b4fc1f48417ac863:
a: []string{"hello", "world", "now"}

|======|
4f80881dd406cc5bb680246e1d54624b1f2fbc39:
Path: dir_list_files.go, is dir: false, size: 394 bytes
Path: dir_remove.go, is dir: false, size: 1255 bytes
Path: file_copy.go, is dir: false, size: 685 bytes
Path: file_exists.go, is dir: false, size: 775 bytes

|======|
4fa53a3288ae45d449cca99c0b36d8c0e68d0347:
b is: 'true'
b is: 'false'

|======|
507ce122c6042f95138baf33b07683dcb243a2ba:
[]int{2, 4}

|======|
50a45cde76cfb34331c600651e9c6ac59d675e0b:
Channel is empty
Received 8 from a channel

|======|
516f7a902a8dc33758d59145269d32b7d25bb1d9:
Hello, John Doe!
You are 35
|======|
51c641ac9024f8879c1e83a83b245abd9a73686a:
Student: John Doe, standard: 4
Student: Peter Parker, standard: 11
Student: Bilbo Baggins, standard: 150

|======|
52ef5d6bf9bb944f7c51c3277067be7e02d1919b:
constant
10
n=10 is of type int
4.3
-0.5440211108893699

|======|
531e65273549edf5c001de1d1fa663b99e524f2d:
2018/10/05 22:20:14 http.Get() failed with 'Get https://httpbin.org/delay/3: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)'
exit status 1

|======|
54744a027b02ac304864a95c5652eb2a30a5b39d:
Exiting foo
Exiting main
panic: bar

goroutine 1 [running]:
main.foo()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src205228285/main.go:9 +0x95
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src205228285/main.go:14 +0x7e
exit status 2

|======|
54b212bcf1a4abd7dfb9d9b3c306a510f85317f7:
"new\nline"

|======|
554c3ccd332e9fc3f56ae1e916790872f8fb8aa5:
1 * 2 = 2
3 * 4 = 12

|======|
565ba928a584f306e8bc4055874413307e087230:
XML: <ShowInnerXML><s>&lt;foo&gt;&lt;/foo&gt;</s><foo></foo></ShowInnerXML>


|======|
573cdbcc55d5ad4c28798fdd0088d160786ff846:
m["foo"] = 
ok: false
panic: assignment to entry in nil map

goroutine 1 [running]:
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src585861985/main.go:16 +0x189
exit status 2

|======|
5784bff95f6bed172196a5a11d0a5e3724a81ede:
f.Bar is 0
f.Bar is 1
f.Bar is 0
f.Bar is 1

|======|
57a5fd323648d2d2646e6812c008c1fc07ee244b:
<nil>: null
int: 5
float64: 8.23
string: "john"
[]int: [5,4,18]
[]interface {}: [4,"string"]
map[string]interface {}: {"i":5,"s":"foo"}
struct { Name string; Age int }: {"Name":"John","Age":37}

|======|
5847893f8a8ef13e6a145715b2ce3d4cf332b299:
Got value 3
Signalled on quit channel. Finishing

|======|
58aa5d660b2e551a41c4018dbc7e638c8f6f68f0:
there was an error
panic: there was an error

goroutine 1 [running]:
main.panicWithMsg(0x10c5834, 0x12, 0x0, 0x0, 0x0)
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src703135489/main.go:29 +0x144
main.PanicIfErr(0x10d8a80, 0xc00009c030, 0x0, 0x0, 0x0)
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src703135489/main.go:45 +0x6c
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src703135489/main.go:50 +0x91
exit status 2

|======|
5976e24b273c0e05fbd97b6b173e9ff3f8cd187b:
2018/03/09 00:42:38 second cmd.CombintedOutput() failed with 'exec: Stdout already set'
exit status 1

|======|
5ac5cf921b31c80c467908238d7c53dd8c5383b8:
Top 10 most recently active StackOverflow posts:
Score Link
0 https://stackoverflow.com/a/52870961
0 https://stackoverflow.com/q/52869080
2 https://stackoverflow.com/q/45301798
0 https://stackoverflow.com/q/51593289
0 https://stackoverflow.com/a/52870960
0 https://stackoverflow.com/q/52870959
0 https://stackoverflow.com/q/52867103
0 https://stackoverflow.com/a/52870958
0 https://stackoverflow.com/q/52870957
0 https://stackoverflow.com/q/52870956

|======|
5accc1b6a782a8bd67016d9deb4f7868b2b3027d:
inverse(5)=0.20

|======|
5af0c9f2496516588074345b4822fc6aab73c6bf:
File main.go is 494 bytes in size

|======|
5b121d043bf8cf10f658f5f7a003a390f693bc2c:
total: 30
total: 30

|======|
5bef16ea2ae178ea80397a7c79d4d81c625e3782:
setIntPtr: n=4
setStructFieldDirect: n=5
setStructPtrField: s.N: 6
setInt panicked with 'reflect: call of reflect.Value.Elem on int Value'
setStructField panicked with 'reflect: call of reflect.Value.Elem on struct Value'
setIntPtrWithString panicked with 'reflect: call of reflect.Value.SetString on int Value'

|======|
5bf39be46c7a2cf6e76be6da14aaa95a0734d92d:
<div onlick="foo"><span>text</span></div>

<div onlick="&#34;foo&#34;">&lt;span&gt;text&lt;/span&gt;</div>

|======|
5c6381499cfae77700de79fbcbc626493e5842b1:
v is of type 'string'
v is of type 'int'
v is of type 'int32'

|======|
5cb70846efca52b5f27b52abf298286a78bb25e4:
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion(0x10a0300, 0x10d3240)
	/books/go/0120-empty-interface/type_assertion2.go:9 +0xc7
main.main()
	/books/go/0120-empty-interface/type_assertion2.go:14 +0x39
exit status 2

|======|
5d3a28f0bd5321af8c01c888f81ea44ec0b9e75c:
Hello!

|======|
5d5b75868f78ebc015f9e292dd5f238743d4cbce:
v: 5, pv: 0xc00007c008
v: 4
pv: 0xc00007c008, pv2: 0xc00007c008

|======|
5d956f7be0ab7e571e74bf139f586491cc793b1e:
XML: <ShowOmit><name>John</name></ShowOmit>


|======|
5eccc67433128cc67aba3a9735a1df6c99e91a35:
Escaped:
<div onlick="&#34;foo&#34;">&lt;span&gt;text&lt;/span&gt;</div>

Unescaped:
<div onlick="foo"><span>text</span></div>

|======|
5f133d8baebbf54609aedfa93510e4fc5b41f869:
Response status code: 200, text:
{
  "user-agent": "Special Agent v 1.0.16"
}


|======|
5f922567b55e3b1ffbf941fc013cc32500fa3201:
Slice[0]: first
SliceNested[1][0]: 2
Map["key"]: 5

|======|
5fca32cedc65bf3db7f2b275206691799b90239e:
2018/10/18 02:24:52 http.DefaultClient.Do() failed with:
'Get https://httpbin.org/delay/3: context deadline exceeded'
exit status 1

|======|
60e646497be3309bdedd4c62a75de8e7f710bcf8:
address of p:                         0xc00000a080
PrintFullNamePointer: p is            0xc00000a080
PrintFullNameValue:   address of p is 0xc00000a0a0

|======|
61319958660d0a57698983b0b4c1df3d109cb255:
panic: send on closed channel

goroutine 1 [running]:
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src078531604/main.go:8 +0x63
exit status 2

|======|
613cac40d440cc84c0010a34fde5cc1b67274f00:
First main statement
Num 3
Num 2
Num 1
panic: panic occurred

goroutine 1 [running]:
main.main()
	/books/go/0190-defer/defer_basics2.go:16 +0xf0
exit status 2

|======|
614f7d1275910c2b7fd74b0b94e790beb3847079:
# command-line-arguments
./verify_type_implements_interface.go:14:5: cannot use MyReadCloser literal (type *MyReadCloser) as type io.ReadCloser in assignment:
	*MyReadCloser does not implement io.ReadCloser (missing Close method)

|======|
617974a60ab537fe4cac253fe2326121d49ea21c:
s2: 'replaced string replaced'

|======|
6206bbcf7390faebc7c06a85b94c708618173e12:
s: 'Hello World'
2 + 3.000000 = 5

|======|
622d7a7860ba5c145dd12564ab1932498d005440:
PostForm() sent 'email=john%40gmail.com&name=John'. Response status code: 200

|======|
635fc598ea8b121254392572461806c27012ab83:
Elements of a channel: 0 1 2 

|======|
6376c02e1590b87388f8c9643e4887b646b00356:
XML: <ShowNesting><a><b><str>str</str></b></a></ShowNesting>


|======|
63a787675387b3cfbfdb89cd7023ff2068012e2d:
Output:
go version go1.11.1 darwin/amd64


|======|
6504f19d5f5b360731cb8c3a4e8c3e8896606688:
element: 3
element: 15
element: 8

|======|
653502983590e418296a1e65bf02c043000000cb:
Record: []string{"date", "open", "high", "low", "close", "volume", "Name"}
Record: []string{"2013-02-08", "15.07", "15.12", "14.63", "14.75", "8407500", "AAL"}
Record: []string{"2013-02-11", "14.89", "15.01", "14.26", "14.46", "8882000", "AAL"}
Record: []string{"2013-02-12", "14.45", "14.51", "14.1", "14.27", "8126000", "AAL"}
Read 25 records

|======|
6537a720d57200eede9d917d95b4dc7757c54cef:
a: []string{"this", "is", "a", "string"}
s2: "this,is,a,string"

|======|
655d90af8a33656c0e646c4e9cedaaff13c55ebe:
2018/12/03 04:02:58 http.DefaultClient.Do() failed with:
'Get https://httpbin.org/delay/3: context deadline exceeded'
exit status 1

|======|
65b721a57a0c1c0d0116bea11925e08a8a846786:
Output:
go version go1.10 darwin/amd64


|======|
65b815e1ebb6c57897f36aa781ec0b3da6431939:
Output:
go version go1.11.1 darwin/amd64


|======|
663637c7c148a7ac9d9868e3036f59f43f97ab21:
iv is of type string and has value 'string'
iv is of type int and has value '5'
iv is of type *int and has value '%!s(*int=0xc420016090)'
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion()
	/books/go/0120-empty-interface/type_assertion.go:26 +0x45
main.main()
	/books/go/0120-empty-interface/type_assertion.go:39 +0xb8
exit status 2

|======|
668dd895b4856678d7659e74c6dc3ee21a243350:
Data: 5
Data: foo
Data: {3 hello}

|======|
67458b763690a505b93fe52fa7e816e116eba2e3:
a: []string{"foo"}

|======|
67a7c5c1cf9f106f1e7a7896e9a7f2b5a3627b4a:
base64: Af86zQ==

|======|
6830fa384e4bc53e7dcc4c7e54ada32b4e36550e:
sqrt of 16.000000 is 4.000000
sqrt of -16.000000 returned error 'invalid argument '-16.000000', must be >= 0'

|======|
683836c22c08abea95e6229a33d4f62b3c4c778f:
XML: <data><n>5</n></data>


|======|
683c19ee7f6b942f4756ca90fd409e4d275320f5:
idx: 0
idx: 1
idx: 2

|======|
684d575766ae8cc52403b5f89c7983c2dc050066:
File read_lines.go has 40 lines

|======|
684dedb4294e19f0229a96357d1ebb7e6524ce3b:
Elements of map:
five: 5
one: 1

|======|
68b4cfac32605f98fdeca8705b26594976563cae:
Elements of a channel: 0 1 2 

|======|
690ea296d1a633332fd1ccace1179c2c57aefd65:
iv is of type string and has value 'string'
iv is of type int and has value '5'
iv is of type *int and has value '%!s(*int=0xc000016090)'
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src030935589/main.go:27 +0x45
main.main()
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src030935589/main.go:40 +0xae
exit status 2

|======|
6986d930c12510fa41941c973775c8f779293f5d:
intOp(2, 3) = 5
intOp(2, 3) = 6

|======|
699e21d43a7e597fd3c3a597ffdb0e17831b9715:
u: main.User{FirstName:"", LastName:"", Email:"", Age:0, userID:0}

*pu: main.User{FirstName:"", LastName:"", Email:"", Age:33, userID:0}
*pu: main.User{FirstName:"", LastName:"", Email:"", Age:18, userID:0}
pu.FullName(): Jane Doe

|======|
69ad8e89814c1e06ed2a965aa38dfeb82d7db24f:
Elements of arrays or slice: 3 8 
Elements of arrays or slice: 12 5 

|======|
6b5e187c87f9686d35f94900559ff4f86d73688f:
strconv.Atoi('234'): 234
strconv.Atoi() failed with: 'strconv.Atoi: parsing "not a number": invalid syntax'
strconv.ParseInt('234', 64): 234
strconv.ParseFloat('-3.234', 64): -3.234
fmt.Sscanf(): -3.234

|======|
6b83876610c972e6d26ef5ed265e804e5f90e729:
s1 is not equal to s2
s1 is equal to s1
s1 is not > than s2
s1 is < than s2

|======|
6ba0bb31af828d0a2c7f63bf38226679cde69070:
User kjk has 124 tweets.
Recent tweets:
Tweet 0 of 2: 'hello'
Tweet 1 of 2: 'there'
Most recent tweet: 'hello'

|======|
6c02445110a9eab889149819fd3722f5a0d4feb6:
address of p:                         0xc42000a080
PrintFullNamePointer: p is            0xc42000a080
PrintFullNameValue:   address of p is 0xc42000a0a0

|======|
6cdc62c2097f6087f155f6850bcffbcea7405a88:
main.Address{City:"San Francisco", State:"CA"}
main.Address{City:"Austin", State:"TX"}

|======|
6d1a83c5b36b075cc9db376bd3ef38d66678616b:
XML: <data><n>5</n></data>


|======|
6f3f79d1476bc43e2f39545fdf1568ad65af5826:
Timed out before worker finished

|======|
712eaad4e60f90e896339486ad4ffd71e7f852a4:
total: 30
total: 30

|======|
71da2ad7ab4a5c6edf5a365d707609588de4e1fe:
Standard time JSON: {"What":"earthquake","When":"2018-10-18T02:25:08.133422-07:00"}

Custom time JSON: {"What":"earthquake","When":"2018-18-10"}
Decoded custom time: "2018-18-10"

|======|
7396aef3b3ec7f6a1a5e02127d10aae3aac0dd42:
Error: runtime error: index out of rangeok

|======|
746084d984d2cba8bbbaa4c686985eeed8876002:
First main statement
Num 3
Num 2
Num 1
panic: panic occurred

goroutine 1 [running]:
main.main()
	/books/go/0190-defer/defer_basics2.go:15 +0xf0
exit status 2

|======|
764b4efc1d5366b4ec3bdbadabfa6b61313237a5:
Catherine
Daniel
Daniel
Daniel
Ines

|======|
764d9718427f7b5b1d5b77aab31155897d5662f0:
Name: file_info.go
Size: 361
IsDir: false
Mode: 1094540
ModTime: 2018-10-05 19:04:58.678830646 -0700 PDT
OS info: *syscall.Stat_t

|======|
765e6392392cc8a6389ed2e495aea04d88fe8253:
idx: 0
idx: 1
idx: 2

|======|
76768341bc0e9e1511a9e49ef5a2d81c9939cbb7:
i: 0
i: 2
i: 4

|======|
770cca029c0d00e55600e877aa4f2382f83e8052:
err: Original error
main.wrappedError
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src270137964/main.go:17
main.main
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src270137964/main.go:22
runtime.main
	/usr/local/Cellar/go/1.11.1/libexec/src/runtime/proc.go:201
runtime.goexit
	/usr/local/Cellar/go/1.11.1/libexec/src/runtime/asm_amd64.s:1333

err: error created with pkg/errors
main.main
	/private/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/src270137964/main.go:25
runtime.main
	/usr/local/Cellar/go/1.11.1/libexec/src/runtime/proc.go:201
runtime.goexit
	/usr/local/Cellar/go/1.11.1/libexec/src/runtime/asm_amd64.s:1333

|======|
78a9003232b9e43bf3d2c86bb2a067d0eb4f2de5:
i: 0
i: 2
i: 4

|======|
78bd8dc4e110f917fb5f44f1c4010ea63b3d3c0c:
Person struct parsed from JSON: main.Person{Name:(*string)(0xc00000e270), Age:24, City:"ny", Occupation:""}
Name: "Jane"

|======|
7934f1adf4c4c3690e9e24863c8541243e20413c:
intOp(2, 3) = 5
intOp(2, 3) = 6

|======|
79a337246ee535e87eb6c5090448a748a441a606:
i: 0
i: 2
i: 4

|======|
7a7648be68410edfbd85cccaecb814a4baa93d6c:
go: downloading github.com/jehiah/go-strftime v0.0.0-20171201141054-1d33003b3869
2017-09-04 03:38:45

|======|
7b8bf6f19e6aa17502b2eeb7f30cbef26cb9f369:
a is equal to b
ok is true, n: %d
5
|======|
7bbb0e1a7e8a7df99673032d9c33d6c01bea2db4:
total tasks         : 32
max concurrent tasks: 4

|======|
7cc0c76791ba49db400832642fdb9d64b5c4ea1f:
v: 3
v: 4
v: 5

|======|
7dd715118132b7e6970d1708c0286bedb7e7a0f9:
bool false       is: false
bool true        is: true
integer 0        is: false
integer 1        is: true
float32 0        is: false
float64 NaN      is: true
empty string     is: false
non-empty string is: true
nil slice        is: false
empty slice      is: false
non-empty slice  is: true
nil pointer      is: false

|======|
7df06de09edfb6d7673cac79808edb3e8d7474af:
i1: -38
i2: 148

|======|
8019d996c61b6e2cfdfb45b97d81d2af3b204238:
1 * 2 = 2
3 * 4 = 12

|======|
801d3da35f922113e507bc622e5aeb693a429ccb:
Output:
go version go1.10 darwin/amd64


|======|
805cd169b67cc010decf9a953f070e949873c342:
Elements of map:
five: 5
one: 1

|======|
806d84763a5d7cf902ece119115d83497ff50fe2:
File file_size.go is 483 bytes in size

|======|
814e7fc9e6d3eda38fb538b6a4b71ac3e2cba9d5:
Response status code: 200, text:
{
  "args": {}, 
  "data": "{\"Name\":\"John Doe\",\"Email\":\"johndoe@example.com\"}", 
  "files": {}, 
  "form": {}, 
  "headers": {
    "Accept-Encoding": "gzip", 
    "Connection": "close", 
    "Content-Length": "49", 
    "Content-Type": "application/json; charset=utf-8", 
    "Host": "httpbin.org", 
    "User-Agent": "Go-http-client/1.1"
  }, 
  "json": {
    "Email": "johndoe@example.com", 
    "Name": "John Doe"
  }, 
  "origin": "24.5.174.236", 
  "url": "https://httpbin.org/put"
}


|======|
8160c035c4f26e423017a1729ca5e4e3f4495182:
XML: <ShowNesting><a><b><str>str</str></b></a></ShowNesting>


|======|
82cd47cdf96e2bef6caeae292d3396d6ecddaa9a:
case 1
caes 2

|======|
82de1ce95ecc6096832bebaf7b29be65374168f2:
Response status code: 200, text:
{
  "args": {}, 
  "data": "{\"Name\":\"John Doe\",\"Email\":\"johndoe@example.com\"}", 
  "files": {}, 
  "form": {}, 
  "headers": {
    "Accept-Encoding": "gzip", 
    "Connection": "close", 
    "Content-Length": "49", 
    "Content-Type": "application/json; charset=utf-8", 
    "Host": "httpbin.org", 
    "User-Agent": "Go-http-client/1.1"
  }, 
  "json": {
    "Email": "johndoe@example.com", 
    "Name": "John Doe"
  }, 
  "origin": "24.5.174.236", 
  "url": "https://httpbin.org/put"
}


|======|
82e0841a47eb3190aec6bcf319b8d2e5252ec9fc:
(*p).Bar is 0
(*p).Bar is 0
(*p).Bar is 0
(*p).Bar is 0

|======|
83139b79c1db6c3c00fa90847764a89ddf0011cd:
There are 32 lines in 'read_file_as_lines.go'

|======|
83c6ba671f2219c235390b862562d038045990b9:
<div onlick="foo"><span>text</span></div>

<div onlick="&#34;foo&#34;">&lt;span&gt;text&lt;/span&gt;</div>

|======|
83e63c029325396b4934700ec0b31ec9768a28db:
strconv.Atoi('234'): 234
strconv.Atoi('not a number') failed with: 'strconv.Atoi: parsing "not a number": invalid syntax'
strconv.ParseInt('234', 64): 234
strconv.ParseFloat('-3.234', 64): -3.234
fmt.Sscanf(): -3.234

|======|
847dbc98cd79baac91016c6f9682d8d6d48c9cc0:
i1: -38
i2: 148

|======|
84987b93aa304279ea00265facf73823afa8525a:
# command-line-arguments
./main.go:14:5: cannot use MyReadCloser literal (type *MyReadCloser) as type io.ReadCloser in assignment:
	*MyReadCloser does not implement io.ReadCloser (missing Close method)

|======|
84e7f3ddd55c2dd6285f049d07f431b333e57fc3:
PostForm() sent 'email=john%40gmail.com&name=John'. Response status code: 200

|======|
85681709ab97dc5842ed9c85cda90bb7aa6d3df8:
Data: 5
Data: foo
Data: {3 hello}

|======|
8658f09506fe5122efcbac642e2cce8dcb4b1054:
Called longMathOp() with 200ms timeout. res; 4955, err: <nil>
Called longMathOp() with 10ms timeout. res: 0, err: context deadline exceeded

|======|
86969816ea2d6f44a9bb696dce3ab1d480f1ca71:
http.Post() returned statuts code 200, truncated text:
{
  "args": {}, 
  "data": "text we send", 
  "files": {}, 
  "form": {}, 
  "headers": {
   ...

|======|
86b17ba02115178dcbc1b7315e2a7d4a6027b264:
a is not equal to b

|======|
86e55035df106d0182382cd744af071fb91cec78:
Output:
go version go1.11.1 darwin/amd64


|======|
86e6133cc0a4afae09a131f12051cbb20e2a4aa2:
*main.User: John
main.MyInt: 5

|======|
872037e40bbf9cf41a2de499744cb84c50bca4c9:
Decoded YAML dependencies: []main.Dependency{main.Dependency{Name:"apache", Version:"1.2.3", RepositoryURL:"http://example.com/charts"}, main.Dependency{Name:"mysql", Version:"3.2.1", RepositoryURL:"http://another.example.com/charts"}}

|======|
881d5f8bf50e454b08eedf65c7fb2568ea64bd4c:
ToLower(s): 'mixed case'
ToUpper(s): 'MIXED CASE'
ToTitle(s): 'MIXED CASE'

|======|
89077678ea20e98abcede034be5e4023b3e06515:
Decoded YAML dependencies: []main.Dependency{main.Dependency{Name:"apache", Version:"1.2.3", RepositoryURL:"http://example.com/charts"}, main.Dependency{Name:"mysql", Version:"3.2.1", RepositoryURL:"http://another.example.com/charts"}}

|======|
8986aeaae87df0dcb66b04b260cb050aacedeba9:
1
0

|======|
89f13677cda53bcffb14f5a795c40225dbd61591:
5 is odd
18 is even

|======|
8afb1700dda8e482c6850c74eebd251ef11f2577:
Element: '<person>', attribute 'age' has value '34'
City: San Francisco
Comment:  sample comment 
Element: '<person>', attribute 'age' has value '23'

|======|
8b25b88d5aa670effe9d3638f7b29aa77fb95fad:
i2: 0
i2: 2
i2: 4

|======|
8c51769293a8a7af877419fe5a72c79bf3163959:
2018/03/09 00:42:35 Logging
2018/03/09 00:42:35 Second line

|======|
8dba6a8b0cc75e954cca3765a0c8ed8e584115aa:
{Total:1 Links:{Next:https://api.twitch.tv/kraken/channels/foo/subscriptions?direction=ASC&limit=25&offset=25} Subs:[{Created:2011-11-23T02:53:17Z User:{Name:bar ID:123456}}]}
|======|
8debbea4cea633dd2a067dda08bafde65ae407d9:
Hello, 世界

|======|
8e15cc76b156f68bb04d12fe221ecd7db4f40560:
XML: <ShowComment><!--comment--></ShowComment>


|======|
8e3bfb9d48699ab0dea6627ca16e0fe53d4662db:
Response status code: 200, text:
{
  "args": {}, 
  "data": "{\"Name\":\"John Doe\",\"Email\":\"johndoe@example.com\"}", 
  "files": {}, 
  "form": {}, 
  "headers": {
    "Accept-Encoding": "gzip", 
    "Connection": "close", 
    "Content-Length": "49", 
    "Content-Type": "application/json; charset=utf-8", 
    "Host": "httpbin.org", 
    "User-Agent": "Go-http-client/1.1"
  }, 
  "json": {
    "Email": "johndoe@example.com", 
    "Name": "John Doe"
  }, 
  "origin": "24.5.174.236", 
  "url": "https://httpbin.org/put"
}


|======|
8ee3fc027507fafeb9a1943408be3cc8efd3cf55:
2018/10/18 02:24:43 Logging
2018/10/18 02:24:43 Second line

|======|
8effcc1e99e636972bd83ef111c19f57ca78f597:
Student: John Doe, standard: 4
Student: Peter Parker, standard: 11
Student: Bilbo Baggins, standard: 150

|======|
8f9d7b7016e673552ad6e02e8f915f58d22d21ef:
i4: 0
i4: 2
i4: 4

|======|
9014a1bc28c48e144d6b904b4abffbe085b9e609:
a[2]: 0
size of array a: 3
size of array a2: 3

|======|
918cf49076ffa1763c98bd080cc2056b8dbfb125:
n: 81
n: 887

|======|
923df62c2a033bfe99238922150a23b37a2eb6aa:
stmt ('if') is either 'if' or 'for'

|======|
925fb9fd681c01918c83be95ef33c615462694c8:
Path: ., is dir: true, size: 96 bytes
Path: main.go, is dir: false, size: 457 bytes

|======|
93b9157ed5ac73740aeb56187cd528dd0437b7ff:
name: 'FirstName',	type: 'string', value: John,	tag: 'my_tag:"first-name"',	json tag: ''
name: 'lastName',	type: 'string',	value: not accessible
name: 'Age',	type: 'int', value: 27,	tag: 'json:"age",xml:"AgeXml',	json tag: 'age'

|======|
93ece64bd475611a844a340daa1d864982796813:
idx: 0,rune: 115
idx: 1,rune: 116
idx: 2,rune: 114

|======|
94055dfea4e01c567d6d097d4c7bcf16d625f9ab:
Int value is: 3
Int value is: 4
panic: reflect: call of reflect.Value.Int on string Value

goroutine 1 [running]:
reflect.Value.Int(...)
	/usr/local/Cellar/go/1.11.1/libexec/src/reflect/value.go:961
main.getIntValue(0x10a2c00, 0x10d8440)
	/books/go/0390-reflection/get_value.go:13 +0x1f3
main.main()
	/books/go/0390-reflection/get_value.go:23 +0x7b
exit status 2

|======|
945f3fd1d07409b1511e0e92b0c67d7ffe38287f:
User: &main.User{Name:"John", IsLoggedIn:false}

|======|
94bfa695491c01ceebb6c5f31d2f23e8ebe697ab:
2018/03/09 00:42:40 http.Get() failed with 'Get https://httpbin.org/delay/3: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)'
exit status 1

|======|
94e0dc3fff4d98a7ec14a8d561467031891c89bb:
&main.People{Person:[]main.Person{main.Person{Age:34, FirstName:"John", Address:main.Address{City:(*string)(0xc42000e3f0), State:"CA"}}, main.Person{Age:23, FirstName:"Julia", Address:main.Address{City:(*string)(nil), State:""}}}}


|======|
94fdd09bd90d60940999d1f69c2a3837667de0b5:
Int value is: 3
Int value is: 4
panic: reflect: call of reflect.Value.Int on string Value

goroutine 1 [running]:
reflect.Value.Int(0x10a0360, 0x10d32b0, 0x98, 0x10d32b0)
	/usr/local/Cellar/go/1.10/libexec/src/reflect/value.go:931 +0x127
main.getIntValue(0x10a0360, 0x10d32b0)
	/books/go/0400-reflection/get_value.go:12 +0x5b
main.main()
	/books/go/0400-reflection/get_value.go:22 +0x7b
exit status 2

|======|
950a1f08068768fb7611df1b51fcbb2f0363a037:
a: []string{"hello", "world"}

|======|
950eb09f9979573a476236bbe179c2aaef2858d0:
Record: []string{"date", "open", "high", "low", "close", "volume", "Name"}
Record: []string{"2013-02-08", "15.07", "15.12", "14.63", "14.75", "8407500", "AAL"}
Record: []string{"2013-02-11", "14.89", "15.01", "14.26", "14.46", "8882000", "AAL"}
Record: []string{"2013-02-12", "14.45", "14.51", "14.1", "14.27", "8126000", "AAL"}
Read 25 records

|======|
95f73ce725e0af5ddf5229268ed3aab15936dd87:
idx: 0, value: 1
idx: 1, value: 3
idx: 2, value: 5

|======|
961f2527025820815202192893d412023d63bb11:
Value: 3. Type: 'int' i.e. 'int'.

Value: 4. Type: 'pointer to int' i.e. '*int'.

Value: 5. Type: 'pointer to pointer to int' i.e. '**int'.


|======|
96bff681dcff1cc3028b8746f1386b7fae7dafc0:
Response status code: 200, text:
{
  "user-agent": "Special Agent v 1.0.16"
}


|======|
96c7826b9c397bd9fee0bd27657c100dc86fbc90:
Person struct parsed from XML: main.Person{Name:(*string)(0xc42000e330), Age:37, City:"", Occupation:""}
Name: "John"

|======|
981f8a091f23b5f8cffb5fb88f4ed99a27e75590:
My name is Slim Shady

|======|
982e63ff0f45c6d606b67676f4525a126d692e1f:
i1: 0
i1: 2
i1: 4

|======|
984039aa549d3abc808bec3d1b78ca2526730b95:
idx: 0, rune: 72
idx: 1, rune: 101
idx: 2, rune: 121
idx: 3, rune: 32
idx: 4, rune: 19990
idx: 7, rune: 30028

|======|
9857663ddce0bb68ae3fbae90181028274843585:
js escape  : function me(s) { return \"foo\"; }
html escape: &lt;div&gt;text&lt;/div&gt;
url escape : http%3A%2F%2Fwww.programming-books.io

|======|
98676ea3e5799ffbcabf1fa2ac0ca55c3466c419:
2018/10/18 02:24:48 http.Get() failed with 'Get https://httpbin.org/delay/3: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)'
exit status 1

|======|
98c8c5824e004bce35ce375630197ff892888925:
size of bool is: 1

|======|
99228bab7d3fedad7e9ac5e40eb73b9c126414da:
File file_size.go is 500 bytes in size

|======|
993f5eb31d58abb4bbc252455546651db1bab070:
[]int{2, 4}

|======|
9aa4063b3a8b3f6a3e766a53479039f9ea373319:
Encryption in decryption worked!

|======|
9c47982c1e9c599616820127da18275945107272:
# command-line-arguments
./typed_vs_untyped.go:17:6: constant 345 overflows int8

|======|
9d63716a1139b86ed8a3f89e629bc5d07462a86b:
zero bool:       false
zero int:        0
zero f32:        0
zero string:     ""
zero ptr:        <nil>
zero slice:      []
zero map:        map[string]int(nil)
zero interface:  <nil>
zero channel:    <nil>
zero array:      [0 0 0 0 0]
zero struct:     main.struc{a:0, b:""}
zero function:   <nil>

|======|
9d76f8c7f44e0445cd7943ce29f3050fbad206cc:
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion(0x10a2a80, 0x10d8240)
	/books/go/0120-empty-interface/type_assertion2.go:10 +0xbd
main.main()
	/books/go/0120-empty-interface/type_assertion2.go:15 +0x39
exit status 2

|======|
9d9f49656b316b0e4aeee32d6637927791d11f75:
# command-line-arguments
./verify_type_implements_interface.go:13:5: cannot use MyReadCloser literal (type *MyReadCloser) as type io.ReadCloser in assignment:
	*MyReadCloser does not implement io.ReadCloser (missing Close method)

|======|
9e10d033ac2162165c9b8da68585095b2d83d724:
File 'main.go' exists: true
File 'non-existent-file.txt' exists: false

|======|
9e1a0622d69738f839ad9d048f7f6d23292d0d99:
Entering main
Recovered with message bar
Exiting main the normal way

|======|
9e301b2e73ec71c7a3acf65a886d108ed1b181ea:
len(a): 3
cap(a): 3
slice kind: 'slice'
element type: 'int'
a[0]: 3
elRef.CanAddr(): true
elRef.CanSet(): true
a: [3 5 8]

|======|
9f931c9a1b4aff4edbea36d9d68c12599cca687d:
Decoded YAML dependencies: []main.Dependency{main.Dependency{Name:"apache", Version:"1.2.3", RepositoryURL:"http://example.com/charts"}, main.Dependency{Name:"mysql", Version:"3.2.1", RepositoryURL:"http://another.example.com/charts"}}

|======|
9f93422bb75b53c03532b386f1c32e7214669872:
Value: 3. Type: 'int' i.e. 'int'.

Value: 4. Type: 'pointer to int' i.e. '*int'.

Value: 5. Type: 'pointer to pointer to int' i.e. '**int'.


|======|
9fff70175d6488a750f789f2a6aaae216de3ba4c:
f64: 1.234100

|======|
a03c381e039d84de4b9c52dd8df8d1b47d3b4434:
Hex: 01ff3acd

|======|
a0ae0ab967ab9b8335775d8599f603788bc33765:
m["foo"] = 
ok: false
panic: assignment to entry in nil map

goroutine 1 [running]:
main.main()
	/books/go/0090-maps/zero_value2.go:15 +0x189
exit status 2

|======|
a21ee48190c2dc1f3b8031a09bc8d71851422228:
m == nil ? true
len(m) = 0

|======|
a2344b6d7ab26efdf9a005e659dbe282e605a2cd:
length of slice is: 3
capacity of slice is: 5

|======|
a3369c518d77e07be666c58b816fca622dc28ea7:
Receive from closed channel immediately returns zero value of the type: ""

|======|
a378a7522582c72072653433ca89d3d9915d31b5:
doc: map[string]interface {}{"name":"Jane", "age":24, "city":"ny"}
name: "Jane"

|======|
a3f3e96321f499ded7e81080da2b96e3a31bf5ea:
Hex: 01ff3acd
3824 in hex is 0xef0

|======|
a50812228af5f368b290adbed744dac86f693451:
bit0: 1, mask0: 0x0
bit3: 8, mask3: 0x7

|======|
a62ac608ca0b4990665e54c5df034db906fe359a:
Person in compact JSON: {"Name":"John","age":37,"city":"SF"}
Person in pretty-printed JSON:
{
  "Name": "John",
  "age": 37,
  "city": "SF"
}

|======|
a7050016c4fce500ae4506ee0e4a0292244525bd:
XML: <ShowAttr n="true"></ShowAttr>


|======|
a7ef1624f8c6a6d40b71c4a11d89592b8c34b074:
key: john
key: jane
key: mark

|======|
a83db28765d8a9353572278f02a3820aa4e233da:
iv is of type string and has value 'string'
iv is of type int and has value '5'
iv is of type *int and has value '%!s(*int=0xc000014090)'
panic: interface conversion: interface {} is string, not int

goroutine 1 [running]:
main.panicOnInvalidConversion()
	/books/go/0120-empty-interface/type_assertion.go:27 +0x45
main.main()
	/books/go/0120-empty-interface/type_assertion.go:40 +0xae
exit status 2

|======|
a87494d028e1b4bef9b7963a9c6e80bdf4a57127:
Path: 000-index.md, is dir: false, size: 210 bytes
Path: 010-reading-files.md, is dir: false, size: 753 bytes
Path: 020-writing-files.md, is dir: false, size: 2913 bytes
Path: 030-file-operations.md, is dir: false, size: 2583 bytes

|======|
a90e9b6bea4006afba50418ccaf5cec6f926e196:
[1 2 3 4 5 6]
[6 2 3 4 5 6]
[6 5 3 4 5 6]
[6 5 4 4 5 6]
[6 5 4 3 5 6]
[6 5 4 3 2 6]
[6 5 4 3 2 1]

|======|
aa4f32c6370b8da5379b4d79976ea048df25e697:
Standard time JSON: {"What":"earthquake","When":"2018-03-09T00:42:39.322107883-08:00"}

Custom time JSON: {"What":"earthquake","When":"2018-09-03"}
Decoded custom time: "2018-09-03"

|======|
aa97b1a908ccb869d8e2f8f5134af770e51bd720:
idx: 0, byte: 72
idx: 1, byte: 101
idx: 2, byte: 121
idx: 3, byte: 32
idx: 4, byte: 228
idx: 7, byte: 231

|======|
ab5806a62c7c182226aa01eb457aac7d4c067db4:
custom error type

|======|
ab7811bfff810c3177c8a397021ee5396490aa97:
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}}

|======|
ab960b0928ab99da3dc5e307190090fd17e4229c:
zero values for basic types:
bool:       false
int:        0
float32:    0
float64:    0
string:     ""
pointer:    <nil>
slice:      []
map:        map[string]int(nil)
interface:  <nil>
channel:    <nil>
array:      [0 0 0 0 0]
struct:     main.struc{a:0, b:""}
function:   <nil>

|======|
abe10a0fa3ac5132f94e9bcd07030d8793647029:
received from channel: foo
range loop finished because ch was closed

|======|
aca770ec9ea030f5ad548899a7f32c0050a881fc:
'this is string' ends with 'string'

|======|
acbc09916028db338cecf1d4235729f92a433b2b:
Data from a field: '5'
Data from a method: 'data from a method'

|======|
acbd4158c0709417f2ab81c6d3dae3a8d29e5780:
'gone' is equal 'GoNe' when ignoring case

|======|
ad96a578afb9747ce4ee49b5e4cc3a8e6d23fc69:
a is 1 or 3

|======|
aee080990dce122a8dc598e3bc2839ba247f6b6d:
zeroBool: false
zeroInt: 0
zeroF32: 0
zeroStr: ""
zeroPtr: <nil>
zeroSlice: []uint32(nil)
zeroMap: map[string]int(nil)
zeroInterface: <nil>
zeroChan: <nil>
zeroArray: [0 0 0 0 0]
zeroStruct: main.struc{a:0, b:""}
zeroFunc: <nil>

|======|
af19cccb22044598eb8a648bc72c96307be5956f:
2017-09-04 03:38:45

|======|
afcdf655d1377a9f1dca045fba6c1a9987bada66:
a: []string{"!", "Hello", "world"}

|======|
b037835061f4ad66b60a1f9fb92647922ff86d45:
flag -echo: 'echo-arg'
Remainig arg: 'additional'
Remainig arg: 'arg'

|======|
b07dbd5849bee7d882aee433bc527984bd9250db:
flag -echo: 'echo-arg'
Remainig arg: 'additional'
Remainig arg: 'arg'

|======|
b133fc6270bbcb1bf0c4c8d63e8bb1dab9cb8baf:
s1 is not equal to s2
s1 is equal to s1
s1 is not > than s2
s1 is < than s2

|======|
b2406ce2338c905c5c5eff32b4b2e5e74b905287:
Type 'int' of size: 8 bytes
v contains value of type int

|======|
b24d6843da9a0f2f1fd231999ebdca2fb28e32b6:
Base64: Af86zQ==

|======|
b2640fe7bbfaeb37332cb9374f8b09ff447a4591:
routine 9 finished
routine 4 finished
routine 0 finished
routine 3 finished
routine 1 finished
routine 2 finished
routine 5 finished
routine 6 finished
routine 7 finished
routine 8 finished
main finished

|======|
b28752c59a7223624cad094e250b8d161726762f:
i: 2
i: 3

|======|
b2c91a29ff0657ad6e5262bb324c5fd3ddb0bc6d:
[2][4][3][2]string{[4][3][2]string{[3][2]string{[2]string{"All zero indexes", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}}, [4][3][2]string{[3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", ""}}, [3][2]string{[2]string{"", ""}, [2]string{"", ""}, [2]string{"", "All indexes to max"}}}}

|======|
b2f52bf5040c074f9f411464b8c34c1d1378aa23:
p: { }

p: {John Doe}

p.FullName(): John Doe

|======|
b3226787de0ac0c6939da4e9ac9e08300df8ff14:
Error: runtime error: index out of range
ok

|======|
b356e0b915964a1504f5a83b87095f46a297995e:
User 'kjk' has no tweets.

User 'masa' has 2 tweets:
'tweet one'
'tweet two'

|======|
b4549a9e5183710f503ed2a35f8fa1e9baed71e1:
a is 1 or 3

|======|
b4aa364324a7f056bc1b577be84ae3cfdfe1ae5e:
found 'is' at position 6
found 'is' at position 17
found 'is' at position 27

|======|
b4afb3c2b09c25395199d174965b92b57fd8e48c:
John Doe
|======|
b5112cf333bd40f9e156a35973075e8cd1cbf77e:
there was an error
panic: there was an error

goroutine 1 [running]:
main.panicWithMsg(0x10c3387, 0x12, 0x0, 0x0, 0x0)
	/books/go/0180-error-handling/errors_in_short_programs.go:28 +0x13e
main.PanicIfErr(0x10d3a20, 0xc42000e1e0, 0x0, 0x0, 0x0)
	/books/go/0180-error-handling/errors_in_short_programs.go:44 +0x6c
main.main()
	/books/go/0180-error-handling/errors_in_short_programs.go:49 +0x92
exit status 2

|======|
b53e73a2f9f89485da55d6380c6ca78e67bca466:
# command-line-arguments
./goto2.go:8:7: goto end jumps over declaration of a at ./goto2.go:9:4

|======|
b584a977dccaccb64b580993978b353ccffc5135:
main.People{Person:[]main.Person{main.Person{Age:34, FirstName:"John", Address:main.Address{City:(*string)(0xc42000e3f0), State:"CA"}}, main.Person{Age:23, FirstName:"Julia", Address:main.Address{City:(*string)(nil), State:""}}}}


|======|
b6f9d56719fb72f8d04baab4b8709dbb109f041d:
Element: '<person>', attribute 'age' has value '34'
City: San Francisco
Comment:  sample comment 
Element: '<person>', attribute 'age' has value '23'

|======|
b7e228bf48b0f9b292a37319fec6133aa8cb806e:
a: []string{"!", "Hello", "world"}

|======|
b82553b662365393da8b82eae28bcd2f604c2aef:
i: 2
i: 3

|======|
b8ae995dc86d69cf3e306896be5387ae1610b236:
PostForm() sent 'email=john%40gmail.com&name=John'. Response status code: 200

|======|
b979bb93bc2a211bbd0b3dacc3cd1a510ca05e99:
panic: close of closed channel

goroutine 1 [running]:
main.main()
	/books/go/0220-channels-select/close4.go:7 +0x57
exit status 2

|======|
b9e85d29e4d6e68746e2ad17cefa283a45c42f9e:
base64: Af86zQ==

|======|
ba1aeddc717e5e5cc4429567cb82dea7a68d0242:
received 1, is channel closed: true
received 0, is channel closed: false

|======|
ba6d27201efbf520328b59929ce88bffa518acfc:
Base64: Af86zQ==

|======|
bb0a53a18dace5a9b13578a76d6ac8da730ed8d0:
[1 2 3 4 5 6]
[6 2 3 4 5 6]
[6 5 3 4 5 6]
[6 5 4 4 5 6]
[6 5 4 3 5 6]
[6 5 4 3 2 6]
[6 5 4 3 2 1]

|======|
bc0fdfa819cd9eb6c9448bd952fb139c33c4072e:
Before if
Ater if
inside if

|======|
bc186a4a81d53dfdbed05dc7d186a355d4451d88:
a: []string{"this", " is", " a", " string"}

|======|
bd2a2b16fffeab8a9d30eacd903982a92bb47467:
intOp(2, 3) = 5
intOp(2, 3) = 6

|======|
bd6fc1955acf3ce31e07a183a3a738273d879f2f:
# command-line-arguments
./goto2.go:8:7: goto end jumps over declaration of a at ./goto2.go:9:4

|======|
bf8d7915d2472e48681c54bf7b558789cb12fe31:
panic: close of closed channel

goroutine 1 [running]:
main.main()
	/books/go/0220-channels-select/close4.go:8 +0x57
exit status 2

|======|
bf907308ab176717a1f06939384d0cc6151783c2:
v is of type 'int32'. Size: 4 bytes
v is of type 'string'. Size: 16 bytes
v is of type 'pointer'. Size: 8 bytes

|======|
bfde554e5ebacd61402b7ee67f1880e4d780cb56:
Name: main.go
Size: 356
IsDir: false
Mode: 10944d0
ModTime: 2018-10-18 02:25:02.62046003 -0700 PDT
OS info: &syscall.Stat_t{Dev:16777220, Mode:0x81a4, Nlink:0x1, Ino:0x2016a3e13, Uid:0x1f5, Gid:0x14, Rdev:0, Pad_cgo_0:[4]uint8{0x0, 0x0, 0x0, 0x0}, Atimespec:syscall.Timespec{Sec:1539854702, Nsec:882319277}, Mtimespec:syscall.Timespec{Sec:1539854702, Nsec:620460030}, Ctimespec:syscall.Timespec{Sec:1539854702, Nsec:620460030}, Birthtimespec:syscall.Timespec{Sec:1539854702, Nsec:620387985}, Size:356, Blocks:8, Blksize:4096, Flags:0x0, Gen:0x0, Lspare:0, Qspare:[2]int64{0, 0}}

|======|
c01f719c5b2649db03be33ae2643544b003f5c86:
2018/10/05 22:29:53 second cmd.CombintedOutput() failed with 'exec: Stdout already set'
exit status 1

|======|
c1730bbf7974132ed61326cc46a93bc14a2fc9dc:
v: 5, pv: 0xc420016090
v: 4
pv: 0xc420016090, pv2: 0xc420016090

|======|
c2e309fb19cfee8d9ae94c885b5fee058cae7c16:
Elements of arrays or slice: 3 8 
Elements of arrays or slice: 12 5 

|======|
c4cb0ff0e0cf28070bb008ef05f573d842a0ed36:
didTimeout: true, err: signal: killed

|======|
c54a3645e4a64bd2f14d1c96596e87f9a54924dc:
sum of strings
'string
literal
with	escape characters
raw string literal
which doesnt't recgonize escape characters like \n
'

|======|
c595aab5e5dd9ed7fa5ceb1581ed1813a093726f:
key: three, value: 3
key: five, value: 5

|======|
c6342fd97927f3a87b2e34a4afaf26befe628345:
Or:  true
And: false
Not: true

|======|
c65f2033b31daf1302a47167a0dfc32cec79ff60:
Or:  true
And: false
Not: true

|======|
c67e95f02eb8850e77bf2e2230fe854b91b9cda9:
XML: <ShowOmit><name>John</name></ShowOmit>


|======|
c6c63f9f9651117620fbe5571702f08e04a6c1e4:
f: 1.234100

|======|
c7d30cd3e5e39a0960f050eccbcb76579d588867:
[]string{"!", "Hello", "world"}

|======|
c7fd73ef1ece1267f59266ac8ed948765a61583d:
Person in YAML:
name: John
age: 37
city: SF


|======|
c931e8238f14c5fb517bdbc6c019b608517cf444:
Size of a1: 2.
Size of a2: 3

|======|
c93241c36a27a41b14acc3e905ceb2c438950d09:
'is hello there?' contains 'hello'

|======|
c982fc56f0745970abed7565d62fd23d13aaf497:
case 1, 2, 3: n is 1

|======|
c98a42bbe65db6ecf448dc19d9163291ce26a382:
inverse(5)=0.20

|======|
c9913734fafe830af092d24bd727816c4e338a68:
i: 0
i: 2
i: 4

|======|
c9e6b6bd39336f1976172e620bda1b803642236c:
Hello!

|======|
caefdba615d6e54c39e64147fc516235196c1f06:
key: three
key: five

|======|
cb80d92bba5fcc19effb1373b564f79275f140bb:
array1: [1 2 3 4 5 6]
array2: [1 2 3 4 5 6]
array3: [1 2 3 4 5 6]
zeroes: [0 0 0 0 0 0 0 0]
ptrs: [<nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
emptystr: [       ]
structs: [{0 } {0 } {0 } {0 } {0 } {0 } {0 } {0 }]

|======|
cbb243f7a9920d4cdd348c50bee16e2532409bec:
2
2

|======|
ccb9bdd1e2e04fdc04cbd6d9ffc9d5bd766e7578:
s is 'foo'

|======|
ccff0f8a4b6e9b42c038b536224f590655891db8:
v is of type 'int32'. Size: 4 bytes
v is of type 'string'. Size: 16 bytes
v is of type 'pointer'. Size: 8 bytes

|======|
cd88fae66b137115974609078ab23681e519f3ae:
2

|======|
cdca29628716342ba030baf06947154df9065c5f:
v: 3
v: 4
v: 5

|======|
cde2dd836ebd3a79f222a79f575417a50556a452:
http.Post() returned statuts code 200, truncated text:
{
  "args": {}, 
  "data": "text we send", 
  "files": {}, 
  "form": {}, 
  "headers": {
   ...

|======|
cde97106b07ef39f2c7606bd196c6099fda2b3f2:
(*p).Bar is 0
(*p).Bar is 0
(*p).Bar is 0
(*p).Bar is 0

|======|
ce1cb2daaa5765479e8131ea7b25ad93d5eb5180:
Person in compact JSON: {"Uuid":"uid-john","Name":"John"}

|======|
cf38ec7d1cadc1e33b25ebb954ef79b04bac91e6:
2
2

|======|
d0d17cc900d88b5cb8f1b9132133dca41a089f9f:
Admin ==> Run()
User ==> Run()

|======|
d126733259bde546087a67d1dcdf1380f619b288:
s2: 'replaced string replaced'

|======|
d1ad59798c7c221abdd7ca47bdfe28ee8482a8a0:
i: 0
i: 2
i: 4

|======|
d23d13c389aead2c202bafebd7eb8d6b4fff4de9:
Escaped:
<div onlick="&#34;foo&#34;">&lt;span&gt;text&lt;/span&gt;</div>

Unescaped:
<div onlick="foo"><span>text</span></div>

|======|
d286602d2591ffed7647c0b27ab0c7334d61222b:
0: Hello
1: Goodbye

0: Str1
1: Str2
2: Str3

0: a
1: b


|======|
d34829e9206538637670821f915965ed806c180a:
value: 30
value: 29
value: 11

|======|
d3c0d6b6f10273f9f166eeb7b156db74f6b4a108:
len(nil)       : 0
len(emptySlice): 0
len(slice)     : 3
len(map)       : 2

|======|
d4182d9bf812096cda6d8036b3ce68f37e1d37cb:
Path: ., is dir: true, size: 640 bytes
Path: 000-index.md, is dir: false, size: 210 bytes
Path: 010-reading-files.md, is dir: false, size: 753 bytes
Path: 020-writing-files.md, is dir: false, size: 2913 bytes
Path: 030-file-operations.md, is dir: false, size: 2583 bytes

|======|
d6fe6e0cb618e61e7ea04be4260871561780129d:
Hello, John Doe!
You are 35

|======|
d7d9c671f9eead4c6664ec3613c091077a077b9f:
'this is string' ends with 'string'

|======|
d84c9db9d3a6907c644523d741b826a4f6eaf459:
date,price,name
2013-02-08,"15,07",GOOG
2013-02-09,"15,09",GOOG


|======|
d93c22a1f1e346f58e1b660dd5f4d0e433e2e8c2:
Hex: 01ff3acd

|======|
da6b9306f059bb8aa5a0adc0ac4d0ef6a90f02e9:
n: 3

|======|
da72683a18e6698c532d3dd9bd2c73e3d4dde426:
when searching from end, 'hello' is in s at position 17

|======|
da7cb4aad552bde781c797a2c592eb7fa8a69637:
First main statement
Last main statement
Function main returned

|======|
db650fc162cc178753fd4ad8b4acdf9da5a6cd0a:
File index.go has 32 lines

|======|
dba4e515def34364288ee22f601563ae482da1b4:
Channel is empty
Received 8 from a channel

|======|
dbc50260bce77105a278dceefa29375ee34d7580:
5 is odd
18 is even

|======|
dbc75c5702c2107ed2b14fef49d99f36ffc21a49:
"5" of type string converted to 5
4 of type int converted to 4
Failed to convert 8 to int
Failed to convert "not valid int" to int

|======|
dbc7ef4055610898dda003836d69ae2933836992:
File 'file_exists.go' exists: true
File 'non-existent-file.txt' exists: false

|======|
dc09460d74f30de25cef80488a7283fcfb6de810:
sqrt of 16.000000 is 4.000000
sqrt of -16.000000 returned error 'invalid argument '-16.000000', must be >= 0'

|======|
dc705b3767c6f2f9178f0da3b3a85239c0444e6f:
There are 32 lines in 'main.go'

|======|
dc8b8d3e0c63c428ab2279b89346f1c724dab455:
Hello!

|======|
dcc541e78b63aeedb2c83ff6c2ff2fd2f7116de4:
Person in YAML:
name: John
age: 37
city: SF


|======|
dd90689d6bfca070035ee92fbe2e9da6e5649c62:
Name: file_info.go
Size: 344
IsDir: false
Mode: 1091c40
ModTime: 2018-02-25 23:52:31.004823169 -0800 PST
OS info: *syscall.Stat_t

|======|
de0f45f91a86b004f4933f94bf96fba05abd36f4:
Low: 0
Medium: 1
High: 2

|======|
de1bcf6bdb97d175fc662ea577211fe25f670735:
5 + 5 = 10

|======|
de5a50d1e40366e2cfb547ba0afcd4af9472740b:
f.Bar is 0
f.Bar is 1
f.Bar is 0
f.Bar is 1

|======|
dfde90edaa963e7a5fd38bf2a04786015f8d65cb:
http.Get() returned content of type 'text/html; charset=utf-8' and size 3741 bytes.
Status code: 200

http.Get() returned content of type 'text/html' and size 3741 bytes.
Status code: 404

http.Get() failed with: 'Get http://website.not-exists.as/index.html: dial tcp: lookup website.not-exists.as: no such host'
resp: <nil>

|======|
e06648897a64eba67c30174101577c07d86928bd:
b is: 'true'
b is: 'false'
zero value of bool is: 'false'

|======|
e089c2605a40582577073581771e4256581a4666:
stmt ('if') is either 'if' or 'for'

|======|
e0be33c4fed4d8428f04e6e0ff6a083e10957f04:
XML: <ShowCharData>str</ShowCharData>


|======|
e1222536f1e9eb186cd8b804a82e389aeaf57c3b:
User 'kjk' has no tweets.
User 'masa' has 2 tweets:
'tweet one'
'tweet two'

|======|
e155a706f0bf576986b55892c8cccc684e98892c:
    1 +     3 =     4, overflowed: false

65550 + 10000 =  9984, overflowed: true

|======|
e1dff2b1dcb3fd24209e2bd43464615065bb637b:
Output:
go version go1.11.1 darwin/amd64


|======|
e1ed65d07fa3f1fa3bbb910455a39dc13c1aa722:
a is not equal to b

|======|
e2bfa9613da1d62e516bd7a6b6007066b551c32a:
Got value 3
Signalled on quit channel. Finishing

|======|
e2d146f5cdbfec402f7161712fd4c8fc3f5691a5:
js escape  : function me(s) { return \"foo\"; }
html escape: &lt;div&gt;text&lt;/div&gt;
url escape : http%3A%2F%2Fwww.programming-books.io

|======|
e2e154e779d52394609d70b5b09f8781222fe1be:
Compact XML: <people><person age="34"><first-name>John</first-name><address><city>San Francisco</city><state>CA</state></address></person></people>

Pretty printed XML:
<people>
  <person age="34">
    <first-name>John</first-name>
    <address>
      <city>San Francisco</city>
      <state>CA</state>
    </address>
  </person>
</people>

|======|
e3b95c08d0a1c4e247e8e7b593b99aa366a50c31:
Hello!

|======|
e3e7a22ae2d7445f5045db578150ca8e5f9dab17:
a: []string{"this", "is", "a", "string"}
s2: "this,is,a,string"

|======|
e41dd3b40028f2d4316c3ffe1ad10892bcb54b51:
&main.People{Person:[]main.Person{main.Person{Age:34, FirstName:"John", Address:main.Address{City:(*string)(0xc0000a2180), State:"CA"}}, main.Person{Age:23, FirstName:"Julia", Address:main.Address{City:(*string)(nil), State:""}}}}


|======|
e4855a0e8046791c41a3236aaa9c42160e59e6b8:
Timed out before worker finished

|======|
e485e6ecf4e220b2d1edf5c41509697e2624983d:
'Bridge' is not new
'Electric battery' is new

|======|
e4d595e1c7302148a26d66d5a230894e91864122:
File main.go has 41 lines

|======|
e5710a828850894e96c58365695212bdc5b2390e:
x: 1, y: 2
w: 3, z: 4

|======|
e5bc6bdf076bff2c953c21ddcd8de0c96136121c:
Hello!

|======|
e5dc34683ed7fcb932dd3b666a82929366e4b628:
Hello there, 世界

|======|
e5f017437844fb96ce559f35ffdd7809fb389a99:
Path: main.go, is dir: false, size: 393 bytes

|======|
e5f54b98cf41241ca36d9c3ecba92ba22f8828fc:
Name of executable: '/var/folders/2k/p2_4052s70vd5_cfdm0k0l740000gn/T/go-build386456375/b001/exe/raw_cmd_line_args'
Arg 0, value: '-echo'
Arg 1, value: 'echo-arg'
Arg 2, value: 'additional'
Arg 3, value: 'arg'

|======|
e69d89ad8446c078e29bad4f208d89d84244ebb4:
XML: <ShowInnerXML><s>&lt;foo&gt;&lt;/foo&gt;</s><foo></foo></ShowInnerXML>


|======|
e98713dc4f931d97f0e3860e25972e0ba7ddd81c:
0: Hello
1: Goodbye

0: Str1
1: Str2
2: Str3

0: a
1: b


|======|
e9af610a28ccbf0627fbbc2cb25098bda9fe4f20:
flag -echo: 'echo-arg'
Remainig arg: 'additional'
Remainig arg: 'arg'

|======|
ebe9a378c0398e3a8f082c27a1ae1406196f8ec3:
==================
WARNING: DATA RACE
Read at 0x0000011d9318 by goroutine 15:
  main.main.func1()
      /books/go/0230-mutex/data_race.go:25 +0x6d

Previous write at 0x0000011d9318 by goroutine 6:
  main.main.func1()
      /books/go/0230-mutex/data_race.go:25 +0x89

Goroutine 15 (running) created at:
  main.main()
      /books/go/0230-mutex/data_race.go:22 +0xcf

Goroutine 6 (running) created at:
  main.main()
      /books/go/0230-mutex/data_race.go:22 +0xcf
==================
==================
WARNING: DATA RACE
Read at 0x0000011d9318 by goroutine 14:
  main.main.func1()
      /books/go/0230-mutex/data_race.go:25 +0x6d

Previous write at 0x0000011d9318 by goroutine 6:
  main.main.func1()
      /books/go/0230-mutex/data_race.go:25 +0x89

Goroutine 14 (running) created at:
  main.main()
      /books/go/0230-mutex/data_race.go:22 +0xcf

Goroutine 6 (running) created at:
  main.main()
      /books/go/0230-mutex/data_race.go:22 +0xcf
==================
n is: 628, expected: 800
Found 2 data race(s)
exit status 66

|======|
ebf6ccbba4978c5906a1a928e8ed6ab129f85c11:
year: 2017, month: 9, day: 4

|======|
ec33a0afce4882e84edde2deccc5a1aaa1fe82a8:
a[2]: 0
size of array a: 3
size of array a2: 3

|======|
ec4733fd2f93027b3a5de4acb7246bda94dd1a66:
Person in compact JSON: {"Uuid":"uid-john","Name":"John"}

|======|
ec9ca7723ab1302134a6d700927688fa44020d21:
Address of a variable in memory is 0xc420016090. Its value is: 4

|======|
ede1a4b573e85e4fd8365fcf5aafb3646e6f8709:
1
2
channel is now closed

|======|
ee3536cef85bc3b434f8f42aa77c473a51199dbf:
2017-04-09 03:38:45.000 UTC
2017-04-9 03am
Sep 17 Mon 4 09
September 6 Mon 4 9
Month: Sep '9', '09',  4

|======|
eeb5f0aa5105c68cb1e3a43ecde16e9f01804162:
base64: Af86zQ==

|======|
efe7294d463cedf2d6104e4ba38c4fe72fca7603:
[[1 2 3] [4 5 6]]
[1 2 3]
2

|======|
f07e5ff9e2713f798b2e4a13e007dea194ce517b:
Encryption in decryption worked!

|======|
f08091cf455ef208bd0093bdd76374e25042069e:
key: three
key: five

|======|
f0c2b9abf2269f5cdd4d9b0d210c3c1fc71ebe7d:
Standard time JSON: <Event><What>earthquake</What><When>2018-10-18T02:25:12.623396-07:00</When></Event>

Custom time XML: <Event2><What>earthquake</What><When>2018-18-10</When></Event2>
Decoded custom time: 2018-18-10

|======|
f10e1cd19e222f5a404c1c961c3e21d41cb856fe:
File read_lines.go has 41 lines

|======|
f1b3ce91d1df9b85b7c032c93561df4411caa781:
Person in compact XML: <Person><Name>John</Name><age>37</age><city>SF</city></Person>
Person in pretty-printed XML:
<Person>
  <Name>John</Name>
  <age>37</age>
  <city>SF</city>
</Person>

|======|
f1cebede30b33d156a6cd8d4bf548ecf40584321:
Entering main
Recovered with message bar
Exiting main the normal way

|======|
f28f9ff30671fba68b7601fde02b37de6477a11a:
Catherine
Daniel
Daniel
Daniel
Ines

|======|
f2d4102cb15e19c4086540c6a98b9be72b8fdca4:
struct S, 5 field(s), size: 40 bytes
  name: 'Inner' type: 'struct Inner', offset: 0, 1 field(s), size: 8 bytes, embedded: true
     name: 'N' type: 'int', value: '0', offset: 0, size: 8
  name: 'NamedInner' type: 'struct Inner', offset: 8, 1 field(s), size: 8 bytes, embedded: false
     name: 'N' type: 'int', value: '0', offset: 0, size: 8
  pointer
   name: 'unexported' type: 'int', value: '0', offset: 24, size: 8
   name: 'N' type: 'int8', value: '0', offset: 32, size: 1

|======|
f300dd86519efdb3fb0659bc83a45ad18fd34355:
i1: -38
i2: 148

|======|
f32189062a14eabe5d7a8532f179309e16a46c25:
http.Get() returned content of type 'text/html; charset=utf-8' and size 3741 bytes.
Status code: 200

http.Get() returned content of type 'text/html' and size 3741 bytes.
Status code: 404

http.Get() failed with: 'Get http://website.not-exists.as/index.html: dial tcp: lookup website.not-exists.as: no such host'
resp: <nil>

|======|
f33b0df6fa4c0fdbcc8ed8647c0b419dc534c459:
initial: 1
zeroval: 1
zeroptr: 0
pointer: 0xc420016090

|======|
f3c9aefd4f96e039047c0dafe89a2c81546ca0e5:
Person in compact JSON: {"Name":"John","age":37,"city":"SF"}
Person in pretty-printed JSON:
{
  "Name": "John",
  "age": 37,
  "city": "SF"
}

|======|
f434a9434207fc31495d5928526d65c8fa52e34e:
First main statement
Last main statement
Function main returned

|======|
f497e3fc4afab690cf6d1a232d15be99ec667af8:
data: {Number:42 Text:Hello world!}

|======|
f5c8aff47e2951fa059cfa16018b1388c00514bb:
File main.go has 32 lines

|======|
f5e6e0df71e733d8b863db50b7fd40e3d257b14b:
Rune at byte position 0 is U+65E5 '日'
Rune at byte position 3 is U+672C '本'
Rune at byte position 6 is U+8A9E '語'

|======|
f6f06b7c71fa05a6e6a126303ff4d08e61f8b5f2:
i: 0
i: 2
i: 4
i: 6

|======|
f84577116b5d022c08b86833f2a06800554c3636:
Standard time JSON: <Event><What>earthquake</What><When>2018-03-10T22:52:18.820904-08:00</When></Event>

Custom time XML: <Event2><What>earthquake</What><When>2018-10-03</When></Event2>
Decoded custom time: 2018-10-03

|======|
f8a58521aaec782779c738559a8c640e41ab7b2a:
n: 81
n: 887

|======|
f8bf382df6f83442fcba1eee7240a081532a93a1:
msg='Hello World', ok='true'

|======|
f94b339e4d0603d62712a1e78cf4ddcffd4dcd8c:
Byte at index 0 is s (0x73)
Byte at index 1 is t (0x74)
Byte at index 2 is r (0x72)

|======|
f9ccd164eeb18fb637c6fd7d8310d45d010a61ee:
i: 48, f: 123.450000, extracted 2 values
second fmt.Sscanf failed with EOF

|======|
fa1d134788406e223925632843459dac66305b8b:
5+8=13, 5*8=40
6+12=18

|======|
fb61c1ff13d40b6bf99e74cb25d0623fe3d4737e:
XML: <ShowAttr n="true"></ShowAttr>


|======|
fc7d45624d0e1d8e6a87fe7971db939e72169337:
print:   str8
println: str 8

printf:  str "str" 8

|======|
fd3f29f8fbad04761c5e772209d01e5280acde64:
base64: Af86zQ==

|======|
fdafd46a2373b972239407f27a04e70b7a5360fe:
37 lines in 'main.go'

|======|
fddc9360a0e3a977ff01d014f22ac338fea04bcc:
Called longMathOp() with 200ms timeout. res; 4955, err: <nil>
Called longMathOp() with 10ms timeout. res: 0, err: context deadline exceeded

|======|
fe86296ff5706ebe1501d8367156230c4656d8d4:
XML: <ShowOmitEmpty><NonEmpty>non empty</NonEmpty></ShowOmitEmpty>


|======|
fe9619237b53327901de45b00380e359ba73368a:
XML: <ShowCData><![CDATA[cdata]]></ShowCData>


|======|
fec1f73f822c688a2717868855c2c8ea5fa7ccbc:
s is 'foo'

|======|
fef0fa858ba1db6fe45a8475e4b4cc3fd7cff2f7:
==================
WARNING: DATA RACE
Read at 0x000001217840 by goroutine 7:
  main.main.func1()
      /books/go/0230-mutex/data_race.go:26 +0x6d

Previous write at 0x000001217840 by goroutine 6:
  main.main.func1()
      /books/go/0230-mutex/data_race.go:26 +0x89

Goroutine 7 (running) created at:
  main.main()
      /books/go/0230-mutex/data_race.go:23 +0xcd

Goroutine 6 (running) created at:
  main.main()
      /books/go/0230-mutex/data_race.go:23 +0xcd
==================
n is: 570, expected: 800
Found 1 data race(s)
exit status 66

|======|
ffb6160c85a4ba422ec261d4abaafb38329122f4:
a: 1, b: 2, c: 3, d: 8

|======|
